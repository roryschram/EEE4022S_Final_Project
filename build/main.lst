ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.minmea_rescale,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	minmea_rescale:
  27              	.LVL0:
  28              	.LFB134:
  29              		.file 2 "Core/Inc/minmea.h"
   1:Core/Inc/minmea.h **** /*
   2:Core/Inc/minmea.h ****  * Copyright Â© 2014 Kosma Moczek <kosma@cloudyourcar.com>
   3:Core/Inc/minmea.h ****  * This program is free software. It comes without any warranty, to the extent
   4:Core/Inc/minmea.h ****  * permitted by applicable law. You can redistribute it and/or modify it under
   5:Core/Inc/minmea.h ****  * the terms of the Do What The Fuck You Want To Public License, Version 2, as
   6:Core/Inc/minmea.h ****  * published by Sam Hocevar. See the COPYING file for more details.
   7:Core/Inc/minmea.h ****  */
   8:Core/Inc/minmea.h **** 
   9:Core/Inc/minmea.h **** #ifndef MINMEA_H
  10:Core/Inc/minmea.h **** #define MINMEA_H
  11:Core/Inc/minmea.h **** 
  12:Core/Inc/minmea.h **** #ifdef __cplusplus
  13:Core/Inc/minmea.h **** extern "C" {
  14:Core/Inc/minmea.h **** #endif
  15:Core/Inc/minmea.h **** 
  16:Core/Inc/minmea.h **** #include <ctype.h>
  17:Core/Inc/minmea.h **** #include <stdint.h>
  18:Core/Inc/minmea.h **** #include <stdbool.h>
  19:Core/Inc/minmea.h **** #include <time.h>
  20:Core/Inc/minmea.h **** #include <math.h>
  21:Core/Inc/minmea.h **** #ifdef MINMEA_INCLUDE_COMPAT
  22:Core/Inc/minmea.h **** #include <minmea_compat.h>
  23:Core/Inc/minmea.h **** #endif
  24:Core/Inc/minmea.h **** 
  25:Core/Inc/minmea.h **** #ifndef MINMEA_MAX_SENTENCE_LENGTH
  26:Core/Inc/minmea.h **** #define MINMEA_MAX_SENTENCE_LENGTH 80
  27:Core/Inc/minmea.h **** #endif
  28:Core/Inc/minmea.h **** 
  29:Core/Inc/minmea.h **** enum minmea_sentence_id {
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 2


  30:Core/Inc/minmea.h ****     MINMEA_INVALID = -1,
  31:Core/Inc/minmea.h ****     MINMEA_UNKNOWN = 0,
  32:Core/Inc/minmea.h ****     MINMEA_SENTENCE_GBS,
  33:Core/Inc/minmea.h ****     MINMEA_SENTENCE_GGA,
  34:Core/Inc/minmea.h ****     MINMEA_SENTENCE_GLL,
  35:Core/Inc/minmea.h ****     MINMEA_SENTENCE_GSA,
  36:Core/Inc/minmea.h ****     MINMEA_SENTENCE_GST,
  37:Core/Inc/minmea.h ****     MINMEA_SENTENCE_GSV,
  38:Core/Inc/minmea.h ****     MINMEA_SENTENCE_RMC,
  39:Core/Inc/minmea.h ****     MINMEA_SENTENCE_VTG,
  40:Core/Inc/minmea.h ****     MINMEA_SENTENCE_ZDA,
  41:Core/Inc/minmea.h **** };
  42:Core/Inc/minmea.h **** 
  43:Core/Inc/minmea.h **** struct minmea_float {
  44:Core/Inc/minmea.h ****     int_least32_t value;
  45:Core/Inc/minmea.h ****     int_least32_t scale;
  46:Core/Inc/minmea.h **** };
  47:Core/Inc/minmea.h **** 
  48:Core/Inc/minmea.h **** struct minmea_date {
  49:Core/Inc/minmea.h ****     int day;
  50:Core/Inc/minmea.h ****     int month;
  51:Core/Inc/minmea.h ****     int year;
  52:Core/Inc/minmea.h **** };
  53:Core/Inc/minmea.h **** 
  54:Core/Inc/minmea.h **** struct minmea_time {
  55:Core/Inc/minmea.h ****     int hours;
  56:Core/Inc/minmea.h ****     int minutes;
  57:Core/Inc/minmea.h ****     int seconds;
  58:Core/Inc/minmea.h ****     int microseconds;
  59:Core/Inc/minmea.h **** };
  60:Core/Inc/minmea.h **** 
  61:Core/Inc/minmea.h **** struct minmea_sentence_gbs {
  62:Core/Inc/minmea.h ****     struct minmea_time time;
  63:Core/Inc/minmea.h ****     struct minmea_float err_latitude;
  64:Core/Inc/minmea.h ****     struct minmea_float err_longitude;
  65:Core/Inc/minmea.h ****     struct minmea_float err_altitude;
  66:Core/Inc/minmea.h ****     int svid;
  67:Core/Inc/minmea.h ****     struct minmea_float prob;
  68:Core/Inc/minmea.h ****     struct minmea_float bias;
  69:Core/Inc/minmea.h ****     struct minmea_float stddev;
  70:Core/Inc/minmea.h **** };
  71:Core/Inc/minmea.h **** 
  72:Core/Inc/minmea.h **** struct minmea_sentence_rmc {
  73:Core/Inc/minmea.h ****     struct minmea_time time;
  74:Core/Inc/minmea.h ****     bool valid;
  75:Core/Inc/minmea.h ****     struct minmea_float latitude;
  76:Core/Inc/minmea.h ****     struct minmea_float longitude;
  77:Core/Inc/minmea.h ****     struct minmea_float speed;
  78:Core/Inc/minmea.h ****     struct minmea_float course;
  79:Core/Inc/minmea.h ****     struct minmea_date date;
  80:Core/Inc/minmea.h ****     struct minmea_float variation;
  81:Core/Inc/minmea.h **** };
  82:Core/Inc/minmea.h **** 
  83:Core/Inc/minmea.h **** struct minmea_sentence_gga {
  84:Core/Inc/minmea.h ****     struct minmea_time time;
  85:Core/Inc/minmea.h ****     struct minmea_float latitude;
  86:Core/Inc/minmea.h ****     struct minmea_float longitude;
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 3


  87:Core/Inc/minmea.h ****     int fix_quality;
  88:Core/Inc/minmea.h ****     int satellites_tracked;
  89:Core/Inc/minmea.h ****     struct minmea_float hdop;
  90:Core/Inc/minmea.h ****     struct minmea_float altitude; char altitude_units;
  91:Core/Inc/minmea.h ****     struct minmea_float height; char height_units;
  92:Core/Inc/minmea.h ****     struct minmea_float dgps_age;
  93:Core/Inc/minmea.h **** };
  94:Core/Inc/minmea.h **** 
  95:Core/Inc/minmea.h **** enum minmea_gll_status {
  96:Core/Inc/minmea.h ****     MINMEA_GLL_STATUS_DATA_VALID = 'A',
  97:Core/Inc/minmea.h ****     MINMEA_GLL_STATUS_DATA_NOT_VALID = 'V',
  98:Core/Inc/minmea.h **** };
  99:Core/Inc/minmea.h **** 
 100:Core/Inc/minmea.h **** // FAA mode added to some fields in NMEA 2.3.
 101:Core/Inc/minmea.h **** enum minmea_faa_mode {
 102:Core/Inc/minmea.h ****     MINMEA_FAA_MODE_AUTONOMOUS = 'A',
 103:Core/Inc/minmea.h ****     MINMEA_FAA_MODE_DIFFERENTIAL = 'D',
 104:Core/Inc/minmea.h ****     MINMEA_FAA_MODE_ESTIMATED = 'E',
 105:Core/Inc/minmea.h ****     MINMEA_FAA_MODE_MANUAL = 'M',
 106:Core/Inc/minmea.h ****     MINMEA_FAA_MODE_SIMULATED = 'S',
 107:Core/Inc/minmea.h ****     MINMEA_FAA_MODE_NOT_VALID = 'N',
 108:Core/Inc/minmea.h ****     MINMEA_FAA_MODE_PRECISE = 'P',
 109:Core/Inc/minmea.h **** };
 110:Core/Inc/minmea.h **** 
 111:Core/Inc/minmea.h **** struct minmea_sentence_gll {
 112:Core/Inc/minmea.h ****     struct minmea_float latitude;
 113:Core/Inc/minmea.h ****     struct minmea_float longitude;
 114:Core/Inc/minmea.h ****     struct minmea_time time;
 115:Core/Inc/minmea.h ****     char status;
 116:Core/Inc/minmea.h ****     char mode;
 117:Core/Inc/minmea.h **** };
 118:Core/Inc/minmea.h **** 
 119:Core/Inc/minmea.h **** struct minmea_sentence_gst {
 120:Core/Inc/minmea.h ****     struct minmea_time time;
 121:Core/Inc/minmea.h ****     struct minmea_float rms_deviation;
 122:Core/Inc/minmea.h ****     struct minmea_float semi_major_deviation;
 123:Core/Inc/minmea.h ****     struct minmea_float semi_minor_deviation;
 124:Core/Inc/minmea.h ****     struct minmea_float semi_major_orientation;
 125:Core/Inc/minmea.h ****     struct minmea_float latitude_error_deviation;
 126:Core/Inc/minmea.h ****     struct minmea_float longitude_error_deviation;
 127:Core/Inc/minmea.h ****     struct minmea_float altitude_error_deviation;
 128:Core/Inc/minmea.h **** };
 129:Core/Inc/minmea.h **** 
 130:Core/Inc/minmea.h **** enum minmea_gsa_mode {
 131:Core/Inc/minmea.h ****     MINMEA_GPGSA_MODE_AUTO = 'A',
 132:Core/Inc/minmea.h ****     MINMEA_GPGSA_MODE_FORCED = 'M',
 133:Core/Inc/minmea.h **** };
 134:Core/Inc/minmea.h **** 
 135:Core/Inc/minmea.h **** enum minmea_gsa_fix_type {
 136:Core/Inc/minmea.h ****     MINMEA_GPGSA_FIX_NONE = 1,
 137:Core/Inc/minmea.h ****     MINMEA_GPGSA_FIX_2D = 2,
 138:Core/Inc/minmea.h ****     MINMEA_GPGSA_FIX_3D = 3,
 139:Core/Inc/minmea.h **** };
 140:Core/Inc/minmea.h **** 
 141:Core/Inc/minmea.h **** struct minmea_sentence_gsa {
 142:Core/Inc/minmea.h ****     char mode;
 143:Core/Inc/minmea.h ****     int fix_type;
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 4


 144:Core/Inc/minmea.h ****     int sats[12];
 145:Core/Inc/minmea.h ****     struct minmea_float pdop;
 146:Core/Inc/minmea.h ****     struct minmea_float hdop;
 147:Core/Inc/minmea.h ****     struct minmea_float vdop;
 148:Core/Inc/minmea.h **** };
 149:Core/Inc/minmea.h **** 
 150:Core/Inc/minmea.h **** struct minmea_sat_info {
 151:Core/Inc/minmea.h ****     int nr;
 152:Core/Inc/minmea.h ****     int elevation;
 153:Core/Inc/minmea.h ****     int azimuth;
 154:Core/Inc/minmea.h ****     int snr;
 155:Core/Inc/minmea.h **** };
 156:Core/Inc/minmea.h **** 
 157:Core/Inc/minmea.h **** struct minmea_sentence_gsv {
 158:Core/Inc/minmea.h ****     int total_msgs;
 159:Core/Inc/minmea.h ****     int msg_nr;
 160:Core/Inc/minmea.h ****     int total_sats;
 161:Core/Inc/minmea.h ****     struct minmea_sat_info sats[4];
 162:Core/Inc/minmea.h **** };
 163:Core/Inc/minmea.h **** 
 164:Core/Inc/minmea.h **** struct minmea_sentence_vtg {
 165:Core/Inc/minmea.h ****     struct minmea_float true_track_degrees;
 166:Core/Inc/minmea.h ****     struct minmea_float magnetic_track_degrees;
 167:Core/Inc/minmea.h ****     struct minmea_float speed_knots;
 168:Core/Inc/minmea.h ****     struct minmea_float speed_kph;
 169:Core/Inc/minmea.h ****     enum minmea_faa_mode faa_mode;
 170:Core/Inc/minmea.h **** };
 171:Core/Inc/minmea.h **** 
 172:Core/Inc/minmea.h **** struct minmea_sentence_zda {
 173:Core/Inc/minmea.h ****     struct minmea_time time;
 174:Core/Inc/minmea.h ****     struct minmea_date date;
 175:Core/Inc/minmea.h ****     int hour_offset;
 176:Core/Inc/minmea.h ****     int minute_offset;
 177:Core/Inc/minmea.h **** };
 178:Core/Inc/minmea.h **** 
 179:Core/Inc/minmea.h **** /**
 180:Core/Inc/minmea.h ****  * Calculate raw sentence checksum. Does not check sentence integrity.
 181:Core/Inc/minmea.h ****  */
 182:Core/Inc/minmea.h **** uint8_t minmea_checksum(const char *sentence);
 183:Core/Inc/minmea.h **** 
 184:Core/Inc/minmea.h **** /**
 185:Core/Inc/minmea.h ****  * Check sentence validity and checksum. Returns true for valid sentences.
 186:Core/Inc/minmea.h ****  */
 187:Core/Inc/minmea.h **** bool minmea_check(const char *sentence, bool strict);
 188:Core/Inc/minmea.h **** 
 189:Core/Inc/minmea.h **** /**
 190:Core/Inc/minmea.h ****  * Determine talker identifier.
 191:Core/Inc/minmea.h ****  */
 192:Core/Inc/minmea.h **** bool minmea_talker_id(char talker[3], const char *sentence);
 193:Core/Inc/minmea.h **** 
 194:Core/Inc/minmea.h **** /**
 195:Core/Inc/minmea.h ****  * Determine sentence identifier.
 196:Core/Inc/minmea.h ****  */
 197:Core/Inc/minmea.h **** enum minmea_sentence_id minmea_sentence_id(const char *sentence, bool strict);
 198:Core/Inc/minmea.h **** 
 199:Core/Inc/minmea.h **** /**
 200:Core/Inc/minmea.h ****  * Scanf-like processor for NMEA sentences. Supports the following formats:
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 5


 201:Core/Inc/minmea.h ****  * c - single character (char *)
 202:Core/Inc/minmea.h ****  * d - direction, returned as 1/-1, default 0 (int *)
 203:Core/Inc/minmea.h ****  * f - fractional, returned as value + scale (struct minmea_float *)
 204:Core/Inc/minmea.h ****  * i - decimal, default zero (int *)
 205:Core/Inc/minmea.h ****  * s - string (char *)
 206:Core/Inc/minmea.h ****  * t - talker identifier and type (char *)
 207:Core/Inc/minmea.h ****  * D - date (struct minmea_date *)
 208:Core/Inc/minmea.h ****  * T - time stamp (struct minmea_time *)
 209:Core/Inc/minmea.h ****  * _ - ignore this field
 210:Core/Inc/minmea.h ****  * ; - following fields are optional
 211:Core/Inc/minmea.h ****  * Returns true on success. See library source code for details.
 212:Core/Inc/minmea.h ****  */
 213:Core/Inc/minmea.h **** bool minmea_scan(const char *sentence, const char *format, ...);
 214:Core/Inc/minmea.h **** 
 215:Core/Inc/minmea.h **** /*
 216:Core/Inc/minmea.h ****  * Parse a specific type of sentence. Return true on success.
 217:Core/Inc/minmea.h ****  */
 218:Core/Inc/minmea.h **** bool minmea_parse_gbs(struct minmea_sentence_gbs *frame, const char *sentence);
 219:Core/Inc/minmea.h **** bool minmea_parse_rmc(struct minmea_sentence_rmc *frame, const char *sentence);
 220:Core/Inc/minmea.h **** bool minmea_parse_gga(struct minmea_sentence_gga *frame, const char *sentence);
 221:Core/Inc/minmea.h **** bool minmea_parse_gsa(struct minmea_sentence_gsa *frame, const char *sentence);
 222:Core/Inc/minmea.h **** bool minmea_parse_gll(struct minmea_sentence_gll *frame, const char *sentence);
 223:Core/Inc/minmea.h **** bool minmea_parse_gst(struct minmea_sentence_gst *frame, const char *sentence);
 224:Core/Inc/minmea.h **** bool minmea_parse_gsv(struct minmea_sentence_gsv *frame, const char *sentence);
 225:Core/Inc/minmea.h **** bool minmea_parse_vtg(struct minmea_sentence_vtg *frame, const char *sentence);
 226:Core/Inc/minmea.h **** bool minmea_parse_zda(struct minmea_sentence_zda *frame, const char *sentence);
 227:Core/Inc/minmea.h **** 
 228:Core/Inc/minmea.h **** /**
 229:Core/Inc/minmea.h ****  * Convert GPS UTC date/time representation to a UNIX calendar time.
 230:Core/Inc/minmea.h ****  */
 231:Core/Inc/minmea.h **** int minmea_getdatetime(struct tm *tm, const struct minmea_date *date, const struct minmea_time *tim
 232:Core/Inc/minmea.h **** 
 233:Core/Inc/minmea.h **** /**
 234:Core/Inc/minmea.h ****  * Convert GPS UTC date/time representation to a UNIX timestamp.
 235:Core/Inc/minmea.h ****  */
 236:Core/Inc/minmea.h **** int minmea_gettime(struct timespec *ts, const struct minmea_date *date, const struct minmea_time *t
 237:Core/Inc/minmea.h **** 
 238:Core/Inc/minmea.h **** /**
 239:Core/Inc/minmea.h ****  * Rescale a fixed-point value to a different scale. Rounds towards zero.
 240:Core/Inc/minmea.h ****  */
 241:Core/Inc/minmea.h **** static inline int_least32_t minmea_rescale(const struct minmea_float *f, int_least32_t new_scale)
 242:Core/Inc/minmea.h **** {
  30              		.loc 2 242 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              		.loc 2 242 1 is_stmt 0 view .LVU1
  36 0000 0346     		mov	r3, r0
 243:Core/Inc/minmea.h ****     if (f->scale == 0)
  37              		.loc 2 243 5 is_stmt 1 view .LVU2
  38              		.loc 2 243 10 is_stmt 0 view .LVU3
  39 0002 4068     		ldr	r0, [r0, #4]
  40              	.LVL1:
  41              		.loc 2 243 8 view .LVU4
  42 0004 F0B1     		cbz	r0, .L1
 244:Core/Inc/minmea.h ****         return 0;
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 6


 245:Core/Inc/minmea.h ****     if (f->scale == new_scale)
  43              		.loc 2 245 5 is_stmt 1 view .LVU5
  44              		.loc 2 245 8 is_stmt 0 view .LVU6
  45 0006 8842     		cmp	r0, r1
  46 0008 15D0     		beq	.L5
 246:Core/Inc/minmea.h ****         return f->value;
 247:Core/Inc/minmea.h ****     if (f->scale > new_scale)
  47              		.loc 2 247 5 is_stmt 1 view .LVU7
  48              		.loc 2 247 8 is_stmt 0 view .LVU8
  49 000a 8842     		cmp	r0, r1
  50 000c 15DD     		ble	.L4
 248:Core/Inc/minmea.h ****         return (f->value + ((f->value > 0) - (f->value < 0)) * f->scale/new_scale/2) / (f->scale/ne
  51              		.loc 2 248 9 is_stmt 1 view .LVU9
  52              		.loc 2 248 18 is_stmt 0 view .LVU10
  53 000e 1A68     		ldr	r2, [r3]
  54              		.loc 2 248 56 view .LVU11
  55 0010 D30F     		lsrs	r3, r2, #31
  56              	.LVL2:
  57              		.loc 2 248 44 view .LVU12
  58 0012 002A     		cmp	r2, #0
  59 0014 D4BF     		ite	le
  60 0016 5B42     		rsble	r3, r3, #0
  61 0018 C3F10103 		rsbgt	r3, r3, #1
  62              		.loc 2 248 62 view .LVU13
  63 001c 00FB03F3 		mul	r3, r0, r3
  64              		.loc 2 248 72 view .LVU14
  65 0020 93FBF1F3 		sdiv	r3, r3, r1
  66              		.loc 2 248 82 view .LVU15
  67 0024 03EBD373 		add	r3, r3, r3, lsr #31
  68              		.loc 2 248 26 view .LVU16
  69 0028 02EB6302 		add	r2, r2, r3, asr #1
  70              		.loc 2 248 97 view .LVU17
  71 002c 90FBF1F0 		sdiv	r0, r0, r1
  72              		.loc 2 248 86 view .LVU18
  73 0030 92FBF0F0 		sdiv	r0, r2, r0
  74 0034 7047     		bx	lr
  75              	.LVL3:
  76              	.L5:
 246:Core/Inc/minmea.h ****         return f->value;
  77              		.loc 2 246 9 is_stmt 1 view .LVU19
 246:Core/Inc/minmea.h ****         return f->value;
  78              		.loc 2 246 17 is_stmt 0 view .LVU20
  79 0036 1868     		ldr	r0, [r3]
  80 0038 7047     		bx	lr
  81              	.L4:
 249:Core/Inc/minmea.h ****     else
 250:Core/Inc/minmea.h ****         return f->value * (new_scale/f->scale);
  82              		.loc 2 250 9 is_stmt 1 view .LVU21
  83              		.loc 2 250 17 is_stmt 0 view .LVU22
  84 003a 1B68     		ldr	r3, [r3]
  85              	.LVL4:
  86              		.loc 2 250 37 view .LVU23
  87 003c 91FBF0F0 		sdiv	r0, r1, r0
  88              		.loc 2 250 25 view .LVU24
  89 0040 03FB00F0 		mul	r0, r3, r0
  90              	.L1:
 251:Core/Inc/minmea.h **** }
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 7


  91              		.loc 2 251 1 view .LVU25
  92 0044 7047     		bx	lr
  93              		.cfi_endproc
  94              	.LFE134:
  96              		.section	.text.MX_GPIO_Init,"ax",%progbits
  97              		.align	1
  98              		.syntax unified
  99              		.thumb
 100              		.thumb_func
 102              	MX_GPIO_Init:
 103              	.LFB146:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include <stdio.h>
  25:Core/Src/main.c **** #include "minmea.h"
  26:Core/Src/main.c **** #include <stdlib.h>
  27:Core/Src/main.c **** #include <string.h>
  28:Core/Src/main.c **** #include <stdint.h>
  29:Core/Src/main.c **** #include "bmp280.h"
  30:Core/Src/main.c **** #include <float.h>
  31:Core/Src/main.c **** #include <math.h>
  32:Core/Src/main.c **** #include <LoRa.h>
  33:Core/Src/main.c **** #include "ssd1306.h"
  34:Core/Src/main.c **** #include "fonts.h"
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* USER CODE END Includes */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* USER CODE END PTD */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  45:Core/Src/main.c **** /* USER CODE BEGIN PD */
  46:Core/Src/main.c **** #define INDENT_SPACES "  "
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 8


  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* USER CODE END PD */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  51:Core/Src/main.c **** /* USER CODE BEGIN PM */
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* USER CODE END PM */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  56:Core/Src/main.c **** I2C_HandleTypeDef hi2c1;
  57:Core/Src/main.c **** I2C_HandleTypeDef hi2c2;
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** SPI_HandleTypeDef hspi3;
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** TIM_HandleTypeDef htim3;
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** UART_HandleTypeDef huart1;
  64:Core/Src/main.c **** UART_HandleTypeDef huart2;
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** /* USER CODE BEGIN PV */
  67:Core/Src/main.c **** uint8_t gps_raw[512] = {"\0"};
  68:Core/Src/main.c **** uint8_t flag = 0;
  69:Core/Src/main.c **** char line_out[512] = {"\0"};
  70:Core/Src/main.c **** char line[512] = {"\0"};
  71:Core/Src/main.c **** bool bme280p;
  72:Core/Src/main.c **** uint8_t transmit_data[256] = {"\0"};
  73:Core/Src/main.c **** LoRa myLoRa;
  74:Core/Src/main.c **** bool isLoraReady = true;
  75:Core/Src/main.c **** int preTicks = 0;
  76:Core/Src/main.c **** int currentTicks = 0;
  77:Core/Src/main.c **** int iMode = 1;
  78:Core/Src/main.c **** char sMode[10];
  79:Core/Src/main.c **** bool bModeChanged = false;
  80:Core/Src/main.c **** bool sendData = false;
  81:Core/Src/main.c **** 
  82:Core/Src/main.c **** //Variables to work out altitude
  83:Core/Src/main.c **** 
  84:Core/Src/main.c **** //Pressure at sea level
  85:Core/Src/main.c **** float P_b = 101325;
  86:Core/Src/main.c **** 
  87:Core/Src/main.c **** //Height that we are calculating
  88:Core/Src/main.c **** float altitude = 0;
  89:Core/Src/main.c **** 
  90:Core/Src/main.c **** 
  91:Core/Src/main.c **** BMP280_HandleTypedef bmp280;
  92:Core/Src/main.c **** 
  93:Core/Src/main.c **** float pressure, temperature, humidity;
  94:Core/Src/main.c **** char sPressure[128] = {"\0"};
  95:Core/Src/main.c **** char sTemperature[128] = {"\0"};
  96:Core/Src/main.c **** char sHumidity[128] = {"\0"};
  97:Core/Src/main.c **** char sAltitude[128] = {"\0"};
  98:Core/Src/main.c **** 
  99:Core/Src/main.c **** size_t size;
 100:Core/Src/main.c **** uint8_t Data[256] = {"\0"};
 101:Core/Src/main.c **** 
 102:Core/Src/main.c **** 
 103:Core/Src/main.c **** /* USER CODE END PV */
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 9


 104:Core/Src/main.c **** 
 105:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
 106:Core/Src/main.c **** void SystemClock_Config(void);
 107:Core/Src/main.c **** static void MX_GPIO_Init(void);
 108:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
 109:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
 110:Core/Src/main.c **** static void MX_I2C1_Init(void);
 111:Core/Src/main.c **** static void MX_SPI3_Init(void);
 112:Core/Src/main.c **** static void MX_I2C2_Init(void);
 113:Core/Src/main.c **** static void MX_TIM3_Init(void);
 114:Core/Src/main.c **** /* USER CODE BEGIN PFP */
 115:Core/Src/main.c **** 
 116:Core/Src/main.c **** 
 117:Core/Src/main.c **** /* USER CODE END PFP */
 118:Core/Src/main.c **** 
 119:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 120:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 121:Core/Src/main.c **** 
 122:Core/Src/main.c **** /* USER CODE END 0 */
 123:Core/Src/main.c **** 
 124:Core/Src/main.c **** /**
 125:Core/Src/main.c ****   * @brief  The application entry point.
 126:Core/Src/main.c ****   * @retval int
 127:Core/Src/main.c ****   */
 128:Core/Src/main.c **** int main(void)
 129:Core/Src/main.c **** {
 130:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 131:Core/Src/main.c **** 
 132:Core/Src/main.c ****   /* USER CODE END 1 */
 133:Core/Src/main.c **** 
 134:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 135:Core/Src/main.c **** 
 136:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 137:Core/Src/main.c ****   HAL_Init();
 138:Core/Src/main.c **** 
 139:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 140:Core/Src/main.c **** 
 141:Core/Src/main.c ****   /* USER CODE END Init */
 142:Core/Src/main.c **** 
 143:Core/Src/main.c ****   /* Configure the system clock */
 144:Core/Src/main.c ****   SystemClock_Config();
 145:Core/Src/main.c **** 
 146:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 147:Core/Src/main.c **** 
 148:Core/Src/main.c ****   /* USER CODE END SysInit */
 149:Core/Src/main.c **** 
 150:Core/Src/main.c ****   /* Initialize all configured peripherals */
 151:Core/Src/main.c ****   MX_GPIO_Init();
 152:Core/Src/main.c ****   MX_USART1_UART_Init();
 153:Core/Src/main.c ****   MX_USART2_UART_Init();
 154:Core/Src/main.c ****   MX_I2C1_Init();
 155:Core/Src/main.c ****   MX_SPI3_Init();
 156:Core/Src/main.c ****   MX_I2C2_Init();
 157:Core/Src/main.c ****   MX_TIM3_Init();
 158:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 159:Core/Src/main.c ****   
 160:Core/Src/main.c ****   // Start timer
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 10


 161:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim3);
 162:Core/Src/main.c **** 
 163:Core/Src/main.c ****   bmp280_init_default_params(&bmp280.params);
 164:Core/Src/main.c **** 	bmp280.addr = 0x77;
 165:Core/Src/main.c **** 	bmp280.i2c = &hi2c1;
 166:Core/Src/main.c **** 
 167:Core/Src/main.c **** 	while (!bmp280_init(&bmp280, &bmp280.params)) {
 168:Core/Src/main.c **** 		size = sprintf((char *)Data, "BMP280 initialization failed\n");
 169:Core/Src/main.c **** 		HAL_UART_Transmit(&huart2, Data, size, 1000);
 170:Core/Src/main.c **** 		HAL_Delay(2000);
 171:Core/Src/main.c **** 	}
 172:Core/Src/main.c **** 	bool bme280p = bmp280.id == BME280_CHIP_ID;
 173:Core/Src/main.c **** 	size = sprintf((char *)Data, "\nBMP280: found %s\n", bme280p ? "BME280" : "BMP280");
 174:Core/Src/main.c **** 	HAL_UART_Transmit(&huart2, Data, size, 1000);
 175:Core/Src/main.c **** 
 176:Core/Src/main.c ****   myLoRa = newLoRa();
 177:Core/Src/main.c ****   myLoRa.CS_port         = GPIOA;
 178:Core/Src/main.c ****   myLoRa.CS_pin          = GPIO_PIN_4;
 179:Core/Src/main.c ****   myLoRa.reset_port      = GPIOB;
 180:Core/Src/main.c ****   myLoRa.reset_pin       = GPIO_PIN_8;
 181:Core/Src/main.c ****   myLoRa.DIO0_port       = GPIOB;
 182:Core/Src/main.c ****   myLoRa.DIO0_pin        = GPIO_PIN_9;
 183:Core/Src/main.c ****   myLoRa.hSPIx           = &hspi3;
 184:Core/Src/main.c ****   
 185:Core/Src/main.c ****   
 186:Core/Src/main.c ****   myLoRa.frequency             = 433;             // default = 433 MHz
 187:Core/Src/main.c ****   myLoRa.spredingFactor        = SF_7;            // default = SF_7
 188:Core/Src/main.c ****   myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 189:Core/Src/main.c ****   myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 190:Core/Src/main.c ****   myLoRa.power                 = POWER_20db;      // default = 20db
 191:Core/Src/main.c ****   myLoRa.overCurrentProtection = 100;             // default = 100 mA
 192:Core/Src/main.c ****   myLoRa.preamble              = 8;              // default = 8;
 193:Core/Src/main.c **** 
 194:Core/Src/main.c ****   uint16_t ret = LoRa_init(&myLoRa);
 195:Core/Src/main.c ****   uint8_t buff[128] = {"\0"};
 196:Core/Src/main.c ****   
 197:Core/Src/main.c **** 
 198:Core/Src/main.c **** if (ret==LORA_OK){
 199:Core/Src/main.c ****   snprintf(buff,sizeof(buff),"LoRa is running... :) \n\r");
 200:Core/Src/main.c ****   size = strlen(&buff);
 201:Core/Src/main.c ****   LoRa_transmit(&myLoRa, (uint8_t*)buff, size, 100);
 202:Core/Src/main.c ****   HAL_UART_Transmit(&huart2, buff, size, 1000);
 203:Core/Src/main.c **** }
 204:Core/Src/main.c **** else{
 205:Core/Src/main.c ****   snprintf(buff,sizeof(buff),"\n\r LoRa failed :( \n\r Error code: %d \n\r", ret);
 206:Core/Src/main.c ****   size = strlen(&buff);
 207:Core/Src/main.c ****   HAL_UART_Transmit(&huart2, buff, size, 1000);
 208:Core/Src/main.c **** }
 209:Core/Src/main.c **** 
 210:Core/Src/main.c **** 
 211:Core/Src/main.c **** ssd1306_Init(&hi2c2);
 212:Core/Src/main.c **** 
 213:Core/Src/main.c **** // Set cursors and write the word "mode"
 214:Core/Src/main.c **** ssd1306_SetCursor(0, 0);
 215:Core/Src/main.c **** ssd1306_WriteString("Mode:", Font_16x26, White);
 216:Core/Src/main.c **** 
 217:Core/Src/main.c **** ssd1306_SetCursor(0, 35);
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 11


 218:Core/Src/main.c **** sprintf(sMode, "%d", iMode);
 219:Core/Src/main.c **** ssd1306_WriteString(sMode, Font_16x26, White);
 220:Core/Src/main.c **** 
 221:Core/Src/main.c **** // Copy all data from local screenbuffer to the screen
 222:Core/Src/main.c **** ssd1306_UpdateScreen(&hi2c2);
 223:Core/Src/main.c **** 
 224:Core/Src/main.c **** 
 225:Core/Src/main.c ****   /* USER CODE END 2 */
 226:Core/Src/main.c **** 
 227:Core/Src/main.c ****   /* Infinite loop */
 228:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 229:Core/Src/main.c ****   while (1)
 230:Core/Src/main.c ****   {
 231:Core/Src/main.c ****     //HAL_UARTEx_ReceiveToIdle_DMA(&huart1,(uint8_t*)gps_raw,512);
 232:Core/Src/main.c ****     if (isLoraReady){
 233:Core/Src/main.c ****       HAL_UARTEx_ReceiveToIdle_IT(&huart1,(uint8_t*)gps_raw,512);
 234:Core/Src/main.c ****       if (sendData) {
 235:Core/Src/main.c ****       size = strlen(&transmit_data);
 236:Core/Src/main.c ****       uint32_t timebefore = HAL_GetTick();
 237:Core/Src/main.c ****       ret = LoRa_transmit(&myLoRa, (uint8_t*)"H", 1, 10000);
 238:Core/Src/main.c ****       uint32_t timeafter = HAL_GetTick();
 239:Core/Src/main.c ****       volatile uint32_t timetotransmit = timeafter-timebefore;
 240:Core/Src/main.c ****       volatile uint16_t retRead = ret;
 241:Core/Src/main.c ****       size = strlen(&transmit_data);
 242:Core/Src/main.c **** 	    HAL_UART_Transmit(&huart2, transmit_data, size, 1000);
 243:Core/Src/main.c ****       sendData = false;
 244:Core/Src/main.c ****       memset(transmit_data, '\0', sizeof(transmit_data));
 245:Core/Src/main.c ****     }
 246:Core/Src/main.c **** 
 247:Core/Src/main.c ****     if (bModeChanged) {
 248:Core/Src/main.c **** switch (iMode) {
 249:Core/Src/main.c ****     case 1:
 250:Core/Src/main.c ****       // statements
 251:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 252:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_7;            // default = SF_7
 253:Core/Src/main.c ****       myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 254:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 255:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 256:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 257:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 258:Core/Src/main.c ****       LoRa_init(&myLoRa);
 259:Core/Src/main.c ****       break;
 260:Core/Src/main.c **** 
 261:Core/Src/main.c ****     case 2:
 262:Core/Src/main.c ****       // statements
 263:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 264:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_7;            // default = SF_7
 265:Core/Src/main.c ****       myLoRa.bandWidth             = BW_10_4KHz;       // default = BW_125KHz
 266:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 267:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 268:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 269:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 270:Core/Src/main.c ****       LoRa_init(&myLoRa);
 271:Core/Src/main.c ****       break;
 272:Core/Src/main.c **** 
 273:Core/Src/main.c ****     case 3:
 274:Core/Src/main.c ****       // statements
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 12


 275:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 276:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_7;            // default = SF_7
 277:Core/Src/main.c ****       myLoRa.bandWidth             = BW_15_6KHz;       // default = BW_125KHz
 278:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 279:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 280:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 281:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 282:Core/Src/main.c ****       LoRa_init(&myLoRa);
 283:Core/Src/main.c ****       break;
 284:Core/Src/main.c **** 
 285:Core/Src/main.c ****     case 4:
 286:Core/Src/main.c ****       // statements
 287:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 288:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_7;            // default = SF_7
 289:Core/Src/main.c ****       myLoRa.bandWidth             = BW_20_8KHz;       // default = BW_125KHz
 290:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 291:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 292:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 293:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 294:Core/Src/main.c ****       LoRa_init(&myLoRa);
 295:Core/Src/main.c ****       break;
 296:Core/Src/main.c **** 
 297:Core/Src/main.c ****     case 5:
 298:Core/Src/main.c ****       // statements
 299:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 300:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_7;            // default = SF_7
 301:Core/Src/main.c ****       myLoRa.bandWidth             = BW_31_25KHz;       // default = BW_125KHz
 302:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 303:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 304:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 305:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 306:Core/Src/main.c ****       LoRa_init(&myLoRa);
 307:Core/Src/main.c ****       break;
 308:Core/Src/main.c **** 
 309:Core/Src/main.c ****     case 6:
 310:Core/Src/main.c ****       // statements
 311:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 312:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_7;            // default = SF_7
 313:Core/Src/main.c ****       myLoRa.bandWidth             = BW_41_7KHz;       // default = BW_125KHz
 314:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 315:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 316:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 317:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 318:Core/Src/main.c ****       LoRa_init(&myLoRa);
 319:Core/Src/main.c ****       break;
 320:Core/Src/main.c **** 
 321:Core/Src/main.c ****     case 7:
 322:Core/Src/main.c ****       // statements
 323:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 324:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_7;            // default = SF_7
 325:Core/Src/main.c ****       myLoRa.bandWidth             = BW_62_5KHz;       // default = BW_125KHz
 326:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 327:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 328:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 329:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 330:Core/Src/main.c ****       LoRa_init(&myLoRa);
 331:Core/Src/main.c ****       break;
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 13


 332:Core/Src/main.c **** 
 333:Core/Src/main.c ****     case 8:
 334:Core/Src/main.c ****       // statements
 335:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 336:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_7;            // default = SF_7
 337:Core/Src/main.c ****       myLoRa.bandWidth             = BW_125KHz;       // default = BW_125KHz
 338:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 339:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 340:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 341:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 342:Core/Src/main.c ****       LoRa_init(&myLoRa);
 343:Core/Src/main.c ****       break;
 344:Core/Src/main.c **** 
 345:Core/Src/main.c ****     case 9:
 346:Core/Src/main.c ****       // statements
 347:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 348:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_7;            // default = SF_7
 349:Core/Src/main.c ****       myLoRa.bandWidth             = BW_250KHz;       // default = BW_125KHz
 350:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 351:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 352:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 353:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 354:Core/Src/main.c ****       LoRa_init(&myLoRa);
 355:Core/Src/main.c ****       break;
 356:Core/Src/main.c **** 
 357:Core/Src/main.c ****     case 10:
 358:Core/Src/main.c ****       // statements
 359:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 360:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_7;            // default = SF_7
 361:Core/Src/main.c ****       myLoRa.bandWidth             = BW_500KHz;       // default = BW_125KHz
 362:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 363:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 364:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 365:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 366:Core/Src/main.c ****       LoRa_init(&myLoRa);
 367:Core/Src/main.c ****       break;
 368:Core/Src/main.c ****     
 369:Core/Src/main.c ****     case 11:
 370:Core/Src/main.c ****       // statements
 371:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 372:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_8;            // default = SF_7
 373:Core/Src/main.c ****       myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 374:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 375:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 376:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 377:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 378:Core/Src/main.c ****       LoRa_init(&myLoRa);
 379:Core/Src/main.c ****       break;
 380:Core/Src/main.c **** 
 381:Core/Src/main.c ****     case 12:
 382:Core/Src/main.c ****       // statements
 383:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 384:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_8;            // default = SF_7
 385:Core/Src/main.c ****       myLoRa.bandWidth             = BW_10_4KHz;       // default = BW_125KHz
 386:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 387:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 388:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 14


 389:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 390:Core/Src/main.c ****       LoRa_init(&myLoRa);
 391:Core/Src/main.c ****       break;
 392:Core/Src/main.c **** 
 393:Core/Src/main.c ****     case 13:
 394:Core/Src/main.c ****       // statements
 395:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 396:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_8;            // default = SF_7
 397:Core/Src/main.c ****       myLoRa.bandWidth             = BW_15_6KHz;       // default = BW_125KHz
 398:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 399:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 400:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 401:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 402:Core/Src/main.c ****       LoRa_init(&myLoRa);
 403:Core/Src/main.c ****       break;
 404:Core/Src/main.c **** 
 405:Core/Src/main.c ****     case 14:
 406:Core/Src/main.c ****       // statements
 407:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 408:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_8;            // default = SF_7
 409:Core/Src/main.c ****       myLoRa.bandWidth             = BW_20_8KHz;       // default = BW_125KHz
 410:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 411:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 412:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 413:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 414:Core/Src/main.c ****       LoRa_init(&myLoRa);
 415:Core/Src/main.c ****       break;
 416:Core/Src/main.c **** 
 417:Core/Src/main.c ****     case 15:
 418:Core/Src/main.c ****       // statements
 419:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 420:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_8;            // default = SF_7
 421:Core/Src/main.c ****       myLoRa.bandWidth             = BW_31_25KHz;       // default = BW_125KHz
 422:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 423:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 424:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 425:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 426:Core/Src/main.c ****       LoRa_init(&myLoRa);
 427:Core/Src/main.c ****       break;
 428:Core/Src/main.c **** 
 429:Core/Src/main.c ****     case 16:
 430:Core/Src/main.c ****       // statements
 431:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 432:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_8;            // default = SF_7
 433:Core/Src/main.c ****       myLoRa.bandWidth             = BW_41_7KHz;       // default = BW_125KHz
 434:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 435:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 436:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 437:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 438:Core/Src/main.c ****       LoRa_init(&myLoRa);
 439:Core/Src/main.c ****       break;
 440:Core/Src/main.c **** 
 441:Core/Src/main.c ****     case 17:
 442:Core/Src/main.c ****       // statements
 443:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 444:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_8;            // default = SF_7
 445:Core/Src/main.c ****       myLoRa.bandWidth             = BW_62_5KHz;       // default = BW_125KHz
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 15


 446:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 447:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 448:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 449:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 450:Core/Src/main.c ****       LoRa_init(&myLoRa);
 451:Core/Src/main.c ****       break;
 452:Core/Src/main.c **** 
 453:Core/Src/main.c ****     case 18:
 454:Core/Src/main.c ****       // statements
 455:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 456:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_8;            // default = SF_7
 457:Core/Src/main.c ****       myLoRa.bandWidth             = BW_125KHz;       // default = BW_125KHz
 458:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 459:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 460:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 461:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 462:Core/Src/main.c ****       LoRa_init(&myLoRa);
 463:Core/Src/main.c ****       break;
 464:Core/Src/main.c **** 
 465:Core/Src/main.c ****     case 19:
 466:Core/Src/main.c ****       // statements
 467:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 468:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_8;            // default = SF_7
 469:Core/Src/main.c ****       myLoRa.bandWidth             = BW_250KHz;       // default = BW_125KHz
 470:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 471:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 472:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 473:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 474:Core/Src/main.c ****       LoRa_init(&myLoRa);
 475:Core/Src/main.c ****       break;
 476:Core/Src/main.c **** 
 477:Core/Src/main.c ****     case 20:
 478:Core/Src/main.c ****       // statements
 479:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 480:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_8;            // default = SF_7
 481:Core/Src/main.c ****       myLoRa.bandWidth             = BW_500KHz;       // default = BW_125KHz
 482:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 483:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 484:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 485:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 486:Core/Src/main.c ****       LoRa_init(&myLoRa);
 487:Core/Src/main.c ****       break;
 488:Core/Src/main.c **** 
 489:Core/Src/main.c ****     case 21:
 490:Core/Src/main.c ****       // statements
 491:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 492:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_9;            // default = SF_7
 493:Core/Src/main.c ****       myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 494:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 495:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 496:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 497:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 498:Core/Src/main.c ****       LoRa_init(&myLoRa);
 499:Core/Src/main.c ****       break;
 500:Core/Src/main.c **** 
 501:Core/Src/main.c ****     case 22:
 502:Core/Src/main.c ****       // statements
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 16


 503:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 504:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_9;            // default = SF_7
 505:Core/Src/main.c ****       myLoRa.bandWidth             = BW_10_4KHz;       // default = BW_125KHz
 506:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 507:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 508:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 509:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 510:Core/Src/main.c ****       LoRa_init(&myLoRa);
 511:Core/Src/main.c ****       break;
 512:Core/Src/main.c **** 
 513:Core/Src/main.c ****     case 23:
 514:Core/Src/main.c ****       // statements
 515:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 516:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_9;            // default = SF_7
 517:Core/Src/main.c ****       myLoRa.bandWidth             = BW_15_6KHz;       // default = BW_125KHz
 518:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 519:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 520:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 521:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 522:Core/Src/main.c ****       LoRa_init(&myLoRa);
 523:Core/Src/main.c ****       break;
 524:Core/Src/main.c **** 
 525:Core/Src/main.c ****     case 24:
 526:Core/Src/main.c ****       // statements
 527:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 528:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_9;            // default = SF_7
 529:Core/Src/main.c ****       myLoRa.bandWidth             = BW_20_8KHz;       // default = BW_125KHz
 530:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 531:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 532:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 533:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 534:Core/Src/main.c ****       LoRa_init(&myLoRa);
 535:Core/Src/main.c ****       break;
 536:Core/Src/main.c **** 
 537:Core/Src/main.c ****     case 25:
 538:Core/Src/main.c ****       // statements
 539:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 540:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_9;            // default = SF_7
 541:Core/Src/main.c ****       myLoRa.bandWidth             = BW_31_25KHz;       // default = BW_125KHz
 542:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 543:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 544:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 545:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 546:Core/Src/main.c ****       LoRa_init(&myLoRa);
 547:Core/Src/main.c ****       break;
 548:Core/Src/main.c **** 
 549:Core/Src/main.c ****     case 26:
 550:Core/Src/main.c ****       // statements
 551:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 552:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_9;            // default = SF_7
 553:Core/Src/main.c ****       myLoRa.bandWidth             = BW_41_7KHz;       // default = BW_125KHz
 554:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 555:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 556:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 557:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 558:Core/Src/main.c ****       LoRa_init(&myLoRa);
 559:Core/Src/main.c ****       break;
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 17


 560:Core/Src/main.c **** 
 561:Core/Src/main.c ****     case 27:
 562:Core/Src/main.c ****       // statements
 563:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 564:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_9;            // default = SF_7
 565:Core/Src/main.c ****       myLoRa.bandWidth             = BW_62_5KHz;       // default = BW_125KHz
 566:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 567:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 568:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 569:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 570:Core/Src/main.c ****       LoRa_init(&myLoRa);
 571:Core/Src/main.c ****       break;
 572:Core/Src/main.c **** 
 573:Core/Src/main.c ****     case 28:
 574:Core/Src/main.c ****       // statements
 575:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 576:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_9;            // default = SF_7
 577:Core/Src/main.c ****       myLoRa.bandWidth             = BW_125KHz;       // default = BW_125KHz
 578:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 579:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 580:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 581:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 582:Core/Src/main.c ****       LoRa_init(&myLoRa);
 583:Core/Src/main.c ****       break;
 584:Core/Src/main.c **** 
 585:Core/Src/main.c ****     case 29:
 586:Core/Src/main.c ****       // statements
 587:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 588:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_9;            // default = SF_7
 589:Core/Src/main.c ****       myLoRa.bandWidth             = BW_250KHz;       // default = BW_125KHz
 590:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 591:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 592:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 593:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 594:Core/Src/main.c ****       LoRa_init(&myLoRa);
 595:Core/Src/main.c ****       break;
 596:Core/Src/main.c **** 
 597:Core/Src/main.c ****     case 30:
 598:Core/Src/main.c ****       // statements
 599:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 600:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_9;            // default = SF_7
 601:Core/Src/main.c ****       myLoRa.bandWidth             = BW_500KHz;       // default = BW_125KHz
 602:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 603:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 604:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 605:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 606:Core/Src/main.c ****       LoRa_init(&myLoRa);
 607:Core/Src/main.c ****       break;
 608:Core/Src/main.c **** 
 609:Core/Src/main.c ****     case 31:
 610:Core/Src/main.c ****       // statements
 611:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 612:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_10;            // default = SF_7
 613:Core/Src/main.c ****       myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 614:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 615:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 616:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 18


 617:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 618:Core/Src/main.c ****       LoRa_init(&myLoRa);
 619:Core/Src/main.c ****       break;
 620:Core/Src/main.c **** 
 621:Core/Src/main.c ****     case 32:
 622:Core/Src/main.c ****       // statements
 623:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 624:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_10;            // default = SF_7
 625:Core/Src/main.c ****       myLoRa.bandWidth             = BW_10_4KHz;       // default = BW_125KHz
 626:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 627:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 628:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 629:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 630:Core/Src/main.c ****       LoRa_init(&myLoRa);
 631:Core/Src/main.c ****       break;
 632:Core/Src/main.c **** 
 633:Core/Src/main.c ****     case 33:
 634:Core/Src/main.c ****       // statements
 635:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 636:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_10;            // default = SF_7
 637:Core/Src/main.c ****       myLoRa.bandWidth             = BW_15_6KHz;       // default = BW_125KHz
 638:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 639:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 640:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 641:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 642:Core/Src/main.c ****       LoRa_init(&myLoRa);
 643:Core/Src/main.c ****       break;
 644:Core/Src/main.c **** 
 645:Core/Src/main.c ****     case 34:
 646:Core/Src/main.c ****       // statements
 647:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 648:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_10;            // default = SF_7
 649:Core/Src/main.c ****       myLoRa.bandWidth             = BW_20_8KHz;       // default = BW_125KHz
 650:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 651:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 652:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 653:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 654:Core/Src/main.c ****       LoRa_init(&myLoRa);
 655:Core/Src/main.c ****       break;
 656:Core/Src/main.c **** 
 657:Core/Src/main.c ****     case 35:
 658:Core/Src/main.c ****       // statements
 659:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 660:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_10;            // default = SF_7
 661:Core/Src/main.c ****       myLoRa.bandWidth             = BW_31_25KHz;       // default = BW_125KHz
 662:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 663:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 664:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 665:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 666:Core/Src/main.c ****       LoRa_init(&myLoRa);
 667:Core/Src/main.c ****       break;
 668:Core/Src/main.c **** 
 669:Core/Src/main.c ****     case 36:
 670:Core/Src/main.c ****       // statements
 671:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 672:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_10;            // default = SF_7
 673:Core/Src/main.c ****       myLoRa.bandWidth             = BW_41_7KHz;       // default = BW_125KHz
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 19


 674:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 675:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 676:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 677:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 678:Core/Src/main.c ****       LoRa_init(&myLoRa);
 679:Core/Src/main.c ****       break;
 680:Core/Src/main.c **** 
 681:Core/Src/main.c ****     case 37:
 682:Core/Src/main.c ****       // statements
 683:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 684:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_10;            // default = SF_7
 685:Core/Src/main.c ****       myLoRa.bandWidth             = BW_62_5KHz;       // default = BW_125KHz
 686:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 687:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 688:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 689:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 690:Core/Src/main.c ****       LoRa_init(&myLoRa);
 691:Core/Src/main.c ****       break;
 692:Core/Src/main.c **** 
 693:Core/Src/main.c ****     case 38:
 694:Core/Src/main.c ****       // statements
 695:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 696:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_10;            // default = SF_7
 697:Core/Src/main.c ****       myLoRa.bandWidth             = BW_125KHz;       // default = BW_125KHz
 698:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 699:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 700:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 701:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 702:Core/Src/main.c ****       LoRa_init(&myLoRa);
 703:Core/Src/main.c ****       break;
 704:Core/Src/main.c **** 
 705:Core/Src/main.c ****     case 39:
 706:Core/Src/main.c ****       // statements
 707:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 708:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_10;            // default = SF_7
 709:Core/Src/main.c ****       myLoRa.bandWidth             = BW_250KHz;       // default = BW_125KHz
 710:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 711:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 712:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 713:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 714:Core/Src/main.c ****       LoRa_init(&myLoRa);
 715:Core/Src/main.c ****       break;
 716:Core/Src/main.c **** 
 717:Core/Src/main.c ****     case 40:
 718:Core/Src/main.c ****       // statements
 719:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 720:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_10;            // default = SF_7
 721:Core/Src/main.c ****       myLoRa.bandWidth             = BW_500KHz;       // default = BW_125KHz
 722:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 723:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 724:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 725:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 726:Core/Src/main.c ****       LoRa_init(&myLoRa);
 727:Core/Src/main.c ****       break;
 728:Core/Src/main.c **** 
 729:Core/Src/main.c ****     case 41:
 730:Core/Src/main.c ****       // statements
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 20


 731:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 732:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_11;            // default = SF_7
 733:Core/Src/main.c ****       myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 734:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 735:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 736:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 737:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 738:Core/Src/main.c ****       LoRa_init(&myLoRa);
 739:Core/Src/main.c ****       break;
 740:Core/Src/main.c **** 
 741:Core/Src/main.c ****     case 42:
 742:Core/Src/main.c ****       // statements
 743:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 744:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_11;            // default = SF_7
 745:Core/Src/main.c ****       myLoRa.bandWidth             = BW_10_4KHz;       // default = BW_125KHz
 746:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 747:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 748:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 749:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 750:Core/Src/main.c ****       LoRa_init(&myLoRa);
 751:Core/Src/main.c ****       break;
 752:Core/Src/main.c **** 
 753:Core/Src/main.c ****     case 43:
 754:Core/Src/main.c ****       // statements
 755:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 756:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_11;            // default = SF_7
 757:Core/Src/main.c ****       myLoRa.bandWidth             = BW_15_6KHz;       // default = BW_125KHz
 758:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 759:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 760:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 761:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 762:Core/Src/main.c ****       LoRa_init(&myLoRa);
 763:Core/Src/main.c ****       break;
 764:Core/Src/main.c **** 
 765:Core/Src/main.c ****     case 44:
 766:Core/Src/main.c ****       // statements
 767:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 768:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_11;            // default = SF_7
 769:Core/Src/main.c ****       myLoRa.bandWidth             = BW_20_8KHz;       // default = BW_125KHz
 770:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 771:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 772:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 773:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 774:Core/Src/main.c ****       LoRa_init(&myLoRa);
 775:Core/Src/main.c ****       break;
 776:Core/Src/main.c **** 
 777:Core/Src/main.c ****     case 45:
 778:Core/Src/main.c ****       // statements
 779:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 780:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_11;            // default = SF_7
 781:Core/Src/main.c ****       myLoRa.bandWidth             = BW_31_25KHz;       // default = BW_125KHz
 782:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 783:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 784:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 785:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 786:Core/Src/main.c ****       LoRa_init(&myLoRa);
 787:Core/Src/main.c ****       break;
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 21


 788:Core/Src/main.c **** 
 789:Core/Src/main.c ****     case 46:
 790:Core/Src/main.c ****       // statements
 791:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 792:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_11;            // default = SF_7
 793:Core/Src/main.c ****       myLoRa.bandWidth             = BW_41_7KHz;       // default = BW_125KHz
 794:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 795:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 796:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 797:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 798:Core/Src/main.c ****       LoRa_init(&myLoRa);
 799:Core/Src/main.c ****       break;
 800:Core/Src/main.c **** 
 801:Core/Src/main.c ****     case 47:
 802:Core/Src/main.c ****       // statements
 803:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 804:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_11;            // default = SF_7
 805:Core/Src/main.c ****       myLoRa.bandWidth             = BW_62_5KHz;       // default = BW_125KHz
 806:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 807:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 808:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 809:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 810:Core/Src/main.c ****       LoRa_init(&myLoRa);
 811:Core/Src/main.c ****       break;
 812:Core/Src/main.c **** 
 813:Core/Src/main.c ****     case 48:
 814:Core/Src/main.c ****       // statements
 815:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 816:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_11;            // default = SF_7
 817:Core/Src/main.c ****       myLoRa.bandWidth             = BW_125KHz;       // default = BW_125KHz
 818:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 819:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 820:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 821:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 822:Core/Src/main.c ****       LoRa_init(&myLoRa);
 823:Core/Src/main.c ****       break;
 824:Core/Src/main.c **** 
 825:Core/Src/main.c ****     case 49:
 826:Core/Src/main.c ****       // statements
 827:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 828:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_11;            // default = SF_7
 829:Core/Src/main.c ****       myLoRa.bandWidth             = BW_250KHz;       // default = BW_125KHz
 830:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 831:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 832:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 833:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 834:Core/Src/main.c ****       LoRa_init(&myLoRa);
 835:Core/Src/main.c ****       break;
 836:Core/Src/main.c **** 
 837:Core/Src/main.c ****     case 50:
 838:Core/Src/main.c ****       // statements
 839:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 840:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_11;            // default = SF_7
 841:Core/Src/main.c ****       myLoRa.bandWidth             = BW_500KHz;       // default = BW_125KHz
 842:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 843:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 844:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 22


 845:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 846:Core/Src/main.c ****       LoRa_init(&myLoRa);
 847:Core/Src/main.c ****       break;
 848:Core/Src/main.c **** 
 849:Core/Src/main.c ****     case 51:
 850:Core/Src/main.c ****       // statements
 851:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 852:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_12;            // default = SF_7
 853:Core/Src/main.c ****       myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 854:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 855:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 856:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 857:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 858:Core/Src/main.c ****       LoRa_init(&myLoRa);
 859:Core/Src/main.c ****       break;
 860:Core/Src/main.c **** 
 861:Core/Src/main.c ****     case 52:
 862:Core/Src/main.c ****       // statements
 863:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 864:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_12;            // default = SF_7
 865:Core/Src/main.c ****       myLoRa.bandWidth             = BW_10_4KHz;       // default = BW_125KHz
 866:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 867:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 868:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 869:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 870:Core/Src/main.c ****       LoRa_init(&myLoRa);
 871:Core/Src/main.c ****       break;
 872:Core/Src/main.c **** 
 873:Core/Src/main.c ****     case 53:
 874:Core/Src/main.c ****       // statements
 875:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 876:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_12;            // default = SF_7
 877:Core/Src/main.c ****       myLoRa.bandWidth             = BW_15_6KHz;       // default = BW_125KHz
 878:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 879:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 880:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 881:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 882:Core/Src/main.c ****       LoRa_init(&myLoRa);
 883:Core/Src/main.c ****       break;
 884:Core/Src/main.c **** 
 885:Core/Src/main.c ****     case 54:
 886:Core/Src/main.c ****       // statements
 887:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 888:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_12;            // default = SF_7
 889:Core/Src/main.c ****       myLoRa.bandWidth             = BW_20_8KHz;       // default = BW_125KHz
 890:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 891:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 892:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 893:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 894:Core/Src/main.c ****       LoRa_init(&myLoRa);
 895:Core/Src/main.c ****       break;
 896:Core/Src/main.c **** 
 897:Core/Src/main.c ****     case 55:
 898:Core/Src/main.c ****       // statements
 899:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 900:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_12;            // default = SF_7
 901:Core/Src/main.c ****       myLoRa.bandWidth             = BW_31_25KHz;       // default = BW_125KHz
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 23


 902:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 903:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 904:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 905:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 906:Core/Src/main.c ****       LoRa_init(&myLoRa);
 907:Core/Src/main.c ****       break;
 908:Core/Src/main.c **** 
 909:Core/Src/main.c ****     case 56:
 910:Core/Src/main.c ****       // statements
 911:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 912:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_12;            // default = SF_7
 913:Core/Src/main.c ****       myLoRa.bandWidth             = BW_41_7KHz;       // default = BW_125KHz
 914:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 915:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 916:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 917:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 918:Core/Src/main.c ****       LoRa_init(&myLoRa);
 919:Core/Src/main.c ****       break;
 920:Core/Src/main.c **** 
 921:Core/Src/main.c ****     case 57:
 922:Core/Src/main.c ****       // statements
 923:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 924:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_12;            // default = SF_7
 925:Core/Src/main.c ****       myLoRa.bandWidth             = BW_62_5KHz;       // default = BW_125KHz
 926:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 927:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 928:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 929:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 930:Core/Src/main.c ****       LoRa_init(&myLoRa);
 931:Core/Src/main.c ****       break;
 932:Core/Src/main.c **** 
 933:Core/Src/main.c ****     case 58:
 934:Core/Src/main.c ****       // statements
 935:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 936:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_12;            // default = SF_7
 937:Core/Src/main.c ****       myLoRa.bandWidth             = BW_125KHz;       // default = BW_125KHz
 938:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 939:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 940:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 941:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 942:Core/Src/main.c ****       LoRa_init(&myLoRa);
 943:Core/Src/main.c ****       break;
 944:Core/Src/main.c **** 
 945:Core/Src/main.c ****     case 59:
 946:Core/Src/main.c ****       // statements
 947:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 948:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_12;            // default = SF_7
 949:Core/Src/main.c ****       myLoRa.bandWidth             = BW_250KHz;       // default = BW_125KHz
 950:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 951:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 952:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 953:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 954:Core/Src/main.c ****       LoRa_init(&myLoRa);
 955:Core/Src/main.c ****       break;
 956:Core/Src/main.c **** 
 957:Core/Src/main.c ****     case 60:
 958:Core/Src/main.c ****       // statements
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 24


 959:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 960:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_12;            // default = SF_7
 961:Core/Src/main.c ****       myLoRa.bandWidth             = BW_500KHz;       // default = BW_125KHz
 962:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 963:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 964:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 965:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 966:Core/Src/main.c ****       LoRa_init(&myLoRa);
 967:Core/Src/main.c ****       break;
 968:Core/Src/main.c **** 
 969:Core/Src/main.c ****     default:
 970:Core/Src/main.c ****       // default statements
 971:Core/Src/main.c **** }
 972:Core/Src/main.c ****       bModeChanged = false;
 973:Core/Src/main.c ****     }
 974:Core/Src/main.c ****     }
 975:Core/Src/main.c ****     
 976:Core/Src/main.c ****     
 977:Core/Src/main.c ****     
 978:Core/Src/main.c ****     /* USER CODE END WHILE */
 979:Core/Src/main.c **** 
 980:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 981:Core/Src/main.c ****     //HAL_UART_Transmit_IT(&huart2, (uint8_t *)Gpsdata, sizeof(Gpsdata));
 982:Core/Src/main.c ****     //HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13);
 983:Core/Src/main.c **** 
 984:Core/Src/main.c ****     //HAL_Delay(1000); 
 985:Core/Src/main.c **** 
 986:Core/Src/main.c ****   }
 987:Core/Src/main.c ****   /* USER CODE END 3 */
 988:Core/Src/main.c **** }
 989:Core/Src/main.c **** 
 990:Core/Src/main.c **** /**
 991:Core/Src/main.c ****   * @brief System Clock Configuration
 992:Core/Src/main.c ****   * @retval None
 993:Core/Src/main.c ****   */
 994:Core/Src/main.c **** void SystemClock_Config(void)
 995:Core/Src/main.c **** {
 996:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 997:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 998:Core/Src/main.c **** 
 999:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
1000:Core/Src/main.c ****   */
1001:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
1002:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
1003:Core/Src/main.c **** 
1004:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
1005:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
1006:Core/Src/main.c ****   */
1007:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
1008:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
1009:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
1010:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
1011:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
1012:Core/Src/main.c ****   {
1013:Core/Src/main.c ****     Error_Handler();
1014:Core/Src/main.c ****   }
1015:Core/Src/main.c **** 
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 25


1016:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
1017:Core/Src/main.c ****   */
1018:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
1019:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
1020:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
1021:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
1022:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
1023:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
1024:Core/Src/main.c **** 
1025:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
1026:Core/Src/main.c ****   {
1027:Core/Src/main.c ****     Error_Handler();
1028:Core/Src/main.c ****   }
1029:Core/Src/main.c **** }
1030:Core/Src/main.c **** 
1031:Core/Src/main.c **** /**
1032:Core/Src/main.c ****   * @brief I2C1 Initialization Function
1033:Core/Src/main.c ****   * @param None
1034:Core/Src/main.c ****   * @retval None
1035:Core/Src/main.c ****   */
1036:Core/Src/main.c **** static void MX_I2C1_Init(void)
1037:Core/Src/main.c **** {
1038:Core/Src/main.c **** 
1039:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 0 */
1040:Core/Src/main.c **** 
1041:Core/Src/main.c ****   /* USER CODE END I2C1_Init 0 */
1042:Core/Src/main.c **** 
1043:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 1 */
1044:Core/Src/main.c **** 
1045:Core/Src/main.c ****   /* USER CODE END I2C1_Init 1 */
1046:Core/Src/main.c ****   hi2c1.Instance = I2C1;
1047:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
1048:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
1049:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
1050:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
1051:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
1052:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
1053:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
1054:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
1055:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
1056:Core/Src/main.c ****   {
1057:Core/Src/main.c ****     Error_Handler();
1058:Core/Src/main.c ****   }
1059:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 2 */
1060:Core/Src/main.c **** 
1061:Core/Src/main.c ****   /* USER CODE END I2C1_Init 2 */
1062:Core/Src/main.c **** 
1063:Core/Src/main.c **** }
1064:Core/Src/main.c **** 
1065:Core/Src/main.c **** /**
1066:Core/Src/main.c ****   * @brief I2C2 Initialization Function
1067:Core/Src/main.c ****   * @param None
1068:Core/Src/main.c ****   * @retval None
1069:Core/Src/main.c ****   */
1070:Core/Src/main.c **** static void MX_I2C2_Init(void)
1071:Core/Src/main.c **** {
1072:Core/Src/main.c **** 
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 26


1073:Core/Src/main.c ****   /* USER CODE BEGIN I2C2_Init 0 */
1074:Core/Src/main.c **** 
1075:Core/Src/main.c ****   /* USER CODE END I2C2_Init 0 */
1076:Core/Src/main.c **** 
1077:Core/Src/main.c ****   /* USER CODE BEGIN I2C2_Init 1 */
1078:Core/Src/main.c **** 
1079:Core/Src/main.c ****   /* USER CODE END I2C2_Init 1 */
1080:Core/Src/main.c ****   hi2c2.Instance = I2C2;
1081:Core/Src/main.c ****   hi2c2.Init.ClockSpeed = 100000;
1082:Core/Src/main.c ****   hi2c2.Init.DutyCycle = I2C_DUTYCYCLE_2;
1083:Core/Src/main.c ****   hi2c2.Init.OwnAddress1 = 0;
1084:Core/Src/main.c ****   hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
1085:Core/Src/main.c ****   hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
1086:Core/Src/main.c ****   hi2c2.Init.OwnAddress2 = 0;
1087:Core/Src/main.c ****   hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
1088:Core/Src/main.c ****   hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
1089:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c2) != HAL_OK)
1090:Core/Src/main.c ****   {
1091:Core/Src/main.c ****     Error_Handler();
1092:Core/Src/main.c ****   }
1093:Core/Src/main.c ****   /* USER CODE BEGIN I2C2_Init 2 */
1094:Core/Src/main.c **** 
1095:Core/Src/main.c ****   /* USER CODE END I2C2_Init 2 */
1096:Core/Src/main.c **** 
1097:Core/Src/main.c **** }
1098:Core/Src/main.c **** 
1099:Core/Src/main.c **** /**
1100:Core/Src/main.c ****   * @brief SPI3 Initialization Function
1101:Core/Src/main.c ****   * @param None
1102:Core/Src/main.c ****   * @retval None
1103:Core/Src/main.c ****   */
1104:Core/Src/main.c **** static void MX_SPI3_Init(void)
1105:Core/Src/main.c **** {
1106:Core/Src/main.c **** 
1107:Core/Src/main.c ****   /* USER CODE BEGIN SPI3_Init 0 */
1108:Core/Src/main.c **** 
1109:Core/Src/main.c ****   /* USER CODE END SPI3_Init 0 */
1110:Core/Src/main.c **** 
1111:Core/Src/main.c ****   /* USER CODE BEGIN SPI3_Init 1 */
1112:Core/Src/main.c **** 
1113:Core/Src/main.c ****   /* USER CODE END SPI3_Init 1 */
1114:Core/Src/main.c ****   /* SPI3 parameter configuration*/
1115:Core/Src/main.c ****   hspi3.Instance = SPI3;
1116:Core/Src/main.c ****   hspi3.Init.Mode = SPI_MODE_MASTER;
1117:Core/Src/main.c ****   hspi3.Init.Direction = SPI_DIRECTION_2LINES;
1118:Core/Src/main.c ****   hspi3.Init.DataSize = SPI_DATASIZE_8BIT;
1119:Core/Src/main.c ****   hspi3.Init.CLKPolarity = SPI_POLARITY_LOW;
1120:Core/Src/main.c ****   hspi3.Init.CLKPhase = SPI_PHASE_1EDGE;
1121:Core/Src/main.c ****   hspi3.Init.NSS = SPI_NSS_SOFT;
1122:Core/Src/main.c ****   hspi3.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
1123:Core/Src/main.c ****   hspi3.Init.FirstBit = SPI_FIRSTBIT_MSB;
1124:Core/Src/main.c ****   hspi3.Init.TIMode = SPI_TIMODE_DISABLE;
1125:Core/Src/main.c ****   hspi3.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
1126:Core/Src/main.c ****   hspi3.Init.CRCPolynomial = 10;
1127:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi3) != HAL_OK)
1128:Core/Src/main.c ****   {
1129:Core/Src/main.c ****     Error_Handler();
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 27


1130:Core/Src/main.c ****   }
1131:Core/Src/main.c ****   /* USER CODE BEGIN SPI3_Init 2 */
1132:Core/Src/main.c **** 
1133:Core/Src/main.c ****   /* USER CODE END SPI3_Init 2 */
1134:Core/Src/main.c **** 
1135:Core/Src/main.c **** }
1136:Core/Src/main.c **** 
1137:Core/Src/main.c **** /**
1138:Core/Src/main.c ****   * @brief TIM3 Initialization Function
1139:Core/Src/main.c ****   * @param None
1140:Core/Src/main.c ****   * @retval None
1141:Core/Src/main.c ****   */
1142:Core/Src/main.c **** static void MX_TIM3_Init(void)
1143:Core/Src/main.c **** {
1144:Core/Src/main.c **** 
1145:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 0 */
1146:Core/Src/main.c **** 
1147:Core/Src/main.c ****   /* USER CODE END TIM3_Init 0 */
1148:Core/Src/main.c **** 
1149:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
1150:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
1151:Core/Src/main.c **** 
1152:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 1 */
1153:Core/Src/main.c **** 
1154:Core/Src/main.c ****   /* USER CODE END TIM3_Init 1 */
1155:Core/Src/main.c ****   htim3.Instance = TIM3;
1156:Core/Src/main.c ****   htim3.Init.Prescaler = 1600-1;
1157:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
1158:Core/Src/main.c ****   htim3.Init.Period = 10000-1;
1159:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
1160:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
1161:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
1162:Core/Src/main.c ****   {
1163:Core/Src/main.c ****     Error_Handler();
1164:Core/Src/main.c ****   }
1165:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
1166:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
1167:Core/Src/main.c ****   {
1168:Core/Src/main.c ****     Error_Handler();
1169:Core/Src/main.c ****   }
1170:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
1171:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
1172:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
1173:Core/Src/main.c ****   {
1174:Core/Src/main.c ****     Error_Handler();
1175:Core/Src/main.c ****   }
1176:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 2 */
1177:Core/Src/main.c **** 
1178:Core/Src/main.c ****   /* USER CODE END TIM3_Init 2 */
1179:Core/Src/main.c **** 
1180:Core/Src/main.c **** }
1181:Core/Src/main.c **** 
1182:Core/Src/main.c **** /**
1183:Core/Src/main.c ****   * @brief USART1 Initialization Function
1184:Core/Src/main.c ****   * @param None
1185:Core/Src/main.c ****   * @retval None
1186:Core/Src/main.c ****   */
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 28


1187:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
1188:Core/Src/main.c **** {
1189:Core/Src/main.c **** 
1190:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
1191:Core/Src/main.c **** 
1192:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
1193:Core/Src/main.c **** 
1194:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
1195:Core/Src/main.c **** 
1196:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
1197:Core/Src/main.c ****   huart1.Instance = USART1;
1198:Core/Src/main.c ****   huart1.Init.BaudRate = 9600;
1199:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
1200:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
1201:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
1202:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
1203:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
1204:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
1205:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
1206:Core/Src/main.c ****   {
1207:Core/Src/main.c ****     Error_Handler();
1208:Core/Src/main.c ****   }
1209:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
1210:Core/Src/main.c **** 
1211:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
1212:Core/Src/main.c **** 
1213:Core/Src/main.c **** }
1214:Core/Src/main.c **** 
1215:Core/Src/main.c **** /**
1216:Core/Src/main.c ****   * @brief USART2 Initialization Function
1217:Core/Src/main.c ****   * @param None
1218:Core/Src/main.c ****   * @retval None
1219:Core/Src/main.c ****   */
1220:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
1221:Core/Src/main.c **** {
1222:Core/Src/main.c **** 
1223:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
1224:Core/Src/main.c **** 
1225:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
1226:Core/Src/main.c **** 
1227:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
1228:Core/Src/main.c **** 
1229:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
1230:Core/Src/main.c ****   huart2.Instance = USART2;
1231:Core/Src/main.c ****   huart2.Init.BaudRate = 230400;
1232:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
1233:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
1234:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
1235:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
1236:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
1237:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
1238:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
1239:Core/Src/main.c ****   {
1240:Core/Src/main.c ****     Error_Handler();
1241:Core/Src/main.c ****   }
1242:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
1243:Core/Src/main.c **** 
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 29


1244:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
1245:Core/Src/main.c **** 
1246:Core/Src/main.c **** }
1247:Core/Src/main.c **** 
1248:Core/Src/main.c **** /**
1249:Core/Src/main.c ****   * @brief GPIO Initialization Function
1250:Core/Src/main.c ****   * @param None
1251:Core/Src/main.c ****   * @retval None
1252:Core/Src/main.c ****   */
1253:Core/Src/main.c **** static void MX_GPIO_Init(void)
1254:Core/Src/main.c **** {
 104              		.loc 1 1254 1 is_stmt 1 view -0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 32
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 109              		.cfi_def_cfa_offset 28
 110              		.cfi_offset 4, -28
 111              		.cfi_offset 5, -24
 112              		.cfi_offset 6, -20
 113              		.cfi_offset 7, -16
 114              		.cfi_offset 8, -12
 115              		.cfi_offset 9, -8
 116              		.cfi_offset 14, -4
 117 0004 89B0     		sub	sp, sp, #36
 118              		.cfi_def_cfa_offset 64
1255:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 119              		.loc 1 1255 3 view .LVU27
 120              		.loc 1 1255 20 is_stmt 0 view .LVU28
 121 0006 0024     		movs	r4, #0
 122 0008 0394     		str	r4, [sp, #12]
 123 000a 0494     		str	r4, [sp, #16]
 124 000c 0594     		str	r4, [sp, #20]
 125 000e 0694     		str	r4, [sp, #24]
 126 0010 0794     		str	r4, [sp, #28]
1256:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
1257:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
1258:Core/Src/main.c **** 
1259:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
1260:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 127              		.loc 1 1260 3 is_stmt 1 view .LVU29
 128              	.LBB4:
 129              		.loc 1 1260 3 view .LVU30
 130 0012 0094     		str	r4, [sp]
 131              		.loc 1 1260 3 view .LVU31
 132 0014 414B     		ldr	r3, .L8
 133 0016 1A6B     		ldr	r2, [r3, #48]
 134 0018 42F00402 		orr	r2, r2, #4
 135 001c 1A63     		str	r2, [r3, #48]
 136              		.loc 1 1260 3 view .LVU32
 137 001e 1A6B     		ldr	r2, [r3, #48]
 138 0020 02F00402 		and	r2, r2, #4
 139 0024 0092     		str	r2, [sp]
 140              		.loc 1 1260 3 view .LVU33
 141 0026 009A     		ldr	r2, [sp]
 142              	.LBE4:
 143              		.loc 1 1260 3 view .LVU34
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 30


1261:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 144              		.loc 1 1261 3 view .LVU35
 145              	.LBB5:
 146              		.loc 1 1261 3 view .LVU36
 147 0028 0194     		str	r4, [sp, #4]
 148              		.loc 1 1261 3 view .LVU37
 149 002a 1A6B     		ldr	r2, [r3, #48]
 150 002c 42F00102 		orr	r2, r2, #1
 151 0030 1A63     		str	r2, [r3, #48]
 152              		.loc 1 1261 3 view .LVU38
 153 0032 1A6B     		ldr	r2, [r3, #48]
 154 0034 02F00102 		and	r2, r2, #1
 155 0038 0192     		str	r2, [sp, #4]
 156              		.loc 1 1261 3 view .LVU39
 157 003a 019A     		ldr	r2, [sp, #4]
 158              	.LBE5:
 159              		.loc 1 1261 3 view .LVU40
1262:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 160              		.loc 1 1262 3 view .LVU41
 161              	.LBB6:
 162              		.loc 1 1262 3 view .LVU42
 163 003c 0294     		str	r4, [sp, #8]
 164              		.loc 1 1262 3 view .LVU43
 165 003e 1A6B     		ldr	r2, [r3, #48]
 166 0040 42F00202 		orr	r2, r2, #2
 167 0044 1A63     		str	r2, [r3, #48]
 168              		.loc 1 1262 3 view .LVU44
 169 0046 1B6B     		ldr	r3, [r3, #48]
 170 0048 03F00203 		and	r3, r3, #2
 171 004c 0293     		str	r3, [sp, #8]
 172              		.loc 1 1262 3 view .LVU45
 173 004e 029B     		ldr	r3, [sp, #8]
 174              	.LBE6:
 175              		.loc 1 1262 3 view .LVU46
1263:Core/Src/main.c **** 
1264:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
1265:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
 176              		.loc 1 1265 3 view .LVU47
 177 0050 DFF8D480 		ldr	r8, .L8+12
 178 0054 2246     		mov	r2, r4
 179 0056 4FF40051 		mov	r1, #8192
 180 005a 4046     		mov	r0, r8
 181 005c FFF7FEFF 		bl	HAL_GPIO_WritePin
 182              	.LVL5:
1266:Core/Src/main.c **** 
1267:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
1268:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_4, GPIO_PIN_SET);
 183              		.loc 1 1268 3 view .LVU48
 184 0060 2F4F     		ldr	r7, .L8+4
 185 0062 0122     		movs	r2, #1
 186 0064 1021     		movs	r1, #16
 187 0066 3846     		mov	r0, r7
 188 0068 FFF7FEFF 		bl	HAL_GPIO_WritePin
 189              	.LVL6:
1269:Core/Src/main.c **** 
1270:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
1271:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_8, GPIO_PIN_SET);
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 31


 190              		.loc 1 1271 3 view .LVU49
 191 006c 2D4E     		ldr	r6, .L8+8
 192 006e 0122     		movs	r2, #1
 193 0070 4FF48071 		mov	r1, #256
 194 0074 3046     		mov	r0, r6
 195 0076 FFF7FEFF 		bl	HAL_GPIO_WritePin
 196              	.LVL7:
1272:Core/Src/main.c **** 
1273:Core/Src/main.c ****   /*Configure GPIO pin : PC13 */
1274:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_13;
 197              		.loc 1 1274 3 view .LVU50
 198              		.loc 1 1274 23 is_stmt 0 view .LVU51
 199 007a 4FF40059 		mov	r9, #8192
 200 007e CDF80C90 		str	r9, [sp, #12]
1275:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 201              		.loc 1 1275 3 is_stmt 1 view .LVU52
 202              		.loc 1 1275 24 is_stmt 0 view .LVU53
 203 0082 0125     		movs	r5, #1
 204 0084 0495     		str	r5, [sp, #16]
1276:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 205              		.loc 1 1276 3 is_stmt 1 view .LVU54
 206              		.loc 1 1276 24 is_stmt 0 view .LVU55
 207 0086 0594     		str	r4, [sp, #20]
1277:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 208              		.loc 1 1277 3 is_stmt 1 view .LVU56
 209              		.loc 1 1277 25 is_stmt 0 view .LVU57
 210 0088 0694     		str	r4, [sp, #24]
1278:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 211              		.loc 1 1278 3 is_stmt 1 view .LVU58
 212 008a 03A9     		add	r1, sp, #12
 213 008c 4046     		mov	r0, r8
 214 008e FFF7FEFF 		bl	HAL_GPIO_Init
 215              	.LVL8:
1279:Core/Src/main.c **** 
1280:Core/Src/main.c ****   /*Configure GPIO pin : PA4 */
1281:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_4;
 216              		.loc 1 1281 3 view .LVU59
 217              		.loc 1 1281 23 is_stmt 0 view .LVU60
 218 0092 1023     		movs	r3, #16
 219 0094 0393     		str	r3, [sp, #12]
1282:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 220              		.loc 1 1282 3 is_stmt 1 view .LVU61
 221              		.loc 1 1282 24 is_stmt 0 view .LVU62
 222 0096 0495     		str	r5, [sp, #16]
1283:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 223              		.loc 1 1283 3 is_stmt 1 view .LVU63
 224              		.loc 1 1283 24 is_stmt 0 view .LVU64
 225 0098 0594     		str	r4, [sp, #20]
1284:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 226              		.loc 1 1284 3 is_stmt 1 view .LVU65
 227              		.loc 1 1284 25 is_stmt 0 view .LVU66
 228 009a 0694     		str	r4, [sp, #24]
1285:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 229              		.loc 1 1285 3 is_stmt 1 view .LVU67
 230 009c 03A9     		add	r1, sp, #12
 231 009e 3846     		mov	r0, r7
 232 00a0 FFF7FEFF 		bl	HAL_GPIO_Init
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 32


 233              	.LVL9:
1286:Core/Src/main.c **** 
1287:Core/Src/main.c ****   /*Configure GPIO pin : rightButton_Pin */
1288:Core/Src/main.c ****   GPIO_InitStruct.Pin = rightButton_Pin;
 234              		.loc 1 1288 3 view .LVU68
 235              		.loc 1 1288 23 is_stmt 0 view .LVU69
 236 00a4 2023     		movs	r3, #32
 237 00a6 0393     		str	r3, [sp, #12]
1289:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 238              		.loc 1 1289 3 is_stmt 1 view .LVU70
 239              		.loc 1 1289 24 is_stmt 0 view .LVU71
 240 00a8 4FF40418 		mov	r8, #2162688
 241 00ac CDF81080 		str	r8, [sp, #16]
1290:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 242              		.loc 1 1290 3 is_stmt 1 view .LVU72
 243              		.loc 1 1290 24 is_stmt 0 view .LVU73
 244 00b0 0595     		str	r5, [sp, #20]
1291:Core/Src/main.c ****   HAL_GPIO_Init(rightButton_GPIO_Port, &GPIO_InitStruct);
 245              		.loc 1 1291 3 is_stmt 1 view .LVU74
 246 00b2 03A9     		add	r1, sp, #12
 247 00b4 3846     		mov	r0, r7
 248 00b6 FFF7FEFF 		bl	HAL_GPIO_Init
 249              	.LVL10:
1292:Core/Src/main.c **** 
1293:Core/Src/main.c ****   /*Configure GPIO pin : leftButton_Pin */
1294:Core/Src/main.c ****   GPIO_InitStruct.Pin = leftButton_Pin;
 250              		.loc 1 1294 3 view .LVU75
 251              		.loc 1 1294 23 is_stmt 0 view .LVU76
 252 00ba CDF80C90 		str	r9, [sp, #12]
1295:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 253              		.loc 1 1295 3 is_stmt 1 view .LVU77
 254              		.loc 1 1295 24 is_stmt 0 view .LVU78
 255 00be CDF81080 		str	r8, [sp, #16]
1296:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 256              		.loc 1 1296 3 is_stmt 1 view .LVU79
 257              		.loc 1 1296 24 is_stmt 0 view .LVU80
 258 00c2 0595     		str	r5, [sp, #20]
1297:Core/Src/main.c ****   HAL_GPIO_Init(leftButton_GPIO_Port, &GPIO_InitStruct);
 259              		.loc 1 1297 3 is_stmt 1 view .LVU81
 260 00c4 03A9     		add	r1, sp, #12
 261 00c6 3046     		mov	r0, r6
 262 00c8 FFF7FEFF 		bl	HAL_GPIO_Init
 263              	.LVL11:
1298:Core/Src/main.c **** 
1299:Core/Src/main.c ****   /*Configure GPIO pin : PB8 */
1300:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_8;
 264              		.loc 1 1300 3 view .LVU82
 265              		.loc 1 1300 23 is_stmt 0 view .LVU83
 266 00cc 4FF48073 		mov	r3, #256
 267 00d0 0393     		str	r3, [sp, #12]
1301:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 268              		.loc 1 1301 3 is_stmt 1 view .LVU84
 269              		.loc 1 1301 24 is_stmt 0 view .LVU85
 270 00d2 0495     		str	r5, [sp, #16]
1302:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 271              		.loc 1 1302 3 is_stmt 1 view .LVU86
 272              		.loc 1 1302 24 is_stmt 0 view .LVU87
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 33


 273 00d4 0594     		str	r4, [sp, #20]
1303:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 274              		.loc 1 1303 3 is_stmt 1 view .LVU88
 275              		.loc 1 1303 25 is_stmt 0 view .LVU89
 276 00d6 0694     		str	r4, [sp, #24]
1304:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 277              		.loc 1 1304 3 is_stmt 1 view .LVU90
 278 00d8 03A9     		add	r1, sp, #12
 279 00da 3046     		mov	r0, r6
 280 00dc FFF7FEFF 		bl	HAL_GPIO_Init
 281              	.LVL12:
1305:Core/Src/main.c **** 
1306:Core/Src/main.c ****   /*Configure GPIO pin : PB9 */
1307:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_9;
 282              		.loc 1 1307 3 view .LVU91
 283              		.loc 1 1307 23 is_stmt 0 view .LVU92
 284 00e0 4FF40073 		mov	r3, #512
 285 00e4 0393     		str	r3, [sp, #12]
1308:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 286              		.loc 1 1308 3 is_stmt 1 view .LVU93
 287              		.loc 1 1308 24 is_stmt 0 view .LVU94
 288 00e6 4FF48813 		mov	r3, #1114112
 289 00ea 0493     		str	r3, [sp, #16]
1309:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 290              		.loc 1 1309 3 is_stmt 1 view .LVU95
 291              		.loc 1 1309 24 is_stmt 0 view .LVU96
 292 00ec 0594     		str	r4, [sp, #20]
1310:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 293              		.loc 1 1310 3 is_stmt 1 view .LVU97
 294 00ee 03A9     		add	r1, sp, #12
 295 00f0 3046     		mov	r0, r6
 296 00f2 FFF7FEFF 		bl	HAL_GPIO_Init
 297              	.LVL13:
1311:Core/Src/main.c **** 
1312:Core/Src/main.c ****   /* EXTI interrupt init*/
1313:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI9_5_IRQn, 2, 0);
 298              		.loc 1 1313 3 view .LVU98
 299 00f6 2246     		mov	r2, r4
 300 00f8 0221     		movs	r1, #2
 301 00fa 1720     		movs	r0, #23
 302 00fc FFF7FEFF 		bl	HAL_NVIC_SetPriority
 303              	.LVL14:
1314:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 304              		.loc 1 1314 3 view .LVU99
 305 0100 1720     		movs	r0, #23
 306 0102 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 307              	.LVL15:
1315:Core/Src/main.c **** 
1316:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI15_10_IRQn, 2, 0);
 308              		.loc 1 1316 3 view .LVU100
 309 0106 2246     		mov	r2, r4
 310 0108 0221     		movs	r1, #2
 311 010a 2820     		movs	r0, #40
 312 010c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 313              	.LVL16:
1317:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 314              		.loc 1 1317 3 view .LVU101
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 34


 315 0110 2820     		movs	r0, #40
 316 0112 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 317              	.LVL17:
1318:Core/Src/main.c **** 
1319:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
1320:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
1321:Core/Src/main.c **** }
 318              		.loc 1 1321 1 is_stmt 0 view .LVU102
 319 0116 09B0     		add	sp, sp, #36
 320              		.cfi_def_cfa_offset 28
 321              		@ sp needed
 322 0118 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 323              	.L9:
 324              		.align	2
 325              	.L8:
 326 011c 00380240 		.word	1073887232
 327 0120 00000240 		.word	1073872896
 328 0124 00040240 		.word	1073873920
 329 0128 00080240 		.word	1073874944
 330              		.cfi_endproc
 331              	.LFE146:
 333              		.section	.rodata.HAL_UARTEx_RxEventCallback.str1.4,"aMS",%progbits,1
 334              		.align	2
 335              	.LC0:
 336 0000 0A00     		.ascii	"\012\000"
 337 0002 0000     		.align	2
 338              	.LC1:
 339 0004 25643A25 		.ascii	"%d:%d:%d,\000"
 339      643A2564 
 339      2C00
 340 000e 0000     		.align	2
 341              	.LC2:
 342 0010 2825642C 		.ascii	"(%d,%d),\000"
 342      2564292C 
 342      00
 343 0019 000000   		.align	2
 344              	.LC3:
 345 001c 54656D70 		.ascii	"Temperature/pressure reading failed\012\000"
 345      65726174 
 345      7572652F 
 345      70726573 
 345      73757265 
 346              		.global	__aeabi_f2d
 347              		.global	__aeabi_dsub
 348              		.global	__aeabi_dmul
 349              		.global	__aeabi_d2f
 350 0041 000000   		.align	2
 351              	.LC4:
 352 0044 25732C25 		.ascii	"%s,%s,%s,%s\000"
 352      732C2573 
 352      2C257300 
 353              		.section	.text.HAL_UARTEx_RxEventCallback,"ax",%progbits
 354              		.align	1
 355              		.global	HAL_UARTEx_RxEventCallback
 356              		.syntax unified
 357              		.thumb
 358              		.thumb_func
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 35


 360              	HAL_UARTEx_RxEventCallback:
 361              	.LVL18:
 362              	.LFB147:
1322:Core/Src/main.c **** 
1323:Core/Src/main.c **** /* USER CODE BEGIN 4 */
1324:Core/Src/main.c **** void HAL_UARTEx_RxEventCallback(UART_HandleTypeDef *huart, uint16_t Size) {
 363              		.loc 1 1324 75 is_stmt 1 view -0
 364              		.cfi_startproc
 365              		@ args = 0, pretend = 0, frame = 72
 366              		@ frame_needed = 0, uses_anonymous_args = 0
 367              		.loc 1 1324 75 is_stmt 0 view .LVU104
 368 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 369              		.cfi_def_cfa_offset 24
 370              		.cfi_offset 4, -24
 371              		.cfi_offset 5, -20
 372              		.cfi_offset 6, -16
 373              		.cfi_offset 7, -12
 374              		.cfi_offset 8, -8
 375              		.cfi_offset 14, -4
 376 0004 94B0     		sub	sp, sp, #80
 377              		.cfi_def_cfa_offset 104
1325:Core/Src/main.c ****   //Set a flag high when the GPS sends data
1326:Core/Src/main.c ****   flag = 1;
 378              		.loc 1 1326 3 is_stmt 1 view .LVU105
 379              		.loc 1 1326 8 is_stmt 0 view .LVU106
 380 0006 6A4B     		ldr	r3, .L18+16
 381 0008 0122     		movs	r2, #1
 382 000a 1A70     		strb	r2, [r3]
1327:Core/Src/main.c ****   isLoraReady = false;
 383              		.loc 1 1327 3 is_stmt 1 view .LVU107
 384              		.loc 1 1327 15 is_stmt 0 view .LVU108
 385 000c 0021     		movs	r1, #0
 386              	.LVL19:
 387              		.loc 1 1327 15 view .LVU109
 388 000e 694B     		ldr	r3, .L18+20
 389 0010 1970     		strb	r1, [r3]
1328:Core/Src/main.c **** 
1329:Core/Src/main.c ****   //Set memory of line_out to emtpy
1330:Core/Src/main.c ****   //memset(line_out, '\0', sizeof(line_out));
1331:Core/Src/main.c ****   memset(transmit_data, '\0', sizeof(transmit_data));
 390              		.loc 1 1331 3 is_stmt 1 view .LVU110
 391 0012 4FF48072 		mov	r2, #256
 392 0016 6848     		ldr	r0, .L18+24
 393              	.LVL20:
 394              		.loc 1 1331 3 is_stmt 0 view .LVU111
 395 0018 FFF7FEFF 		bl	memset
 396              	.LVL21:
1332:Core/Src/main.c **** 
1333:Core/Src/main.c ****   //Copy a new line character to line_out
1334:Core/Src/main.c ****   //memcpy(line_out, "\r\n\n", sizeof("\r\n\n"));
1335:Core/Src/main.c ****   //memcpy(transmit_data, "\r\n\n", sizeof("\r\n\n"));
1336:Core/Src/main.c **** 
1337:Core/Src/main.c ****   //Transmit the data over uart2
1338:Core/Src/main.c ****   //HAL_UART_Transmit(&huart2, (uint8_t*)line_out, sizeof(line_out)/sizeof(line_out[0]), 1000);
1339:Core/Src/main.c **** 
1340:Core/Src/main.c **** 
1341:Core/Src/main.c ****   
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 36


1342:Core/Src/main.c ****   //Search for the \n character
1343:Core/Src/main.c ****   uint8_t *token = strtok(gps_raw, "\n");
 397              		.loc 1 1343 3 is_stmt 1 view .LVU112
 398              		.loc 1 1343 20 is_stmt 0 view .LVU113
 399 001c 6749     		ldr	r1, .L18+28
 400 001e 6848     		ldr	r0, .L18+32
 401 0020 FFF7FEFF 		bl	strtok
 402              	.LVL22:
1344:Core/Src/main.c **** 
1345:Core/Src/main.c ****   if (token == NULL) {
 403              		.loc 1 1345 3 is_stmt 1 view .LVU114
 404              		.loc 1 1345 6 is_stmt 0 view .LVU115
 405 0024 48B1     		cbz	r0, .L11
 406 0026 0146     		mov	r1, r0
 407              	.LBB7:
1346:Core/Src/main.c ****     //break
1347:Core/Src/main.c ****   } else {
1348:Core/Src/main.c ****     //memset(line, '\0', sizeof(line));
1349:Core/Src/main.c ****     strcpy(line, token);
 408              		.loc 1 1349 5 is_stmt 1 view .LVU116
 409 0028 664C     		ldr	r4, .L18+36
 410 002a 2046     		mov	r0, r4
 411              	.LVL23:
 412              		.loc 1 1349 5 is_stmt 0 view .LVU117
 413 002c FFF7FEFF 		bl	strcpy
 414              	.LVL24:
1350:Core/Src/main.c ****     struct minmea_sentence_rmc frame;
 415              		.loc 1 1350 5 is_stmt 1 view .LVU118
1351:Core/Src/main.c ****     if (minmea_parse_rmc(&frame, line)) {
 416              		.loc 1 1351 5 view .LVU119
 417              		.loc 1 1351 9 is_stmt 0 view .LVU120
 418 0030 2146     		mov	r1, r4
 419 0032 02A8     		add	r0, sp, #8
 420 0034 FFF7FEFF 		bl	minmea_parse_rmc
 421              	.LVL25:
 422              		.loc 1 1351 8 view .LVU121
 423 0038 30B9     		cbnz	r0, .L17
 424              	.L11:
 425              	.LBE7:
1352:Core/Src/main.c ****       //memset(line_out, '\0', sizeof(line_out));
1353:Core/Src/main.c ****       sprintf(transmit_data + strlen(transmit_data),"%d:%d:%d,",frame.time.hours, frame.time.minute
1354:Core/Src/main.c ****       //HAL_UART_Transmit(&huart2, (uint8_t*)line_out, sizeof(line_out)/sizeof(line_out[0]), 1000);
1355:Core/Src/main.c **** 
1356:Core/Src/main.c ****       //memset(line_out, '\0', sizeof(line_out));
1357:Core/Src/main.c ****       sprintf(transmit_data + strlen(transmit_data), "(%d,%d),",minmea_rescale(&frame.latitude, 100
1358:Core/Src/main.c ****       //HAL_UART_Transmit(&huart2, (uint8_t*)line_out, sizeof(line_out)/sizeof(line_out[0]), 1000);
1359:Core/Src/main.c ****       
1360:Core/Src/main.c ****     }
1361:Core/Src/main.c ****   }
1362:Core/Src/main.c **** 
1363:Core/Src/main.c ****   //Set gps_raw data register to empty
1364:Core/Src/main.c ****   memset(gps_raw, '\0', sizeof(gps_raw));
 426              		.loc 1 1364 3 is_stmt 1 view .LVU122
 427 003a 4FF40072 		mov	r2, #512
 428 003e 0021     		movs	r1, #0
 429 0040 5F48     		ldr	r0, .L18+32
 430 0042 FFF7FEFF 		bl	memset
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 37


 431              	.LVL26:
1365:Core/Src/main.c **** 
1366:Core/Src/main.c **** 
1367:Core/Src/main.c **** 
1368:Core/Src/main.c ****   	//HAL_Delay(100);
1369:Core/Src/main.c **** 	while (!bmp280_read_float(&bmp280, &temperature, &pressure, &humidity)) {
 432              		.loc 1 1369 2 view .LVU123
 433              		.loc 1 1369 8 is_stmt 0 view .LVU124
 434 0046 42E0     		b	.L13
 435              	.L17:
 436              	.LBB8:
1353:Core/Src/main.c ****       //HAL_UART_Transmit(&huart2, (uint8_t*)line_out, sizeof(line_out)/sizeof(line_out[0]), 1000);
 437              		.loc 1 1353 7 is_stmt 1 view .LVU125
1353:Core/Src/main.c ****       //HAL_UART_Transmit(&huart2, (uint8_t*)line_out, sizeof(line_out)/sizeof(line_out[0]), 1000);
 438              		.loc 1 1353 31 is_stmt 0 view .LVU126
 439 0048 5B4C     		ldr	r4, .L18+24
 440 004a 2046     		mov	r0, r4
 441 004c FFF7FEFF 		bl	strlen
 442              	.LVL27:
1353:Core/Src/main.c ****       //HAL_UART_Transmit(&huart2, (uint8_t*)line_out, sizeof(line_out)/sizeof(line_out[0]), 1000);
 443              		.loc 1 1353 7 view .LVU127
 444 0050 049B     		ldr	r3, [sp, #16]
 445 0052 0093     		str	r3, [sp]
 446 0054 039B     		ldr	r3, [sp, #12]
 447 0056 029A     		ldr	r2, [sp, #8]
 448 0058 5B49     		ldr	r1, .L18+40
 449 005a 2044     		add	r0, r0, r4
 450 005c FFF7FEFF 		bl	sprintf
 451              	.LVL28:
1357:Core/Src/main.c ****       //HAL_UART_Transmit(&huart2, (uint8_t*)line_out, sizeof(line_out)/sizeof(line_out[0]), 1000);
 452              		.loc 1 1357 7 is_stmt 1 view .LVU128
1357:Core/Src/main.c ****       //HAL_UART_Transmit(&huart2, (uint8_t*)line_out, sizeof(line_out)/sizeof(line_out[0]), 1000);
 453              		.loc 1 1357 31 is_stmt 0 view .LVU129
 454 0060 2046     		mov	r0, r4
 455 0062 FFF7FEFF 		bl	strlen
 456              	.LVL29:
 457 0066 0546     		mov	r5, r0
1357:Core/Src/main.c ****       //HAL_UART_Transmit(&huart2, (uint8_t*)line_out, sizeof(line_out)/sizeof(line_out[0]), 1000);
 458              		.loc 1 1357 7 view .LVU130
 459 0068 4FF47A71 		mov	r1, #1000
 460 006c 07A8     		add	r0, sp, #28
 461 006e FFF7FEFF 		bl	minmea_rescale
 462              	.LVL30:
 463 0072 0646     		mov	r6, r0
 464 0074 4FF47A71 		mov	r1, #1000
 465 0078 09A8     		add	r0, sp, #36
 466 007a FFF7FEFF 		bl	minmea_rescale
 467              	.LVL31:
 468 007e 0346     		mov	r3, r0
 469 0080 3246     		mov	r2, r6
 470 0082 5249     		ldr	r1, .L18+44
 471 0084 6019     		adds	r0, r4, r5
 472 0086 FFF7FEFF 		bl	sprintf
 473              	.LVL32:
 474 008a D6E7     		b	.L11
 475              	.L15:
 476              	.LBE8:
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 38


1370:Core/Src/main.c **** 	  size = sprintf(transmit_data + strlen(transmit_data),"Temperature/pressure reading failed\n");
 477              		.loc 1 1370 4 is_stmt 1 view .LVU131
 478              		.loc 1 1370 35 is_stmt 0 view .LVU132
 479 008c 4A4C     		ldr	r4, .L18+24
 480 008e 2046     		mov	r0, r4
 481 0090 FFF7FEFF 		bl	strlen
 482              	.LVL33:
 483              		.loc 1 1370 11 view .LVU133
 484 0094 4E4D     		ldr	r5, .L18+48
 485 0096 04EB000C 		add	ip, r4, r0
 486 009a 05F1200E 		add	lr, r5, #32
 487              	.L14:
 488 009e 2C46     		mov	r4, r5
 489 00a0 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 490 00a2 CCF80000 		str	r0, [ip]	@ unaligned
 491 00a6 CCF80410 		str	r1, [ip, #4]	@ unaligned
 492 00aa CCF80820 		str	r2, [ip, #8]	@ unaligned
 493 00ae CCF80C30 		str	r3, [ip, #12]	@ unaligned
 494 00b2 2546     		mov	r5, r4
 495 00b4 0CF1100C 		add	ip, ip, #16
 496 00b8 7445     		cmp	r4, lr
 497 00ba F0D1     		bne	.L14
 498 00bc 2068     		ldr	r0, [r4]
 499 00be CCF80000 		str	r0, [ip]	@ unaligned
 500 00c2 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 501 00c4 8CF80430 		strb	r3, [ip, #4]
 502              		.loc 1 1370 9 view .LVU134
 503 00c8 2422     		movs	r2, #36
 504 00ca 424B     		ldr	r3, .L18+52
 505 00cc 1A60     		str	r2, [r3]
 506              	.L13:
1369:Core/Src/main.c **** 	  size = sprintf(transmit_data + strlen(transmit_data),"Temperature/pressure reading failed\n");
 507              		.loc 1 1369 9 is_stmt 1 view .LVU135
1369:Core/Src/main.c **** 	  size = sprintf(transmit_data + strlen(transmit_data),"Temperature/pressure reading failed\n");
 508              		.loc 1 1369 10 is_stmt 0 view .LVU136
 509 00ce 424B     		ldr	r3, .L18+56
 510 00d0 424A     		ldr	r2, .L18+60
 511 00d2 4349     		ldr	r1, .L18+64
 512 00d4 4348     		ldr	r0, .L18+68
 513 00d6 FFF7FEFF 		bl	bmp280_read_float
 514              	.LVL34:
1369:Core/Src/main.c **** 	  size = sprintf(transmit_data + strlen(transmit_data),"Temperature/pressure reading failed\n");
 515              		.loc 1 1369 9 view .LVU137
 516 00da 0028     		cmp	r0, #0
 517 00dc D6D0     		beq	.L15
1371:Core/Src/main.c **** 	  //HAL_UART_Transmit(&huart2, Data, size, 1000);
1372:Core/Src/main.c **** 	}
1373:Core/Src/main.c **** 
1374:Core/Src/main.c **** 
1375:Core/Src/main.c **** 
1376:Core/Src/main.c **** 
1377:Core/Src/main.c ****   //altitude = H_b + (T_b/L_b)*(pow((pressure/P_b),(-1*R*L_b)/(G_0*M))-1);
1378:Core/Src/main.c **** 
1379:Core/Src/main.c ****   altitude = 44330*(1-pow((pressure/P_b),(1/5.255)));
 518              		.loc 1 1379 3 is_stmt 1 view .LVU138
 519              		.loc 1 1379 36 is_stmt 0 view .LVU139
 520 00de 3F4C     		ldr	r4, .L18+60
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 39


 521 00e0 94ED007A 		vldr.32	s14, [r4]
 522 00e4 404B     		ldr	r3, .L18+72
 523 00e6 D3ED007A 		vldr.32	s15, [r3]
 524              		.loc 1 1379 23 view .LVU140
 525 00ea C7EE277A 		vdiv.f32	s15, s14, s15
 526 00ee 17EE900A 		vmov	r0, s15
 527 00f2 FFF7FEFF 		bl	__aeabi_f2d
 528              	.LVL35:
 529 00f6 9FED2A1B 		vldr.64	d1, .L18
 530 00fa 41EC100B 		vmov	d0, r0, r1
 531 00fe FFF7FEFF 		bl	pow
 532              	.LVL36:
 533 0102 53EC102B 		vmov	r2, r3, d0
 534              		.loc 1 1379 22 view .LVU141
 535 0106 0020     		movs	r0, #0
 536 0108 3849     		ldr	r1, .L18+76
 537 010a FFF7FEFF 		bl	__aeabi_dsub
 538              	.LVL37:
 539              		.loc 1 1379 19 view .LVU142
 540 010e 26A3     		adr	r3, .L18+8
 541 0110 D3E90023 		ldrd	r2, [r3]
 542 0114 FFF7FEFF 		bl	__aeabi_dmul
 543              	.LVL38:
 544 0118 FFF7FEFF 		bl	__aeabi_d2f
 545              	.LVL39:
 546              		.loc 1 1379 12 view .LVU143
 547 011c 344B     		ldr	r3, .L18+80
 548 011e 1860     		str	r0, [r3]	@ float
1380:Core/Src/main.c **** 
1381:Core/Src/main.c ****   gcvt(altitude, 6, sAltitude);
 549              		.loc 1 1381 3 is_stmt 1 view .LVU144
 550 0120 DFF8E080 		ldr	r8, .L18+100
 551 0124 FFF7FEFF 		bl	__aeabi_f2d
 552              	.LVL40:
 553 0128 41EC100B 		vmov	d0, r0, r1
 554 012c 4146     		mov	r1, r8
 555 012e 0620     		movs	r0, #6
 556 0130 FFF7FEFF 		bl	gcvt
 557              	.LVL41:
1382:Core/Src/main.c ****   gcvt(pressure, 8, sPressure);
 558              		.loc 1 1382 3 view .LVU145
 559 0134 2F4D     		ldr	r5, .L18+84
 560 0136 2068     		ldr	r0, [r4]	@ float
 561 0138 FFF7FEFF 		bl	__aeabi_f2d
 562              	.LVL42:
 563 013c 41EC100B 		vmov	d0, r0, r1
 564 0140 2946     		mov	r1, r5
 565 0142 0820     		movs	r0, #8
 566 0144 FFF7FEFF 		bl	gcvt
 567              	.LVL43:
1383:Core/Src/main.c ****   gcvt(temperature, 4, sTemperature);
 568              		.loc 1 1383 3 view .LVU146
 569 0148 2B4E     		ldr	r6, .L18+88
 570 014a 254B     		ldr	r3, .L18+64
 571 014c 1868     		ldr	r0, [r3]	@ float
 572 014e FFF7FEFF 		bl	__aeabi_f2d
 573              	.LVL44:
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 40


 574 0152 41EC100B 		vmov	d0, r0, r1
 575 0156 3146     		mov	r1, r6
 576 0158 0420     		movs	r0, #4
 577 015a FFF7FEFF 		bl	gcvt
 578              	.LVL45:
1384:Core/Src/main.c ****   gcvt(humidity, 4, sHumidity);
 579              		.loc 1 1384 3 view .LVU147
 580 015e 274F     		ldr	r7, .L18+92
 581 0160 1D4B     		ldr	r3, .L18+56
 582 0162 1868     		ldr	r0, [r3]	@ float
 583 0164 FFF7FEFF 		bl	__aeabi_f2d
 584              	.LVL46:
 585 0168 41EC100B 		vmov	d0, r0, r1
 586 016c 3946     		mov	r1, r7
 587 016e 0420     		movs	r0, #4
 588 0170 FFF7FEFF 		bl	gcvt
 589              	.LVL47:
1385:Core/Src/main.c **** 
1386:Core/Src/main.c **** 	sprintf(transmit_data + strlen(transmit_data),"%s,%s,%s,%s",sPressure, sTemperature, sHumidity, sA
 590              		.loc 1 1386 2 view .LVU148
 591              		.loc 1 1386 26 is_stmt 0 view .LVU149
 592 0174 104C     		ldr	r4, .L18+24
 593 0176 2046     		mov	r0, r4
 594 0178 FFF7FEFF 		bl	strlen
 595              	.LVL48:
 596              		.loc 1 1386 2 view .LVU150
 597 017c CDF80480 		str	r8, [sp, #4]
 598 0180 0097     		str	r7, [sp]
 599 0182 3346     		mov	r3, r6
 600 0184 2A46     		mov	r2, r5
 601 0186 1E49     		ldr	r1, .L18+96
 602 0188 2044     		add	r0, r0, r4
 603 018a FFF7FEFF 		bl	sprintf
 604              	.LVL49:
1387:Core/Src/main.c **** 
1388:Core/Src/main.c **** 
1389:Core/Src/main.c **** 
1390:Core/Src/main.c ****   isLoraReady = true;
 605              		.loc 1 1390 3 is_stmt 1 view .LVU151
 606              		.loc 1 1390 15 is_stmt 0 view .LVU152
 607 018e 094B     		ldr	r3, .L18+20
 608 0190 0122     		movs	r2, #1
 609 0192 1A70     		strb	r2, [r3]
1391:Core/Src/main.c ****   //Set flag low to indicate that data transfer is done
1392:Core/Src/main.c ****   
1393:Core/Src/main.c ****   //Send interrupt when data from GPS is sent again
1394:Core/Src/main.c ****   //HAL_UARTEx_ReceiveToIdle_IT(&huart1,(uint8_t*)gps_raw, 512);
1395:Core/Src/main.c **** 
1396:Core/Src/main.c **** }
 610              		.loc 1 1396 1 view .LVU153
 611 0194 14B0     		add	sp, sp, #80
 612              		.cfi_def_cfa_offset 24
 613              		@ sp needed
 614 0196 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 615              	.L19:
 616 019a 00BFAFF3 		.align	3
 616      0080
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 41


 617              	.L18:
 618 01a0 6C45D9CC 		.word	-858176148
 619 01a4 955BC83F 		.word	1070095253
 620 01a8 00000000 		.word	0
 621 01ac 40A5E540 		.word	1088791872
 622 01b0 00000000 		.word	flag
 623 01b4 00000000 		.word	isLoraReady
 624 01b8 00000000 		.word	transmit_data
 625 01bc 00000000 		.word	.LC0
 626 01c0 00000000 		.word	gps_raw
 627 01c4 00000000 		.word	line
 628 01c8 04000000 		.word	.LC1
 629 01cc 10000000 		.word	.LC2
 630 01d0 1C000000 		.word	.LC3
 631 01d4 00000000 		.word	size
 632 01d8 00000000 		.word	humidity
 633 01dc 00000000 		.word	pressure
 634 01e0 00000000 		.word	temperature
 635 01e4 00000000 		.word	bmp280
 636 01e8 00000000 		.word	P_b
 637 01ec 0000F03F 		.word	1072693248
 638 01f0 00000000 		.word	altitude
 639 01f4 00000000 		.word	sPressure
 640 01f8 00000000 		.word	sTemperature
 641 01fc 00000000 		.word	sHumidity
 642 0200 44000000 		.word	.LC4
 643 0204 00000000 		.word	sAltitude
 644              		.cfi_endproc
 645              	.LFE147:
 647              		.section	.rodata.HAL_GPIO_EXTI_Callback.str1.4,"aMS",%progbits,1
 648              		.align	2
 649              	.LC5:
 650 0000 0A4C6566 		.ascii	"\012Left Button Pushed\000"
 650      74204275 
 650      74746F6E 
 650      20507573 
 650      68656400 
 651              		.align	2
 652              	.LC6:
 653 0014 4D6F6465 		.ascii	"Mode:\000"
 653      3A00
 654 001a 0000     		.align	2
 655              	.LC7:
 656 001c 25642020 		.ascii	"%d        \000"
 656      20202020 
 656      202000
 657 0027 00       		.align	2
 658              	.LC8:
 659 0028 0A526967 		.ascii	"\012Right Button Pushed\000"
 659      68742042 
 659      7574746F 
 659      6E205075 
 659      73686564 
 660              		.section	.text.HAL_GPIO_EXTI_Callback,"ax",%progbits
 661              		.align	1
 662              		.global	HAL_GPIO_EXTI_Callback
 663              		.syntax unified
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 42


 664              		.thumb
 665              		.thumb_func
 667              	HAL_GPIO_EXTI_Callback:
 668              	.LVL50:
 669              	.LFB148:
1397:Core/Src/main.c **** 
1398:Core/Src/main.c **** 
1399:Core/Src/main.c **** void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
1400:Core/Src/main.c **** {
 670              		.loc 1 1400 1 is_stmt 1 view -0
 671              		.cfi_startproc
 672              		@ args = 0, pretend = 0, frame = 0
 673              		@ frame_needed = 0, uses_anonymous_args = 0
 674              		.loc 1 1400 1 is_stmt 0 view .LVU155
 675 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 676              		.cfi_def_cfa_offset 24
 677              		.cfi_offset 4, -24
 678              		.cfi_offset 5, -20
 679              		.cfi_offset 6, -16
 680              		.cfi_offset 7, -12
 681              		.cfi_offset 8, -8
 682              		.cfi_offset 14, -4
 683 0004 0446     		mov	r4, r0
1401:Core/Src/main.c ****   if(GPIO_Pin == GPIO_PIN_13) // Left button pushed
 684              		.loc 1 1401 3 is_stmt 1 view .LVU156
 685              		.loc 1 1401 5 is_stmt 0 view .LVU157
 686 0006 B0F5005F 		cmp	r0, #8192
 687 000a 07D0     		beq	.L26
 688              	.LVL51:
 689              	.L21:
1402:Core/Src/main.c ****     {
1403:Core/Src/main.c ****       //get the current time
1404:Core/Src/main.c ****       currentTicks = HAL_GetTick();
1405:Core/Src/main.c ****       if ((currentTicks-preTicks)>200) {
1406:Core/Src/main.c ****         memset(transmit_data, '\0', sizeof(transmit_data));
1407:Core/Src/main.c ****         sprintf(transmit_data,"%s","\nLeft Button Pushed");
1408:Core/Src/main.c **** 	      HAL_UART_Transmit(&huart2, transmit_data, sizeof(transmit_data)/sizeof(transmit_data[0]),100
1409:Core/Src/main.c ****         memset(transmit_data, '\0', sizeof(transmit_data));
1410:Core/Src/main.c ****         bModeChanged = true;
1411:Core/Src/main.c **** 
1412:Core/Src/main.c ****         if (iMode == 1) {
1413:Core/Src/main.c ****           iMode = 60;
1414:Core/Src/main.c ****           // Set cursors and write the word "mode"
1415:Core/Src/main.c ****           ssd1306_SetCursor(0, 0);
1416:Core/Src/main.c ****           ssd1306_WriteString("Mode:", Font_16x26, White);
1417:Core/Src/main.c **** 
1418:Core/Src/main.c ****           ssd1306_SetCursor(0, 35);
1419:Core/Src/main.c ****           sprintf(sMode, "%d        ", iMode);
1420:Core/Src/main.c ****           ssd1306_WriteString(sMode, Font_16x26, White);
1421:Core/Src/main.c **** 
1422:Core/Src/main.c ****           // Copy all data from local screenbuffer to the screen
1423:Core/Src/main.c ****           ssd1306_UpdateScreen(&hi2c2);
1424:Core/Src/main.c ****         } else {
1425:Core/Src/main.c ****           iMode = iMode - 1;
1426:Core/Src/main.c ****           // Set cursors and write the word "mode"
1427:Core/Src/main.c ****           ssd1306_SetCursor(0, 0);
1428:Core/Src/main.c ****           ssd1306_WriteString("Mode:", Font_16x26, White);
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 43


1429:Core/Src/main.c **** 
1430:Core/Src/main.c ****           ssd1306_SetCursor(0, 35);
1431:Core/Src/main.c ****           sprintf(sMode, "%d        ", iMode);
1432:Core/Src/main.c ****           ssd1306_WriteString(sMode, Font_16x26, White);
1433:Core/Src/main.c **** 
1434:Core/Src/main.c ****           // Copy all data from local screenbuffer to the screen
1435:Core/Src/main.c ****           ssd1306_UpdateScreen(&hi2c2);
1436:Core/Src/main.c **** 
1437:Core/Src/main.c ****         }
1438:Core/Src/main.c **** 
1439:Core/Src/main.c **** 
1440:Core/Src/main.c **** 
1441:Core/Src/main.c ****       } else {
1442:Core/Src/main.c ****         //break
1443:Core/Src/main.c ****       }
 690              		.loc 1 1443 7 is_stmt 1 view .LVU158
1444:Core/Src/main.c ****     }
1445:Core/Src/main.c **** 
1446:Core/Src/main.c ****   if(GPIO_Pin == GPIO_PIN_5) // Right button pushed
 691              		.loc 1 1446 3 view .LVU159
 692              		.loc 1 1446 5 is_stmt 0 view .LVU160
 693 000c 202C     		cmp	r4, #32
 694 000e 73D0     		beq	.L27
 695              	.L23:
1447:Core/Src/main.c ****     {
1448:Core/Src/main.c ****       //get the current time
1449:Core/Src/main.c ****       currentTicks = HAL_GetTick();
1450:Core/Src/main.c ****       if ((currentTicks-preTicks)>200) {
1451:Core/Src/main.c ****         memset(transmit_data, '\0', sizeof(transmit_data));
1452:Core/Src/main.c ****         sprintf(transmit_data,"%s","\nRight Button Pushed");
1453:Core/Src/main.c **** 	      HAL_UART_Transmit(&huart2, transmit_data, sizeof(transmit_data)/sizeof(transmit_data[0]),100
1454:Core/Src/main.c ****         memset(transmit_data, '\0', sizeof(transmit_data));
1455:Core/Src/main.c ****         bModeChanged = true;
1456:Core/Src/main.c ****         
1457:Core/Src/main.c ****         if (iMode == 60) {
1458:Core/Src/main.c ****           iMode = 1;
1459:Core/Src/main.c ****           // Set cursors and write the word "mode"
1460:Core/Src/main.c ****           ssd1306_SetCursor(0, 0);
1461:Core/Src/main.c ****           ssd1306_WriteString("Mode:", Font_16x26, White);
1462:Core/Src/main.c **** 
1463:Core/Src/main.c ****           ssd1306_SetCursor(0, 35);
1464:Core/Src/main.c ****           sprintf(sMode, "%d        ", iMode);
1465:Core/Src/main.c ****           ssd1306_WriteString(sMode, Font_16x26, White);
1466:Core/Src/main.c **** 
1467:Core/Src/main.c ****           // Copy all data from local screenbuffer to the screen
1468:Core/Src/main.c ****           ssd1306_UpdateScreen(&hi2c2);
1469:Core/Src/main.c ****         } else {
1470:Core/Src/main.c ****           iMode = iMode + 1;
1471:Core/Src/main.c ****           // Set cursors and write the word "mode"
1472:Core/Src/main.c ****           ssd1306_SetCursor(0, 0);
1473:Core/Src/main.c ****           ssd1306_WriteString("Mode:", Font_16x26, White);
1474:Core/Src/main.c **** 
1475:Core/Src/main.c ****           ssd1306_SetCursor(0, 35);
1476:Core/Src/main.c ****           sprintf(sMode, "%d        ", iMode);
1477:Core/Src/main.c ****           ssd1306_WriteString(sMode, Font_16x26, White);
1478:Core/Src/main.c **** 
1479:Core/Src/main.c ****           // Copy all data from local screenbuffer to the screen
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 44


1480:Core/Src/main.c ****           ssd1306_UpdateScreen(&hi2c2);
1481:Core/Src/main.c **** 
1482:Core/Src/main.c ****         }
1483:Core/Src/main.c **** 
1484:Core/Src/main.c **** 
1485:Core/Src/main.c ****       } else {
1486:Core/Src/main.c ****         //break
1487:Core/Src/main.c ****       }
 696              		.loc 1 1487 7 is_stmt 1 view .LVU161
1488:Core/Src/main.c ****     }  
1489:Core/Src/main.c ****   preTicks = currentTicks;
 697              		.loc 1 1489 3 view .LVU162
 698              		.loc 1 1489 12 is_stmt 0 view .LVU163
 699 0010 724B     		ldr	r3, .L30
 700 0012 1A68     		ldr	r2, [r3]
 701 0014 724B     		ldr	r3, .L30+4
 702 0016 1A60     		str	r2, [r3]
1490:Core/Src/main.c **** }
 703              		.loc 1 1490 1 view .LVU164
 704 0018 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 705              	.LVL52:
 706              	.L26:
1404:Core/Src/main.c ****       if ((currentTicks-preTicks)>200) {
 707              		.loc 1 1404 7 is_stmt 1 view .LVU165
1404:Core/Src/main.c ****       if ((currentTicks-preTicks)>200) {
 708              		.loc 1 1404 22 is_stmt 0 view .LVU166
 709 001c FFF7FEFF 		bl	HAL_GetTick
 710              	.LVL53:
1404:Core/Src/main.c ****       if ((currentTicks-preTicks)>200) {
 711              		.loc 1 1404 20 view .LVU167
 712 0020 6E4B     		ldr	r3, .L30
 713 0022 1860     		str	r0, [r3]
1405:Core/Src/main.c ****         memset(transmit_data, '\0', sizeof(transmit_data));
 714              		.loc 1 1405 7 is_stmt 1 view .LVU168
1405:Core/Src/main.c ****         memset(transmit_data, '\0', sizeof(transmit_data));
 715              		.loc 1 1405 24 is_stmt 0 view .LVU169
 716 0024 6E4B     		ldr	r3, .L30+4
 717 0026 1B68     		ldr	r3, [r3]
 718 0028 C01A     		subs	r0, r0, r3
1405:Core/Src/main.c ****         memset(transmit_data, '\0', sizeof(transmit_data));
 719              		.loc 1 1405 10 view .LVU170
 720 002a C828     		cmp	r0, #200
 721 002c EEDD     		ble	.L21
1406:Core/Src/main.c ****         sprintf(transmit_data,"%s","\nLeft Button Pushed");
 722              		.loc 1 1406 9 is_stmt 1 view .LVU171
 723 002e 6D4F     		ldr	r7, .L30+8
 724 0030 4FF48078 		mov	r8, #256
 725 0034 4246     		mov	r2, r8
 726 0036 0021     		movs	r1, #0
 727 0038 3846     		mov	r0, r7
 728 003a FFF7FEFF 		bl	memset
 729              	.LVL54:
1407:Core/Src/main.c **** 	      HAL_UART_Transmit(&huart2, transmit_data, sizeof(transmit_data)/sizeof(transmit_data[0]),100
 730              		.loc 1 1407 9 view .LVU172
 731 003e 3D46     		mov	r5, r7
 732 0040 694E     		ldr	r6, .L30+12
 733 0042 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 45


 734 0044 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 735 0046 3368     		ldr	r3, [r6]
 736 0048 2B60     		str	r3, [r5]
1408:Core/Src/main.c ****         memset(transmit_data, '\0', sizeof(transmit_data));
 737              		.loc 1 1408 8 view .LVU173
 738 004a 4FF47A73 		mov	r3, #1000
 739 004e 4246     		mov	r2, r8
 740 0050 3946     		mov	r1, r7
 741 0052 6648     		ldr	r0, .L30+16
 742 0054 FFF7FEFF 		bl	HAL_UART_Transmit
 743              	.LVL55:
1409:Core/Src/main.c ****         bModeChanged = true;
 744              		.loc 1 1409 9 view .LVU174
 745 0058 4246     		mov	r2, r8
 746 005a 0021     		movs	r1, #0
 747 005c 3846     		mov	r0, r7
 748 005e FFF7FEFF 		bl	memset
 749              	.LVL56:
1410:Core/Src/main.c **** 
 750              		.loc 1 1410 9 view .LVU175
1410:Core/Src/main.c **** 
 751              		.loc 1 1410 22 is_stmt 0 view .LVU176
 752 0062 634B     		ldr	r3, .L30+20
 753 0064 0122     		movs	r2, #1
 754 0066 1A70     		strb	r2, [r3]
1412:Core/Src/main.c ****           iMode = 60;
 755              		.loc 1 1412 9 is_stmt 1 view .LVU177
1412:Core/Src/main.c ****           iMode = 60;
 756              		.loc 1 1412 19 is_stmt 0 view .LVU178
 757 0068 624B     		ldr	r3, .L30+24
 758 006a 1B68     		ldr	r3, [r3]
1412:Core/Src/main.c ****           iMode = 60;
 759              		.loc 1 1412 12 view .LVU179
 760 006c 9342     		cmp	r3, r2
 761 006e 21D0     		beq	.L28
1425:Core/Src/main.c ****           // Set cursors and write the word "mode"
 762              		.loc 1 1425 11 is_stmt 1 view .LVU180
1425:Core/Src/main.c ****           // Set cursors and write the word "mode"
 763              		.loc 1 1425 25 is_stmt 0 view .LVU181
 764 0070 013B     		subs	r3, r3, #1
1425:Core/Src/main.c ****           // Set cursors and write the word "mode"
 765              		.loc 1 1425 17 view .LVU182
 766 0072 604F     		ldr	r7, .L30+24
 767 0074 3B60     		str	r3, [r7]
1427:Core/Src/main.c ****           ssd1306_WriteString("Mode:", Font_16x26, White);
 768              		.loc 1 1427 11 is_stmt 1 view .LVU183
 769 0076 0021     		movs	r1, #0
 770 0078 0846     		mov	r0, r1
 771 007a FFF7FEFF 		bl	ssd1306_SetCursor
 772              	.LVL57:
1428:Core/Src/main.c **** 
 773              		.loc 1 1428 11 view .LVU184
 774 007e 5E4D     		ldr	r5, .L30+28
 775 0080 0123     		movs	r3, #1
 776 0082 95E80600 		ldm	r5, {r1, r2}
 777 0086 5D48     		ldr	r0, .L30+32
 778 0088 FFF7FEFF 		bl	ssd1306_WriteString
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 46


 779              	.LVL58:
1430:Core/Src/main.c ****           sprintf(sMode, "%d        ", iMode);
 780              		.loc 1 1430 11 view .LVU185
 781 008c 2321     		movs	r1, #35
 782 008e 0020     		movs	r0, #0
 783 0090 FFF7FEFF 		bl	ssd1306_SetCursor
 784              	.LVL59:
1431:Core/Src/main.c ****           ssd1306_WriteString(sMode, Font_16x26, White);
 785              		.loc 1 1431 11 view .LVU186
 786 0094 5A4E     		ldr	r6, .L30+36
 787 0096 3A68     		ldr	r2, [r7]
 788 0098 5A49     		ldr	r1, .L30+40
 789 009a 3046     		mov	r0, r6
 790 009c FFF7FEFF 		bl	sprintf
 791              	.LVL60:
1432:Core/Src/main.c **** 
 792              		.loc 1 1432 11 view .LVU187
 793 00a0 0123     		movs	r3, #1
 794 00a2 95E80600 		ldm	r5, {r1, r2}
 795 00a6 3046     		mov	r0, r6
 796 00a8 FFF7FEFF 		bl	ssd1306_WriteString
 797              	.LVL61:
1435:Core/Src/main.c **** 
 798              		.loc 1 1435 11 view .LVU188
 799 00ac 5648     		ldr	r0, .L30+44
 800 00ae FFF7FEFF 		bl	ssd1306_UpdateScreen
 801              	.LVL62:
 802 00b2 ABE7     		b	.L21
 803              	.L28:
1413:Core/Src/main.c ****           // Set cursors and write the word "mode"
 804              		.loc 1 1413 11 view .LVU189
1413:Core/Src/main.c ****           // Set cursors and write the word "mode"
 805              		.loc 1 1413 17 is_stmt 0 view .LVU190
 806 00b4 4F4F     		ldr	r7, .L30+24
 807 00b6 3C23     		movs	r3, #60
 808 00b8 3B60     		str	r3, [r7]
1415:Core/Src/main.c ****           ssd1306_WriteString("Mode:", Font_16x26, White);
 809              		.loc 1 1415 11 is_stmt 1 view .LVU191
 810 00ba 0021     		movs	r1, #0
 811 00bc 0846     		mov	r0, r1
 812 00be FFF7FEFF 		bl	ssd1306_SetCursor
 813              	.LVL63:
1416:Core/Src/main.c **** 
 814              		.loc 1 1416 11 view .LVU192
 815 00c2 4D4D     		ldr	r5, .L30+28
 816 00c4 0123     		movs	r3, #1
 817 00c6 95E80600 		ldm	r5, {r1, r2}
 818 00ca 4C48     		ldr	r0, .L30+32
 819 00cc FFF7FEFF 		bl	ssd1306_WriteString
 820              	.LVL64:
1418:Core/Src/main.c ****           sprintf(sMode, "%d        ", iMode);
 821              		.loc 1 1418 11 view .LVU193
 822 00d0 2321     		movs	r1, #35
 823 00d2 0020     		movs	r0, #0
 824 00d4 FFF7FEFF 		bl	ssd1306_SetCursor
 825              	.LVL65:
1419:Core/Src/main.c ****           ssd1306_WriteString(sMode, Font_16x26, White);
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 47


 826              		.loc 1 1419 11 view .LVU194
 827 00d8 494E     		ldr	r6, .L30+36
 828 00da 3A68     		ldr	r2, [r7]
 829 00dc 4949     		ldr	r1, .L30+40
 830 00de 3046     		mov	r0, r6
 831 00e0 FFF7FEFF 		bl	sprintf
 832              	.LVL66:
1420:Core/Src/main.c **** 
 833              		.loc 1 1420 11 view .LVU195
 834 00e4 0123     		movs	r3, #1
 835 00e6 95E80600 		ldm	r5, {r1, r2}
 836 00ea 3046     		mov	r0, r6
 837 00ec FFF7FEFF 		bl	ssd1306_WriteString
 838              	.LVL67:
1423:Core/Src/main.c ****         } else {
 839              		.loc 1 1423 11 view .LVU196
 840 00f0 4548     		ldr	r0, .L30+44
 841 00f2 FFF7FEFF 		bl	ssd1306_UpdateScreen
 842              	.LVL68:
 843 00f6 89E7     		b	.L21
 844              	.L27:
1449:Core/Src/main.c ****       if ((currentTicks-preTicks)>200) {
 845              		.loc 1 1449 7 view .LVU197
1449:Core/Src/main.c ****       if ((currentTicks-preTicks)>200) {
 846              		.loc 1 1449 22 is_stmt 0 view .LVU198
 847 00f8 FFF7FEFF 		bl	HAL_GetTick
 848              	.LVL69:
1449:Core/Src/main.c ****       if ((currentTicks-preTicks)>200) {
 849              		.loc 1 1449 20 view .LVU199
 850 00fc 374B     		ldr	r3, .L30
 851 00fe 1860     		str	r0, [r3]
1450:Core/Src/main.c ****         memset(transmit_data, '\0', sizeof(transmit_data));
 852              		.loc 1 1450 7 is_stmt 1 view .LVU200
1450:Core/Src/main.c ****         memset(transmit_data, '\0', sizeof(transmit_data));
 853              		.loc 1 1450 24 is_stmt 0 view .LVU201
 854 0100 374B     		ldr	r3, .L30+4
 855 0102 1B68     		ldr	r3, [r3]
 856 0104 C01A     		subs	r0, r0, r3
1450:Core/Src/main.c ****         memset(transmit_data, '\0', sizeof(transmit_data));
 857              		.loc 1 1450 10 view .LVU202
 858 0106 C828     		cmp	r0, #200
 859 0108 82DD     		ble	.L23
1451:Core/Src/main.c ****         sprintf(transmit_data,"%s","\nRight Button Pushed");
 860              		.loc 1 1451 9 is_stmt 1 view .LVU203
 861 010a 364E     		ldr	r6, .L30+8
 862 010c 4FF48077 		mov	r7, #256
 863 0110 3A46     		mov	r2, r7
 864 0112 0021     		movs	r1, #0
 865 0114 3046     		mov	r0, r6
 866 0116 FFF7FEFF 		bl	memset
 867              	.LVL70:
1452:Core/Src/main.c **** 	      HAL_UART_Transmit(&huart2, transmit_data, sizeof(transmit_data)/sizeof(transmit_data[0]),100
 868              		.loc 1 1452 9 view .LVU204
 869 011a 3446     		mov	r4, r6
 870 011c 3B4D     		ldr	r5, .L30+48
 871 011e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 872 0120 0FC4     		stmia	r4!, {r0, r1, r2, r3}
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 48


 873 0122 95E80300 		ldm	r5, {r0, r1}
 874 0126 44F8040B 		str	r0, [r4], #4
 875 012a 2170     		strb	r1, [r4]
1453:Core/Src/main.c ****         memset(transmit_data, '\0', sizeof(transmit_data));
 876              		.loc 1 1453 8 view .LVU205
 877 012c 4FF47A73 		mov	r3, #1000
 878 0130 3A46     		mov	r2, r7
 879 0132 3146     		mov	r1, r6
 880 0134 2D48     		ldr	r0, .L30+16
 881 0136 FFF7FEFF 		bl	HAL_UART_Transmit
 882              	.LVL71:
1454:Core/Src/main.c ****         bModeChanged = true;
 883              		.loc 1 1454 9 view .LVU206
 884 013a 3A46     		mov	r2, r7
 885 013c 0021     		movs	r1, #0
 886 013e 3046     		mov	r0, r6
 887 0140 FFF7FEFF 		bl	memset
 888              	.LVL72:
1455:Core/Src/main.c ****         
 889              		.loc 1 1455 9 view .LVU207
1455:Core/Src/main.c ****         
 890              		.loc 1 1455 22 is_stmt 0 view .LVU208
 891 0144 2A4B     		ldr	r3, .L30+20
 892 0146 0122     		movs	r2, #1
 893 0148 1A70     		strb	r2, [r3]
1457:Core/Src/main.c ****           iMode = 1;
 894              		.loc 1 1457 9 is_stmt 1 view .LVU209
1457:Core/Src/main.c ****           iMode = 1;
 895              		.loc 1 1457 19 is_stmt 0 view .LVU210
 896 014a 2A4B     		ldr	r3, .L30+24
 897 014c 1B68     		ldr	r3, [r3]
1457:Core/Src/main.c ****           iMode = 1;
 898              		.loc 1 1457 12 view .LVU211
 899 014e 3C2B     		cmp	r3, #60
 900 0150 21D0     		beq	.L29
1470:Core/Src/main.c ****           // Set cursors and write the word "mode"
 901              		.loc 1 1470 11 is_stmt 1 view .LVU212
1470:Core/Src/main.c ****           // Set cursors and write the word "mode"
 902              		.loc 1 1470 25 is_stmt 0 view .LVU213
 903 0152 0133     		adds	r3, r3, #1
1470:Core/Src/main.c ****           // Set cursors and write the word "mode"
 904              		.loc 1 1470 17 view .LVU214
 905 0154 274E     		ldr	r6, .L30+24
 906 0156 3360     		str	r3, [r6]
1472:Core/Src/main.c ****           ssd1306_WriteString("Mode:", Font_16x26, White);
 907              		.loc 1 1472 11 is_stmt 1 view .LVU215
 908 0158 0021     		movs	r1, #0
 909 015a 0846     		mov	r0, r1
 910 015c FFF7FEFF 		bl	ssd1306_SetCursor
 911              	.LVL73:
1473:Core/Src/main.c **** 
 912              		.loc 1 1473 11 view .LVU216
 913 0160 254C     		ldr	r4, .L30+28
 914 0162 0123     		movs	r3, #1
 915 0164 94E80600 		ldm	r4, {r1, r2}
 916 0168 2448     		ldr	r0, .L30+32
 917 016a FFF7FEFF 		bl	ssd1306_WriteString
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 49


 918              	.LVL74:
1475:Core/Src/main.c ****           sprintf(sMode, "%d        ", iMode);
 919              		.loc 1 1475 11 view .LVU217
 920 016e 2321     		movs	r1, #35
 921 0170 0020     		movs	r0, #0
 922 0172 FFF7FEFF 		bl	ssd1306_SetCursor
 923              	.LVL75:
1476:Core/Src/main.c ****           ssd1306_WriteString(sMode, Font_16x26, White);
 924              		.loc 1 1476 11 view .LVU218
 925 0176 224D     		ldr	r5, .L30+36
 926 0178 3268     		ldr	r2, [r6]
 927 017a 2249     		ldr	r1, .L30+40
 928 017c 2846     		mov	r0, r5
 929 017e FFF7FEFF 		bl	sprintf
 930              	.LVL76:
1477:Core/Src/main.c **** 
 931              		.loc 1 1477 11 view .LVU219
 932 0182 0123     		movs	r3, #1
 933 0184 94E80600 		ldm	r4, {r1, r2}
 934 0188 2846     		mov	r0, r5
 935 018a FFF7FEFF 		bl	ssd1306_WriteString
 936              	.LVL77:
1480:Core/Src/main.c **** 
 937              		.loc 1 1480 11 view .LVU220
 938 018e 1E48     		ldr	r0, .L30+44
 939 0190 FFF7FEFF 		bl	ssd1306_UpdateScreen
 940              	.LVL78:
 941 0194 3CE7     		b	.L23
 942              	.L29:
1458:Core/Src/main.c ****           // Set cursors and write the word "mode"
 943              		.loc 1 1458 11 view .LVU221
1458:Core/Src/main.c ****           // Set cursors and write the word "mode"
 944              		.loc 1 1458 17 is_stmt 0 view .LVU222
 945 0196 174F     		ldr	r7, .L30+24
 946 0198 1546     		mov	r5, r2
 947 019a 3A60     		str	r2, [r7]
1460:Core/Src/main.c ****           ssd1306_WriteString("Mode:", Font_16x26, White);
 948              		.loc 1 1460 11 is_stmt 1 view .LVU223
 949 019c 0021     		movs	r1, #0
 950 019e 0846     		mov	r0, r1
 951 01a0 FFF7FEFF 		bl	ssd1306_SetCursor
 952              	.LVL79:
1461:Core/Src/main.c **** 
 953              		.loc 1 1461 11 view .LVU224
 954 01a4 144C     		ldr	r4, .L30+28
 955 01a6 2B46     		mov	r3, r5
 956 01a8 94E80600 		ldm	r4, {r1, r2}
 957 01ac 1348     		ldr	r0, .L30+32
 958 01ae FFF7FEFF 		bl	ssd1306_WriteString
 959              	.LVL80:
1463:Core/Src/main.c ****           sprintf(sMode, "%d        ", iMode);
 960              		.loc 1 1463 11 view .LVU225
 961 01b2 2321     		movs	r1, #35
 962 01b4 0020     		movs	r0, #0
 963 01b6 FFF7FEFF 		bl	ssd1306_SetCursor
 964              	.LVL81:
1464:Core/Src/main.c ****           ssd1306_WriteString(sMode, Font_16x26, White);
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 50


 965              		.loc 1 1464 11 view .LVU226
 966 01ba 114E     		ldr	r6, .L30+36
 967 01bc 3A68     		ldr	r2, [r7]
 968 01be 1149     		ldr	r1, .L30+40
 969 01c0 3046     		mov	r0, r6
 970 01c2 FFF7FEFF 		bl	sprintf
 971              	.LVL82:
1465:Core/Src/main.c **** 
 972              		.loc 1 1465 11 view .LVU227
 973 01c6 2B46     		mov	r3, r5
 974 01c8 94E80600 		ldm	r4, {r1, r2}
 975 01cc 3046     		mov	r0, r6
 976 01ce FFF7FEFF 		bl	ssd1306_WriteString
 977              	.LVL83:
1468:Core/Src/main.c ****         } else {
 978              		.loc 1 1468 11 view .LVU228
 979 01d2 0D48     		ldr	r0, .L30+44
 980 01d4 FFF7FEFF 		bl	ssd1306_UpdateScreen
 981              	.LVL84:
 982 01d8 1AE7     		b	.L23
 983              	.L31:
 984 01da 00BF     		.align	2
 985              	.L30:
 986 01dc 00000000 		.word	currentTicks
 987 01e0 00000000 		.word	preTicks
 988 01e4 00000000 		.word	transmit_data
 989 01e8 00000000 		.word	.LC5
 990 01ec 00000000 		.word	huart2
 991 01f0 00000000 		.word	bModeChanged
 992 01f4 00000000 		.word	iMode
 993 01f8 00000000 		.word	Font_16x26
 994 01fc 14000000 		.word	.LC6
 995 0200 00000000 		.word	sMode
 996 0204 1C000000 		.word	.LC7
 997 0208 00000000 		.word	hi2c2
 998 020c 28000000 		.word	.LC8
 999              		.cfi_endproc
 1000              	.LFE148:
 1002              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 1003              		.align	1
 1004              		.global	HAL_TIM_PeriodElapsedCallback
 1005              		.syntax unified
 1006              		.thumb
 1007              		.thumb_func
 1009              	HAL_TIM_PeriodElapsedCallback:
 1010              	.LVL85:
 1011              	.LFB149:
1491:Core/Src/main.c **** 
1492:Core/Src/main.c **** 
1493:Core/Src/main.c **** // Callback: timer has rolled over
1494:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
1495:Core/Src/main.c **** {
 1012              		.loc 1 1495 1 view -0
 1013              		.cfi_startproc
 1014              		@ args = 0, pretend = 0, frame = 0
 1015              		@ frame_needed = 0, uses_anonymous_args = 0
 1016              		@ link register save eliminated.
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 51


1496:Core/Src/main.c ****   // Check which version of the timer triggered this callback and toggle LED
1497:Core/Src/main.c ****   if (htim == &htim3)
 1017              		.loc 1 1497 3 view .LVU230
 1018              		.loc 1 1497 6 is_stmt 0 view .LVU231
 1019 0000 034B     		ldr	r3, .L35
 1020 0002 8342     		cmp	r3, r0
 1021 0004 00D0     		beq	.L34
 1022              	.L32:
1498:Core/Src/main.c ****   {
1499:Core/Src/main.c ****     sendData = true;
1500:Core/Src/main.c ****   }
1501:Core/Src/main.c **** }
 1023              		.loc 1 1501 1 view .LVU232
 1024 0006 7047     		bx	lr
 1025              	.L34:
1499:Core/Src/main.c ****   }
 1026              		.loc 1 1499 5 is_stmt 1 view .LVU233
1499:Core/Src/main.c ****   }
 1027              		.loc 1 1499 14 is_stmt 0 view .LVU234
 1028 0008 024B     		ldr	r3, .L35+4
 1029 000a 0122     		movs	r2, #1
 1030 000c 1A70     		strb	r2, [r3]
 1031              		.loc 1 1501 1 view .LVU235
 1032 000e FAE7     		b	.L32
 1033              	.L36:
 1034              		.align	2
 1035              	.L35:
 1036 0010 00000000 		.word	htim3
 1037 0014 00000000 		.word	sendData
 1038              		.cfi_endproc
 1039              	.LFE149:
 1041              		.section	.text.Error_Handler,"ax",%progbits
 1042              		.align	1
 1043              		.global	Error_Handler
 1044              		.syntax unified
 1045              		.thumb
 1046              		.thumb_func
 1048              	Error_Handler:
 1049              	.LFB150:
1502:Core/Src/main.c **** 
1503:Core/Src/main.c **** /* USER CODE END 4 */
1504:Core/Src/main.c **** 
1505:Core/Src/main.c **** /**
1506:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
1507:Core/Src/main.c ****   * @retval None
1508:Core/Src/main.c ****   */
1509:Core/Src/main.c **** void Error_Handler(void)
1510:Core/Src/main.c **** {
 1050              		.loc 1 1510 1 is_stmt 1 view -0
 1051              		.cfi_startproc
 1052              		@ Volatile: function does not return.
 1053              		@ args = 0, pretend = 0, frame = 0
 1054              		@ frame_needed = 0, uses_anonymous_args = 0
 1055              		@ link register save eliminated.
1511:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
1512:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
1513:Core/Src/main.c ****   __disable_irq();
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 52


 1056              		.loc 1 1513 3 view .LVU237
 1057              	.LBB9:
 1058              	.LBI9:
 1059              		.file 3 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 53


  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 54


 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 1060              		.loc 3 140 27 view .LVU238
 1061              	.LBB10:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 1062              		.loc 3 142 3 view .LVU239
 1063              		.syntax unified
 1064              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1065 0000 72B6     		cpsid i
 1066              	@ 0 "" 2
 1067              		.thumb
 1068              		.syntax unified
 1069              	.L38:
 1070              	.LBE10:
 1071              	.LBE9:
1514:Core/Src/main.c ****   while (1)
 1072              		.loc 1 1514 3 discriminator 1 view .LVU240
1515:Core/Src/main.c ****   {
1516:Core/Src/main.c ****   }
 1073              		.loc 1 1516 3 discriminator 1 view .LVU241
1514:Core/Src/main.c ****   while (1)
 1074              		.loc 1 1514 9 discriminator 1 view .LVU242
 1075 0002 FEE7     		b	.L38
 1076              		.cfi_endproc
 1077              	.LFE150:
 1079              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 1080              		.align	1
 1081              		.syntax unified
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 55


 1082              		.thumb
 1083              		.thumb_func
 1085              	MX_USART1_UART_Init:
 1086              	.LFB144:
1188:Core/Src/main.c **** 
 1087              		.loc 1 1188 1 view -0
 1088              		.cfi_startproc
 1089              		@ args = 0, pretend = 0, frame = 0
 1090              		@ frame_needed = 0, uses_anonymous_args = 0
 1091 0000 08B5     		push	{r3, lr}
 1092              		.cfi_def_cfa_offset 8
 1093              		.cfi_offset 3, -8
 1094              		.cfi_offset 14, -4
1197:Core/Src/main.c ****   huart1.Init.BaudRate = 9600;
 1095              		.loc 1 1197 3 view .LVU244
1197:Core/Src/main.c ****   huart1.Init.BaudRate = 9600;
 1096              		.loc 1 1197 19 is_stmt 0 view .LVU245
 1097 0002 0A48     		ldr	r0, .L43
 1098 0004 0A4B     		ldr	r3, .L43+4
 1099 0006 0360     		str	r3, [r0]
1198:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 1100              		.loc 1 1198 3 is_stmt 1 view .LVU246
1198:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 1101              		.loc 1 1198 24 is_stmt 0 view .LVU247
 1102 0008 4FF41653 		mov	r3, #9600
 1103 000c 4360     		str	r3, [r0, #4]
1199:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 1104              		.loc 1 1199 3 is_stmt 1 view .LVU248
1199:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 1105              		.loc 1 1199 26 is_stmt 0 view .LVU249
 1106 000e 0023     		movs	r3, #0
 1107 0010 8360     		str	r3, [r0, #8]
1200:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 1108              		.loc 1 1200 3 is_stmt 1 view .LVU250
1200:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 1109              		.loc 1 1200 24 is_stmt 0 view .LVU251
 1110 0012 C360     		str	r3, [r0, #12]
1201:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 1111              		.loc 1 1201 3 is_stmt 1 view .LVU252
1201:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 1112              		.loc 1 1201 22 is_stmt 0 view .LVU253
 1113 0014 0361     		str	r3, [r0, #16]
1202:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1114              		.loc 1 1202 3 is_stmt 1 view .LVU254
1202:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1115              		.loc 1 1202 20 is_stmt 0 view .LVU255
 1116 0016 0C22     		movs	r2, #12
 1117 0018 4261     		str	r2, [r0, #20]
1203:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 1118              		.loc 1 1203 3 is_stmt 1 view .LVU256
1203:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 1119              		.loc 1 1203 25 is_stmt 0 view .LVU257
 1120 001a 8361     		str	r3, [r0, #24]
1204:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 1121              		.loc 1 1204 3 is_stmt 1 view .LVU258
1204:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 1122              		.loc 1 1204 28 is_stmt 0 view .LVU259
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 56


 1123 001c C361     		str	r3, [r0, #28]
1205:Core/Src/main.c ****   {
 1124              		.loc 1 1205 3 is_stmt 1 view .LVU260
1205:Core/Src/main.c ****   {
 1125              		.loc 1 1205 7 is_stmt 0 view .LVU261
 1126 001e FFF7FEFF 		bl	HAL_UART_Init
 1127              	.LVL86:
1205:Core/Src/main.c ****   {
 1128              		.loc 1 1205 6 view .LVU262
 1129 0022 00B9     		cbnz	r0, .L42
1213:Core/Src/main.c **** 
 1130              		.loc 1 1213 1 view .LVU263
 1131 0024 08BD     		pop	{r3, pc}
 1132              	.L42:
1207:Core/Src/main.c ****   }
 1133              		.loc 1 1207 5 is_stmt 1 view .LVU264
 1134 0026 FFF7FEFF 		bl	Error_Handler
 1135              	.LVL87:
 1136              	.L44:
 1137 002a 00BF     		.align	2
 1138              	.L43:
 1139 002c 00000000 		.word	huart1
 1140 0030 00100140 		.word	1073811456
 1141              		.cfi_endproc
 1142              	.LFE144:
 1144              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 1145              		.align	1
 1146              		.syntax unified
 1147              		.thumb
 1148              		.thumb_func
 1150              	MX_USART2_UART_Init:
 1151              	.LFB145:
1221:Core/Src/main.c **** 
 1152              		.loc 1 1221 1 view -0
 1153              		.cfi_startproc
 1154              		@ args = 0, pretend = 0, frame = 0
 1155              		@ frame_needed = 0, uses_anonymous_args = 0
 1156 0000 08B5     		push	{r3, lr}
 1157              		.cfi_def_cfa_offset 8
 1158              		.cfi_offset 3, -8
 1159              		.cfi_offset 14, -4
1230:Core/Src/main.c ****   huart2.Init.BaudRate = 230400;
 1160              		.loc 1 1230 3 view .LVU266
1230:Core/Src/main.c ****   huart2.Init.BaudRate = 230400;
 1161              		.loc 1 1230 19 is_stmt 0 view .LVU267
 1162 0002 0A48     		ldr	r0, .L49
 1163 0004 0A4B     		ldr	r3, .L49+4
 1164 0006 0360     		str	r3, [r0]
1231:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 1165              		.loc 1 1231 3 is_stmt 1 view .LVU268
1231:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 1166              		.loc 1 1231 24 is_stmt 0 view .LVU269
 1167 0008 4FF46133 		mov	r3, #230400
 1168 000c 4360     		str	r3, [r0, #4]
1232:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 1169              		.loc 1 1232 3 is_stmt 1 view .LVU270
1232:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 57


 1170              		.loc 1 1232 26 is_stmt 0 view .LVU271
 1171 000e 0023     		movs	r3, #0
 1172 0010 8360     		str	r3, [r0, #8]
1233:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 1173              		.loc 1 1233 3 is_stmt 1 view .LVU272
1233:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 1174              		.loc 1 1233 24 is_stmt 0 view .LVU273
 1175 0012 C360     		str	r3, [r0, #12]
1234:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 1176              		.loc 1 1234 3 is_stmt 1 view .LVU274
1234:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 1177              		.loc 1 1234 22 is_stmt 0 view .LVU275
 1178 0014 0361     		str	r3, [r0, #16]
1235:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1179              		.loc 1 1235 3 is_stmt 1 view .LVU276
1235:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1180              		.loc 1 1235 20 is_stmt 0 view .LVU277
 1181 0016 0C22     		movs	r2, #12
 1182 0018 4261     		str	r2, [r0, #20]
1236:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 1183              		.loc 1 1236 3 is_stmt 1 view .LVU278
1236:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 1184              		.loc 1 1236 25 is_stmt 0 view .LVU279
 1185 001a 8361     		str	r3, [r0, #24]
1237:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 1186              		.loc 1 1237 3 is_stmt 1 view .LVU280
1237:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 1187              		.loc 1 1237 28 is_stmt 0 view .LVU281
 1188 001c C361     		str	r3, [r0, #28]
1238:Core/Src/main.c ****   {
 1189              		.loc 1 1238 3 is_stmt 1 view .LVU282
1238:Core/Src/main.c ****   {
 1190              		.loc 1 1238 7 is_stmt 0 view .LVU283
 1191 001e FFF7FEFF 		bl	HAL_UART_Init
 1192              	.LVL88:
1238:Core/Src/main.c ****   {
 1193              		.loc 1 1238 6 view .LVU284
 1194 0022 00B9     		cbnz	r0, .L48
1246:Core/Src/main.c **** 
 1195              		.loc 1 1246 1 view .LVU285
 1196 0024 08BD     		pop	{r3, pc}
 1197              	.L48:
1240:Core/Src/main.c ****   }
 1198              		.loc 1 1240 5 is_stmt 1 view .LVU286
 1199 0026 FFF7FEFF 		bl	Error_Handler
 1200              	.LVL89:
 1201              	.L50:
 1202 002a 00BF     		.align	2
 1203              	.L49:
 1204 002c 00000000 		.word	huart2
 1205 0030 00440040 		.word	1073759232
 1206              		.cfi_endproc
 1207              	.LFE145:
 1209              		.section	.text.MX_I2C1_Init,"ax",%progbits
 1210              		.align	1
 1211              		.syntax unified
 1212              		.thumb
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 58


 1213              		.thumb_func
 1215              	MX_I2C1_Init:
 1216              	.LFB140:
1037:Core/Src/main.c **** 
 1217              		.loc 1 1037 1 view -0
 1218              		.cfi_startproc
 1219              		@ args = 0, pretend = 0, frame = 0
 1220              		@ frame_needed = 0, uses_anonymous_args = 0
 1221 0000 08B5     		push	{r3, lr}
 1222              		.cfi_def_cfa_offset 8
 1223              		.cfi_offset 3, -8
 1224              		.cfi_offset 14, -4
1046:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 1225              		.loc 1 1046 3 view .LVU288
1046:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 1226              		.loc 1 1046 18 is_stmt 0 view .LVU289
 1227 0002 0A48     		ldr	r0, .L55
 1228 0004 0A4B     		ldr	r3, .L55+4
 1229 0006 0360     		str	r3, [r0]
1047:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 1230              		.loc 1 1047 3 is_stmt 1 view .LVU290
1047:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 1231              		.loc 1 1047 25 is_stmt 0 view .LVU291
 1232 0008 0A4B     		ldr	r3, .L55+8
 1233 000a 4360     		str	r3, [r0, #4]
1048:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 1234              		.loc 1 1048 3 is_stmt 1 view .LVU292
1048:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 1235              		.loc 1 1048 24 is_stmt 0 view .LVU293
 1236 000c 0023     		movs	r3, #0
 1237 000e 8360     		str	r3, [r0, #8]
1049:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 1238              		.loc 1 1049 3 is_stmt 1 view .LVU294
1049:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 1239              		.loc 1 1049 26 is_stmt 0 view .LVU295
 1240 0010 C360     		str	r3, [r0, #12]
1050:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 1241              		.loc 1 1050 3 is_stmt 1 view .LVU296
1050:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 1242              		.loc 1 1050 29 is_stmt 0 view .LVU297
 1243 0012 4FF48042 		mov	r2, #16384
 1244 0016 0261     		str	r2, [r0, #16]
1051:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 1245              		.loc 1 1051 3 is_stmt 1 view .LVU298
1051:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 1246              		.loc 1 1051 30 is_stmt 0 view .LVU299
 1247 0018 4361     		str	r3, [r0, #20]
1052:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 1248              		.loc 1 1052 3 is_stmt 1 view .LVU300
1052:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 1249              		.loc 1 1052 26 is_stmt 0 view .LVU301
 1250 001a 8361     		str	r3, [r0, #24]
1053:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 1251              		.loc 1 1053 3 is_stmt 1 view .LVU302
1053:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 1252              		.loc 1 1053 30 is_stmt 0 view .LVU303
 1253 001c C361     		str	r3, [r0, #28]
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 59


1054:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 1254              		.loc 1 1054 3 is_stmt 1 view .LVU304
1054:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 1255              		.loc 1 1054 28 is_stmt 0 view .LVU305
 1256 001e 0362     		str	r3, [r0, #32]
1055:Core/Src/main.c ****   {
 1257              		.loc 1 1055 3 is_stmt 1 view .LVU306
1055:Core/Src/main.c ****   {
 1258              		.loc 1 1055 7 is_stmt 0 view .LVU307
 1259 0020 FFF7FEFF 		bl	HAL_I2C_Init
 1260              	.LVL90:
1055:Core/Src/main.c ****   {
 1261              		.loc 1 1055 6 view .LVU308
 1262 0024 00B9     		cbnz	r0, .L54
1063:Core/Src/main.c **** 
 1263              		.loc 1 1063 1 view .LVU309
 1264 0026 08BD     		pop	{r3, pc}
 1265              	.L54:
1057:Core/Src/main.c ****   }
 1266              		.loc 1 1057 5 is_stmt 1 view .LVU310
 1267 0028 FFF7FEFF 		bl	Error_Handler
 1268              	.LVL91:
 1269              	.L56:
 1270              		.align	2
 1271              	.L55:
 1272 002c 00000000 		.word	hi2c1
 1273 0030 00540040 		.word	1073763328
 1274 0034 A0860100 		.word	100000
 1275              		.cfi_endproc
 1276              	.LFE140:
 1278              		.section	.text.MX_SPI3_Init,"ax",%progbits
 1279              		.align	1
 1280              		.syntax unified
 1281              		.thumb
 1282              		.thumb_func
 1284              	MX_SPI3_Init:
 1285              	.LFB142:
1105:Core/Src/main.c **** 
 1286              		.loc 1 1105 1 view -0
 1287              		.cfi_startproc
 1288              		@ args = 0, pretend = 0, frame = 0
 1289              		@ frame_needed = 0, uses_anonymous_args = 0
 1290 0000 08B5     		push	{r3, lr}
 1291              		.cfi_def_cfa_offset 8
 1292              		.cfi_offset 3, -8
 1293              		.cfi_offset 14, -4
1115:Core/Src/main.c ****   hspi3.Init.Mode = SPI_MODE_MASTER;
 1294              		.loc 1 1115 3 view .LVU312
1115:Core/Src/main.c ****   hspi3.Init.Mode = SPI_MODE_MASTER;
 1295              		.loc 1 1115 18 is_stmt 0 view .LVU313
 1296 0002 0D48     		ldr	r0, .L61
 1297 0004 0D4B     		ldr	r3, .L61+4
 1298 0006 0360     		str	r3, [r0]
1116:Core/Src/main.c ****   hspi3.Init.Direction = SPI_DIRECTION_2LINES;
 1299              		.loc 1 1116 3 is_stmt 1 view .LVU314
1116:Core/Src/main.c ****   hspi3.Init.Direction = SPI_DIRECTION_2LINES;
 1300              		.loc 1 1116 19 is_stmt 0 view .LVU315
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 60


 1301 0008 4FF48273 		mov	r3, #260
 1302 000c 4360     		str	r3, [r0, #4]
1117:Core/Src/main.c ****   hspi3.Init.DataSize = SPI_DATASIZE_8BIT;
 1303              		.loc 1 1117 3 is_stmt 1 view .LVU316
1117:Core/Src/main.c ****   hspi3.Init.DataSize = SPI_DATASIZE_8BIT;
 1304              		.loc 1 1117 24 is_stmt 0 view .LVU317
 1305 000e 0023     		movs	r3, #0
 1306 0010 8360     		str	r3, [r0, #8]
1118:Core/Src/main.c ****   hspi3.Init.CLKPolarity = SPI_POLARITY_LOW;
 1307              		.loc 1 1118 3 is_stmt 1 view .LVU318
1118:Core/Src/main.c ****   hspi3.Init.CLKPolarity = SPI_POLARITY_LOW;
 1308              		.loc 1 1118 23 is_stmt 0 view .LVU319
 1309 0012 C360     		str	r3, [r0, #12]
1119:Core/Src/main.c ****   hspi3.Init.CLKPhase = SPI_PHASE_1EDGE;
 1310              		.loc 1 1119 3 is_stmt 1 view .LVU320
1119:Core/Src/main.c ****   hspi3.Init.CLKPhase = SPI_PHASE_1EDGE;
 1311              		.loc 1 1119 26 is_stmt 0 view .LVU321
 1312 0014 0361     		str	r3, [r0, #16]
1120:Core/Src/main.c ****   hspi3.Init.NSS = SPI_NSS_SOFT;
 1313              		.loc 1 1120 3 is_stmt 1 view .LVU322
1120:Core/Src/main.c ****   hspi3.Init.NSS = SPI_NSS_SOFT;
 1314              		.loc 1 1120 23 is_stmt 0 view .LVU323
 1315 0016 4361     		str	r3, [r0, #20]
1121:Core/Src/main.c ****   hspi3.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 1316              		.loc 1 1121 3 is_stmt 1 view .LVU324
1121:Core/Src/main.c ****   hspi3.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 1317              		.loc 1 1121 18 is_stmt 0 view .LVU325
 1318 0018 4FF40072 		mov	r2, #512
 1319 001c 8261     		str	r2, [r0, #24]
1122:Core/Src/main.c ****   hspi3.Init.FirstBit = SPI_FIRSTBIT_MSB;
 1320              		.loc 1 1122 3 is_stmt 1 view .LVU326
1122:Core/Src/main.c ****   hspi3.Init.FirstBit = SPI_FIRSTBIT_MSB;
 1321              		.loc 1 1122 32 is_stmt 0 view .LVU327
 1322 001e C361     		str	r3, [r0, #28]
1123:Core/Src/main.c ****   hspi3.Init.TIMode = SPI_TIMODE_DISABLE;
 1323              		.loc 1 1123 3 is_stmt 1 view .LVU328
1123:Core/Src/main.c ****   hspi3.Init.TIMode = SPI_TIMODE_DISABLE;
 1324              		.loc 1 1123 23 is_stmt 0 view .LVU329
 1325 0020 0362     		str	r3, [r0, #32]
1124:Core/Src/main.c ****   hspi3.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 1326              		.loc 1 1124 3 is_stmt 1 view .LVU330
1124:Core/Src/main.c ****   hspi3.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 1327              		.loc 1 1124 21 is_stmt 0 view .LVU331
 1328 0022 4362     		str	r3, [r0, #36]
1125:Core/Src/main.c ****   hspi3.Init.CRCPolynomial = 10;
 1329              		.loc 1 1125 3 is_stmt 1 view .LVU332
1125:Core/Src/main.c ****   hspi3.Init.CRCPolynomial = 10;
 1330              		.loc 1 1125 29 is_stmt 0 view .LVU333
 1331 0024 8362     		str	r3, [r0, #40]
1126:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi3) != HAL_OK)
 1332              		.loc 1 1126 3 is_stmt 1 view .LVU334
1126:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi3) != HAL_OK)
 1333              		.loc 1 1126 28 is_stmt 0 view .LVU335
 1334 0026 0A23     		movs	r3, #10
 1335 0028 C362     		str	r3, [r0, #44]
1127:Core/Src/main.c ****   {
 1336              		.loc 1 1127 3 is_stmt 1 view .LVU336
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 61


1127:Core/Src/main.c ****   {
 1337              		.loc 1 1127 7 is_stmt 0 view .LVU337
 1338 002a FFF7FEFF 		bl	HAL_SPI_Init
 1339              	.LVL92:
1127:Core/Src/main.c ****   {
 1340              		.loc 1 1127 6 view .LVU338
 1341 002e 00B9     		cbnz	r0, .L60
1135:Core/Src/main.c **** 
 1342              		.loc 1 1135 1 view .LVU339
 1343 0030 08BD     		pop	{r3, pc}
 1344              	.L60:
1129:Core/Src/main.c ****   }
 1345              		.loc 1 1129 5 is_stmt 1 view .LVU340
 1346 0032 FFF7FEFF 		bl	Error_Handler
 1347              	.LVL93:
 1348              	.L62:
 1349 0036 00BF     		.align	2
 1350              	.L61:
 1351 0038 00000000 		.word	hspi3
 1352 003c 003C0040 		.word	1073757184
 1353              		.cfi_endproc
 1354              	.LFE142:
 1356              		.section	.text.MX_I2C2_Init,"ax",%progbits
 1357              		.align	1
 1358              		.syntax unified
 1359              		.thumb
 1360              		.thumb_func
 1362              	MX_I2C2_Init:
 1363              	.LFB141:
1071:Core/Src/main.c **** 
 1364              		.loc 1 1071 1 view -0
 1365              		.cfi_startproc
 1366              		@ args = 0, pretend = 0, frame = 0
 1367              		@ frame_needed = 0, uses_anonymous_args = 0
 1368 0000 08B5     		push	{r3, lr}
 1369              		.cfi_def_cfa_offset 8
 1370              		.cfi_offset 3, -8
 1371              		.cfi_offset 14, -4
1080:Core/Src/main.c ****   hi2c2.Init.ClockSpeed = 100000;
 1372              		.loc 1 1080 3 view .LVU342
1080:Core/Src/main.c ****   hi2c2.Init.ClockSpeed = 100000;
 1373              		.loc 1 1080 18 is_stmt 0 view .LVU343
 1374 0002 0A48     		ldr	r0, .L67
 1375 0004 0A4B     		ldr	r3, .L67+4
 1376 0006 0360     		str	r3, [r0]
1081:Core/Src/main.c ****   hi2c2.Init.DutyCycle = I2C_DUTYCYCLE_2;
 1377              		.loc 1 1081 3 is_stmt 1 view .LVU344
1081:Core/Src/main.c ****   hi2c2.Init.DutyCycle = I2C_DUTYCYCLE_2;
 1378              		.loc 1 1081 25 is_stmt 0 view .LVU345
 1379 0008 0A4B     		ldr	r3, .L67+8
 1380 000a 4360     		str	r3, [r0, #4]
1082:Core/Src/main.c ****   hi2c2.Init.OwnAddress1 = 0;
 1381              		.loc 1 1082 3 is_stmt 1 view .LVU346
1082:Core/Src/main.c ****   hi2c2.Init.OwnAddress1 = 0;
 1382              		.loc 1 1082 24 is_stmt 0 view .LVU347
 1383 000c 0023     		movs	r3, #0
 1384 000e 8360     		str	r3, [r0, #8]
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 62


1083:Core/Src/main.c ****   hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 1385              		.loc 1 1083 3 is_stmt 1 view .LVU348
1083:Core/Src/main.c ****   hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 1386              		.loc 1 1083 26 is_stmt 0 view .LVU349
 1387 0010 C360     		str	r3, [r0, #12]
1084:Core/Src/main.c ****   hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 1388              		.loc 1 1084 3 is_stmt 1 view .LVU350
1084:Core/Src/main.c ****   hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 1389              		.loc 1 1084 29 is_stmt 0 view .LVU351
 1390 0012 4FF48042 		mov	r2, #16384
 1391 0016 0261     		str	r2, [r0, #16]
1085:Core/Src/main.c ****   hi2c2.Init.OwnAddress2 = 0;
 1392              		.loc 1 1085 3 is_stmt 1 view .LVU352
1085:Core/Src/main.c ****   hi2c2.Init.OwnAddress2 = 0;
 1393              		.loc 1 1085 30 is_stmt 0 view .LVU353
 1394 0018 4361     		str	r3, [r0, #20]
1086:Core/Src/main.c ****   hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 1395              		.loc 1 1086 3 is_stmt 1 view .LVU354
1086:Core/Src/main.c ****   hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 1396              		.loc 1 1086 26 is_stmt 0 view .LVU355
 1397 001a 8361     		str	r3, [r0, #24]
1087:Core/Src/main.c ****   hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 1398              		.loc 1 1087 3 is_stmt 1 view .LVU356
1087:Core/Src/main.c ****   hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 1399              		.loc 1 1087 30 is_stmt 0 view .LVU357
 1400 001c C361     		str	r3, [r0, #28]
1088:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 1401              		.loc 1 1088 3 is_stmt 1 view .LVU358
1088:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 1402              		.loc 1 1088 28 is_stmt 0 view .LVU359
 1403 001e 0362     		str	r3, [r0, #32]
1089:Core/Src/main.c ****   {
 1404              		.loc 1 1089 3 is_stmt 1 view .LVU360
1089:Core/Src/main.c ****   {
 1405              		.loc 1 1089 7 is_stmt 0 view .LVU361
 1406 0020 FFF7FEFF 		bl	HAL_I2C_Init
 1407              	.LVL94:
1089:Core/Src/main.c ****   {
 1408              		.loc 1 1089 6 view .LVU362
 1409 0024 00B9     		cbnz	r0, .L66
1097:Core/Src/main.c **** 
 1410              		.loc 1 1097 1 view .LVU363
 1411 0026 08BD     		pop	{r3, pc}
 1412              	.L66:
1091:Core/Src/main.c ****   }
 1413              		.loc 1 1091 5 is_stmt 1 view .LVU364
 1414 0028 FFF7FEFF 		bl	Error_Handler
 1415              	.LVL95:
 1416              	.L68:
 1417              		.align	2
 1418              	.L67:
 1419 002c 00000000 		.word	hi2c2
 1420 0030 00580040 		.word	1073764352
 1421 0034 A0860100 		.word	100000
 1422              		.cfi_endproc
 1423              	.LFE141:
 1425              		.section	.text.MX_TIM3_Init,"ax",%progbits
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 63


 1426              		.align	1
 1427              		.syntax unified
 1428              		.thumb
 1429              		.thumb_func
 1431              	MX_TIM3_Init:
 1432              	.LFB143:
1143:Core/Src/main.c **** 
 1433              		.loc 1 1143 1 view -0
 1434              		.cfi_startproc
 1435              		@ args = 0, pretend = 0, frame = 24
 1436              		@ frame_needed = 0, uses_anonymous_args = 0
 1437 0000 00B5     		push	{lr}
 1438              		.cfi_def_cfa_offset 4
 1439              		.cfi_offset 14, -4
 1440 0002 87B0     		sub	sp, sp, #28
 1441              		.cfi_def_cfa_offset 32
1149:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1442              		.loc 1 1149 3 view .LVU366
1149:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1443              		.loc 1 1149 26 is_stmt 0 view .LVU367
 1444 0004 0023     		movs	r3, #0
 1445 0006 0293     		str	r3, [sp, #8]
 1446 0008 0393     		str	r3, [sp, #12]
 1447 000a 0493     		str	r3, [sp, #16]
 1448 000c 0593     		str	r3, [sp, #20]
1150:Core/Src/main.c **** 
 1449              		.loc 1 1150 3 is_stmt 1 view .LVU368
1150:Core/Src/main.c **** 
 1450              		.loc 1 1150 27 is_stmt 0 view .LVU369
 1451 000e 0093     		str	r3, [sp]
 1452 0010 0193     		str	r3, [sp, #4]
1155:Core/Src/main.c ****   htim3.Init.Prescaler = 1600-1;
 1453              		.loc 1 1155 3 is_stmt 1 view .LVU370
1155:Core/Src/main.c ****   htim3.Init.Prescaler = 1600-1;
 1454              		.loc 1 1155 18 is_stmt 0 view .LVU371
 1455 0012 1448     		ldr	r0, .L77
 1456 0014 144A     		ldr	r2, .L77+4
 1457 0016 0260     		str	r2, [r0]
1156:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 1458              		.loc 1 1156 3 is_stmt 1 view .LVU372
1156:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 1459              		.loc 1 1156 24 is_stmt 0 view .LVU373
 1460 0018 40F23F62 		movw	r2, #1599
 1461 001c 4260     		str	r2, [r0, #4]
1157:Core/Src/main.c ****   htim3.Init.Period = 10000-1;
 1462              		.loc 1 1157 3 is_stmt 1 view .LVU374
1157:Core/Src/main.c ****   htim3.Init.Period = 10000-1;
 1463              		.loc 1 1157 26 is_stmt 0 view .LVU375
 1464 001e 8360     		str	r3, [r0, #8]
1158:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1465              		.loc 1 1158 3 is_stmt 1 view .LVU376
1158:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1466              		.loc 1 1158 21 is_stmt 0 view .LVU377
 1467 0020 42F20F72 		movw	r2, #9999
 1468 0024 C260     		str	r2, [r0, #12]
1159:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1469              		.loc 1 1159 3 is_stmt 1 view .LVU378
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 64


1159:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1470              		.loc 1 1159 28 is_stmt 0 view .LVU379
 1471 0026 0361     		str	r3, [r0, #16]
1160:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 1472              		.loc 1 1160 3 is_stmt 1 view .LVU380
1160:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 1473              		.loc 1 1160 32 is_stmt 0 view .LVU381
 1474 0028 8361     		str	r3, [r0, #24]
1161:Core/Src/main.c ****   {
 1475              		.loc 1 1161 3 is_stmt 1 view .LVU382
1161:Core/Src/main.c ****   {
 1476              		.loc 1 1161 7 is_stmt 0 view .LVU383
 1477 002a FFF7FEFF 		bl	HAL_TIM_Base_Init
 1478              	.LVL96:
1161:Core/Src/main.c ****   {
 1479              		.loc 1 1161 6 view .LVU384
 1480 002e 90B9     		cbnz	r0, .L74
1165:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 1481              		.loc 1 1165 3 is_stmt 1 view .LVU385
1165:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 1482              		.loc 1 1165 34 is_stmt 0 view .LVU386
 1483 0030 4FF48053 		mov	r3, #4096
 1484 0034 0293     		str	r3, [sp, #8]
1166:Core/Src/main.c ****   {
 1485              		.loc 1 1166 3 is_stmt 1 view .LVU387
1166:Core/Src/main.c ****   {
 1486              		.loc 1 1166 7 is_stmt 0 view .LVU388
 1487 0036 02A9     		add	r1, sp, #8
 1488 0038 0A48     		ldr	r0, .L77
 1489 003a FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 1490              	.LVL97:
1166:Core/Src/main.c ****   {
 1491              		.loc 1 1166 6 view .LVU389
 1492 003e 60B9     		cbnz	r0, .L75
1170:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1493              		.loc 1 1170 3 is_stmt 1 view .LVU390
1170:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1494              		.loc 1 1170 37 is_stmt 0 view .LVU391
 1495 0040 0023     		movs	r3, #0
 1496 0042 0093     		str	r3, [sp]
1171:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 1497              		.loc 1 1171 3 is_stmt 1 view .LVU392
1171:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 1498              		.loc 1 1171 33 is_stmt 0 view .LVU393
 1499 0044 0193     		str	r3, [sp, #4]
1172:Core/Src/main.c ****   {
 1500              		.loc 1 1172 3 is_stmt 1 view .LVU394
1172:Core/Src/main.c ****   {
 1501              		.loc 1 1172 7 is_stmt 0 view .LVU395
 1502 0046 6946     		mov	r1, sp
 1503 0048 0648     		ldr	r0, .L77
 1504 004a FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1505              	.LVL98:
1172:Core/Src/main.c ****   {
 1506              		.loc 1 1172 6 view .LVU396
 1507 004e 30B9     		cbnz	r0, .L76
1180:Core/Src/main.c **** 
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 65


 1508              		.loc 1 1180 1 view .LVU397
 1509 0050 07B0     		add	sp, sp, #28
 1510              		.cfi_remember_state
 1511              		.cfi_def_cfa_offset 4
 1512              		@ sp needed
 1513 0052 5DF804FB 		ldr	pc, [sp], #4
 1514              	.L74:
 1515              		.cfi_restore_state
1163:Core/Src/main.c ****   }
 1516              		.loc 1 1163 5 is_stmt 1 view .LVU398
 1517 0056 FFF7FEFF 		bl	Error_Handler
 1518              	.LVL99:
 1519              	.L75:
1168:Core/Src/main.c ****   }
 1520              		.loc 1 1168 5 view .LVU399
 1521 005a FFF7FEFF 		bl	Error_Handler
 1522              	.LVL100:
 1523              	.L76:
1174:Core/Src/main.c ****   }
 1524              		.loc 1 1174 5 view .LVU400
 1525 005e FFF7FEFF 		bl	Error_Handler
 1526              	.LVL101:
 1527              	.L78:
 1528 0062 00BF     		.align	2
 1529              	.L77:
 1530 0064 00000000 		.word	htim3
 1531 0068 00040040 		.word	1073742848
 1532              		.cfi_endproc
 1533              	.LFE143:
 1535              		.section	.text.SystemClock_Config,"ax",%progbits
 1536              		.align	1
 1537              		.global	SystemClock_Config
 1538              		.syntax unified
 1539              		.thumb
 1540              		.thumb_func
 1542              	SystemClock_Config:
 1543              	.LFB139:
 995:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1544              		.loc 1 995 1 view -0
 1545              		.cfi_startproc
 1546              		@ args = 0, pretend = 0, frame = 80
 1547              		@ frame_needed = 0, uses_anonymous_args = 0
 1548 0000 00B5     		push	{lr}
 1549              		.cfi_def_cfa_offset 4
 1550              		.cfi_offset 14, -4
 1551 0002 95B0     		sub	sp, sp, #84
 1552              		.cfi_def_cfa_offset 88
 996:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1553              		.loc 1 996 3 view .LVU402
 996:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1554              		.loc 1 996 22 is_stmt 0 view .LVU403
 1555 0004 3022     		movs	r2, #48
 1556 0006 0021     		movs	r1, #0
 1557 0008 08A8     		add	r0, sp, #32
 1558 000a FFF7FEFF 		bl	memset
 1559              	.LVL102:
 997:Core/Src/main.c **** 
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 66


 1560              		.loc 1 997 3 is_stmt 1 view .LVU404
 997:Core/Src/main.c **** 
 1561              		.loc 1 997 22 is_stmt 0 view .LVU405
 1562 000e 0023     		movs	r3, #0
 1563 0010 0393     		str	r3, [sp, #12]
 1564 0012 0493     		str	r3, [sp, #16]
 1565 0014 0593     		str	r3, [sp, #20]
 1566 0016 0693     		str	r3, [sp, #24]
 1567 0018 0793     		str	r3, [sp, #28]
1001:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1568              		.loc 1 1001 3 is_stmt 1 view .LVU406
 1569              	.LBB11:
1001:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1570              		.loc 1 1001 3 view .LVU407
 1571 001a 0193     		str	r3, [sp, #4]
1001:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1572              		.loc 1 1001 3 view .LVU408
 1573 001c 184A     		ldr	r2, .L85
 1574 001e 116C     		ldr	r1, [r2, #64]
 1575 0020 41F08051 		orr	r1, r1, #268435456
 1576 0024 1164     		str	r1, [r2, #64]
1001:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1577              		.loc 1 1001 3 view .LVU409
 1578 0026 126C     		ldr	r2, [r2, #64]
 1579 0028 02F08052 		and	r2, r2, #268435456
 1580 002c 0192     		str	r2, [sp, #4]
1001:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1581              		.loc 1 1001 3 view .LVU410
 1582 002e 019A     		ldr	r2, [sp, #4]
 1583              	.LBE11:
1001:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1584              		.loc 1 1001 3 view .LVU411
1002:Core/Src/main.c **** 
 1585              		.loc 1 1002 3 view .LVU412
 1586              	.LBB12:
1002:Core/Src/main.c **** 
 1587              		.loc 1 1002 3 view .LVU413
 1588 0030 0293     		str	r3, [sp, #8]
1002:Core/Src/main.c **** 
 1589              		.loc 1 1002 3 view .LVU414
 1590 0032 144A     		ldr	r2, .L85+4
 1591 0034 1168     		ldr	r1, [r2]
 1592 0036 41F44041 		orr	r1, r1, #49152
 1593 003a 1160     		str	r1, [r2]
1002:Core/Src/main.c **** 
 1594              		.loc 1 1002 3 view .LVU415
 1595 003c 1268     		ldr	r2, [r2]
 1596 003e 02F44042 		and	r2, r2, #49152
 1597 0042 0292     		str	r2, [sp, #8]
1002:Core/Src/main.c **** 
 1598              		.loc 1 1002 3 view .LVU416
 1599 0044 029A     		ldr	r2, [sp, #8]
 1600              	.LBE12:
1002:Core/Src/main.c **** 
 1601              		.loc 1 1002 3 view .LVU417
1007:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1602              		.loc 1 1007 3 view .LVU418
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 67


1007:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1603              		.loc 1 1007 36 is_stmt 0 view .LVU419
 1604 0046 0222     		movs	r2, #2
 1605 0048 0892     		str	r2, [sp, #32]
1008:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1606              		.loc 1 1008 3 is_stmt 1 view .LVU420
1008:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1607              		.loc 1 1008 30 is_stmt 0 view .LVU421
 1608 004a 0122     		movs	r2, #1
 1609 004c 0B92     		str	r2, [sp, #44]
1009:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 1610              		.loc 1 1009 3 is_stmt 1 view .LVU422
1009:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 1611              		.loc 1 1009 41 is_stmt 0 view .LVU423
 1612 004e 1022     		movs	r2, #16
 1613 0050 0C92     		str	r2, [sp, #48]
1010:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1614              		.loc 1 1010 3 is_stmt 1 view .LVU424
1010:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1615              		.loc 1 1010 34 is_stmt 0 view .LVU425
 1616 0052 0E93     		str	r3, [sp, #56]
1011:Core/Src/main.c ****   {
 1617              		.loc 1 1011 3 is_stmt 1 view .LVU426
1011:Core/Src/main.c ****   {
 1618              		.loc 1 1011 7 is_stmt 0 view .LVU427
 1619 0054 08A8     		add	r0, sp, #32
 1620 0056 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1621              	.LVL103:
1011:Core/Src/main.c ****   {
 1622              		.loc 1 1011 6 view .LVU428
 1623 005a 68B9     		cbnz	r0, .L83
1018:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1624              		.loc 1 1018 3 is_stmt 1 view .LVU429
1018:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1625              		.loc 1 1018 31 is_stmt 0 view .LVU430
 1626 005c 0F23     		movs	r3, #15
 1627 005e 0393     		str	r3, [sp, #12]
1020:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1628              		.loc 1 1020 3 is_stmt 1 view .LVU431
1020:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1629              		.loc 1 1020 34 is_stmt 0 view .LVU432
 1630 0060 0021     		movs	r1, #0
 1631 0062 0491     		str	r1, [sp, #16]
1021:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1632              		.loc 1 1021 3 is_stmt 1 view .LVU433
1021:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1633              		.loc 1 1021 35 is_stmt 0 view .LVU434
 1634 0064 0591     		str	r1, [sp, #20]
1022:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1635              		.loc 1 1022 3 is_stmt 1 view .LVU435
1022:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1636              		.loc 1 1022 36 is_stmt 0 view .LVU436
 1637 0066 0691     		str	r1, [sp, #24]
1023:Core/Src/main.c **** 
 1638              		.loc 1 1023 3 is_stmt 1 view .LVU437
1023:Core/Src/main.c **** 
 1639              		.loc 1 1023 36 is_stmt 0 view .LVU438
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 68


 1640 0068 0791     		str	r1, [sp, #28]
1025:Core/Src/main.c ****   {
 1641              		.loc 1 1025 3 is_stmt 1 view .LVU439
1025:Core/Src/main.c ****   {
 1642              		.loc 1 1025 7 is_stmt 0 view .LVU440
 1643 006a 03A8     		add	r0, sp, #12
 1644 006c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1645              	.LVL104:
1025:Core/Src/main.c ****   {
 1646              		.loc 1 1025 6 view .LVU441
 1647 0070 20B9     		cbnz	r0, .L84
1029:Core/Src/main.c **** 
 1648              		.loc 1 1029 1 view .LVU442
 1649 0072 15B0     		add	sp, sp, #84
 1650              		.cfi_remember_state
 1651              		.cfi_def_cfa_offset 4
 1652              		@ sp needed
 1653 0074 5DF804FB 		ldr	pc, [sp], #4
 1654              	.L83:
 1655              		.cfi_restore_state
1013:Core/Src/main.c ****   }
 1656              		.loc 1 1013 5 is_stmt 1 view .LVU443
 1657 0078 FFF7FEFF 		bl	Error_Handler
 1658              	.LVL105:
 1659              	.L84:
1027:Core/Src/main.c ****   }
 1660              		.loc 1 1027 5 view .LVU444
 1661 007c FFF7FEFF 		bl	Error_Handler
 1662              	.LVL106:
 1663              	.L86:
 1664              		.align	2
 1665              	.L85:
 1666 0080 00380240 		.word	1073887232
 1667 0084 00700040 		.word	1073770496
 1668              		.cfi_endproc
 1669              	.LFE139:
 1671              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 1672              		.align	2
 1673              	.LC9:
 1674 0000 424D4532 		.ascii	"BME280\000"
 1674      383000
 1675 0007 00       		.align	2
 1676              	.LC10:
 1677 0008 424D5032 		.ascii	"BMP280\000"
 1677      383000
 1678 000f 00       		.align	2
 1679              	.LC11:
 1680 0010 424D5032 		.ascii	"BMP280 initialization failed\012\000"
 1680      38302069 
 1680      6E697469 
 1680      616C697A 
 1680      6174696F 
 1681 002e 0000     		.align	2
 1682              	.LC12:
 1683 0030 0A424D50 		.ascii	"\012BMP280: found %s\012\000"
 1683      3238303A 
 1683      20666F75 
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 69


 1683      6E642025 
 1683      730A00
 1684 0043 00       		.align	2
 1685              	.LC13:
 1686 0044 4C6F5261 		.ascii	"LoRa is running... :) \012\015\000"
 1686      20697320 
 1686      72756E6E 
 1686      696E672E 
 1686      2E2E203A 
 1687 005d 000000   		.align	2
 1688              	.LC14:
 1689 0060 0A0D204C 		.ascii	"\012\015 LoRa failed :( \012\015 Error code: %d \012"
 1689      6F526120 
 1689      6661696C 
 1689      6564203A 
 1689      28200A0D 
 1690 0085 0D00     		.ascii	"\015\000"
 1691 0087 00       		.align	2
 1692              	.LC15:
 1693 0088 256400   		.ascii	"%d\000"
 1694 008b 00       		.align	2
 1695              	.LC16:
 1696 008c 4800     		.ascii	"H\000"
 1697              		.section	.text.main,"ax",%progbits
 1698              		.align	1
 1699              		.global	main
 1700              		.syntax unified
 1701              		.thumb
 1702              		.thumb_func
 1704              	main:
 1705              	.LFB138:
 129:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 1706              		.loc 1 129 1 view -0
 1707              		.cfi_startproc
 1708              		@ args = 0, pretend = 0, frame = 184
 1709              		@ frame_needed = 0, uses_anonymous_args = 0
 1710 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1711              		.cfi_def_cfa_offset 20
 1712              		.cfi_offset 4, -20
 1713              		.cfi_offset 5, -16
 1714              		.cfi_offset 6, -12
 1715              		.cfi_offset 7, -8
 1716              		.cfi_offset 14, -4
 1717 0002 AFB0     		sub	sp, sp, #188
 1718              		.cfi_def_cfa_offset 208
 137:Core/Src/main.c **** 
 1719              		.loc 1 137 3 view .LVU446
 1720 0004 FFF7FEFF 		bl	HAL_Init
 1721              	.LVL107:
 144:Core/Src/main.c **** 
 1722              		.loc 1 144 3 view .LVU447
 1723 0008 FFF7FEFF 		bl	SystemClock_Config
 1724              	.LVL108:
 151:Core/Src/main.c ****   MX_USART1_UART_Init();
 1725              		.loc 1 151 3 view .LVU448
 1726 000c FFF7FEFF 		bl	MX_GPIO_Init
 1727              	.LVL109:
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 70


 152:Core/Src/main.c ****   MX_USART2_UART_Init();
 1728              		.loc 1 152 3 view .LVU449
 1729 0010 FFF7FEFF 		bl	MX_USART1_UART_Init
 1730              	.LVL110:
 153:Core/Src/main.c ****   MX_I2C1_Init();
 1731              		.loc 1 153 3 view .LVU450
 1732 0014 FFF7FEFF 		bl	MX_USART2_UART_Init
 1733              	.LVL111:
 154:Core/Src/main.c ****   MX_SPI3_Init();
 1734              		.loc 1 154 3 view .LVU451
 1735 0018 FFF7FEFF 		bl	MX_I2C1_Init
 1736              	.LVL112:
 155:Core/Src/main.c ****   MX_I2C2_Init();
 1737              		.loc 1 155 3 view .LVU452
 1738 001c FFF7FEFF 		bl	MX_SPI3_Init
 1739              	.LVL113:
 156:Core/Src/main.c ****   MX_TIM3_Init();
 1740              		.loc 1 156 3 view .LVU453
 1741 0020 FFF7FEFF 		bl	MX_I2C2_Init
 1742              	.LVL114:
 157:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1743              		.loc 1 157 3 view .LVU454
 1744 0024 FFF7FEFF 		bl	MX_TIM3_Init
 1745              	.LVL115:
 161:Core/Src/main.c **** 
 1746              		.loc 1 161 3 view .LVU455
 1747 0028 A748     		ldr	r0, .L166
 1748 002a FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1749              	.LVL116:
 163:Core/Src/main.c **** 	bmp280.addr = 0x77;
 1750              		.loc 1 163 3 view .LVU456
 1751 002e A74C     		ldr	r4, .L166+4
 1752 0030 2046     		mov	r0, r4
 1753 0032 FFF7FEFF 		bl	bmp280_init_default_params
 1754              	.LVL117:
 164:Core/Src/main.c **** 	bmp280.i2c = &hi2c1;
 1755              		.loc 1 164 2 view .LVU457
 164:Core/Src/main.c **** 	bmp280.i2c = &hi2c1;
 1756              		.loc 1 164 14 is_stmt 0 view .LVU458
 1757 0036 7723     		movs	r3, #119
 1758 0038 24F8083C 		strh	r3, [r4, #-8]	@ movhi
 165:Core/Src/main.c **** 
 1759              		.loc 1 165 2 is_stmt 1 view .LVU459
 165:Core/Src/main.c **** 
 1760              		.loc 1 165 13 is_stmt 0 view .LVU460
 1761 003c A44B     		ldr	r3, .L166+8
 1762 003e 44F8043C 		str	r3, [r4, #-4]
 167:Core/Src/main.c **** 		size = sprintf((char *)Data, "BMP280 initialization failed\n");
 1763              		.loc 1 167 2 is_stmt 1 view .LVU461
 1764              	.L88:
 167:Core/Src/main.c **** 		size = sprintf((char *)Data, "BMP280 initialization failed\n");
 1765              		.loc 1 167 9 view .LVU462
 167:Core/Src/main.c **** 		size = sprintf((char *)Data, "BMP280 initialization failed\n");
 1766              		.loc 1 167 10 is_stmt 0 view .LVU463
 1767 0042 A249     		ldr	r1, .L166+4
 1768 0044 A1F12C00 		sub	r0, r1, #44
 1769 0048 FFF7FEFF 		bl	bmp280_init
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 71


 1770              	.LVL118:
 167:Core/Src/main.c **** 		size = sprintf((char *)Data, "BMP280 initialization failed\n");
 1771              		.loc 1 167 9 view .LVU464
 1772 004c B0B9     		cbnz	r0, .L162
 168:Core/Src/main.c **** 		HAL_UART_Transmit(&huart2, Data, size, 1000);
 1773              		.loc 1 168 3 is_stmt 1 view .LVU465
 168:Core/Src/main.c **** 		HAL_UART_Transmit(&huart2, Data, size, 1000);
 1774              		.loc 1 168 10 is_stmt 0 view .LVU466
 1775 004e A14E     		ldr	r6, .L166+12
 1776 0050 3446     		mov	r4, r6
 1777 0052 A14D     		ldr	r5, .L166+16
 1778 0054 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1779 0056 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1780 0058 95E80F00 		ldm	r5, {r0, r1, r2, r3}
 1781 005c 07C4     		stmia	r4!, {r0, r1, r2}
 1782 005e 2380     		strh	r3, [r4]	@ movhi
 1783 0060 1D22     		movs	r2, #29
 168:Core/Src/main.c **** 		HAL_UART_Transmit(&huart2, Data, size, 1000);
 1784              		.loc 1 168 8 view .LVU467
 1785 0062 9E4B     		ldr	r3, .L166+20
 1786 0064 1A60     		str	r2, [r3]
 169:Core/Src/main.c **** 		HAL_Delay(2000);
 1787              		.loc 1 169 3 is_stmt 1 view .LVU468
 1788 0066 4FF47A73 		mov	r3, #1000
 1789 006a 3146     		mov	r1, r6
 1790 006c 9C48     		ldr	r0, .L166+24
 1791 006e FFF7FEFF 		bl	HAL_UART_Transmit
 1792              	.LVL119:
 170:Core/Src/main.c **** 	}
 1793              		.loc 1 170 3 view .LVU469
 1794 0072 4FF4FA60 		mov	r0, #2000
 1795 0076 FFF7FEFF 		bl	HAL_Delay
 1796              	.LVL120:
 1797 007a E2E7     		b	.L88
 1798              	.L162:
 172:Core/Src/main.c **** 	size = sprintf((char *)Data, "\nBMP280: found %s\n", bme280p ? "BME280" : "BMP280");
 1799              		.loc 1 172 2 view .LVU470
 172:Core/Src/main.c **** 	size = sprintf((char *)Data, "\nBMP280: found %s\n", bme280p ? "BME280" : "BMP280");
 1800              		.loc 1 172 23 is_stmt 0 view .LVU471
 1801 007c 994B     		ldr	r3, .L166+28
 1802 007e 93F83230 		ldrb	r3, [r3, #50]	@ zero_extendqisi2
 1803              	.LVL121:
 173:Core/Src/main.c **** 	HAL_UART_Transmit(&huart2, Data, size, 1000);
 1804              		.loc 1 173 2 is_stmt 1 view .LVU472
 173:Core/Src/main.c **** 	HAL_UART_Transmit(&huart2, Data, size, 1000);
 1805              		.loc 1 173 9 is_stmt 0 view .LVU473
 1806 0082 602B     		cmp	r3, #96
 1807 0084 00F08280 		beq	.L163
 1808 0088 974A     		ldr	r2, .L166+32
 1809              	.L90:
 173:Core/Src/main.c **** 	HAL_UART_Transmit(&huart2, Data, size, 1000);
 1810              		.loc 1 173 9 discriminator 4 view .LVU474
 1811 008a 924C     		ldr	r4, .L166+12
 1812 008c 9749     		ldr	r1, .L166+36
 1813 008e 2046     		mov	r0, r4
 1814 0090 FFF7FEFF 		bl	sprintf
 1815              	.LVL122:
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 72


 173:Core/Src/main.c **** 	HAL_UART_Transmit(&huart2, Data, size, 1000);
 1816              		.loc 1 173 9 discriminator 4 view .LVU475
 1817 0094 1622     		movs	r2, #22
 173:Core/Src/main.c **** 	HAL_UART_Transmit(&huart2, Data, size, 1000);
 1818              		.loc 1 173 7 discriminator 4 view .LVU476
 1819 0096 914B     		ldr	r3, .L166+20
 1820 0098 1A60     		str	r2, [r3]
 174:Core/Src/main.c **** 
 1821              		.loc 1 174 2 is_stmt 1 discriminator 4 view .LVU477
 1822 009a 4FF47A73 		mov	r3, #1000
 1823 009e 2146     		mov	r1, r4
 1824 00a0 8F48     		ldr	r0, .L166+24
 1825 00a2 FFF7FEFF 		bl	HAL_UART_Transmit
 1826              	.LVL123:
 176:Core/Src/main.c ****   myLoRa.CS_port         = GPIOA;
 1827              		.loc 1 176 3 discriminator 4 view .LVU478
 176:Core/Src/main.c ****   myLoRa.CS_port         = GPIOA;
 1828              		.loc 1 176 12 is_stmt 0 discriminator 4 view .LVU479
 1829 00a6 924D     		ldr	r5, .L166+40
 1830 00a8 6846     		mov	r0, sp
 1831 00aa FFF7FEFF 		bl	newLoRa
 1832              	.LVL124:
 1833 00ae 2E46     		mov	r6, r5
 1834 00b0 6C46     		mov	r4, sp
 1835 00b2 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1836 00b4 0FC6     		stmia	r6!, {r0, r1, r2, r3}
 1837 00b6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1838 00b8 0FC6     		stmia	r6!, {r0, r1, r2, r3}
 1839 00ba 94E80700 		ldm	r4, {r0, r1, r2}
 1840 00be 86E80700 		stm	r6, {r0, r1, r2}
 177:Core/Src/main.c ****   myLoRa.CS_pin          = GPIO_PIN_4;
 1841              		.loc 1 177 3 is_stmt 1 discriminator 4 view .LVU480
 177:Core/Src/main.c ****   myLoRa.CS_pin          = GPIO_PIN_4;
 1842              		.loc 1 177 26 is_stmt 0 discriminator 4 view .LVU481
 1843 00c2 8C4B     		ldr	r3, .L166+44
 1844 00c4 2B60     		str	r3, [r5]
 178:Core/Src/main.c ****   myLoRa.reset_port      = GPIOB;
 1845              		.loc 1 178 3 is_stmt 1 discriminator 4 view .LVU482
 178:Core/Src/main.c ****   myLoRa.reset_port      = GPIOB;
 1846              		.loc 1 178 26 is_stmt 0 discriminator 4 view .LVU483
 1847 00c6 1023     		movs	r3, #16
 1848 00c8 AB80     		strh	r3, [r5, #4]	@ movhi
 179:Core/Src/main.c ****   myLoRa.reset_pin       = GPIO_PIN_8;
 1849              		.loc 1 179 3 is_stmt 1 discriminator 4 view .LVU484
 179:Core/Src/main.c ****   myLoRa.reset_pin       = GPIO_PIN_8;
 1850              		.loc 1 179 26 is_stmt 0 discriminator 4 view .LVU485
 1851 00ca 8B4B     		ldr	r3, .L166+48
 1852 00cc AB60     		str	r3, [r5, #8]
 180:Core/Src/main.c ****   myLoRa.DIO0_port       = GPIOB;
 1853              		.loc 1 180 3 is_stmt 1 discriminator 4 view .LVU486
 180:Core/Src/main.c ****   myLoRa.DIO0_port       = GPIOB;
 1854              		.loc 1 180 26 is_stmt 0 discriminator 4 view .LVU487
 1855 00ce 4FF48072 		mov	r2, #256
 1856 00d2 AA81     		strh	r2, [r5, #12]	@ movhi
 181:Core/Src/main.c ****   myLoRa.DIO0_pin        = GPIO_PIN_9;
 1857              		.loc 1 181 3 is_stmt 1 discriminator 4 view .LVU488
 181:Core/Src/main.c ****   myLoRa.DIO0_pin        = GPIO_PIN_9;
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 73


 1858              		.loc 1 181 26 is_stmt 0 discriminator 4 view .LVU489
 1859 00d4 2B61     		str	r3, [r5, #16]
 182:Core/Src/main.c ****   myLoRa.hSPIx           = &hspi3;
 1860              		.loc 1 182 3 is_stmt 1 discriminator 4 view .LVU490
 182:Core/Src/main.c ****   myLoRa.hSPIx           = &hspi3;
 1861              		.loc 1 182 26 is_stmt 0 discriminator 4 view .LVU491
 1862 00d6 4FF40073 		mov	r3, #512
 1863 00da AB82     		strh	r3, [r5, #20]	@ movhi
 183:Core/Src/main.c ****   
 1864              		.loc 1 183 3 is_stmt 1 discriminator 4 view .LVU492
 183:Core/Src/main.c ****   
 1865              		.loc 1 183 26 is_stmt 0 discriminator 4 view .LVU493
 1866 00dc 874B     		ldr	r3, .L166+52
 1867 00de AB61     		str	r3, [r5, #24]
 186:Core/Src/main.c ****   myLoRa.spredingFactor        = SF_7;            // default = SF_7
 1868              		.loc 1 186 3 is_stmt 1 discriminator 4 view .LVU494
 186:Core/Src/main.c ****   myLoRa.spredingFactor        = SF_7;            // default = SF_7
 1869              		.loc 1 186 32 is_stmt 0 discriminator 4 view .LVU495
 1870 00e0 40F2B113 		movw	r3, #433
 1871 00e4 2B62     		str	r3, [r5, #32]
 187:Core/Src/main.c ****   myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 1872              		.loc 1 187 3 is_stmt 1 discriminator 4 view .LVU496
 187:Core/Src/main.c ****   myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 1873              		.loc 1 187 32 is_stmt 0 discriminator 4 view .LVU497
 1874 00e6 0723     		movs	r3, #7
 1875 00e8 85F82430 		strb	r3, [r5, #36]
 188:Core/Src/main.c ****   myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 1876              		.loc 1 188 3 is_stmt 1 discriminator 4 view .LVU498
 188:Core/Src/main.c ****   myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 1877              		.loc 1 188 32 is_stmt 0 discriminator 4 view .LVU499
 1878 00ec 0026     		movs	r6, #0
 1879 00ee 85F82560 		strb	r6, [r5, #37]
 189:Core/Src/main.c ****   myLoRa.power                 = POWER_20db;      // default = 20db
 1880              		.loc 1 189 3 is_stmt 1 discriminator 4 view .LVU500
 189:Core/Src/main.c ****   myLoRa.power                 = POWER_20db;      // default = 20db
 1881              		.loc 1 189 32 is_stmt 0 discriminator 4 view .LVU501
 1882 00f2 0123     		movs	r3, #1
 1883 00f4 85F82630 		strb	r3, [r5, #38]
 190:Core/Src/main.c ****   myLoRa.overCurrentProtection = 100;             // default = 100 mA
 1884              		.loc 1 190 3 is_stmt 1 discriminator 4 view .LVU502
 190:Core/Src/main.c ****   myLoRa.overCurrentProtection = 100;             // default = 100 mA
 1885              		.loc 1 190 32 is_stmt 0 discriminator 4 view .LVU503
 1886 00f8 FF23     		movs	r3, #255
 1887 00fa 85F82A30 		strb	r3, [r5, #42]
 191:Core/Src/main.c ****   myLoRa.preamble              = 8;              // default = 8;
 1888              		.loc 1 191 3 is_stmt 1 discriminator 4 view .LVU504
 191:Core/Src/main.c ****   myLoRa.preamble              = 8;              // default = 8;
 1889              		.loc 1 191 32 is_stmt 0 discriminator 4 view .LVU505
 1890 00fe 6423     		movs	r3, #100
 1891 0100 85F82B30 		strb	r3, [r5, #43]
 192:Core/Src/main.c **** 
 1892              		.loc 1 192 3 is_stmt 1 discriminator 4 view .LVU506
 192:Core/Src/main.c **** 
 1893              		.loc 1 192 32 is_stmt 0 discriminator 4 view .LVU507
 1894 0104 0823     		movs	r3, #8
 1895 0106 2B85     		strh	r3, [r5, #40]	@ movhi
 194:Core/Src/main.c ****   uint8_t buff[128] = {"\0"};
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 74


 1896              		.loc 1 194 3 is_stmt 1 discriminator 4 view .LVU508
 194:Core/Src/main.c ****   uint8_t buff[128] = {"\0"};
 1897              		.loc 1 194 18 is_stmt 0 discriminator 4 view .LVU509
 1898 0108 2846     		mov	r0, r5
 1899 010a FFF7FEFF 		bl	LoRa_init
 1900              	.LVL125:
 1901 010e 0446     		mov	r4, r0
 1902              	.LVL126:
 195:Core/Src/main.c ****   
 1903              		.loc 1 195 3 is_stmt 1 discriminator 4 view .LVU510
 195:Core/Src/main.c ****   
 1904              		.loc 1 195 11 is_stmt 0 discriminator 4 view .LVU511
 1905 0110 0E96     		str	r6, [sp, #56]
 1906 0112 7C22     		movs	r2, #124
 1907 0114 3146     		mov	r1, r6
 1908 0116 0FA8     		add	r0, sp, #60
 1909 0118 FFF7FEFF 		bl	memset
 1910              	.LVL127:
 198:Core/Src/main.c ****   snprintf(buff,sizeof(buff),"LoRa is running... :) \n\r");
 1911              		.loc 1 198 1 is_stmt 1 discriminator 4 view .LVU512
 198:Core/Src/main.c ****   snprintf(buff,sizeof(buff),"LoRa is running... :) \n\r");
 1912              		.loc 1 198 4 is_stmt 0 discriminator 4 view .LVU513
 1913 011c C82C     		cmp	r4, #200
 1914 011e 37D0     		beq	.L164
 205:Core/Src/main.c ****   size = strlen(&buff);
 1915              		.loc 1 205 3 is_stmt 1 view .LVU514
 1916 0120 2346     		mov	r3, r4
 1917 0122 774A     		ldr	r2, .L166+56
 1918 0124 8021     		movs	r1, #128
 1919 0126 0EA8     		add	r0, sp, #56
 1920 0128 FFF7FEFF 		bl	snprintf
 1921              	.LVL128:
 206:Core/Src/main.c ****   HAL_UART_Transmit(&huart2, buff, size, 1000);
 1922              		.loc 1 206 3 view .LVU515
 206:Core/Src/main.c ****   HAL_UART_Transmit(&huart2, buff, size, 1000);
 1923              		.loc 1 206 10 is_stmt 0 view .LVU516
 1924 012c 0EA8     		add	r0, sp, #56
 1925 012e FFF7FEFF 		bl	strlen
 1926              	.LVL129:
 206:Core/Src/main.c ****   HAL_UART_Transmit(&huart2, buff, size, 1000);
 1927              		.loc 1 206 8 view .LVU517
 1928 0132 6A4B     		ldr	r3, .L166+20
 1929 0134 1860     		str	r0, [r3]
 207:Core/Src/main.c **** }
 1930              		.loc 1 207 3 is_stmt 1 view .LVU518
 1931 0136 4FF47A73 		mov	r3, #1000
 1932 013a 82B2     		uxth	r2, r0
 1933 013c 0EA9     		add	r1, sp, #56
 1934 013e 6848     		ldr	r0, .L166+24
 1935 0140 FFF7FEFF 		bl	HAL_UART_Transmit
 1936              	.LVL130:
 1937              	.L92:
 211:Core/Src/main.c **** 
 1938              		.loc 1 211 1 view .LVU519
 1939 0144 6F4D     		ldr	r5, .L166+60
 1940 0146 2846     		mov	r0, r5
 1941 0148 FFF7FEFF 		bl	ssd1306_Init
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 75


 1942              	.LVL131:
 214:Core/Src/main.c **** ssd1306_WriteString("Mode:", Font_16x26, White);
 1943              		.loc 1 214 1 view .LVU520
 1944 014c 0021     		movs	r1, #0
 1945 014e 0846     		mov	r0, r1
 1946 0150 FFF7FEFF 		bl	ssd1306_SetCursor
 1947              	.LVL132:
 215:Core/Src/main.c **** 
 1948              		.loc 1 215 1 view .LVU521
 1949 0154 6C4C     		ldr	r4, .L166+64
 1950 0156 0123     		movs	r3, #1
 1951 0158 94E80600 		ldm	r4, {r1, r2}
 1952 015c 6B48     		ldr	r0, .L166+68
 1953 015e FFF7FEFF 		bl	ssd1306_WriteString
 1954              	.LVL133:
 217:Core/Src/main.c **** sprintf(sMode, "%d", iMode);
 1955              		.loc 1 217 1 view .LVU522
 1956 0162 2321     		movs	r1, #35
 1957 0164 0020     		movs	r0, #0
 1958 0166 FFF7FEFF 		bl	ssd1306_SetCursor
 1959              	.LVL134:
 218:Core/Src/main.c **** ssd1306_WriteString(sMode, Font_16x26, White);
 1960              		.loc 1 218 1 view .LVU523
 1961 016a 694E     		ldr	r6, .L166+72
 1962 016c 694B     		ldr	r3, .L166+76
 1963 016e 1A68     		ldr	r2, [r3]
 1964 0170 6949     		ldr	r1, .L166+80
 1965 0172 3046     		mov	r0, r6
 1966 0174 FFF7FEFF 		bl	sprintf
 1967              	.LVL135:
 219:Core/Src/main.c **** 
 1968              		.loc 1 219 1 view .LVU524
 1969 0178 0123     		movs	r3, #1
 1970 017a 94E80600 		ldm	r4, {r1, r2}
 1971 017e 3046     		mov	r0, r6
 1972 0180 FFF7FEFF 		bl	ssd1306_WriteString
 1973              	.LVL136:
 222:Core/Src/main.c **** 
 1974              		.loc 1 222 1 view .LVU525
 1975 0184 2846     		mov	r0, r5
 1976 0186 FFF7FEFF 		bl	ssd1306_UpdateScreen
 1977              	.LVL137:
 1978 018a 20E0     		b	.L93
 1979              	.LVL138:
 1980              	.L163:
 173:Core/Src/main.c **** 	HAL_UART_Transmit(&huart2, Data, size, 1000);
 1981              		.loc 1 173 9 is_stmt 0 view .LVU526
 1982 018c 634A     		ldr	r2, .L166+84
 1983 018e 7CE7     		b	.L90
 1984              	.LVL139:
 1985              	.L164:
 199:Core/Src/main.c ****   size = strlen(&buff);
 1986              		.loc 1 199 3 is_stmt 1 view .LVU527
 1987 0190 0EAC     		add	r4, sp, #56
 1988              	.LVL140:
 199:Core/Src/main.c ****   size = strlen(&buff);
 1989              		.loc 1 199 3 is_stmt 0 view .LVU528
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 76


 1990 0192 634D     		ldr	r5, .L166+88
 1991 0194 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1992 0196 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1993 0198 95E80700 		ldm	r5, {r0, r1, r2}
 1994 019c 03C4     		stmia	r4!, {r0, r1}
 1995 019e 2270     		strb	r2, [r4]
 200:Core/Src/main.c ****   LoRa_transmit(&myLoRa, (uint8_t*)buff, size, 100);
 1996              		.loc 1 200 3 is_stmt 1 view .LVU529
 200:Core/Src/main.c ****   LoRa_transmit(&myLoRa, (uint8_t*)buff, size, 100);
 1997              		.loc 1 200 10 is_stmt 0 view .LVU530
 1998 01a0 0EA8     		add	r0, sp, #56
 1999 01a2 FFF7FEFF 		bl	strlen
 2000              	.LVL141:
 200:Core/Src/main.c ****   LoRa_transmit(&myLoRa, (uint8_t*)buff, size, 100);
 2001              		.loc 1 200 8 view .LVU531
 2002 01a6 4D4C     		ldr	r4, .L166+20
 2003 01a8 2060     		str	r0, [r4]
 201:Core/Src/main.c ****   HAL_UART_Transmit(&huart2, buff, size, 1000);
 2004              		.loc 1 201 3 is_stmt 1 view .LVU532
 2005 01aa 6423     		movs	r3, #100
 2006 01ac C2B2     		uxtb	r2, r0
 2007 01ae 0EA9     		add	r1, sp, #56
 2008 01b0 4F48     		ldr	r0, .L166+40
 2009 01b2 FFF7FEFF 		bl	LoRa_transmit
 2010              	.LVL142:
 202:Core/Src/main.c **** }
 2011              		.loc 1 202 3 view .LVU533
 2012 01b6 4FF47A73 		mov	r3, #1000
 2013 01ba 2288     		ldrh	r2, [r4]
 2014 01bc 0EA9     		add	r1, sp, #56
 2015 01be 4848     		ldr	r0, .L166+24
 2016 01c0 FFF7FEFF 		bl	HAL_UART_Transmit
 2017              	.LVL143:
 2018 01c4 BEE7     		b	.L92
 2019              	.LVL144:
 2020              	.L94:
 247:Core/Src/main.c **** switch (iMode) {
 2021              		.loc 1 247 5 view .LVU534
 247:Core/Src/main.c **** switch (iMode) {
 2022              		.loc 1 247 9 is_stmt 0 view .LVU535
 2023 01c6 574B     		ldr	r3, .L166+92
 2024 01c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 247:Core/Src/main.c **** switch (iMode) {
 2025              		.loc 1 247 8 view .LVU536
 2026 01ca 002B     		cmp	r3, #0
 2027 01cc 38D1     		bne	.L165
 2028              	.L93:
 229:Core/Src/main.c ****   {
 2029              		.loc 1 229 3 is_stmt 1 view .LVU537
 232:Core/Src/main.c ****       HAL_UARTEx_ReceiveToIdle_IT(&huart1,(uint8_t*)gps_raw,512);
 2030              		.loc 1 232 5 view .LVU538
 232:Core/Src/main.c ****       HAL_UARTEx_ReceiveToIdle_IT(&huart1,(uint8_t*)gps_raw,512);
 2031              		.loc 1 232 9 is_stmt 0 view .LVU539
 2032 01ce 564B     		ldr	r3, .L166+96
 2033 01d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 232:Core/Src/main.c ****       HAL_UARTEx_ReceiveToIdle_IT(&huart1,(uint8_t*)gps_raw,512);
 2034              		.loc 1 232 8 view .LVU540
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 77


 2035 01d2 002B     		cmp	r3, #0
 2036 01d4 FBD0     		beq	.L93
 233:Core/Src/main.c ****       if (sendData) {
 2037              		.loc 1 233 7 is_stmt 1 view .LVU541
 2038 01d6 4FF40072 		mov	r2, #512
 2039 01da 5449     		ldr	r1, .L166+100
 2040 01dc 5448     		ldr	r0, .L166+104
 2041 01de FFF7FEFF 		bl	HAL_UARTEx_ReceiveToIdle_IT
 2042              	.LVL145:
 234:Core/Src/main.c ****       size = strlen(&transmit_data);
 2043              		.loc 1 234 7 view .LVU542
 234:Core/Src/main.c ****       size = strlen(&transmit_data);
 2044              		.loc 1 234 11 is_stmt 0 view .LVU543
 2045 01e2 544B     		ldr	r3, .L166+108
 2046 01e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 234:Core/Src/main.c ****       size = strlen(&transmit_data);
 2047              		.loc 1 234 10 view .LVU544
 2048 01e6 002B     		cmp	r3, #0
 2049 01e8 EDD0     		beq	.L94
 2050              	.LBB13:
 235:Core/Src/main.c ****       uint32_t timebefore = HAL_GetTick();
 2051              		.loc 1 235 7 is_stmt 1 view .LVU545
 235:Core/Src/main.c ****       uint32_t timebefore = HAL_GetTick();
 2052              		.loc 1 235 14 is_stmt 0 view .LVU546
 2053 01ea 534C     		ldr	r4, .L166+112
 2054 01ec 2046     		mov	r0, r4
 2055 01ee FFF7FEFF 		bl	strlen
 2056              	.LVL146:
 235:Core/Src/main.c ****       uint32_t timebefore = HAL_GetTick();
 2057              		.loc 1 235 12 view .LVU547
 2058 01f2 3A4E     		ldr	r6, .L166+20
 2059 01f4 3060     		str	r0, [r6]
 236:Core/Src/main.c ****       ret = LoRa_transmit(&myLoRa, (uint8_t*)"H", 1, 10000);
 2060              		.loc 1 236 7 is_stmt 1 view .LVU548
 236:Core/Src/main.c ****       ret = LoRa_transmit(&myLoRa, (uint8_t*)"H", 1, 10000);
 2061              		.loc 1 236 29 is_stmt 0 view .LVU549
 2062 01f6 FFF7FEFF 		bl	HAL_GetTick
 2063              	.LVL147:
 2064 01fa 0746     		mov	r7, r0
 2065              	.LVL148:
 237:Core/Src/main.c ****       uint32_t timeafter = HAL_GetTick();
 2066              		.loc 1 237 7 is_stmt 1 view .LVU550
 237:Core/Src/main.c ****       uint32_t timeafter = HAL_GetTick();
 2067              		.loc 1 237 13 is_stmt 0 view .LVU551
 2068 01fc 42F21073 		movw	r3, #10000
 2069 0200 0122     		movs	r2, #1
 2070 0202 4E49     		ldr	r1, .L166+116
 2071 0204 3A48     		ldr	r0, .L166+40
 2072              	.LVL149:
 237:Core/Src/main.c ****       uint32_t timeafter = HAL_GetTick();
 2073              		.loc 1 237 13 view .LVU552
 2074 0206 FFF7FEFF 		bl	LoRa_transmit
 2075              	.LVL150:
 2076 020a 0546     		mov	r5, r0
 2077              	.LVL151:
 238:Core/Src/main.c ****       volatile uint32_t timetotransmit = timeafter-timebefore;
 2078              		.loc 1 238 7 is_stmt 1 view .LVU553
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 78


 238:Core/Src/main.c ****       volatile uint32_t timetotransmit = timeafter-timebefore;
 2079              		.loc 1 238 28 is_stmt 0 view .LVU554
 2080 020c FFF7FEFF 		bl	HAL_GetTick
 2081              	.LVL152:
 239:Core/Src/main.c ****       volatile uint16_t retRead = ret;
 2082              		.loc 1 239 7 is_stmt 1 view .LVU555
 239:Core/Src/main.c ****       volatile uint16_t retRead = ret;
 2083              		.loc 1 239 51 is_stmt 0 view .LVU556
 2084 0210 C01B     		subs	r0, r0, r7
 2085              	.LVL153:
 239:Core/Src/main.c ****       volatile uint16_t retRead = ret;
 2086              		.loc 1 239 25 view .LVU557
 2087 0212 0D90     		str	r0, [sp, #52]
 240:Core/Src/main.c ****       size = strlen(&transmit_data);
 2088              		.loc 1 240 7 is_stmt 1 view .LVU558
 240:Core/Src/main.c ****       size = strlen(&transmit_data);
 2089              		.loc 1 240 25 is_stmt 0 view .LVU559
 2090 0214 ADF83250 		strh	r5, [sp, #50]	@ movhi
 241:Core/Src/main.c **** 	    HAL_UART_Transmit(&huart2, transmit_data, size, 1000);
 2091              		.loc 1 241 7 is_stmt 1 view .LVU560
 241:Core/Src/main.c **** 	    HAL_UART_Transmit(&huart2, transmit_data, size, 1000);
 2092              		.loc 1 241 14 is_stmt 0 view .LVU561
 2093 0218 2046     		mov	r0, r4
 2094 021a FFF7FEFF 		bl	strlen
 2095              	.LVL154:
 241:Core/Src/main.c **** 	    HAL_UART_Transmit(&huart2, transmit_data, size, 1000);
 2096              		.loc 1 241 12 view .LVU562
 2097 021e 3060     		str	r0, [r6]
 242:Core/Src/main.c ****       sendData = false;
 2098              		.loc 1 242 6 is_stmt 1 view .LVU563
 2099 0220 4FF47A73 		mov	r3, #1000
 2100 0224 82B2     		uxth	r2, r0
 2101 0226 2146     		mov	r1, r4
 2102 0228 2D48     		ldr	r0, .L166+24
 2103 022a FFF7FEFF 		bl	HAL_UART_Transmit
 2104              	.LVL155:
 243:Core/Src/main.c ****       memset(transmit_data, '\0', sizeof(transmit_data));
 2105              		.loc 1 243 7 view .LVU564
 243:Core/Src/main.c ****       memset(transmit_data, '\0', sizeof(transmit_data));
 2106              		.loc 1 243 16 is_stmt 0 view .LVU565
 2107 022e 0021     		movs	r1, #0
 2108 0230 404B     		ldr	r3, .L166+108
 2109 0232 1970     		strb	r1, [r3]
 244:Core/Src/main.c ****     }
 2110              		.loc 1 244 7 is_stmt 1 view .LVU566
 2111 0234 4FF48072 		mov	r2, #256
 2112 0238 2046     		mov	r0, r4
 2113 023a FFF7FEFF 		bl	memset
 2114              	.LVL156:
 2115 023e C2E7     		b	.L94
 2116              	.LVL157:
 2117              	.L165:
 244:Core/Src/main.c ****     }
 2118              		.loc 1 244 7 is_stmt 0 view .LVU567
 2119              	.LBE13:
 248:Core/Src/main.c ****     case 1:
 2120              		.loc 1 248 1 is_stmt 1 view .LVU568
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 79


 2121 0240 344B     		ldr	r3, .L166+76
 2122 0242 1B68     		ldr	r3, [r3]
 2123 0244 013B     		subs	r3, r3, #1
 2124 0246 3B2B     		cmp	r3, #59
 2125 0248 00F29180 		bhi	.L96
 2126 024c DFE813F0 		tbh	[pc, r3, lsl #1]
 2127              	.L98:
 2128 0250 7800     		.2byte	(.L157-.L98)/2
 2129 0252 9300     		.2byte	(.L156-.L98)/2
 2130 0254 AA00     		.2byte	(.L155-.L98)/2
 2131 0256 C200     		.2byte	(.L154-.L98)/2
 2132 0258 DA00     		.2byte	(.L153-.L98)/2
 2133 025a F200     		.2byte	(.L152-.L98)/2
 2134 025c 0A01     		.2byte	(.L151-.L98)/2
 2135 025e 2201     		.2byte	(.L150-.L98)/2
 2136 0260 3901     		.2byte	(.L149-.L98)/2
 2137 0262 5001     		.2byte	(.L148-.L98)/2
 2138 0264 6801     		.2byte	(.L147-.L98)/2
 2139 0266 7F01     		.2byte	(.L146-.L98)/2
 2140 0268 9501     		.2byte	(.L145-.L98)/2
 2141 026a AC01     		.2byte	(.L144-.L98)/2
 2142 026c C301     		.2byte	(.L143-.L98)/2
 2143 026e DA01     		.2byte	(.L142-.L98)/2
 2144 0270 F101     		.2byte	(.L141-.L98)/2
 2145 0272 0802     		.2byte	(.L140-.L98)/2
 2146 0274 2402     		.2byte	(.L139-.L98)/2
 2147 0276 3A02     		.2byte	(.L138-.L98)/2
 2148 0278 5102     		.2byte	(.L137-.L98)/2
 2149 027a 6902     		.2byte	(.L136-.L98)/2
 2150 027c 8002     		.2byte	(.L135-.L98)/2
 2151 027e 9802     		.2byte	(.L134-.L98)/2
 2152 0280 B002     		.2byte	(.L133-.L98)/2
 2153 0282 C802     		.2byte	(.L132-.L98)/2
 2154 0284 E002     		.2byte	(.L131-.L98)/2
 2155 0286 F802     		.2byte	(.L130-.L98)/2
 2156 0288 1003     		.2byte	(.L129-.L98)/2
 2157 028a 2703     		.2byte	(.L128-.L98)/2
 2158 028c 3E03     		.2byte	(.L127-.L98)/2
 2159 028e 5603     		.2byte	(.L126-.L98)/2
 2160 0290 6D03     		.2byte	(.L125-.L98)/2
 2161 0292 8503     		.2byte	(.L124-.L98)/2
 2162 0294 9D03     		.2byte	(.L123-.L98)/2
 2163 0296 B503     		.2byte	(.L122-.L98)/2
 2164 0298 D003     		.2byte	(.L121-.L98)/2
 2165 029a E803     		.2byte	(.L120-.L98)/2
 2166 029c 0004     		.2byte	(.L119-.L98)/2
 2167 029e 1704     		.2byte	(.L118-.L98)/2
 2168 02a0 2F04     		.2byte	(.L117-.L98)/2
 2169 02a2 4704     		.2byte	(.L116-.L98)/2
 2170 02a4 5E04     		.2byte	(.L115-.L98)/2
 2171 02a6 7604     		.2byte	(.L114-.L98)/2
 2172 02a8 8E04     		.2byte	(.L113-.L98)/2
 2173 02aa A704     		.2byte	(.L112-.L98)/2
 2174 02ac C004     		.2byte	(.L111-.L98)/2
 2175 02ae D904     		.2byte	(.L110-.L98)/2
 2176 02b0 F204     		.2byte	(.L109-.L98)/2
 2177 02b2 0A05     		.2byte	(.L108-.L98)/2
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 80


 2178 02b4 2305     		.2byte	(.L107-.L98)/2
 2179 02b6 3C05     		.2byte	(.L106-.L98)/2
 2180 02b8 5405     		.2byte	(.L105-.L98)/2
 2181 02ba 6D05     		.2byte	(.L104-.L98)/2
 2182 02bc 8805     		.2byte	(.L103-.L98)/2
 2183 02be A105     		.2byte	(.L102-.L98)/2
 2184 02c0 BA05     		.2byte	(.L101-.L98)/2
 2185 02c2 D305     		.2byte	(.L100-.L98)/2
 2186 02c4 EC05     		.2byte	(.L99-.L98)/2
 2187 02c6 0406     		.2byte	(.L97-.L98)/2
 2188              		.p2align 1
 2189              	.L167:
 2190              		.align	2
 2191              	.L166:
 2192 02c8 00000000 		.word	htim3
 2193 02cc 2C000000 		.word	bmp280+44
 2194 02d0 00000000 		.word	hi2c1
 2195 02d4 00000000 		.word	Data
 2196 02d8 10000000 		.word	.LC11
 2197 02dc 00000000 		.word	size
 2198 02e0 00000000 		.word	huart2
 2199 02e4 00000000 		.word	bmp280
 2200 02e8 08000000 		.word	.LC10
 2201 02ec 30000000 		.word	.LC12
 2202 02f0 00000000 		.word	myLoRa
 2203 02f4 00000240 		.word	1073872896
 2204 02f8 00040240 		.word	1073873920
 2205 02fc 00000000 		.word	hspi3
 2206 0300 60000000 		.word	.LC14
 2207 0304 00000000 		.word	hi2c2
 2208 0308 00000000 		.word	Font_16x26
 2209 030c 14000000 		.word	.LC6
 2210 0310 00000000 		.word	sMode
 2211 0314 00000000 		.word	iMode
 2212 0318 88000000 		.word	.LC15
 2213 031c 00000000 		.word	.LC9
 2214 0320 44000000 		.word	.LC13
 2215 0324 00000000 		.word	bModeChanged
 2216 0328 00000000 		.word	isLoraReady
 2217 032c 00000000 		.word	gps_raw
 2218 0330 00000000 		.word	huart1
 2219 0334 00000000 		.word	sendData
 2220 0338 00000000 		.word	transmit_data
 2221 033c 8C000000 		.word	.LC16
 2222              	.L157:
 251:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_7;            // default = SF_7
 2223              		.loc 1 251 7 view .LVU569
 251:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_7;            // default = SF_7
 2224              		.loc 1 251 36 is_stmt 0 view .LVU570
 2225 0340 D348     		ldr	r0, .L168
 2226 0342 40F2B113 		movw	r3, #433
 2227 0346 0362     		str	r3, [r0, #32]
 252:Core/Src/main.c ****       myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 2228              		.loc 1 252 7 is_stmt 1 view .LVU571
 252:Core/Src/main.c ****       myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 2229              		.loc 1 252 36 is_stmt 0 view .LVU572
 2230 0348 0723     		movs	r3, #7
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 81


 2231 034a 80F82430 		strb	r3, [r0, #36]
 253:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2232              		.loc 1 253 7 is_stmt 1 view .LVU573
 253:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2233              		.loc 1 253 36 is_stmt 0 view .LVU574
 2234 034e 0023     		movs	r3, #0
 2235 0350 80F82530 		strb	r3, [r0, #37]
 254:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2236              		.loc 1 254 7 is_stmt 1 view .LVU575
 254:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2237              		.loc 1 254 36 is_stmt 0 view .LVU576
 2238 0354 0123     		movs	r3, #1
 2239 0356 80F82630 		strb	r3, [r0, #38]
 255:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2240              		.loc 1 255 7 is_stmt 1 view .LVU577
 255:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2241              		.loc 1 255 36 is_stmt 0 view .LVU578
 2242 035a FF23     		movs	r3, #255
 2243 035c 80F82A30 		strb	r3, [r0, #42]
 256:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2244              		.loc 1 256 7 is_stmt 1 view .LVU579
 256:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2245              		.loc 1 256 36 is_stmt 0 view .LVU580
 2246 0360 6423     		movs	r3, #100
 2247 0362 80F82B30 		strb	r3, [r0, #43]
 257:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2248              		.loc 1 257 7 is_stmt 1 view .LVU581
 257:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2249              		.loc 1 257 36 is_stmt 0 view .LVU582
 2250 0366 0823     		movs	r3, #8
 2251 0368 0385     		strh	r3, [r0, #40]	@ movhi
 258:Core/Src/main.c ****       break;
 2252              		.loc 1 258 7 is_stmt 1 view .LVU583
 2253 036a FFF7FEFF 		bl	LoRa_init
 2254              	.LVL158:
 259:Core/Src/main.c **** 
 2255              		.loc 1 259 7 view .LVU584
 2256              	.L96:
 972:Core/Src/main.c ****     }
 2257              		.loc 1 972 7 view .LVU585
 972:Core/Src/main.c ****     }
 2258              		.loc 1 972 20 is_stmt 0 view .LVU586
 2259 036e C94B     		ldr	r3, .L168+4
 2260 0370 0022     		movs	r2, #0
 2261 0372 1A70     		strb	r2, [r3]
 2262 0374 2BE7     		b	.L93
 2263              	.L156:
 263:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_7;            // default = SF_7
 2264              		.loc 1 263 7 is_stmt 1 view .LVU587
 263:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_7;            // default = SF_7
 2265              		.loc 1 263 36 is_stmt 0 view .LVU588
 2266 0376 C648     		ldr	r0, .L168
 2267 0378 40F2B113 		movw	r3, #433
 2268 037c 0362     		str	r3, [r0, #32]
 264:Core/Src/main.c ****       myLoRa.bandWidth             = BW_10_4KHz;       // default = BW_125KHz
 2269              		.loc 1 264 7 is_stmt 1 view .LVU589
 264:Core/Src/main.c ****       myLoRa.bandWidth             = BW_10_4KHz;       // default = BW_125KHz
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 82


 2270              		.loc 1 264 36 is_stmt 0 view .LVU590
 2271 037e 0723     		movs	r3, #7
 2272 0380 80F82430 		strb	r3, [r0, #36]
 265:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2273              		.loc 1 265 7 is_stmt 1 view .LVU591
 265:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2274              		.loc 1 265 36 is_stmt 0 view .LVU592
 2275 0384 0123     		movs	r3, #1
 2276 0386 80F82530 		strb	r3, [r0, #37]
 266:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2277              		.loc 1 266 7 is_stmt 1 view .LVU593
 266:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2278              		.loc 1 266 36 is_stmt 0 view .LVU594
 2279 038a 80F82630 		strb	r3, [r0, #38]
 267:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2280              		.loc 1 267 7 is_stmt 1 view .LVU595
 267:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2281              		.loc 1 267 36 is_stmt 0 view .LVU596
 2282 038e FF23     		movs	r3, #255
 2283 0390 80F82A30 		strb	r3, [r0, #42]
 268:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2284              		.loc 1 268 7 is_stmt 1 view .LVU597
 268:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2285              		.loc 1 268 36 is_stmt 0 view .LVU598
 2286 0394 6423     		movs	r3, #100
 2287 0396 80F82B30 		strb	r3, [r0, #43]
 269:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2288              		.loc 1 269 7 is_stmt 1 view .LVU599
 269:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2289              		.loc 1 269 36 is_stmt 0 view .LVU600
 2290 039a 0823     		movs	r3, #8
 2291 039c 0385     		strh	r3, [r0, #40]	@ movhi
 270:Core/Src/main.c ****       break;
 2292              		.loc 1 270 7 is_stmt 1 view .LVU601
 2293 039e FFF7FEFF 		bl	LoRa_init
 2294              	.LVL159:
 271:Core/Src/main.c **** 
 2295              		.loc 1 271 7 view .LVU602
 2296 03a2 E4E7     		b	.L96
 2297              	.L155:
 275:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_7;            // default = SF_7
 2298              		.loc 1 275 7 view .LVU603
 275:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_7;            // default = SF_7
 2299              		.loc 1 275 36 is_stmt 0 view .LVU604
 2300 03a4 BA48     		ldr	r0, .L168
 2301 03a6 40F2B113 		movw	r3, #433
 2302 03aa 0362     		str	r3, [r0, #32]
 276:Core/Src/main.c ****       myLoRa.bandWidth             = BW_15_6KHz;       // default = BW_125KHz
 2303              		.loc 1 276 7 is_stmt 1 view .LVU605
 276:Core/Src/main.c ****       myLoRa.bandWidth             = BW_15_6KHz;       // default = BW_125KHz
 2304              		.loc 1 276 36 is_stmt 0 view .LVU606
 2305 03ac 0723     		movs	r3, #7
 2306 03ae 80F82430 		strb	r3, [r0, #36]
 277:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2307              		.loc 1 277 7 is_stmt 1 view .LVU607
 277:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2308              		.loc 1 277 36 is_stmt 0 view .LVU608
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 83


 2309 03b2 0223     		movs	r3, #2
 2310 03b4 80F82530 		strb	r3, [r0, #37]
 278:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2311              		.loc 1 278 7 is_stmt 1 view .LVU609
 278:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2312              		.loc 1 278 36 is_stmt 0 view .LVU610
 2313 03b8 0123     		movs	r3, #1
 2314 03ba 80F82630 		strb	r3, [r0, #38]
 279:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2315              		.loc 1 279 7 is_stmt 1 view .LVU611
 279:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2316              		.loc 1 279 36 is_stmt 0 view .LVU612
 2317 03be FF23     		movs	r3, #255
 2318 03c0 80F82A30 		strb	r3, [r0, #42]
 280:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2319              		.loc 1 280 7 is_stmt 1 view .LVU613
 280:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2320              		.loc 1 280 36 is_stmt 0 view .LVU614
 2321 03c4 6423     		movs	r3, #100
 2322 03c6 80F82B30 		strb	r3, [r0, #43]
 281:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2323              		.loc 1 281 7 is_stmt 1 view .LVU615
 281:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2324              		.loc 1 281 36 is_stmt 0 view .LVU616
 2325 03ca 0823     		movs	r3, #8
 2326 03cc 0385     		strh	r3, [r0, #40]	@ movhi
 282:Core/Src/main.c ****       break;
 2327              		.loc 1 282 7 is_stmt 1 view .LVU617
 2328 03ce FFF7FEFF 		bl	LoRa_init
 2329              	.LVL160:
 283:Core/Src/main.c **** 
 2330              		.loc 1 283 7 view .LVU618
 2331 03d2 CCE7     		b	.L96
 2332              	.L154:
 287:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_7;            // default = SF_7
 2333              		.loc 1 287 7 view .LVU619
 287:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_7;            // default = SF_7
 2334              		.loc 1 287 36 is_stmt 0 view .LVU620
 2335 03d4 AE48     		ldr	r0, .L168
 2336 03d6 40F2B113 		movw	r3, #433
 2337 03da 0362     		str	r3, [r0, #32]
 288:Core/Src/main.c ****       myLoRa.bandWidth             = BW_20_8KHz;       // default = BW_125KHz
 2338              		.loc 1 288 7 is_stmt 1 view .LVU621
 288:Core/Src/main.c ****       myLoRa.bandWidth             = BW_20_8KHz;       // default = BW_125KHz
 2339              		.loc 1 288 36 is_stmt 0 view .LVU622
 2340 03dc 0723     		movs	r3, #7
 2341 03de 80F82430 		strb	r3, [r0, #36]
 289:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2342              		.loc 1 289 7 is_stmt 1 view .LVU623
 289:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2343              		.loc 1 289 36 is_stmt 0 view .LVU624
 2344 03e2 0323     		movs	r3, #3
 2345 03e4 80F82530 		strb	r3, [r0, #37]
 290:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2346              		.loc 1 290 7 is_stmt 1 view .LVU625
 290:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2347              		.loc 1 290 36 is_stmt 0 view .LVU626
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 84


 2348 03e8 0123     		movs	r3, #1
 2349 03ea 80F82630 		strb	r3, [r0, #38]
 291:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2350              		.loc 1 291 7 is_stmt 1 view .LVU627
 291:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2351              		.loc 1 291 36 is_stmt 0 view .LVU628
 2352 03ee FF23     		movs	r3, #255
 2353 03f0 80F82A30 		strb	r3, [r0, #42]
 292:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2354              		.loc 1 292 7 is_stmt 1 view .LVU629
 292:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2355              		.loc 1 292 36 is_stmt 0 view .LVU630
 2356 03f4 6423     		movs	r3, #100
 2357 03f6 80F82B30 		strb	r3, [r0, #43]
 293:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2358              		.loc 1 293 7 is_stmt 1 view .LVU631
 293:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2359              		.loc 1 293 36 is_stmt 0 view .LVU632
 2360 03fa 0823     		movs	r3, #8
 2361 03fc 0385     		strh	r3, [r0, #40]	@ movhi
 294:Core/Src/main.c ****       break;
 2362              		.loc 1 294 7 is_stmt 1 view .LVU633
 2363 03fe FFF7FEFF 		bl	LoRa_init
 2364              	.LVL161:
 295:Core/Src/main.c **** 
 2365              		.loc 1 295 7 view .LVU634
 2366 0402 B4E7     		b	.L96
 2367              	.L153:
 299:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_7;            // default = SF_7
 2368              		.loc 1 299 7 view .LVU635
 299:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_7;            // default = SF_7
 2369              		.loc 1 299 36 is_stmt 0 view .LVU636
 2370 0404 A248     		ldr	r0, .L168
 2371 0406 40F2B113 		movw	r3, #433
 2372 040a 0362     		str	r3, [r0, #32]
 300:Core/Src/main.c ****       myLoRa.bandWidth             = BW_31_25KHz;       // default = BW_125KHz
 2373              		.loc 1 300 7 is_stmt 1 view .LVU637
 300:Core/Src/main.c ****       myLoRa.bandWidth             = BW_31_25KHz;       // default = BW_125KHz
 2374              		.loc 1 300 36 is_stmt 0 view .LVU638
 2375 040c 0723     		movs	r3, #7
 2376 040e 80F82430 		strb	r3, [r0, #36]
 301:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2377              		.loc 1 301 7 is_stmt 1 view .LVU639
 301:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2378              		.loc 1 301 36 is_stmt 0 view .LVU640
 2379 0412 0423     		movs	r3, #4
 2380 0414 80F82530 		strb	r3, [r0, #37]
 302:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2381              		.loc 1 302 7 is_stmt 1 view .LVU641
 302:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2382              		.loc 1 302 36 is_stmt 0 view .LVU642
 2383 0418 0123     		movs	r3, #1
 2384 041a 80F82630 		strb	r3, [r0, #38]
 303:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2385              		.loc 1 303 7 is_stmt 1 view .LVU643
 303:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2386              		.loc 1 303 36 is_stmt 0 view .LVU644
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 85


 2387 041e FF23     		movs	r3, #255
 2388 0420 80F82A30 		strb	r3, [r0, #42]
 304:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2389              		.loc 1 304 7 is_stmt 1 view .LVU645
 304:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2390              		.loc 1 304 36 is_stmt 0 view .LVU646
 2391 0424 6423     		movs	r3, #100
 2392 0426 80F82B30 		strb	r3, [r0, #43]
 305:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2393              		.loc 1 305 7 is_stmt 1 view .LVU647
 305:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2394              		.loc 1 305 36 is_stmt 0 view .LVU648
 2395 042a 0823     		movs	r3, #8
 2396 042c 0385     		strh	r3, [r0, #40]	@ movhi
 306:Core/Src/main.c ****       break;
 2397              		.loc 1 306 7 is_stmt 1 view .LVU649
 2398 042e FFF7FEFF 		bl	LoRa_init
 2399              	.LVL162:
 307:Core/Src/main.c **** 
 2400              		.loc 1 307 7 view .LVU650
 2401 0432 9CE7     		b	.L96
 2402              	.L152:
 311:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_7;            // default = SF_7
 2403              		.loc 1 311 7 view .LVU651
 311:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_7;            // default = SF_7
 2404              		.loc 1 311 36 is_stmt 0 view .LVU652
 2405 0434 9648     		ldr	r0, .L168
 2406 0436 40F2B113 		movw	r3, #433
 2407 043a 0362     		str	r3, [r0, #32]
 312:Core/Src/main.c ****       myLoRa.bandWidth             = BW_41_7KHz;       // default = BW_125KHz
 2408              		.loc 1 312 7 is_stmt 1 view .LVU653
 312:Core/Src/main.c ****       myLoRa.bandWidth             = BW_41_7KHz;       // default = BW_125KHz
 2409              		.loc 1 312 36 is_stmt 0 view .LVU654
 2410 043c 0723     		movs	r3, #7
 2411 043e 80F82430 		strb	r3, [r0, #36]
 313:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2412              		.loc 1 313 7 is_stmt 1 view .LVU655
 313:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2413              		.loc 1 313 36 is_stmt 0 view .LVU656
 2414 0442 0523     		movs	r3, #5
 2415 0444 80F82530 		strb	r3, [r0, #37]
 314:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2416              		.loc 1 314 7 is_stmt 1 view .LVU657
 314:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2417              		.loc 1 314 36 is_stmt 0 view .LVU658
 2418 0448 0123     		movs	r3, #1
 2419 044a 80F82630 		strb	r3, [r0, #38]
 315:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2420              		.loc 1 315 7 is_stmt 1 view .LVU659
 315:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2421              		.loc 1 315 36 is_stmt 0 view .LVU660
 2422 044e FF23     		movs	r3, #255
 2423 0450 80F82A30 		strb	r3, [r0, #42]
 316:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2424              		.loc 1 316 7 is_stmt 1 view .LVU661
 316:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2425              		.loc 1 316 36 is_stmt 0 view .LVU662
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 86


 2426 0454 6423     		movs	r3, #100
 2427 0456 80F82B30 		strb	r3, [r0, #43]
 317:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2428              		.loc 1 317 7 is_stmt 1 view .LVU663
 317:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2429              		.loc 1 317 36 is_stmt 0 view .LVU664
 2430 045a 0823     		movs	r3, #8
 2431 045c 0385     		strh	r3, [r0, #40]	@ movhi
 318:Core/Src/main.c ****       break;
 2432              		.loc 1 318 7 is_stmt 1 view .LVU665
 2433 045e FFF7FEFF 		bl	LoRa_init
 2434              	.LVL163:
 319:Core/Src/main.c **** 
 2435              		.loc 1 319 7 view .LVU666
 2436 0462 84E7     		b	.L96
 2437              	.L151:
 323:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_7;            // default = SF_7
 2438              		.loc 1 323 7 view .LVU667
 323:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_7;            // default = SF_7
 2439              		.loc 1 323 36 is_stmt 0 view .LVU668
 2440 0464 8A48     		ldr	r0, .L168
 2441 0466 40F2B113 		movw	r3, #433
 2442 046a 0362     		str	r3, [r0, #32]
 324:Core/Src/main.c ****       myLoRa.bandWidth             = BW_62_5KHz;       // default = BW_125KHz
 2443              		.loc 1 324 7 is_stmt 1 view .LVU669
 324:Core/Src/main.c ****       myLoRa.bandWidth             = BW_62_5KHz;       // default = BW_125KHz
 2444              		.loc 1 324 36 is_stmt 0 view .LVU670
 2445 046c 0723     		movs	r3, #7
 2446 046e 80F82430 		strb	r3, [r0, #36]
 325:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2447              		.loc 1 325 7 is_stmt 1 view .LVU671
 325:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2448              		.loc 1 325 36 is_stmt 0 view .LVU672
 2449 0472 0623     		movs	r3, #6
 2450 0474 80F82530 		strb	r3, [r0, #37]
 326:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2451              		.loc 1 326 7 is_stmt 1 view .LVU673
 326:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2452              		.loc 1 326 36 is_stmt 0 view .LVU674
 2453 0478 0123     		movs	r3, #1
 2454 047a 80F82630 		strb	r3, [r0, #38]
 327:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2455              		.loc 1 327 7 is_stmt 1 view .LVU675
 327:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2456              		.loc 1 327 36 is_stmt 0 view .LVU676
 2457 047e FF23     		movs	r3, #255
 2458 0480 80F82A30 		strb	r3, [r0, #42]
 328:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2459              		.loc 1 328 7 is_stmt 1 view .LVU677
 328:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2460              		.loc 1 328 36 is_stmt 0 view .LVU678
 2461 0484 6423     		movs	r3, #100
 2462 0486 80F82B30 		strb	r3, [r0, #43]
 329:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2463              		.loc 1 329 7 is_stmt 1 view .LVU679
 329:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2464              		.loc 1 329 36 is_stmt 0 view .LVU680
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 87


 2465 048a 0823     		movs	r3, #8
 2466 048c 0385     		strh	r3, [r0, #40]	@ movhi
 330:Core/Src/main.c ****       break;
 2467              		.loc 1 330 7 is_stmt 1 view .LVU681
 2468 048e FFF7FEFF 		bl	LoRa_init
 2469              	.LVL164:
 331:Core/Src/main.c **** 
 2470              		.loc 1 331 7 view .LVU682
 2471 0492 6CE7     		b	.L96
 2472              	.L150:
 335:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_7;            // default = SF_7
 2473              		.loc 1 335 7 view .LVU683
 335:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_7;            // default = SF_7
 2474              		.loc 1 335 36 is_stmt 0 view .LVU684
 2475 0494 7E48     		ldr	r0, .L168
 2476 0496 40F2B113 		movw	r3, #433
 2477 049a 0362     		str	r3, [r0, #32]
 336:Core/Src/main.c ****       myLoRa.bandWidth             = BW_125KHz;       // default = BW_125KHz
 2478              		.loc 1 336 7 is_stmt 1 view .LVU685
 336:Core/Src/main.c ****       myLoRa.bandWidth             = BW_125KHz;       // default = BW_125KHz
 2479              		.loc 1 336 36 is_stmt 0 view .LVU686
 2480 049c 0723     		movs	r3, #7
 2481 049e 80F82430 		strb	r3, [r0, #36]
 337:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2482              		.loc 1 337 7 is_stmt 1 view .LVU687
 337:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2483              		.loc 1 337 36 is_stmt 0 view .LVU688
 2484 04a2 80F82530 		strb	r3, [r0, #37]
 338:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2485              		.loc 1 338 7 is_stmt 1 view .LVU689
 338:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2486              		.loc 1 338 36 is_stmt 0 view .LVU690
 2487 04a6 0123     		movs	r3, #1
 2488 04a8 80F82630 		strb	r3, [r0, #38]
 339:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2489              		.loc 1 339 7 is_stmt 1 view .LVU691
 339:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2490              		.loc 1 339 36 is_stmt 0 view .LVU692
 2491 04ac FF23     		movs	r3, #255
 2492 04ae 80F82A30 		strb	r3, [r0, #42]
 340:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2493              		.loc 1 340 7 is_stmt 1 view .LVU693
 340:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2494              		.loc 1 340 36 is_stmt 0 view .LVU694
 2495 04b2 6423     		movs	r3, #100
 2496 04b4 80F82B30 		strb	r3, [r0, #43]
 341:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2497              		.loc 1 341 7 is_stmt 1 view .LVU695
 341:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2498              		.loc 1 341 36 is_stmt 0 view .LVU696
 2499 04b8 0823     		movs	r3, #8
 2500 04ba 0385     		strh	r3, [r0, #40]	@ movhi
 342:Core/Src/main.c ****       break;
 2501              		.loc 1 342 7 is_stmt 1 view .LVU697
 2502 04bc FFF7FEFF 		bl	LoRa_init
 2503              	.LVL165:
 343:Core/Src/main.c **** 
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 88


 2504              		.loc 1 343 7 view .LVU698
 2505 04c0 55E7     		b	.L96
 2506              	.L149:
 347:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_7;            // default = SF_7
 2507              		.loc 1 347 7 view .LVU699
 347:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_7;            // default = SF_7
 2508              		.loc 1 347 36 is_stmt 0 view .LVU700
 2509 04c2 7348     		ldr	r0, .L168
 2510 04c4 40F2B113 		movw	r3, #433
 2511 04c8 0362     		str	r3, [r0, #32]
 348:Core/Src/main.c ****       myLoRa.bandWidth             = BW_250KHz;       // default = BW_125KHz
 2512              		.loc 1 348 7 is_stmt 1 view .LVU701
 348:Core/Src/main.c ****       myLoRa.bandWidth             = BW_250KHz;       // default = BW_125KHz
 2513              		.loc 1 348 36 is_stmt 0 view .LVU702
 2514 04ca 0723     		movs	r3, #7
 2515 04cc 80F82430 		strb	r3, [r0, #36]
 349:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2516              		.loc 1 349 7 is_stmt 1 view .LVU703
 349:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2517              		.loc 1 349 36 is_stmt 0 view .LVU704
 2518 04d0 0823     		movs	r3, #8
 2519 04d2 80F82530 		strb	r3, [r0, #37]
 350:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2520              		.loc 1 350 7 is_stmt 1 view .LVU705
 350:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2521              		.loc 1 350 36 is_stmt 0 view .LVU706
 2522 04d6 0122     		movs	r2, #1
 2523 04d8 80F82620 		strb	r2, [r0, #38]
 351:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2524              		.loc 1 351 7 is_stmt 1 view .LVU707
 351:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2525              		.loc 1 351 36 is_stmt 0 view .LVU708
 2526 04dc FF22     		movs	r2, #255
 2527 04de 80F82A20 		strb	r2, [r0, #42]
 352:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2528              		.loc 1 352 7 is_stmt 1 view .LVU709
 352:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2529              		.loc 1 352 36 is_stmt 0 view .LVU710
 2530 04e2 6422     		movs	r2, #100
 2531 04e4 80F82B20 		strb	r2, [r0, #43]
 353:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2532              		.loc 1 353 7 is_stmt 1 view .LVU711
 353:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2533              		.loc 1 353 36 is_stmt 0 view .LVU712
 2534 04e8 0385     		strh	r3, [r0, #40]	@ movhi
 354:Core/Src/main.c ****       break;
 2535              		.loc 1 354 7 is_stmt 1 view .LVU713
 2536 04ea FFF7FEFF 		bl	LoRa_init
 2537              	.LVL166:
 355:Core/Src/main.c **** 
 2538              		.loc 1 355 7 view .LVU714
 2539 04ee 3EE7     		b	.L96
 2540              	.L148:
 359:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_7;            // default = SF_7
 2541              		.loc 1 359 7 view .LVU715
 359:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_7;            // default = SF_7
 2542              		.loc 1 359 36 is_stmt 0 view .LVU716
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 89


 2543 04f0 6748     		ldr	r0, .L168
 2544 04f2 40F2B113 		movw	r3, #433
 2545 04f6 0362     		str	r3, [r0, #32]
 360:Core/Src/main.c ****       myLoRa.bandWidth             = BW_500KHz;       // default = BW_125KHz
 2546              		.loc 1 360 7 is_stmt 1 view .LVU717
 360:Core/Src/main.c ****       myLoRa.bandWidth             = BW_500KHz;       // default = BW_125KHz
 2547              		.loc 1 360 36 is_stmt 0 view .LVU718
 2548 04f8 0723     		movs	r3, #7
 2549 04fa 80F82430 		strb	r3, [r0, #36]
 361:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2550              		.loc 1 361 7 is_stmt 1 view .LVU719
 361:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2551              		.loc 1 361 36 is_stmt 0 view .LVU720
 2552 04fe 0923     		movs	r3, #9
 2553 0500 80F82530 		strb	r3, [r0, #37]
 362:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2554              		.loc 1 362 7 is_stmt 1 view .LVU721
 362:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2555              		.loc 1 362 36 is_stmt 0 view .LVU722
 2556 0504 0123     		movs	r3, #1
 2557 0506 80F82630 		strb	r3, [r0, #38]
 363:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2558              		.loc 1 363 7 is_stmt 1 view .LVU723
 363:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2559              		.loc 1 363 36 is_stmt 0 view .LVU724
 2560 050a FF23     		movs	r3, #255
 2561 050c 80F82A30 		strb	r3, [r0, #42]
 364:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2562              		.loc 1 364 7 is_stmt 1 view .LVU725
 364:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2563              		.loc 1 364 36 is_stmt 0 view .LVU726
 2564 0510 6423     		movs	r3, #100
 2565 0512 80F82B30 		strb	r3, [r0, #43]
 365:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2566              		.loc 1 365 7 is_stmt 1 view .LVU727
 365:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2567              		.loc 1 365 36 is_stmt 0 view .LVU728
 2568 0516 0823     		movs	r3, #8
 2569 0518 0385     		strh	r3, [r0, #40]	@ movhi
 366:Core/Src/main.c ****       break;
 2570              		.loc 1 366 7 is_stmt 1 view .LVU729
 2571 051a FFF7FEFF 		bl	LoRa_init
 2572              	.LVL167:
 367:Core/Src/main.c ****     
 2573              		.loc 1 367 7 view .LVU730
 2574 051e 26E7     		b	.L96
 2575              	.L147:
 371:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_8;            // default = SF_7
 2576              		.loc 1 371 7 view .LVU731
 371:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_8;            // default = SF_7
 2577              		.loc 1 371 36 is_stmt 0 view .LVU732
 2578 0520 5B48     		ldr	r0, .L168
 2579 0522 40F2B113 		movw	r3, #433
 2580 0526 0362     		str	r3, [r0, #32]
 372:Core/Src/main.c ****       myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 2581              		.loc 1 372 7 is_stmt 1 view .LVU733
 372:Core/Src/main.c ****       myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 90


 2582              		.loc 1 372 36 is_stmt 0 view .LVU734
 2583 0528 0823     		movs	r3, #8
 2584 052a 80F82430 		strb	r3, [r0, #36]
 373:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2585              		.loc 1 373 7 is_stmt 1 view .LVU735
 373:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2586              		.loc 1 373 36 is_stmt 0 view .LVU736
 2587 052e 0022     		movs	r2, #0
 2588 0530 80F82520 		strb	r2, [r0, #37]
 374:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2589              		.loc 1 374 7 is_stmt 1 view .LVU737
 374:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2590              		.loc 1 374 36 is_stmt 0 view .LVU738
 2591 0534 0122     		movs	r2, #1
 2592 0536 80F82620 		strb	r2, [r0, #38]
 375:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2593              		.loc 1 375 7 is_stmt 1 view .LVU739
 375:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2594              		.loc 1 375 36 is_stmt 0 view .LVU740
 2595 053a FF22     		movs	r2, #255
 2596 053c 80F82A20 		strb	r2, [r0, #42]
 376:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2597              		.loc 1 376 7 is_stmt 1 view .LVU741
 376:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2598              		.loc 1 376 36 is_stmt 0 view .LVU742
 2599 0540 6422     		movs	r2, #100
 2600 0542 80F82B20 		strb	r2, [r0, #43]
 377:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2601              		.loc 1 377 7 is_stmt 1 view .LVU743
 377:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2602              		.loc 1 377 36 is_stmt 0 view .LVU744
 2603 0546 0385     		strh	r3, [r0, #40]	@ movhi
 378:Core/Src/main.c ****       break;
 2604              		.loc 1 378 7 is_stmt 1 view .LVU745
 2605 0548 FFF7FEFF 		bl	LoRa_init
 2606              	.LVL168:
 379:Core/Src/main.c **** 
 2607              		.loc 1 379 7 view .LVU746
 2608 054c 0FE7     		b	.L96
 2609              	.L146:
 383:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_8;            // default = SF_7
 2610              		.loc 1 383 7 view .LVU747
 383:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_8;            // default = SF_7
 2611              		.loc 1 383 36 is_stmt 0 view .LVU748
 2612 054e 5048     		ldr	r0, .L168
 2613 0550 40F2B113 		movw	r3, #433
 2614 0554 0362     		str	r3, [r0, #32]
 384:Core/Src/main.c ****       myLoRa.bandWidth             = BW_10_4KHz;       // default = BW_125KHz
 2615              		.loc 1 384 7 is_stmt 1 view .LVU749
 384:Core/Src/main.c ****       myLoRa.bandWidth             = BW_10_4KHz;       // default = BW_125KHz
 2616              		.loc 1 384 36 is_stmt 0 view .LVU750
 2617 0556 0823     		movs	r3, #8
 2618 0558 80F82430 		strb	r3, [r0, #36]
 385:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2619              		.loc 1 385 7 is_stmt 1 view .LVU751
 385:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2620              		.loc 1 385 36 is_stmt 0 view .LVU752
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 91


 2621 055c 0122     		movs	r2, #1
 2622 055e 80F82520 		strb	r2, [r0, #37]
 386:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2623              		.loc 1 386 7 is_stmt 1 view .LVU753
 386:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2624              		.loc 1 386 36 is_stmt 0 view .LVU754
 2625 0562 80F82620 		strb	r2, [r0, #38]
 387:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2626              		.loc 1 387 7 is_stmt 1 view .LVU755
 387:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2627              		.loc 1 387 36 is_stmt 0 view .LVU756
 2628 0566 FF22     		movs	r2, #255
 2629 0568 80F82A20 		strb	r2, [r0, #42]
 388:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2630              		.loc 1 388 7 is_stmt 1 view .LVU757
 388:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2631              		.loc 1 388 36 is_stmt 0 view .LVU758
 2632 056c 6422     		movs	r2, #100
 2633 056e 80F82B20 		strb	r2, [r0, #43]
 389:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2634              		.loc 1 389 7 is_stmt 1 view .LVU759
 389:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2635              		.loc 1 389 36 is_stmt 0 view .LVU760
 2636 0572 0385     		strh	r3, [r0, #40]	@ movhi
 390:Core/Src/main.c ****       break;
 2637              		.loc 1 390 7 is_stmt 1 view .LVU761
 2638 0574 FFF7FEFF 		bl	LoRa_init
 2639              	.LVL169:
 391:Core/Src/main.c **** 
 2640              		.loc 1 391 7 view .LVU762
 2641 0578 F9E6     		b	.L96
 2642              	.L145:
 395:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_8;            // default = SF_7
 2643              		.loc 1 395 7 view .LVU763
 395:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_8;            // default = SF_7
 2644              		.loc 1 395 36 is_stmt 0 view .LVU764
 2645 057a 4548     		ldr	r0, .L168
 2646 057c 40F2B113 		movw	r3, #433
 2647 0580 0362     		str	r3, [r0, #32]
 396:Core/Src/main.c ****       myLoRa.bandWidth             = BW_15_6KHz;       // default = BW_125KHz
 2648              		.loc 1 396 7 is_stmt 1 view .LVU765
 396:Core/Src/main.c ****       myLoRa.bandWidth             = BW_15_6KHz;       // default = BW_125KHz
 2649              		.loc 1 396 36 is_stmt 0 view .LVU766
 2650 0582 0823     		movs	r3, #8
 2651 0584 80F82430 		strb	r3, [r0, #36]
 397:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2652              		.loc 1 397 7 is_stmt 1 view .LVU767
 397:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2653              		.loc 1 397 36 is_stmt 0 view .LVU768
 2654 0588 0222     		movs	r2, #2
 2655 058a 80F82520 		strb	r2, [r0, #37]
 398:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2656              		.loc 1 398 7 is_stmt 1 view .LVU769
 398:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2657              		.loc 1 398 36 is_stmt 0 view .LVU770
 2658 058e 0122     		movs	r2, #1
 2659 0590 80F82620 		strb	r2, [r0, #38]
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 92


 399:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2660              		.loc 1 399 7 is_stmt 1 view .LVU771
 399:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2661              		.loc 1 399 36 is_stmt 0 view .LVU772
 2662 0594 FF22     		movs	r2, #255
 2663 0596 80F82A20 		strb	r2, [r0, #42]
 400:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2664              		.loc 1 400 7 is_stmt 1 view .LVU773
 400:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2665              		.loc 1 400 36 is_stmt 0 view .LVU774
 2666 059a 6422     		movs	r2, #100
 2667 059c 80F82B20 		strb	r2, [r0, #43]
 401:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2668              		.loc 1 401 7 is_stmt 1 view .LVU775
 401:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2669              		.loc 1 401 36 is_stmt 0 view .LVU776
 2670 05a0 0385     		strh	r3, [r0, #40]	@ movhi
 402:Core/Src/main.c ****       break;
 2671              		.loc 1 402 7 is_stmt 1 view .LVU777
 2672 05a2 FFF7FEFF 		bl	LoRa_init
 2673              	.LVL170:
 403:Core/Src/main.c **** 
 2674              		.loc 1 403 7 view .LVU778
 2675 05a6 E2E6     		b	.L96
 2676              	.L144:
 407:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_8;            // default = SF_7
 2677              		.loc 1 407 7 view .LVU779
 407:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_8;            // default = SF_7
 2678              		.loc 1 407 36 is_stmt 0 view .LVU780
 2679 05a8 3948     		ldr	r0, .L168
 2680 05aa 40F2B113 		movw	r3, #433
 2681 05ae 0362     		str	r3, [r0, #32]
 408:Core/Src/main.c ****       myLoRa.bandWidth             = BW_20_8KHz;       // default = BW_125KHz
 2682              		.loc 1 408 7 is_stmt 1 view .LVU781
 408:Core/Src/main.c ****       myLoRa.bandWidth             = BW_20_8KHz;       // default = BW_125KHz
 2683              		.loc 1 408 36 is_stmt 0 view .LVU782
 2684 05b0 0823     		movs	r3, #8
 2685 05b2 80F82430 		strb	r3, [r0, #36]
 409:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2686              		.loc 1 409 7 is_stmt 1 view .LVU783
 409:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2687              		.loc 1 409 36 is_stmt 0 view .LVU784
 2688 05b6 0322     		movs	r2, #3
 2689 05b8 80F82520 		strb	r2, [r0, #37]
 410:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2690              		.loc 1 410 7 is_stmt 1 view .LVU785
 410:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2691              		.loc 1 410 36 is_stmt 0 view .LVU786
 2692 05bc 0122     		movs	r2, #1
 2693 05be 80F82620 		strb	r2, [r0, #38]
 411:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2694              		.loc 1 411 7 is_stmt 1 view .LVU787
 411:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2695              		.loc 1 411 36 is_stmt 0 view .LVU788
 2696 05c2 FF22     		movs	r2, #255
 2697 05c4 80F82A20 		strb	r2, [r0, #42]
 412:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 93


 2698              		.loc 1 412 7 is_stmt 1 view .LVU789
 412:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2699              		.loc 1 412 36 is_stmt 0 view .LVU790
 2700 05c8 6422     		movs	r2, #100
 2701 05ca 80F82B20 		strb	r2, [r0, #43]
 413:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2702              		.loc 1 413 7 is_stmt 1 view .LVU791
 413:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2703              		.loc 1 413 36 is_stmt 0 view .LVU792
 2704 05ce 0385     		strh	r3, [r0, #40]	@ movhi
 414:Core/Src/main.c ****       break;
 2705              		.loc 1 414 7 is_stmt 1 view .LVU793
 2706 05d0 FFF7FEFF 		bl	LoRa_init
 2707              	.LVL171:
 415:Core/Src/main.c **** 
 2708              		.loc 1 415 7 view .LVU794
 2709 05d4 CBE6     		b	.L96
 2710              	.L143:
 419:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_8;            // default = SF_7
 2711              		.loc 1 419 7 view .LVU795
 419:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_8;            // default = SF_7
 2712              		.loc 1 419 36 is_stmt 0 view .LVU796
 2713 05d6 2E48     		ldr	r0, .L168
 2714 05d8 40F2B113 		movw	r3, #433
 2715 05dc 0362     		str	r3, [r0, #32]
 420:Core/Src/main.c ****       myLoRa.bandWidth             = BW_31_25KHz;       // default = BW_125KHz
 2716              		.loc 1 420 7 is_stmt 1 view .LVU797
 420:Core/Src/main.c ****       myLoRa.bandWidth             = BW_31_25KHz;       // default = BW_125KHz
 2717              		.loc 1 420 36 is_stmt 0 view .LVU798
 2718 05de 0823     		movs	r3, #8
 2719 05e0 80F82430 		strb	r3, [r0, #36]
 421:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2720              		.loc 1 421 7 is_stmt 1 view .LVU799
 421:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2721              		.loc 1 421 36 is_stmt 0 view .LVU800
 2722 05e4 0422     		movs	r2, #4
 2723 05e6 80F82520 		strb	r2, [r0, #37]
 422:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2724              		.loc 1 422 7 is_stmt 1 view .LVU801
 422:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2725              		.loc 1 422 36 is_stmt 0 view .LVU802
 2726 05ea 0122     		movs	r2, #1
 2727 05ec 80F82620 		strb	r2, [r0, #38]
 423:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2728              		.loc 1 423 7 is_stmt 1 view .LVU803
 423:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2729              		.loc 1 423 36 is_stmt 0 view .LVU804
 2730 05f0 FF22     		movs	r2, #255
 2731 05f2 80F82A20 		strb	r2, [r0, #42]
 424:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2732              		.loc 1 424 7 is_stmt 1 view .LVU805
 424:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2733              		.loc 1 424 36 is_stmt 0 view .LVU806
 2734 05f6 6422     		movs	r2, #100
 2735 05f8 80F82B20 		strb	r2, [r0, #43]
 425:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2736              		.loc 1 425 7 is_stmt 1 view .LVU807
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 94


 425:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2737              		.loc 1 425 36 is_stmt 0 view .LVU808
 2738 05fc 0385     		strh	r3, [r0, #40]	@ movhi
 426:Core/Src/main.c ****       break;
 2739              		.loc 1 426 7 is_stmt 1 view .LVU809
 2740 05fe FFF7FEFF 		bl	LoRa_init
 2741              	.LVL172:
 427:Core/Src/main.c **** 
 2742              		.loc 1 427 7 view .LVU810
 2743 0602 B4E6     		b	.L96
 2744              	.L142:
 431:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_8;            // default = SF_7
 2745              		.loc 1 431 7 view .LVU811
 431:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_8;            // default = SF_7
 2746              		.loc 1 431 36 is_stmt 0 view .LVU812
 2747 0604 2248     		ldr	r0, .L168
 2748 0606 40F2B113 		movw	r3, #433
 2749 060a 0362     		str	r3, [r0, #32]
 432:Core/Src/main.c ****       myLoRa.bandWidth             = BW_41_7KHz;       // default = BW_125KHz
 2750              		.loc 1 432 7 is_stmt 1 view .LVU813
 432:Core/Src/main.c ****       myLoRa.bandWidth             = BW_41_7KHz;       // default = BW_125KHz
 2751              		.loc 1 432 36 is_stmt 0 view .LVU814
 2752 060c 0823     		movs	r3, #8
 2753 060e 80F82430 		strb	r3, [r0, #36]
 433:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2754              		.loc 1 433 7 is_stmt 1 view .LVU815
 433:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2755              		.loc 1 433 36 is_stmt 0 view .LVU816
 2756 0612 0522     		movs	r2, #5
 2757 0614 80F82520 		strb	r2, [r0, #37]
 434:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2758              		.loc 1 434 7 is_stmt 1 view .LVU817
 434:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2759              		.loc 1 434 36 is_stmt 0 view .LVU818
 2760 0618 0122     		movs	r2, #1
 2761 061a 80F82620 		strb	r2, [r0, #38]
 435:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2762              		.loc 1 435 7 is_stmt 1 view .LVU819
 435:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2763              		.loc 1 435 36 is_stmt 0 view .LVU820
 2764 061e FF22     		movs	r2, #255
 2765 0620 80F82A20 		strb	r2, [r0, #42]
 436:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2766              		.loc 1 436 7 is_stmt 1 view .LVU821
 436:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2767              		.loc 1 436 36 is_stmt 0 view .LVU822
 2768 0624 6422     		movs	r2, #100
 2769 0626 80F82B20 		strb	r2, [r0, #43]
 437:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2770              		.loc 1 437 7 is_stmt 1 view .LVU823
 437:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2771              		.loc 1 437 36 is_stmt 0 view .LVU824
 2772 062a 0385     		strh	r3, [r0, #40]	@ movhi
 438:Core/Src/main.c ****       break;
 2773              		.loc 1 438 7 is_stmt 1 view .LVU825
 2774 062c FFF7FEFF 		bl	LoRa_init
 2775              	.LVL173:
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 95


 439:Core/Src/main.c **** 
 2776              		.loc 1 439 7 view .LVU826
 2777 0630 9DE6     		b	.L96
 2778              	.L141:
 443:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_8;            // default = SF_7
 2779              		.loc 1 443 7 view .LVU827
 443:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_8;            // default = SF_7
 2780              		.loc 1 443 36 is_stmt 0 view .LVU828
 2781 0632 1748     		ldr	r0, .L168
 2782 0634 40F2B113 		movw	r3, #433
 2783 0638 0362     		str	r3, [r0, #32]
 444:Core/Src/main.c ****       myLoRa.bandWidth             = BW_62_5KHz;       // default = BW_125KHz
 2784              		.loc 1 444 7 is_stmt 1 view .LVU829
 444:Core/Src/main.c ****       myLoRa.bandWidth             = BW_62_5KHz;       // default = BW_125KHz
 2785              		.loc 1 444 36 is_stmt 0 view .LVU830
 2786 063a 0823     		movs	r3, #8
 2787 063c 80F82430 		strb	r3, [r0, #36]
 445:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2788              		.loc 1 445 7 is_stmt 1 view .LVU831
 445:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2789              		.loc 1 445 36 is_stmt 0 view .LVU832
 2790 0640 0622     		movs	r2, #6
 2791 0642 80F82520 		strb	r2, [r0, #37]
 446:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2792              		.loc 1 446 7 is_stmt 1 view .LVU833
 446:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2793              		.loc 1 446 36 is_stmt 0 view .LVU834
 2794 0646 0122     		movs	r2, #1
 2795 0648 80F82620 		strb	r2, [r0, #38]
 447:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2796              		.loc 1 447 7 is_stmt 1 view .LVU835
 447:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2797              		.loc 1 447 36 is_stmt 0 view .LVU836
 2798 064c FF22     		movs	r2, #255
 2799 064e 80F82A20 		strb	r2, [r0, #42]
 448:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2800              		.loc 1 448 7 is_stmt 1 view .LVU837
 448:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2801              		.loc 1 448 36 is_stmt 0 view .LVU838
 2802 0652 6422     		movs	r2, #100
 2803 0654 80F82B20 		strb	r2, [r0, #43]
 449:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2804              		.loc 1 449 7 is_stmt 1 view .LVU839
 449:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2805              		.loc 1 449 36 is_stmt 0 view .LVU840
 2806 0658 0385     		strh	r3, [r0, #40]	@ movhi
 450:Core/Src/main.c ****       break;
 2807              		.loc 1 450 7 is_stmt 1 view .LVU841
 2808 065a FFF7FEFF 		bl	LoRa_init
 2809              	.LVL174:
 451:Core/Src/main.c **** 
 2810              		.loc 1 451 7 view .LVU842
 2811 065e 86E6     		b	.L96
 2812              	.L140:
 455:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_8;            // default = SF_7
 2813              		.loc 1 455 7 view .LVU843
 455:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_8;            // default = SF_7
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 96


 2814              		.loc 1 455 36 is_stmt 0 view .LVU844
 2815 0660 0B48     		ldr	r0, .L168
 2816 0662 40F2B113 		movw	r3, #433
 2817 0666 0362     		str	r3, [r0, #32]
 456:Core/Src/main.c ****       myLoRa.bandWidth             = BW_125KHz;       // default = BW_125KHz
 2818              		.loc 1 456 7 is_stmt 1 view .LVU845
 456:Core/Src/main.c ****       myLoRa.bandWidth             = BW_125KHz;       // default = BW_125KHz
 2819              		.loc 1 456 36 is_stmt 0 view .LVU846
 2820 0668 0823     		movs	r3, #8
 2821 066a 80F82430 		strb	r3, [r0, #36]
 457:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2822              		.loc 1 457 7 is_stmt 1 view .LVU847
 457:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2823              		.loc 1 457 36 is_stmt 0 view .LVU848
 2824 066e 0722     		movs	r2, #7
 2825 0670 80F82520 		strb	r2, [r0, #37]
 458:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2826              		.loc 1 458 7 is_stmt 1 view .LVU849
 458:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2827              		.loc 1 458 36 is_stmt 0 view .LVU850
 2828 0674 0122     		movs	r2, #1
 2829 0676 80F82620 		strb	r2, [r0, #38]
 459:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2830              		.loc 1 459 7 is_stmt 1 view .LVU851
 459:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2831              		.loc 1 459 36 is_stmt 0 view .LVU852
 2832 067a FF22     		movs	r2, #255
 2833 067c 80F82A20 		strb	r2, [r0, #42]
 460:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2834              		.loc 1 460 7 is_stmt 1 view .LVU853
 460:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2835              		.loc 1 460 36 is_stmt 0 view .LVU854
 2836 0680 6422     		movs	r2, #100
 2837 0682 80F82B20 		strb	r2, [r0, #43]
 461:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2838              		.loc 1 461 7 is_stmt 1 view .LVU855
 461:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2839              		.loc 1 461 36 is_stmt 0 view .LVU856
 2840 0686 0385     		strh	r3, [r0, #40]	@ movhi
 462:Core/Src/main.c ****       break;
 2841              		.loc 1 462 7 is_stmt 1 view .LVU857
 2842 0688 FFF7FEFF 		bl	LoRa_init
 2843              	.LVL175:
 463:Core/Src/main.c **** 
 2844              		.loc 1 463 7 view .LVU858
 2845 068c 6FE6     		b	.L96
 2846              	.L169:
 2847 068e 00BF     		.align	2
 2848              	.L168:
 2849 0690 00000000 		.word	myLoRa
 2850 0694 00000000 		.word	bModeChanged
 2851              	.L139:
 467:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_8;            // default = SF_7
 2852              		.loc 1 467 7 view .LVU859
 467:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_8;            // default = SF_7
 2853              		.loc 1 467 36 is_stmt 0 view .LVU860
 2854 0698 D448     		ldr	r0, .L170
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 97


 2855 069a 40F2B113 		movw	r3, #433
 2856 069e 0362     		str	r3, [r0, #32]
 468:Core/Src/main.c ****       myLoRa.bandWidth             = BW_250KHz;       // default = BW_125KHz
 2857              		.loc 1 468 7 is_stmt 1 view .LVU861
 468:Core/Src/main.c ****       myLoRa.bandWidth             = BW_250KHz;       // default = BW_125KHz
 2858              		.loc 1 468 36 is_stmt 0 view .LVU862
 2859 06a0 0823     		movs	r3, #8
 2860 06a2 80F82430 		strb	r3, [r0, #36]
 469:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2861              		.loc 1 469 7 is_stmt 1 view .LVU863
 469:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2862              		.loc 1 469 36 is_stmt 0 view .LVU864
 2863 06a6 80F82530 		strb	r3, [r0, #37]
 470:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2864              		.loc 1 470 7 is_stmt 1 view .LVU865
 470:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2865              		.loc 1 470 36 is_stmt 0 view .LVU866
 2866 06aa 0122     		movs	r2, #1
 2867 06ac 80F82620 		strb	r2, [r0, #38]
 471:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2868              		.loc 1 471 7 is_stmt 1 view .LVU867
 471:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2869              		.loc 1 471 36 is_stmt 0 view .LVU868
 2870 06b0 FF22     		movs	r2, #255
 2871 06b2 80F82A20 		strb	r2, [r0, #42]
 472:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2872              		.loc 1 472 7 is_stmt 1 view .LVU869
 472:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2873              		.loc 1 472 36 is_stmt 0 view .LVU870
 2874 06b6 6422     		movs	r2, #100
 2875 06b8 80F82B20 		strb	r2, [r0, #43]
 473:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2876              		.loc 1 473 7 is_stmt 1 view .LVU871
 473:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2877              		.loc 1 473 36 is_stmt 0 view .LVU872
 2878 06bc 0385     		strh	r3, [r0, #40]	@ movhi
 474:Core/Src/main.c ****       break;
 2879              		.loc 1 474 7 is_stmt 1 view .LVU873
 2880 06be FFF7FEFF 		bl	LoRa_init
 2881              	.LVL176:
 475:Core/Src/main.c **** 
 2882              		.loc 1 475 7 view .LVU874
 2883 06c2 54E6     		b	.L96
 2884              	.L138:
 479:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_8;            // default = SF_7
 2885              		.loc 1 479 7 view .LVU875
 479:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_8;            // default = SF_7
 2886              		.loc 1 479 36 is_stmt 0 view .LVU876
 2887 06c4 C948     		ldr	r0, .L170
 2888 06c6 40F2B113 		movw	r3, #433
 2889 06ca 0362     		str	r3, [r0, #32]
 480:Core/Src/main.c ****       myLoRa.bandWidth             = BW_500KHz;       // default = BW_125KHz
 2890              		.loc 1 480 7 is_stmt 1 view .LVU877
 480:Core/Src/main.c ****       myLoRa.bandWidth             = BW_500KHz;       // default = BW_125KHz
 2891              		.loc 1 480 36 is_stmt 0 view .LVU878
 2892 06cc 0823     		movs	r3, #8
 2893 06ce 80F82430 		strb	r3, [r0, #36]
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 98


 481:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2894              		.loc 1 481 7 is_stmt 1 view .LVU879
 481:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2895              		.loc 1 481 36 is_stmt 0 view .LVU880
 2896 06d2 0922     		movs	r2, #9
 2897 06d4 80F82520 		strb	r2, [r0, #37]
 482:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2898              		.loc 1 482 7 is_stmt 1 view .LVU881
 482:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2899              		.loc 1 482 36 is_stmt 0 view .LVU882
 2900 06d8 0122     		movs	r2, #1
 2901 06da 80F82620 		strb	r2, [r0, #38]
 483:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2902              		.loc 1 483 7 is_stmt 1 view .LVU883
 483:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2903              		.loc 1 483 36 is_stmt 0 view .LVU884
 2904 06de FF22     		movs	r2, #255
 2905 06e0 80F82A20 		strb	r2, [r0, #42]
 484:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2906              		.loc 1 484 7 is_stmt 1 view .LVU885
 484:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2907              		.loc 1 484 36 is_stmt 0 view .LVU886
 2908 06e4 6422     		movs	r2, #100
 2909 06e6 80F82B20 		strb	r2, [r0, #43]
 485:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2910              		.loc 1 485 7 is_stmt 1 view .LVU887
 485:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2911              		.loc 1 485 36 is_stmt 0 view .LVU888
 2912 06ea 0385     		strh	r3, [r0, #40]	@ movhi
 486:Core/Src/main.c ****       break;
 2913              		.loc 1 486 7 is_stmt 1 view .LVU889
 2914 06ec FFF7FEFF 		bl	LoRa_init
 2915              	.LVL177:
 487:Core/Src/main.c **** 
 2916              		.loc 1 487 7 view .LVU890
 2917 06f0 3DE6     		b	.L96
 2918              	.L137:
 491:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_9;            // default = SF_7
 2919              		.loc 1 491 7 view .LVU891
 491:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_9;            // default = SF_7
 2920              		.loc 1 491 36 is_stmt 0 view .LVU892
 2921 06f2 BE48     		ldr	r0, .L170
 2922 06f4 40F2B113 		movw	r3, #433
 2923 06f8 0362     		str	r3, [r0, #32]
 492:Core/Src/main.c ****       myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 2924              		.loc 1 492 7 is_stmt 1 view .LVU893
 492:Core/Src/main.c ****       myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 2925              		.loc 1 492 36 is_stmt 0 view .LVU894
 2926 06fa 0923     		movs	r3, #9
 2927 06fc 80F82430 		strb	r3, [r0, #36]
 493:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2928              		.loc 1 493 7 is_stmt 1 view .LVU895
 493:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2929              		.loc 1 493 36 is_stmt 0 view .LVU896
 2930 0700 0023     		movs	r3, #0
 2931 0702 80F82530 		strb	r3, [r0, #37]
 494:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 99


 2932              		.loc 1 494 7 is_stmt 1 view .LVU897
 494:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2933              		.loc 1 494 36 is_stmt 0 view .LVU898
 2934 0706 0123     		movs	r3, #1
 2935 0708 80F82630 		strb	r3, [r0, #38]
 495:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2936              		.loc 1 495 7 is_stmt 1 view .LVU899
 495:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2937              		.loc 1 495 36 is_stmt 0 view .LVU900
 2938 070c FF23     		movs	r3, #255
 2939 070e 80F82A30 		strb	r3, [r0, #42]
 496:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2940              		.loc 1 496 7 is_stmt 1 view .LVU901
 496:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2941              		.loc 1 496 36 is_stmt 0 view .LVU902
 2942 0712 6423     		movs	r3, #100
 2943 0714 80F82B30 		strb	r3, [r0, #43]
 497:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2944              		.loc 1 497 7 is_stmt 1 view .LVU903
 497:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2945              		.loc 1 497 36 is_stmt 0 view .LVU904
 2946 0718 0823     		movs	r3, #8
 2947 071a 0385     		strh	r3, [r0, #40]	@ movhi
 498:Core/Src/main.c ****       break;
 2948              		.loc 1 498 7 is_stmt 1 view .LVU905
 2949 071c FFF7FEFF 		bl	LoRa_init
 2950              	.LVL178:
 499:Core/Src/main.c **** 
 2951              		.loc 1 499 7 view .LVU906
 2952 0720 25E6     		b	.L96
 2953              	.L136:
 503:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_9;            // default = SF_7
 2954              		.loc 1 503 7 view .LVU907
 503:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_9;            // default = SF_7
 2955              		.loc 1 503 36 is_stmt 0 view .LVU908
 2956 0722 B248     		ldr	r0, .L170
 2957 0724 40F2B113 		movw	r3, #433
 2958 0728 0362     		str	r3, [r0, #32]
 504:Core/Src/main.c ****       myLoRa.bandWidth             = BW_10_4KHz;       // default = BW_125KHz
 2959              		.loc 1 504 7 is_stmt 1 view .LVU909
 504:Core/Src/main.c ****       myLoRa.bandWidth             = BW_10_4KHz;       // default = BW_125KHz
 2960              		.loc 1 504 36 is_stmt 0 view .LVU910
 2961 072a 0923     		movs	r3, #9
 2962 072c 80F82430 		strb	r3, [r0, #36]
 505:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2963              		.loc 1 505 7 is_stmt 1 view .LVU911
 505:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2964              		.loc 1 505 36 is_stmt 0 view .LVU912
 2965 0730 0123     		movs	r3, #1
 2966 0732 80F82530 		strb	r3, [r0, #37]
 506:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2967              		.loc 1 506 7 is_stmt 1 view .LVU913
 506:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2968              		.loc 1 506 36 is_stmt 0 view .LVU914
 2969 0736 80F82630 		strb	r3, [r0, #38]
 507:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2970              		.loc 1 507 7 is_stmt 1 view .LVU915
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 100


 507:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2971              		.loc 1 507 36 is_stmt 0 view .LVU916
 2972 073a FF23     		movs	r3, #255
 2973 073c 80F82A30 		strb	r3, [r0, #42]
 508:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2974              		.loc 1 508 7 is_stmt 1 view .LVU917
 508:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2975              		.loc 1 508 36 is_stmt 0 view .LVU918
 2976 0740 6423     		movs	r3, #100
 2977 0742 80F82B30 		strb	r3, [r0, #43]
 509:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2978              		.loc 1 509 7 is_stmt 1 view .LVU919
 509:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2979              		.loc 1 509 36 is_stmt 0 view .LVU920
 2980 0746 0823     		movs	r3, #8
 2981 0748 0385     		strh	r3, [r0, #40]	@ movhi
 510:Core/Src/main.c ****       break;
 2982              		.loc 1 510 7 is_stmt 1 view .LVU921
 2983 074a FFF7FEFF 		bl	LoRa_init
 2984              	.LVL179:
 511:Core/Src/main.c **** 
 2985              		.loc 1 511 7 view .LVU922
 2986 074e 0EE6     		b	.L96
 2987              	.L135:
 515:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_9;            // default = SF_7
 2988              		.loc 1 515 7 view .LVU923
 515:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_9;            // default = SF_7
 2989              		.loc 1 515 36 is_stmt 0 view .LVU924
 2990 0750 A648     		ldr	r0, .L170
 2991 0752 40F2B113 		movw	r3, #433
 2992 0756 0362     		str	r3, [r0, #32]
 516:Core/Src/main.c ****       myLoRa.bandWidth             = BW_15_6KHz;       // default = BW_125KHz
 2993              		.loc 1 516 7 is_stmt 1 view .LVU925
 516:Core/Src/main.c ****       myLoRa.bandWidth             = BW_15_6KHz;       // default = BW_125KHz
 2994              		.loc 1 516 36 is_stmt 0 view .LVU926
 2995 0758 0923     		movs	r3, #9
 2996 075a 80F82430 		strb	r3, [r0, #36]
 517:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2997              		.loc 1 517 7 is_stmt 1 view .LVU927
 517:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2998              		.loc 1 517 36 is_stmt 0 view .LVU928
 2999 075e 0223     		movs	r3, #2
 3000 0760 80F82530 		strb	r3, [r0, #37]
 518:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3001              		.loc 1 518 7 is_stmt 1 view .LVU929
 518:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3002              		.loc 1 518 36 is_stmt 0 view .LVU930
 3003 0764 0123     		movs	r3, #1
 3004 0766 80F82630 		strb	r3, [r0, #38]
 519:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3005              		.loc 1 519 7 is_stmt 1 view .LVU931
 519:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3006              		.loc 1 519 36 is_stmt 0 view .LVU932
 3007 076a FF23     		movs	r3, #255
 3008 076c 80F82A30 		strb	r3, [r0, #42]
 520:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3009              		.loc 1 520 7 is_stmt 1 view .LVU933
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 101


 520:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3010              		.loc 1 520 36 is_stmt 0 view .LVU934
 3011 0770 6423     		movs	r3, #100
 3012 0772 80F82B30 		strb	r3, [r0, #43]
 521:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3013              		.loc 1 521 7 is_stmt 1 view .LVU935
 521:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3014              		.loc 1 521 36 is_stmt 0 view .LVU936
 3015 0776 0823     		movs	r3, #8
 3016 0778 0385     		strh	r3, [r0, #40]	@ movhi
 522:Core/Src/main.c ****       break;
 3017              		.loc 1 522 7 is_stmt 1 view .LVU937
 3018 077a FFF7FEFF 		bl	LoRa_init
 3019              	.LVL180:
 523:Core/Src/main.c **** 
 3020              		.loc 1 523 7 view .LVU938
 3021 077e F6E5     		b	.L96
 3022              	.L134:
 527:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_9;            // default = SF_7
 3023              		.loc 1 527 7 view .LVU939
 527:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_9;            // default = SF_7
 3024              		.loc 1 527 36 is_stmt 0 view .LVU940
 3025 0780 9A48     		ldr	r0, .L170
 3026 0782 40F2B113 		movw	r3, #433
 3027 0786 0362     		str	r3, [r0, #32]
 528:Core/Src/main.c ****       myLoRa.bandWidth             = BW_20_8KHz;       // default = BW_125KHz
 3028              		.loc 1 528 7 is_stmt 1 view .LVU941
 528:Core/Src/main.c ****       myLoRa.bandWidth             = BW_20_8KHz;       // default = BW_125KHz
 3029              		.loc 1 528 36 is_stmt 0 view .LVU942
 3030 0788 0923     		movs	r3, #9
 3031 078a 80F82430 		strb	r3, [r0, #36]
 529:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3032              		.loc 1 529 7 is_stmt 1 view .LVU943
 529:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3033              		.loc 1 529 36 is_stmt 0 view .LVU944
 3034 078e 0323     		movs	r3, #3
 3035 0790 80F82530 		strb	r3, [r0, #37]
 530:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3036              		.loc 1 530 7 is_stmt 1 view .LVU945
 530:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3037              		.loc 1 530 36 is_stmt 0 view .LVU946
 3038 0794 0123     		movs	r3, #1
 3039 0796 80F82630 		strb	r3, [r0, #38]
 531:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3040              		.loc 1 531 7 is_stmt 1 view .LVU947
 531:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3041              		.loc 1 531 36 is_stmt 0 view .LVU948
 3042 079a FF23     		movs	r3, #255
 3043 079c 80F82A30 		strb	r3, [r0, #42]
 532:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3044              		.loc 1 532 7 is_stmt 1 view .LVU949
 532:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3045              		.loc 1 532 36 is_stmt 0 view .LVU950
 3046 07a0 6423     		movs	r3, #100
 3047 07a2 80F82B30 		strb	r3, [r0, #43]
 533:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3048              		.loc 1 533 7 is_stmt 1 view .LVU951
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 102


 533:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3049              		.loc 1 533 36 is_stmt 0 view .LVU952
 3050 07a6 0823     		movs	r3, #8
 3051 07a8 0385     		strh	r3, [r0, #40]	@ movhi
 534:Core/Src/main.c ****       break;
 3052              		.loc 1 534 7 is_stmt 1 view .LVU953
 3053 07aa FFF7FEFF 		bl	LoRa_init
 3054              	.LVL181:
 535:Core/Src/main.c **** 
 3055              		.loc 1 535 7 view .LVU954
 3056 07ae DEE5     		b	.L96
 3057              	.L133:
 539:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_9;            // default = SF_7
 3058              		.loc 1 539 7 view .LVU955
 539:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_9;            // default = SF_7
 3059              		.loc 1 539 36 is_stmt 0 view .LVU956
 3060 07b0 8E48     		ldr	r0, .L170
 3061 07b2 40F2B113 		movw	r3, #433
 3062 07b6 0362     		str	r3, [r0, #32]
 540:Core/Src/main.c ****       myLoRa.bandWidth             = BW_31_25KHz;       // default = BW_125KHz
 3063              		.loc 1 540 7 is_stmt 1 view .LVU957
 540:Core/Src/main.c ****       myLoRa.bandWidth             = BW_31_25KHz;       // default = BW_125KHz
 3064              		.loc 1 540 36 is_stmt 0 view .LVU958
 3065 07b8 0923     		movs	r3, #9
 3066 07ba 80F82430 		strb	r3, [r0, #36]
 541:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3067              		.loc 1 541 7 is_stmt 1 view .LVU959
 541:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3068              		.loc 1 541 36 is_stmt 0 view .LVU960
 3069 07be 0423     		movs	r3, #4
 3070 07c0 80F82530 		strb	r3, [r0, #37]
 542:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3071              		.loc 1 542 7 is_stmt 1 view .LVU961
 542:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3072              		.loc 1 542 36 is_stmt 0 view .LVU962
 3073 07c4 0123     		movs	r3, #1
 3074 07c6 80F82630 		strb	r3, [r0, #38]
 543:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3075              		.loc 1 543 7 is_stmt 1 view .LVU963
 543:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3076              		.loc 1 543 36 is_stmt 0 view .LVU964
 3077 07ca FF23     		movs	r3, #255
 3078 07cc 80F82A30 		strb	r3, [r0, #42]
 544:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3079              		.loc 1 544 7 is_stmt 1 view .LVU965
 544:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3080              		.loc 1 544 36 is_stmt 0 view .LVU966
 3081 07d0 6423     		movs	r3, #100
 3082 07d2 80F82B30 		strb	r3, [r0, #43]
 545:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3083              		.loc 1 545 7 is_stmt 1 view .LVU967
 545:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3084              		.loc 1 545 36 is_stmt 0 view .LVU968
 3085 07d6 0823     		movs	r3, #8
 3086 07d8 0385     		strh	r3, [r0, #40]	@ movhi
 546:Core/Src/main.c ****       break;
 3087              		.loc 1 546 7 is_stmt 1 view .LVU969
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 103


 3088 07da FFF7FEFF 		bl	LoRa_init
 3089              	.LVL182:
 547:Core/Src/main.c **** 
 3090              		.loc 1 547 7 view .LVU970
 3091 07de C6E5     		b	.L96
 3092              	.L132:
 551:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_9;            // default = SF_7
 3093              		.loc 1 551 7 view .LVU971
 551:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_9;            // default = SF_7
 3094              		.loc 1 551 36 is_stmt 0 view .LVU972
 3095 07e0 8248     		ldr	r0, .L170
 3096 07e2 40F2B113 		movw	r3, #433
 3097 07e6 0362     		str	r3, [r0, #32]
 552:Core/Src/main.c ****       myLoRa.bandWidth             = BW_41_7KHz;       // default = BW_125KHz
 3098              		.loc 1 552 7 is_stmt 1 view .LVU973
 552:Core/Src/main.c ****       myLoRa.bandWidth             = BW_41_7KHz;       // default = BW_125KHz
 3099              		.loc 1 552 36 is_stmt 0 view .LVU974
 3100 07e8 0923     		movs	r3, #9
 3101 07ea 80F82430 		strb	r3, [r0, #36]
 553:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3102              		.loc 1 553 7 is_stmt 1 view .LVU975
 553:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3103              		.loc 1 553 36 is_stmt 0 view .LVU976
 3104 07ee 0523     		movs	r3, #5
 3105 07f0 80F82530 		strb	r3, [r0, #37]
 554:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3106              		.loc 1 554 7 is_stmt 1 view .LVU977
 554:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3107              		.loc 1 554 36 is_stmt 0 view .LVU978
 3108 07f4 0123     		movs	r3, #1
 3109 07f6 80F82630 		strb	r3, [r0, #38]
 555:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3110              		.loc 1 555 7 is_stmt 1 view .LVU979
 555:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3111              		.loc 1 555 36 is_stmt 0 view .LVU980
 3112 07fa FF23     		movs	r3, #255
 3113 07fc 80F82A30 		strb	r3, [r0, #42]
 556:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3114              		.loc 1 556 7 is_stmt 1 view .LVU981
 556:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3115              		.loc 1 556 36 is_stmt 0 view .LVU982
 3116 0800 6423     		movs	r3, #100
 3117 0802 80F82B30 		strb	r3, [r0, #43]
 557:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3118              		.loc 1 557 7 is_stmt 1 view .LVU983
 557:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3119              		.loc 1 557 36 is_stmt 0 view .LVU984
 3120 0806 0823     		movs	r3, #8
 3121 0808 0385     		strh	r3, [r0, #40]	@ movhi
 558:Core/Src/main.c ****       break;
 3122              		.loc 1 558 7 is_stmt 1 view .LVU985
 3123 080a FFF7FEFF 		bl	LoRa_init
 3124              	.LVL183:
 559:Core/Src/main.c **** 
 3125              		.loc 1 559 7 view .LVU986
 3126 080e AEE5     		b	.L96
 3127              	.L131:
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 104


 563:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_9;            // default = SF_7
 3128              		.loc 1 563 7 view .LVU987
 563:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_9;            // default = SF_7
 3129              		.loc 1 563 36 is_stmt 0 view .LVU988
 3130 0810 7648     		ldr	r0, .L170
 3131 0812 40F2B113 		movw	r3, #433
 3132 0816 0362     		str	r3, [r0, #32]
 564:Core/Src/main.c ****       myLoRa.bandWidth             = BW_62_5KHz;       // default = BW_125KHz
 3133              		.loc 1 564 7 is_stmt 1 view .LVU989
 564:Core/Src/main.c ****       myLoRa.bandWidth             = BW_62_5KHz;       // default = BW_125KHz
 3134              		.loc 1 564 36 is_stmt 0 view .LVU990
 3135 0818 0923     		movs	r3, #9
 3136 081a 80F82430 		strb	r3, [r0, #36]
 565:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3137              		.loc 1 565 7 is_stmt 1 view .LVU991
 565:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3138              		.loc 1 565 36 is_stmt 0 view .LVU992
 3139 081e 0623     		movs	r3, #6
 3140 0820 80F82530 		strb	r3, [r0, #37]
 566:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3141              		.loc 1 566 7 is_stmt 1 view .LVU993
 566:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3142              		.loc 1 566 36 is_stmt 0 view .LVU994
 3143 0824 0123     		movs	r3, #1
 3144 0826 80F82630 		strb	r3, [r0, #38]
 567:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3145              		.loc 1 567 7 is_stmt 1 view .LVU995
 567:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3146              		.loc 1 567 36 is_stmt 0 view .LVU996
 3147 082a FF23     		movs	r3, #255
 3148 082c 80F82A30 		strb	r3, [r0, #42]
 568:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3149              		.loc 1 568 7 is_stmt 1 view .LVU997
 568:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3150              		.loc 1 568 36 is_stmt 0 view .LVU998
 3151 0830 6423     		movs	r3, #100
 3152 0832 80F82B30 		strb	r3, [r0, #43]
 569:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3153              		.loc 1 569 7 is_stmt 1 view .LVU999
 569:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3154              		.loc 1 569 36 is_stmt 0 view .LVU1000
 3155 0836 0823     		movs	r3, #8
 3156 0838 0385     		strh	r3, [r0, #40]	@ movhi
 570:Core/Src/main.c ****       break;
 3157              		.loc 1 570 7 is_stmt 1 view .LVU1001
 3158 083a FFF7FEFF 		bl	LoRa_init
 3159              	.LVL184:
 571:Core/Src/main.c **** 
 3160              		.loc 1 571 7 view .LVU1002
 3161 083e 96E5     		b	.L96
 3162              	.L130:
 575:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_9;            // default = SF_7
 3163              		.loc 1 575 7 view .LVU1003
 575:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_9;            // default = SF_7
 3164              		.loc 1 575 36 is_stmt 0 view .LVU1004
 3165 0840 6A48     		ldr	r0, .L170
 3166 0842 40F2B113 		movw	r3, #433
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 105


 3167 0846 0362     		str	r3, [r0, #32]
 576:Core/Src/main.c ****       myLoRa.bandWidth             = BW_125KHz;       // default = BW_125KHz
 3168              		.loc 1 576 7 is_stmt 1 view .LVU1005
 576:Core/Src/main.c ****       myLoRa.bandWidth             = BW_125KHz;       // default = BW_125KHz
 3169              		.loc 1 576 36 is_stmt 0 view .LVU1006
 3170 0848 0923     		movs	r3, #9
 3171 084a 80F82430 		strb	r3, [r0, #36]
 577:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3172              		.loc 1 577 7 is_stmt 1 view .LVU1007
 577:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3173              		.loc 1 577 36 is_stmt 0 view .LVU1008
 3174 084e 0723     		movs	r3, #7
 3175 0850 80F82530 		strb	r3, [r0, #37]
 578:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3176              		.loc 1 578 7 is_stmt 1 view .LVU1009
 578:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3177              		.loc 1 578 36 is_stmt 0 view .LVU1010
 3178 0854 0123     		movs	r3, #1
 3179 0856 80F82630 		strb	r3, [r0, #38]
 579:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3180              		.loc 1 579 7 is_stmt 1 view .LVU1011
 579:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3181              		.loc 1 579 36 is_stmt 0 view .LVU1012
 3182 085a FF23     		movs	r3, #255
 3183 085c 80F82A30 		strb	r3, [r0, #42]
 580:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3184              		.loc 1 580 7 is_stmt 1 view .LVU1013
 580:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3185              		.loc 1 580 36 is_stmt 0 view .LVU1014
 3186 0860 6423     		movs	r3, #100
 3187 0862 80F82B30 		strb	r3, [r0, #43]
 581:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3188              		.loc 1 581 7 is_stmt 1 view .LVU1015
 581:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3189              		.loc 1 581 36 is_stmt 0 view .LVU1016
 3190 0866 0823     		movs	r3, #8
 3191 0868 0385     		strh	r3, [r0, #40]	@ movhi
 582:Core/Src/main.c ****       break;
 3192              		.loc 1 582 7 is_stmt 1 view .LVU1017
 3193 086a FFF7FEFF 		bl	LoRa_init
 3194              	.LVL185:
 583:Core/Src/main.c **** 
 3195              		.loc 1 583 7 view .LVU1018
 3196 086e 7EE5     		b	.L96
 3197              	.L129:
 587:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_9;            // default = SF_7
 3198              		.loc 1 587 7 view .LVU1019
 587:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_9;            // default = SF_7
 3199              		.loc 1 587 36 is_stmt 0 view .LVU1020
 3200 0870 5E48     		ldr	r0, .L170
 3201 0872 40F2B113 		movw	r3, #433
 3202 0876 0362     		str	r3, [r0, #32]
 588:Core/Src/main.c ****       myLoRa.bandWidth             = BW_250KHz;       // default = BW_125KHz
 3203              		.loc 1 588 7 is_stmt 1 view .LVU1021
 588:Core/Src/main.c ****       myLoRa.bandWidth             = BW_250KHz;       // default = BW_125KHz
 3204              		.loc 1 588 36 is_stmt 0 view .LVU1022
 3205 0878 0923     		movs	r3, #9
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 106


 3206 087a 80F82430 		strb	r3, [r0, #36]
 589:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3207              		.loc 1 589 7 is_stmt 1 view .LVU1023
 589:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3208              		.loc 1 589 36 is_stmt 0 view .LVU1024
 3209 087e 0823     		movs	r3, #8
 3210 0880 80F82530 		strb	r3, [r0, #37]
 590:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3211              		.loc 1 590 7 is_stmt 1 view .LVU1025
 590:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3212              		.loc 1 590 36 is_stmt 0 view .LVU1026
 3213 0884 0122     		movs	r2, #1
 3214 0886 80F82620 		strb	r2, [r0, #38]
 591:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3215              		.loc 1 591 7 is_stmt 1 view .LVU1027
 591:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3216              		.loc 1 591 36 is_stmt 0 view .LVU1028
 3217 088a FF22     		movs	r2, #255
 3218 088c 80F82A20 		strb	r2, [r0, #42]
 592:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3219              		.loc 1 592 7 is_stmt 1 view .LVU1029
 592:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3220              		.loc 1 592 36 is_stmt 0 view .LVU1030
 3221 0890 6422     		movs	r2, #100
 3222 0892 80F82B20 		strb	r2, [r0, #43]
 593:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3223              		.loc 1 593 7 is_stmt 1 view .LVU1031
 593:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3224              		.loc 1 593 36 is_stmt 0 view .LVU1032
 3225 0896 0385     		strh	r3, [r0, #40]	@ movhi
 594:Core/Src/main.c ****       break;
 3226              		.loc 1 594 7 is_stmt 1 view .LVU1033
 3227 0898 FFF7FEFF 		bl	LoRa_init
 3228              	.LVL186:
 595:Core/Src/main.c **** 
 3229              		.loc 1 595 7 view .LVU1034
 3230 089c 67E5     		b	.L96
 3231              	.L128:
 599:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_9;            // default = SF_7
 3232              		.loc 1 599 7 view .LVU1035
 599:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_9;            // default = SF_7
 3233              		.loc 1 599 36 is_stmt 0 view .LVU1036
 3234 089e 5348     		ldr	r0, .L170
 3235 08a0 40F2B113 		movw	r3, #433
 3236 08a4 0362     		str	r3, [r0, #32]
 600:Core/Src/main.c ****       myLoRa.bandWidth             = BW_500KHz;       // default = BW_125KHz
 3237              		.loc 1 600 7 is_stmt 1 view .LVU1037
 600:Core/Src/main.c ****       myLoRa.bandWidth             = BW_500KHz;       // default = BW_125KHz
 3238              		.loc 1 600 36 is_stmt 0 view .LVU1038
 3239 08a6 0923     		movs	r3, #9
 3240 08a8 80F82430 		strb	r3, [r0, #36]
 601:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3241              		.loc 1 601 7 is_stmt 1 view .LVU1039
 601:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3242              		.loc 1 601 36 is_stmt 0 view .LVU1040
 3243 08ac 80F82530 		strb	r3, [r0, #37]
 602:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 107


 3244              		.loc 1 602 7 is_stmt 1 view .LVU1041
 602:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3245              		.loc 1 602 36 is_stmt 0 view .LVU1042
 3246 08b0 0123     		movs	r3, #1
 3247 08b2 80F82630 		strb	r3, [r0, #38]
 603:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3248              		.loc 1 603 7 is_stmt 1 view .LVU1043
 603:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3249              		.loc 1 603 36 is_stmt 0 view .LVU1044
 3250 08b6 FF23     		movs	r3, #255
 3251 08b8 80F82A30 		strb	r3, [r0, #42]
 604:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3252              		.loc 1 604 7 is_stmt 1 view .LVU1045
 604:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3253              		.loc 1 604 36 is_stmt 0 view .LVU1046
 3254 08bc 6423     		movs	r3, #100
 3255 08be 80F82B30 		strb	r3, [r0, #43]
 605:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3256              		.loc 1 605 7 is_stmt 1 view .LVU1047
 605:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3257              		.loc 1 605 36 is_stmt 0 view .LVU1048
 3258 08c2 0823     		movs	r3, #8
 3259 08c4 0385     		strh	r3, [r0, #40]	@ movhi
 606:Core/Src/main.c ****       break;
 3260              		.loc 1 606 7 is_stmt 1 view .LVU1049
 3261 08c6 FFF7FEFF 		bl	LoRa_init
 3262              	.LVL187:
 607:Core/Src/main.c **** 
 3263              		.loc 1 607 7 view .LVU1050
 3264 08ca 50E5     		b	.L96
 3265              	.L127:
 611:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_10;            // default = SF_7
 3266              		.loc 1 611 7 view .LVU1051
 611:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_10;            // default = SF_7
 3267              		.loc 1 611 36 is_stmt 0 view .LVU1052
 3268 08cc 4748     		ldr	r0, .L170
 3269 08ce 40F2B113 		movw	r3, #433
 3270 08d2 0362     		str	r3, [r0, #32]
 612:Core/Src/main.c ****       myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 3271              		.loc 1 612 7 is_stmt 1 view .LVU1053
 612:Core/Src/main.c ****       myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 3272              		.loc 1 612 36 is_stmt 0 view .LVU1054
 3273 08d4 0A23     		movs	r3, #10
 3274 08d6 80F82430 		strb	r3, [r0, #36]
 613:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3275              		.loc 1 613 7 is_stmt 1 view .LVU1055
 613:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3276              		.loc 1 613 36 is_stmt 0 view .LVU1056
 3277 08da 0023     		movs	r3, #0
 3278 08dc 80F82530 		strb	r3, [r0, #37]
 614:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3279              		.loc 1 614 7 is_stmt 1 view .LVU1057
 614:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3280              		.loc 1 614 36 is_stmt 0 view .LVU1058
 3281 08e0 0123     		movs	r3, #1
 3282 08e2 80F82630 		strb	r3, [r0, #38]
 615:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 108


 3283              		.loc 1 615 7 is_stmt 1 view .LVU1059
 615:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3284              		.loc 1 615 36 is_stmt 0 view .LVU1060
 3285 08e6 FF23     		movs	r3, #255
 3286 08e8 80F82A30 		strb	r3, [r0, #42]
 616:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3287              		.loc 1 616 7 is_stmt 1 view .LVU1061
 616:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3288              		.loc 1 616 36 is_stmt 0 view .LVU1062
 3289 08ec 6423     		movs	r3, #100
 3290 08ee 80F82B30 		strb	r3, [r0, #43]
 617:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3291              		.loc 1 617 7 is_stmt 1 view .LVU1063
 617:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3292              		.loc 1 617 36 is_stmt 0 view .LVU1064
 3293 08f2 0823     		movs	r3, #8
 3294 08f4 0385     		strh	r3, [r0, #40]	@ movhi
 618:Core/Src/main.c ****       break;
 3295              		.loc 1 618 7 is_stmt 1 view .LVU1065
 3296 08f6 FFF7FEFF 		bl	LoRa_init
 3297              	.LVL188:
 619:Core/Src/main.c **** 
 3298              		.loc 1 619 7 view .LVU1066
 3299 08fa 38E5     		b	.L96
 3300              	.L126:
 623:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_10;            // default = SF_7
 3301              		.loc 1 623 7 view .LVU1067
 623:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_10;            // default = SF_7
 3302              		.loc 1 623 36 is_stmt 0 view .LVU1068
 3303 08fc 3B48     		ldr	r0, .L170
 3304 08fe 40F2B113 		movw	r3, #433
 3305 0902 0362     		str	r3, [r0, #32]
 624:Core/Src/main.c ****       myLoRa.bandWidth             = BW_10_4KHz;       // default = BW_125KHz
 3306              		.loc 1 624 7 is_stmt 1 view .LVU1069
 624:Core/Src/main.c ****       myLoRa.bandWidth             = BW_10_4KHz;       // default = BW_125KHz
 3307              		.loc 1 624 36 is_stmt 0 view .LVU1070
 3308 0904 0A23     		movs	r3, #10
 3309 0906 80F82430 		strb	r3, [r0, #36]
 625:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3310              		.loc 1 625 7 is_stmt 1 view .LVU1071
 625:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3311              		.loc 1 625 36 is_stmt 0 view .LVU1072
 3312 090a 0123     		movs	r3, #1
 3313 090c 80F82530 		strb	r3, [r0, #37]
 626:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3314              		.loc 1 626 7 is_stmt 1 view .LVU1073
 626:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3315              		.loc 1 626 36 is_stmt 0 view .LVU1074
 3316 0910 80F82630 		strb	r3, [r0, #38]
 627:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3317              		.loc 1 627 7 is_stmt 1 view .LVU1075
 627:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3318              		.loc 1 627 36 is_stmt 0 view .LVU1076
 3319 0914 FF23     		movs	r3, #255
 3320 0916 80F82A30 		strb	r3, [r0, #42]
 628:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3321              		.loc 1 628 7 is_stmt 1 view .LVU1077
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 109


 628:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3322              		.loc 1 628 36 is_stmt 0 view .LVU1078
 3323 091a 6423     		movs	r3, #100
 3324 091c 80F82B30 		strb	r3, [r0, #43]
 629:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3325              		.loc 1 629 7 is_stmt 1 view .LVU1079
 629:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3326              		.loc 1 629 36 is_stmt 0 view .LVU1080
 3327 0920 0823     		movs	r3, #8
 3328 0922 0385     		strh	r3, [r0, #40]	@ movhi
 630:Core/Src/main.c ****       break;
 3329              		.loc 1 630 7 is_stmt 1 view .LVU1081
 3330 0924 FFF7FEFF 		bl	LoRa_init
 3331              	.LVL189:
 631:Core/Src/main.c **** 
 3332              		.loc 1 631 7 view .LVU1082
 3333 0928 21E5     		b	.L96
 3334              	.L125:
 635:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_10;            // default = SF_7
 3335              		.loc 1 635 7 view .LVU1083
 635:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_10;            // default = SF_7
 3336              		.loc 1 635 36 is_stmt 0 view .LVU1084
 3337 092a 3048     		ldr	r0, .L170
 3338 092c 40F2B113 		movw	r3, #433
 3339 0930 0362     		str	r3, [r0, #32]
 636:Core/Src/main.c ****       myLoRa.bandWidth             = BW_15_6KHz;       // default = BW_125KHz
 3340              		.loc 1 636 7 is_stmt 1 view .LVU1085
 636:Core/Src/main.c ****       myLoRa.bandWidth             = BW_15_6KHz;       // default = BW_125KHz
 3341              		.loc 1 636 36 is_stmt 0 view .LVU1086
 3342 0932 0A23     		movs	r3, #10
 3343 0934 80F82430 		strb	r3, [r0, #36]
 637:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3344              		.loc 1 637 7 is_stmt 1 view .LVU1087
 637:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3345              		.loc 1 637 36 is_stmt 0 view .LVU1088
 3346 0938 0223     		movs	r3, #2
 3347 093a 80F82530 		strb	r3, [r0, #37]
 638:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3348              		.loc 1 638 7 is_stmt 1 view .LVU1089
 638:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3349              		.loc 1 638 36 is_stmt 0 view .LVU1090
 3350 093e 0123     		movs	r3, #1
 3351 0940 80F82630 		strb	r3, [r0, #38]
 639:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3352              		.loc 1 639 7 is_stmt 1 view .LVU1091
 639:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3353              		.loc 1 639 36 is_stmt 0 view .LVU1092
 3354 0944 FF23     		movs	r3, #255
 3355 0946 80F82A30 		strb	r3, [r0, #42]
 640:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3356              		.loc 1 640 7 is_stmt 1 view .LVU1093
 640:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3357              		.loc 1 640 36 is_stmt 0 view .LVU1094
 3358 094a 6423     		movs	r3, #100
 3359 094c 80F82B30 		strb	r3, [r0, #43]
 641:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3360              		.loc 1 641 7 is_stmt 1 view .LVU1095
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 110


 641:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3361              		.loc 1 641 36 is_stmt 0 view .LVU1096
 3362 0950 0823     		movs	r3, #8
 3363 0952 0385     		strh	r3, [r0, #40]	@ movhi
 642:Core/Src/main.c ****       break;
 3364              		.loc 1 642 7 is_stmt 1 view .LVU1097
 3365 0954 FFF7FEFF 		bl	LoRa_init
 3366              	.LVL190:
 643:Core/Src/main.c **** 
 3367              		.loc 1 643 7 view .LVU1098
 3368 0958 09E5     		b	.L96
 3369              	.L124:
 647:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_10;            // default = SF_7
 3370              		.loc 1 647 7 view .LVU1099
 647:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_10;            // default = SF_7
 3371              		.loc 1 647 36 is_stmt 0 view .LVU1100
 3372 095a 2448     		ldr	r0, .L170
 3373 095c 40F2B113 		movw	r3, #433
 3374 0960 0362     		str	r3, [r0, #32]
 648:Core/Src/main.c ****       myLoRa.bandWidth             = BW_20_8KHz;       // default = BW_125KHz
 3375              		.loc 1 648 7 is_stmt 1 view .LVU1101
 648:Core/Src/main.c ****       myLoRa.bandWidth             = BW_20_8KHz;       // default = BW_125KHz
 3376              		.loc 1 648 36 is_stmt 0 view .LVU1102
 3377 0962 0A23     		movs	r3, #10
 3378 0964 80F82430 		strb	r3, [r0, #36]
 649:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3379              		.loc 1 649 7 is_stmt 1 view .LVU1103
 649:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3380              		.loc 1 649 36 is_stmt 0 view .LVU1104
 3381 0968 0323     		movs	r3, #3
 3382 096a 80F82530 		strb	r3, [r0, #37]
 650:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3383              		.loc 1 650 7 is_stmt 1 view .LVU1105
 650:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3384              		.loc 1 650 36 is_stmt 0 view .LVU1106
 3385 096e 0123     		movs	r3, #1
 3386 0970 80F82630 		strb	r3, [r0, #38]
 651:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3387              		.loc 1 651 7 is_stmt 1 view .LVU1107
 651:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3388              		.loc 1 651 36 is_stmt 0 view .LVU1108
 3389 0974 FF23     		movs	r3, #255
 3390 0976 80F82A30 		strb	r3, [r0, #42]
 652:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3391              		.loc 1 652 7 is_stmt 1 view .LVU1109
 652:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3392              		.loc 1 652 36 is_stmt 0 view .LVU1110
 3393 097a 6423     		movs	r3, #100
 3394 097c 80F82B30 		strb	r3, [r0, #43]
 653:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3395              		.loc 1 653 7 is_stmt 1 view .LVU1111
 653:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3396              		.loc 1 653 36 is_stmt 0 view .LVU1112
 3397 0980 0823     		movs	r3, #8
 3398 0982 0385     		strh	r3, [r0, #40]	@ movhi
 654:Core/Src/main.c ****       break;
 3399              		.loc 1 654 7 is_stmt 1 view .LVU1113
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 111


 3400 0984 FFF7FEFF 		bl	LoRa_init
 3401              	.LVL191:
 655:Core/Src/main.c **** 
 3402              		.loc 1 655 7 view .LVU1114
 3403 0988 F1E4     		b	.L96
 3404              	.L123:
 659:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_10;            // default = SF_7
 3405              		.loc 1 659 7 view .LVU1115
 659:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_10;            // default = SF_7
 3406              		.loc 1 659 36 is_stmt 0 view .LVU1116
 3407 098a 1848     		ldr	r0, .L170
 3408 098c 40F2B113 		movw	r3, #433
 3409 0990 0362     		str	r3, [r0, #32]
 660:Core/Src/main.c ****       myLoRa.bandWidth             = BW_31_25KHz;       // default = BW_125KHz
 3410              		.loc 1 660 7 is_stmt 1 view .LVU1117
 660:Core/Src/main.c ****       myLoRa.bandWidth             = BW_31_25KHz;       // default = BW_125KHz
 3411              		.loc 1 660 36 is_stmt 0 view .LVU1118
 3412 0992 0A23     		movs	r3, #10
 3413 0994 80F82430 		strb	r3, [r0, #36]
 661:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3414              		.loc 1 661 7 is_stmt 1 view .LVU1119
 661:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3415              		.loc 1 661 36 is_stmt 0 view .LVU1120
 3416 0998 0423     		movs	r3, #4
 3417 099a 80F82530 		strb	r3, [r0, #37]
 662:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3418              		.loc 1 662 7 is_stmt 1 view .LVU1121
 662:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3419              		.loc 1 662 36 is_stmt 0 view .LVU1122
 3420 099e 0123     		movs	r3, #1
 3421 09a0 80F82630 		strb	r3, [r0, #38]
 663:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3422              		.loc 1 663 7 is_stmt 1 view .LVU1123
 663:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3423              		.loc 1 663 36 is_stmt 0 view .LVU1124
 3424 09a4 FF23     		movs	r3, #255
 3425 09a6 80F82A30 		strb	r3, [r0, #42]
 664:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3426              		.loc 1 664 7 is_stmt 1 view .LVU1125
 664:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3427              		.loc 1 664 36 is_stmt 0 view .LVU1126
 3428 09aa 6423     		movs	r3, #100
 3429 09ac 80F82B30 		strb	r3, [r0, #43]
 665:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3430              		.loc 1 665 7 is_stmt 1 view .LVU1127
 665:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3431              		.loc 1 665 36 is_stmt 0 view .LVU1128
 3432 09b0 0823     		movs	r3, #8
 3433 09b2 0385     		strh	r3, [r0, #40]	@ movhi
 666:Core/Src/main.c ****       break;
 3434              		.loc 1 666 7 is_stmt 1 view .LVU1129
 3435 09b4 FFF7FEFF 		bl	LoRa_init
 3436              	.LVL192:
 667:Core/Src/main.c **** 
 3437              		.loc 1 667 7 view .LVU1130
 3438 09b8 D9E4     		b	.L96
 3439              	.L122:
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 112


 671:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_10;            // default = SF_7
 3440              		.loc 1 671 7 view .LVU1131
 671:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_10;            // default = SF_7
 3441              		.loc 1 671 36 is_stmt 0 view .LVU1132
 3442 09ba 0C48     		ldr	r0, .L170
 3443 09bc 40F2B113 		movw	r3, #433
 3444 09c0 0362     		str	r3, [r0, #32]
 672:Core/Src/main.c ****       myLoRa.bandWidth             = BW_41_7KHz;       // default = BW_125KHz
 3445              		.loc 1 672 7 is_stmt 1 view .LVU1133
 672:Core/Src/main.c ****       myLoRa.bandWidth             = BW_41_7KHz;       // default = BW_125KHz
 3446              		.loc 1 672 36 is_stmt 0 view .LVU1134
 3447 09c2 0A23     		movs	r3, #10
 3448 09c4 80F82430 		strb	r3, [r0, #36]
 673:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3449              		.loc 1 673 7 is_stmt 1 view .LVU1135
 673:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3450              		.loc 1 673 36 is_stmt 0 view .LVU1136
 3451 09c8 0523     		movs	r3, #5
 3452 09ca 80F82530 		strb	r3, [r0, #37]
 674:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3453              		.loc 1 674 7 is_stmt 1 view .LVU1137
 674:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3454              		.loc 1 674 36 is_stmt 0 view .LVU1138
 3455 09ce 0123     		movs	r3, #1
 3456 09d0 80F82630 		strb	r3, [r0, #38]
 675:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3457              		.loc 1 675 7 is_stmt 1 view .LVU1139
 675:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3458              		.loc 1 675 36 is_stmt 0 view .LVU1140
 3459 09d4 FF23     		movs	r3, #255
 3460 09d6 80F82A30 		strb	r3, [r0, #42]
 676:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3461              		.loc 1 676 7 is_stmt 1 view .LVU1141
 676:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3462              		.loc 1 676 36 is_stmt 0 view .LVU1142
 3463 09da 6423     		movs	r3, #100
 3464 09dc 80F82B30 		strb	r3, [r0, #43]
 677:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3465              		.loc 1 677 7 is_stmt 1 view .LVU1143
 677:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3466              		.loc 1 677 36 is_stmt 0 view .LVU1144
 3467 09e0 0823     		movs	r3, #8
 3468 09e2 0385     		strh	r3, [r0, #40]	@ movhi
 678:Core/Src/main.c ****       break;
 3469              		.loc 1 678 7 is_stmt 1 view .LVU1145
 3470 09e4 FFF7FEFF 		bl	LoRa_init
 3471              	.LVL193:
 679:Core/Src/main.c **** 
 3472              		.loc 1 679 7 view .LVU1146
 3473 09e8 C1E4     		b	.L96
 3474              	.L171:
 3475 09ea 00BF     		.align	2
 3476              	.L170:
 3477 09ec 00000000 		.word	myLoRa
 3478              	.L121:
 683:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_10;            // default = SF_7
 3479              		.loc 1 683 7 view .LVU1147
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 113


 683:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_10;            // default = SF_7
 3480              		.loc 1 683 36 is_stmt 0 view .LVU1148
 3481 09f0 DA48     		ldr	r0, .L172
 3482 09f2 40F2B113 		movw	r3, #433
 3483 09f6 0362     		str	r3, [r0, #32]
 684:Core/Src/main.c ****       myLoRa.bandWidth             = BW_62_5KHz;       // default = BW_125KHz
 3484              		.loc 1 684 7 is_stmt 1 view .LVU1149
 684:Core/Src/main.c ****       myLoRa.bandWidth             = BW_62_5KHz;       // default = BW_125KHz
 3485              		.loc 1 684 36 is_stmt 0 view .LVU1150
 3486 09f8 0A23     		movs	r3, #10
 3487 09fa 80F82430 		strb	r3, [r0, #36]
 685:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3488              		.loc 1 685 7 is_stmt 1 view .LVU1151
 685:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3489              		.loc 1 685 36 is_stmt 0 view .LVU1152
 3490 09fe 0623     		movs	r3, #6
 3491 0a00 80F82530 		strb	r3, [r0, #37]
 686:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3492              		.loc 1 686 7 is_stmt 1 view .LVU1153
 686:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3493              		.loc 1 686 36 is_stmt 0 view .LVU1154
 3494 0a04 0123     		movs	r3, #1
 3495 0a06 80F82630 		strb	r3, [r0, #38]
 687:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3496              		.loc 1 687 7 is_stmt 1 view .LVU1155
 687:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3497              		.loc 1 687 36 is_stmt 0 view .LVU1156
 3498 0a0a FF23     		movs	r3, #255
 3499 0a0c 80F82A30 		strb	r3, [r0, #42]
 688:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3500              		.loc 1 688 7 is_stmt 1 view .LVU1157
 688:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3501              		.loc 1 688 36 is_stmt 0 view .LVU1158
 3502 0a10 6423     		movs	r3, #100
 3503 0a12 80F82B30 		strb	r3, [r0, #43]
 689:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3504              		.loc 1 689 7 is_stmt 1 view .LVU1159
 689:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3505              		.loc 1 689 36 is_stmt 0 view .LVU1160
 3506 0a16 0823     		movs	r3, #8
 3507 0a18 0385     		strh	r3, [r0, #40]	@ movhi
 690:Core/Src/main.c ****       break;
 3508              		.loc 1 690 7 is_stmt 1 view .LVU1161
 3509 0a1a FFF7FEFF 		bl	LoRa_init
 3510              	.LVL194:
 691:Core/Src/main.c **** 
 3511              		.loc 1 691 7 view .LVU1162
 3512 0a1e A6E4     		b	.L96
 3513              	.L120:
 695:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_10;            // default = SF_7
 3514              		.loc 1 695 7 view .LVU1163
 695:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_10;            // default = SF_7
 3515              		.loc 1 695 36 is_stmt 0 view .LVU1164
 3516 0a20 CE48     		ldr	r0, .L172
 3517 0a22 40F2B113 		movw	r3, #433
 3518 0a26 0362     		str	r3, [r0, #32]
 696:Core/Src/main.c ****       myLoRa.bandWidth             = BW_125KHz;       // default = BW_125KHz
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 114


 3519              		.loc 1 696 7 is_stmt 1 view .LVU1165
 696:Core/Src/main.c ****       myLoRa.bandWidth             = BW_125KHz;       // default = BW_125KHz
 3520              		.loc 1 696 36 is_stmt 0 view .LVU1166
 3521 0a28 0A23     		movs	r3, #10
 3522 0a2a 80F82430 		strb	r3, [r0, #36]
 697:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3523              		.loc 1 697 7 is_stmt 1 view .LVU1167
 697:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3524              		.loc 1 697 36 is_stmt 0 view .LVU1168
 3525 0a2e 0723     		movs	r3, #7
 3526 0a30 80F82530 		strb	r3, [r0, #37]
 698:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3527              		.loc 1 698 7 is_stmt 1 view .LVU1169
 698:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3528              		.loc 1 698 36 is_stmt 0 view .LVU1170
 3529 0a34 0123     		movs	r3, #1
 3530 0a36 80F82630 		strb	r3, [r0, #38]
 699:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3531              		.loc 1 699 7 is_stmt 1 view .LVU1171
 699:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3532              		.loc 1 699 36 is_stmt 0 view .LVU1172
 3533 0a3a FF23     		movs	r3, #255
 3534 0a3c 80F82A30 		strb	r3, [r0, #42]
 700:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3535              		.loc 1 700 7 is_stmt 1 view .LVU1173
 700:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3536              		.loc 1 700 36 is_stmt 0 view .LVU1174
 3537 0a40 6423     		movs	r3, #100
 3538 0a42 80F82B30 		strb	r3, [r0, #43]
 701:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3539              		.loc 1 701 7 is_stmt 1 view .LVU1175
 701:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3540              		.loc 1 701 36 is_stmt 0 view .LVU1176
 3541 0a46 0823     		movs	r3, #8
 3542 0a48 0385     		strh	r3, [r0, #40]	@ movhi
 702:Core/Src/main.c ****       break;
 3543              		.loc 1 702 7 is_stmt 1 view .LVU1177
 3544 0a4a FFF7FEFF 		bl	LoRa_init
 3545              	.LVL195:
 703:Core/Src/main.c **** 
 3546              		.loc 1 703 7 view .LVU1178
 3547 0a4e 8EE4     		b	.L96
 3548              	.L119:
 707:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_10;            // default = SF_7
 3549              		.loc 1 707 7 view .LVU1179
 707:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_10;            // default = SF_7
 3550              		.loc 1 707 36 is_stmt 0 view .LVU1180
 3551 0a50 C248     		ldr	r0, .L172
 3552 0a52 40F2B113 		movw	r3, #433
 3553 0a56 0362     		str	r3, [r0, #32]
 708:Core/Src/main.c ****       myLoRa.bandWidth             = BW_250KHz;       // default = BW_125KHz
 3554              		.loc 1 708 7 is_stmt 1 view .LVU1181
 708:Core/Src/main.c ****       myLoRa.bandWidth             = BW_250KHz;       // default = BW_125KHz
 3555              		.loc 1 708 36 is_stmt 0 view .LVU1182
 3556 0a58 0A23     		movs	r3, #10
 3557 0a5a 80F82430 		strb	r3, [r0, #36]
 709:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 115


 3558              		.loc 1 709 7 is_stmt 1 view .LVU1183
 709:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3559              		.loc 1 709 36 is_stmt 0 view .LVU1184
 3560 0a5e 0823     		movs	r3, #8
 3561 0a60 80F82530 		strb	r3, [r0, #37]
 710:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3562              		.loc 1 710 7 is_stmt 1 view .LVU1185
 710:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3563              		.loc 1 710 36 is_stmt 0 view .LVU1186
 3564 0a64 0122     		movs	r2, #1
 3565 0a66 80F82620 		strb	r2, [r0, #38]
 711:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3566              		.loc 1 711 7 is_stmt 1 view .LVU1187
 711:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3567              		.loc 1 711 36 is_stmt 0 view .LVU1188
 3568 0a6a FF22     		movs	r2, #255
 3569 0a6c 80F82A20 		strb	r2, [r0, #42]
 712:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3570              		.loc 1 712 7 is_stmt 1 view .LVU1189
 712:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3571              		.loc 1 712 36 is_stmt 0 view .LVU1190
 3572 0a70 6422     		movs	r2, #100
 3573 0a72 80F82B20 		strb	r2, [r0, #43]
 713:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3574              		.loc 1 713 7 is_stmt 1 view .LVU1191
 713:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3575              		.loc 1 713 36 is_stmt 0 view .LVU1192
 3576 0a76 0385     		strh	r3, [r0, #40]	@ movhi
 714:Core/Src/main.c ****       break;
 3577              		.loc 1 714 7 is_stmt 1 view .LVU1193
 3578 0a78 FFF7FEFF 		bl	LoRa_init
 3579              	.LVL196:
 715:Core/Src/main.c **** 
 3580              		.loc 1 715 7 view .LVU1194
 3581 0a7c 77E4     		b	.L96
 3582              	.L118:
 719:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_10;            // default = SF_7
 3583              		.loc 1 719 7 view .LVU1195
 719:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_10;            // default = SF_7
 3584              		.loc 1 719 36 is_stmt 0 view .LVU1196
 3585 0a7e B748     		ldr	r0, .L172
 3586 0a80 40F2B113 		movw	r3, #433
 3587 0a84 0362     		str	r3, [r0, #32]
 720:Core/Src/main.c ****       myLoRa.bandWidth             = BW_500KHz;       // default = BW_125KHz
 3588              		.loc 1 720 7 is_stmt 1 view .LVU1197
 720:Core/Src/main.c ****       myLoRa.bandWidth             = BW_500KHz;       // default = BW_125KHz
 3589              		.loc 1 720 36 is_stmt 0 view .LVU1198
 3590 0a86 0A23     		movs	r3, #10
 3591 0a88 80F82430 		strb	r3, [r0, #36]
 721:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3592              		.loc 1 721 7 is_stmt 1 view .LVU1199
 721:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3593              		.loc 1 721 36 is_stmt 0 view .LVU1200
 3594 0a8c 0923     		movs	r3, #9
 3595 0a8e 80F82530 		strb	r3, [r0, #37]
 722:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3596              		.loc 1 722 7 is_stmt 1 view .LVU1201
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 116


 722:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3597              		.loc 1 722 36 is_stmt 0 view .LVU1202
 3598 0a92 0123     		movs	r3, #1
 3599 0a94 80F82630 		strb	r3, [r0, #38]
 723:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3600              		.loc 1 723 7 is_stmt 1 view .LVU1203
 723:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3601              		.loc 1 723 36 is_stmt 0 view .LVU1204
 3602 0a98 FF23     		movs	r3, #255
 3603 0a9a 80F82A30 		strb	r3, [r0, #42]
 724:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3604              		.loc 1 724 7 is_stmt 1 view .LVU1205
 724:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3605              		.loc 1 724 36 is_stmt 0 view .LVU1206
 3606 0a9e 6423     		movs	r3, #100
 3607 0aa0 80F82B30 		strb	r3, [r0, #43]
 725:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3608              		.loc 1 725 7 is_stmt 1 view .LVU1207
 725:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3609              		.loc 1 725 36 is_stmt 0 view .LVU1208
 3610 0aa4 0823     		movs	r3, #8
 3611 0aa6 0385     		strh	r3, [r0, #40]	@ movhi
 726:Core/Src/main.c ****       break;
 3612              		.loc 1 726 7 is_stmt 1 view .LVU1209
 3613 0aa8 FFF7FEFF 		bl	LoRa_init
 3614              	.LVL197:
 727:Core/Src/main.c **** 
 3615              		.loc 1 727 7 view .LVU1210
 3616 0aac 5FE4     		b	.L96
 3617              	.L117:
 731:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_11;            // default = SF_7
 3618              		.loc 1 731 7 view .LVU1211
 731:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_11;            // default = SF_7
 3619              		.loc 1 731 36 is_stmt 0 view .LVU1212
 3620 0aae AB48     		ldr	r0, .L172
 3621 0ab0 40F2B113 		movw	r3, #433
 3622 0ab4 0362     		str	r3, [r0, #32]
 732:Core/Src/main.c ****       myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 3623              		.loc 1 732 7 is_stmt 1 view .LVU1213
 732:Core/Src/main.c ****       myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 3624              		.loc 1 732 36 is_stmt 0 view .LVU1214
 3625 0ab6 0B23     		movs	r3, #11
 3626 0ab8 80F82430 		strb	r3, [r0, #36]
 733:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3627              		.loc 1 733 7 is_stmt 1 view .LVU1215
 733:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3628              		.loc 1 733 36 is_stmt 0 view .LVU1216
 3629 0abc 0023     		movs	r3, #0
 3630 0abe 80F82530 		strb	r3, [r0, #37]
 734:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3631              		.loc 1 734 7 is_stmt 1 view .LVU1217
 734:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3632              		.loc 1 734 36 is_stmt 0 view .LVU1218
 3633 0ac2 0123     		movs	r3, #1
 3634 0ac4 80F82630 		strb	r3, [r0, #38]
 735:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3635              		.loc 1 735 7 is_stmt 1 view .LVU1219
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 117


 735:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3636              		.loc 1 735 36 is_stmt 0 view .LVU1220
 3637 0ac8 FF23     		movs	r3, #255
 3638 0aca 80F82A30 		strb	r3, [r0, #42]
 736:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3639              		.loc 1 736 7 is_stmt 1 view .LVU1221
 736:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3640              		.loc 1 736 36 is_stmt 0 view .LVU1222
 3641 0ace 6423     		movs	r3, #100
 3642 0ad0 80F82B30 		strb	r3, [r0, #43]
 737:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3643              		.loc 1 737 7 is_stmt 1 view .LVU1223
 737:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3644              		.loc 1 737 36 is_stmt 0 view .LVU1224
 3645 0ad4 0823     		movs	r3, #8
 3646 0ad6 0385     		strh	r3, [r0, #40]	@ movhi
 738:Core/Src/main.c ****       break;
 3647              		.loc 1 738 7 is_stmt 1 view .LVU1225
 3648 0ad8 FFF7FEFF 		bl	LoRa_init
 3649              	.LVL198:
 739:Core/Src/main.c **** 
 3650              		.loc 1 739 7 view .LVU1226
 3651 0adc 47E4     		b	.L96
 3652              	.L116:
 743:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_11;            // default = SF_7
 3653              		.loc 1 743 7 view .LVU1227
 743:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_11;            // default = SF_7
 3654              		.loc 1 743 36 is_stmt 0 view .LVU1228
 3655 0ade 9F48     		ldr	r0, .L172
 3656 0ae0 40F2B113 		movw	r3, #433
 3657 0ae4 0362     		str	r3, [r0, #32]
 744:Core/Src/main.c ****       myLoRa.bandWidth             = BW_10_4KHz;       // default = BW_125KHz
 3658              		.loc 1 744 7 is_stmt 1 view .LVU1229
 744:Core/Src/main.c ****       myLoRa.bandWidth             = BW_10_4KHz;       // default = BW_125KHz
 3659              		.loc 1 744 36 is_stmt 0 view .LVU1230
 3660 0ae6 0B23     		movs	r3, #11
 3661 0ae8 80F82430 		strb	r3, [r0, #36]
 745:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3662              		.loc 1 745 7 is_stmt 1 view .LVU1231
 745:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3663              		.loc 1 745 36 is_stmt 0 view .LVU1232
 3664 0aec 0123     		movs	r3, #1
 3665 0aee 80F82530 		strb	r3, [r0, #37]
 746:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3666              		.loc 1 746 7 is_stmt 1 view .LVU1233
 746:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3667              		.loc 1 746 36 is_stmt 0 view .LVU1234
 3668 0af2 80F82630 		strb	r3, [r0, #38]
 747:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3669              		.loc 1 747 7 is_stmt 1 view .LVU1235
 747:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3670              		.loc 1 747 36 is_stmt 0 view .LVU1236
 3671 0af6 FF23     		movs	r3, #255
 3672 0af8 80F82A30 		strb	r3, [r0, #42]
 748:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3673              		.loc 1 748 7 is_stmt 1 view .LVU1237
 748:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 118


 3674              		.loc 1 748 36 is_stmt 0 view .LVU1238
 3675 0afc 6423     		movs	r3, #100
 3676 0afe 80F82B30 		strb	r3, [r0, #43]
 749:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3677              		.loc 1 749 7 is_stmt 1 view .LVU1239
 749:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3678              		.loc 1 749 36 is_stmt 0 view .LVU1240
 3679 0b02 0823     		movs	r3, #8
 3680 0b04 0385     		strh	r3, [r0, #40]	@ movhi
 750:Core/Src/main.c ****       break;
 3681              		.loc 1 750 7 is_stmt 1 view .LVU1241
 3682 0b06 FFF7FEFF 		bl	LoRa_init
 3683              	.LVL199:
 751:Core/Src/main.c **** 
 3684              		.loc 1 751 7 view .LVU1242
 3685 0b0a 30E4     		b	.L96
 3686              	.L115:
 755:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_11;            // default = SF_7
 3687              		.loc 1 755 7 view .LVU1243
 755:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_11;            // default = SF_7
 3688              		.loc 1 755 36 is_stmt 0 view .LVU1244
 3689 0b0c 9348     		ldr	r0, .L172
 3690 0b0e 40F2B113 		movw	r3, #433
 3691 0b12 0362     		str	r3, [r0, #32]
 756:Core/Src/main.c ****       myLoRa.bandWidth             = BW_15_6KHz;       // default = BW_125KHz
 3692              		.loc 1 756 7 is_stmt 1 view .LVU1245
 756:Core/Src/main.c ****       myLoRa.bandWidth             = BW_15_6KHz;       // default = BW_125KHz
 3693              		.loc 1 756 36 is_stmt 0 view .LVU1246
 3694 0b14 0B23     		movs	r3, #11
 3695 0b16 80F82430 		strb	r3, [r0, #36]
 757:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3696              		.loc 1 757 7 is_stmt 1 view .LVU1247
 757:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3697              		.loc 1 757 36 is_stmt 0 view .LVU1248
 3698 0b1a 0223     		movs	r3, #2
 3699 0b1c 80F82530 		strb	r3, [r0, #37]
 758:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3700              		.loc 1 758 7 is_stmt 1 view .LVU1249
 758:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3701              		.loc 1 758 36 is_stmt 0 view .LVU1250
 3702 0b20 0123     		movs	r3, #1
 3703 0b22 80F82630 		strb	r3, [r0, #38]
 759:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3704              		.loc 1 759 7 is_stmt 1 view .LVU1251
 759:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3705              		.loc 1 759 36 is_stmt 0 view .LVU1252
 3706 0b26 FF23     		movs	r3, #255
 3707 0b28 80F82A30 		strb	r3, [r0, #42]
 760:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3708              		.loc 1 760 7 is_stmt 1 view .LVU1253
 760:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3709              		.loc 1 760 36 is_stmt 0 view .LVU1254
 3710 0b2c 6423     		movs	r3, #100
 3711 0b2e 80F82B30 		strb	r3, [r0, #43]
 761:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3712              		.loc 1 761 7 is_stmt 1 view .LVU1255
 761:Core/Src/main.c ****       LoRa_init(&myLoRa);
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 119


 3713              		.loc 1 761 36 is_stmt 0 view .LVU1256
 3714 0b32 0823     		movs	r3, #8
 3715 0b34 0385     		strh	r3, [r0, #40]	@ movhi
 762:Core/Src/main.c ****       break;
 3716              		.loc 1 762 7 is_stmt 1 view .LVU1257
 3717 0b36 FFF7FEFF 		bl	LoRa_init
 3718              	.LVL200:
 763:Core/Src/main.c **** 
 3719              		.loc 1 763 7 view .LVU1258
 3720 0b3a 18E4     		b	.L96
 3721              	.L114:
 767:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_11;            // default = SF_7
 3722              		.loc 1 767 7 view .LVU1259
 767:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_11;            // default = SF_7
 3723              		.loc 1 767 36 is_stmt 0 view .LVU1260
 3724 0b3c 8748     		ldr	r0, .L172
 3725 0b3e 40F2B113 		movw	r3, #433
 3726 0b42 0362     		str	r3, [r0, #32]
 768:Core/Src/main.c ****       myLoRa.bandWidth             = BW_20_8KHz;       // default = BW_125KHz
 3727              		.loc 1 768 7 is_stmt 1 view .LVU1261
 768:Core/Src/main.c ****       myLoRa.bandWidth             = BW_20_8KHz;       // default = BW_125KHz
 3728              		.loc 1 768 36 is_stmt 0 view .LVU1262
 3729 0b44 0B23     		movs	r3, #11
 3730 0b46 80F82430 		strb	r3, [r0, #36]
 769:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3731              		.loc 1 769 7 is_stmt 1 view .LVU1263
 769:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3732              		.loc 1 769 36 is_stmt 0 view .LVU1264
 3733 0b4a 0323     		movs	r3, #3
 3734 0b4c 80F82530 		strb	r3, [r0, #37]
 770:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3735              		.loc 1 770 7 is_stmt 1 view .LVU1265
 770:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3736              		.loc 1 770 36 is_stmt 0 view .LVU1266
 3737 0b50 0123     		movs	r3, #1
 3738 0b52 80F82630 		strb	r3, [r0, #38]
 771:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3739              		.loc 1 771 7 is_stmt 1 view .LVU1267
 771:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3740              		.loc 1 771 36 is_stmt 0 view .LVU1268
 3741 0b56 FF23     		movs	r3, #255
 3742 0b58 80F82A30 		strb	r3, [r0, #42]
 772:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3743              		.loc 1 772 7 is_stmt 1 view .LVU1269
 772:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3744              		.loc 1 772 36 is_stmt 0 view .LVU1270
 3745 0b5c 6423     		movs	r3, #100
 3746 0b5e 80F82B30 		strb	r3, [r0, #43]
 773:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3747              		.loc 1 773 7 is_stmt 1 view .LVU1271
 773:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3748              		.loc 1 773 36 is_stmt 0 view .LVU1272
 3749 0b62 0823     		movs	r3, #8
 3750 0b64 0385     		strh	r3, [r0, #40]	@ movhi
 774:Core/Src/main.c ****       break;
 3751              		.loc 1 774 7 is_stmt 1 view .LVU1273
 3752 0b66 FFF7FEFF 		bl	LoRa_init
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 120


 3753              	.LVL201:
 775:Core/Src/main.c **** 
 3754              		.loc 1 775 7 view .LVU1274
 3755 0b6a 00E4     		b	.L96
 3756              	.L113:
 779:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_11;            // default = SF_7
 3757              		.loc 1 779 7 view .LVU1275
 779:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_11;            // default = SF_7
 3758              		.loc 1 779 36 is_stmt 0 view .LVU1276
 3759 0b6c 7B48     		ldr	r0, .L172
 3760 0b6e 40F2B113 		movw	r3, #433
 3761 0b72 0362     		str	r3, [r0, #32]
 780:Core/Src/main.c ****       myLoRa.bandWidth             = BW_31_25KHz;       // default = BW_125KHz
 3762              		.loc 1 780 7 is_stmt 1 view .LVU1277
 780:Core/Src/main.c ****       myLoRa.bandWidth             = BW_31_25KHz;       // default = BW_125KHz
 3763              		.loc 1 780 36 is_stmt 0 view .LVU1278
 3764 0b74 0B23     		movs	r3, #11
 3765 0b76 80F82430 		strb	r3, [r0, #36]
 781:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3766              		.loc 1 781 7 is_stmt 1 view .LVU1279
 781:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3767              		.loc 1 781 36 is_stmt 0 view .LVU1280
 3768 0b7a 0423     		movs	r3, #4
 3769 0b7c 80F82530 		strb	r3, [r0, #37]
 782:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3770              		.loc 1 782 7 is_stmt 1 view .LVU1281
 782:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3771              		.loc 1 782 36 is_stmt 0 view .LVU1282
 3772 0b80 0123     		movs	r3, #1
 3773 0b82 80F82630 		strb	r3, [r0, #38]
 783:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3774              		.loc 1 783 7 is_stmt 1 view .LVU1283
 783:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3775              		.loc 1 783 36 is_stmt 0 view .LVU1284
 3776 0b86 FF23     		movs	r3, #255
 3777 0b88 80F82A30 		strb	r3, [r0, #42]
 784:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3778              		.loc 1 784 7 is_stmt 1 view .LVU1285
 784:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3779              		.loc 1 784 36 is_stmt 0 view .LVU1286
 3780 0b8c 6423     		movs	r3, #100
 3781 0b8e 80F82B30 		strb	r3, [r0, #43]
 785:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3782              		.loc 1 785 7 is_stmt 1 view .LVU1287
 785:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3783              		.loc 1 785 36 is_stmt 0 view .LVU1288
 3784 0b92 0823     		movs	r3, #8
 3785 0b94 0385     		strh	r3, [r0, #40]	@ movhi
 786:Core/Src/main.c ****       break;
 3786              		.loc 1 786 7 is_stmt 1 view .LVU1289
 3787 0b96 FFF7FEFF 		bl	LoRa_init
 3788              	.LVL202:
 787:Core/Src/main.c **** 
 3789              		.loc 1 787 7 view .LVU1290
 3790 0b9a FFF7E8BB 		b	.L96
 3791              	.L112:
 791:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_11;            // default = SF_7
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 121


 3792              		.loc 1 791 7 view .LVU1291
 791:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_11;            // default = SF_7
 3793              		.loc 1 791 36 is_stmt 0 view .LVU1292
 3794 0b9e 6F48     		ldr	r0, .L172
 3795 0ba0 40F2B113 		movw	r3, #433
 3796 0ba4 0362     		str	r3, [r0, #32]
 792:Core/Src/main.c ****       myLoRa.bandWidth             = BW_41_7KHz;       // default = BW_125KHz
 3797              		.loc 1 792 7 is_stmt 1 view .LVU1293
 792:Core/Src/main.c ****       myLoRa.bandWidth             = BW_41_7KHz;       // default = BW_125KHz
 3798              		.loc 1 792 36 is_stmt 0 view .LVU1294
 3799 0ba6 0B23     		movs	r3, #11
 3800 0ba8 80F82430 		strb	r3, [r0, #36]
 793:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3801              		.loc 1 793 7 is_stmt 1 view .LVU1295
 793:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3802              		.loc 1 793 36 is_stmt 0 view .LVU1296
 3803 0bac 0523     		movs	r3, #5
 3804 0bae 80F82530 		strb	r3, [r0, #37]
 794:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3805              		.loc 1 794 7 is_stmt 1 view .LVU1297
 794:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3806              		.loc 1 794 36 is_stmt 0 view .LVU1298
 3807 0bb2 0123     		movs	r3, #1
 3808 0bb4 80F82630 		strb	r3, [r0, #38]
 795:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3809              		.loc 1 795 7 is_stmt 1 view .LVU1299
 795:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3810              		.loc 1 795 36 is_stmt 0 view .LVU1300
 3811 0bb8 FF23     		movs	r3, #255
 3812 0bba 80F82A30 		strb	r3, [r0, #42]
 796:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3813              		.loc 1 796 7 is_stmt 1 view .LVU1301
 796:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3814              		.loc 1 796 36 is_stmt 0 view .LVU1302
 3815 0bbe 6423     		movs	r3, #100
 3816 0bc0 80F82B30 		strb	r3, [r0, #43]
 797:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3817              		.loc 1 797 7 is_stmt 1 view .LVU1303
 797:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3818              		.loc 1 797 36 is_stmt 0 view .LVU1304
 3819 0bc4 0823     		movs	r3, #8
 3820 0bc6 0385     		strh	r3, [r0, #40]	@ movhi
 798:Core/Src/main.c ****       break;
 3821              		.loc 1 798 7 is_stmt 1 view .LVU1305
 3822 0bc8 FFF7FEFF 		bl	LoRa_init
 3823              	.LVL203:
 799:Core/Src/main.c **** 
 3824              		.loc 1 799 7 view .LVU1306
 3825 0bcc FFF7CFBB 		b	.L96
 3826              	.L111:
 803:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_11;            // default = SF_7
 3827              		.loc 1 803 7 view .LVU1307
 803:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_11;            // default = SF_7
 3828              		.loc 1 803 36 is_stmt 0 view .LVU1308
 3829 0bd0 6248     		ldr	r0, .L172
 3830 0bd2 40F2B113 		movw	r3, #433
 3831 0bd6 0362     		str	r3, [r0, #32]
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 122


 804:Core/Src/main.c ****       myLoRa.bandWidth             = BW_62_5KHz;       // default = BW_125KHz
 3832              		.loc 1 804 7 is_stmt 1 view .LVU1309
 804:Core/Src/main.c ****       myLoRa.bandWidth             = BW_62_5KHz;       // default = BW_125KHz
 3833              		.loc 1 804 36 is_stmt 0 view .LVU1310
 3834 0bd8 0B23     		movs	r3, #11
 3835 0bda 80F82430 		strb	r3, [r0, #36]
 805:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3836              		.loc 1 805 7 is_stmt 1 view .LVU1311
 805:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3837              		.loc 1 805 36 is_stmt 0 view .LVU1312
 3838 0bde 0623     		movs	r3, #6
 3839 0be0 80F82530 		strb	r3, [r0, #37]
 806:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3840              		.loc 1 806 7 is_stmt 1 view .LVU1313
 806:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3841              		.loc 1 806 36 is_stmt 0 view .LVU1314
 3842 0be4 0123     		movs	r3, #1
 3843 0be6 80F82630 		strb	r3, [r0, #38]
 807:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3844              		.loc 1 807 7 is_stmt 1 view .LVU1315
 807:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3845              		.loc 1 807 36 is_stmt 0 view .LVU1316
 3846 0bea FF23     		movs	r3, #255
 3847 0bec 80F82A30 		strb	r3, [r0, #42]
 808:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3848              		.loc 1 808 7 is_stmt 1 view .LVU1317
 808:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3849              		.loc 1 808 36 is_stmt 0 view .LVU1318
 3850 0bf0 6423     		movs	r3, #100
 3851 0bf2 80F82B30 		strb	r3, [r0, #43]
 809:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3852              		.loc 1 809 7 is_stmt 1 view .LVU1319
 809:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3853              		.loc 1 809 36 is_stmt 0 view .LVU1320
 3854 0bf6 0823     		movs	r3, #8
 3855 0bf8 0385     		strh	r3, [r0, #40]	@ movhi
 810:Core/Src/main.c ****       break;
 3856              		.loc 1 810 7 is_stmt 1 view .LVU1321
 3857 0bfa FFF7FEFF 		bl	LoRa_init
 3858              	.LVL204:
 811:Core/Src/main.c **** 
 3859              		.loc 1 811 7 view .LVU1322
 3860 0bfe FFF7B6BB 		b	.L96
 3861              	.L110:
 815:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_11;            // default = SF_7
 3862              		.loc 1 815 7 view .LVU1323
 815:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_11;            // default = SF_7
 3863              		.loc 1 815 36 is_stmt 0 view .LVU1324
 3864 0c02 5648     		ldr	r0, .L172
 3865 0c04 40F2B113 		movw	r3, #433
 3866 0c08 0362     		str	r3, [r0, #32]
 816:Core/Src/main.c ****       myLoRa.bandWidth             = BW_125KHz;       // default = BW_125KHz
 3867              		.loc 1 816 7 is_stmt 1 view .LVU1325
 816:Core/Src/main.c ****       myLoRa.bandWidth             = BW_125KHz;       // default = BW_125KHz
 3868              		.loc 1 816 36 is_stmt 0 view .LVU1326
 3869 0c0a 0B23     		movs	r3, #11
 3870 0c0c 80F82430 		strb	r3, [r0, #36]
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 123


 817:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3871              		.loc 1 817 7 is_stmt 1 view .LVU1327
 817:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3872              		.loc 1 817 36 is_stmt 0 view .LVU1328
 3873 0c10 0723     		movs	r3, #7
 3874 0c12 80F82530 		strb	r3, [r0, #37]
 818:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3875              		.loc 1 818 7 is_stmt 1 view .LVU1329
 818:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3876              		.loc 1 818 36 is_stmt 0 view .LVU1330
 3877 0c16 0123     		movs	r3, #1
 3878 0c18 80F82630 		strb	r3, [r0, #38]
 819:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3879              		.loc 1 819 7 is_stmt 1 view .LVU1331
 819:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3880              		.loc 1 819 36 is_stmt 0 view .LVU1332
 3881 0c1c FF23     		movs	r3, #255
 3882 0c1e 80F82A30 		strb	r3, [r0, #42]
 820:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3883              		.loc 1 820 7 is_stmt 1 view .LVU1333
 820:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3884              		.loc 1 820 36 is_stmt 0 view .LVU1334
 3885 0c22 6423     		movs	r3, #100
 3886 0c24 80F82B30 		strb	r3, [r0, #43]
 821:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3887              		.loc 1 821 7 is_stmt 1 view .LVU1335
 821:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3888              		.loc 1 821 36 is_stmt 0 view .LVU1336
 3889 0c28 0823     		movs	r3, #8
 3890 0c2a 0385     		strh	r3, [r0, #40]	@ movhi
 822:Core/Src/main.c ****       break;
 3891              		.loc 1 822 7 is_stmt 1 view .LVU1337
 3892 0c2c FFF7FEFF 		bl	LoRa_init
 3893              	.LVL205:
 823:Core/Src/main.c **** 
 3894              		.loc 1 823 7 view .LVU1338
 3895 0c30 FFF79DBB 		b	.L96
 3896              	.L109:
 827:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_11;            // default = SF_7
 3897              		.loc 1 827 7 view .LVU1339
 827:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_11;            // default = SF_7
 3898              		.loc 1 827 36 is_stmt 0 view .LVU1340
 3899 0c34 4948     		ldr	r0, .L172
 3900 0c36 40F2B113 		movw	r3, #433
 3901 0c3a 0362     		str	r3, [r0, #32]
 828:Core/Src/main.c ****       myLoRa.bandWidth             = BW_250KHz;       // default = BW_125KHz
 3902              		.loc 1 828 7 is_stmt 1 view .LVU1341
 828:Core/Src/main.c ****       myLoRa.bandWidth             = BW_250KHz;       // default = BW_125KHz
 3903              		.loc 1 828 36 is_stmt 0 view .LVU1342
 3904 0c3c 0B23     		movs	r3, #11
 3905 0c3e 80F82430 		strb	r3, [r0, #36]
 829:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3906              		.loc 1 829 7 is_stmt 1 view .LVU1343
 829:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3907              		.loc 1 829 36 is_stmt 0 view .LVU1344
 3908 0c42 0823     		movs	r3, #8
 3909 0c44 80F82530 		strb	r3, [r0, #37]
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 124


 830:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3910              		.loc 1 830 7 is_stmt 1 view .LVU1345
 830:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3911              		.loc 1 830 36 is_stmt 0 view .LVU1346
 3912 0c48 0122     		movs	r2, #1
 3913 0c4a 80F82620 		strb	r2, [r0, #38]
 831:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3914              		.loc 1 831 7 is_stmt 1 view .LVU1347
 831:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3915              		.loc 1 831 36 is_stmt 0 view .LVU1348
 3916 0c4e FF22     		movs	r2, #255
 3917 0c50 80F82A20 		strb	r2, [r0, #42]
 832:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3918              		.loc 1 832 7 is_stmt 1 view .LVU1349
 832:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3919              		.loc 1 832 36 is_stmt 0 view .LVU1350
 3920 0c54 6422     		movs	r2, #100
 3921 0c56 80F82B20 		strb	r2, [r0, #43]
 833:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3922              		.loc 1 833 7 is_stmt 1 view .LVU1351
 833:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3923              		.loc 1 833 36 is_stmt 0 view .LVU1352
 3924 0c5a 0385     		strh	r3, [r0, #40]	@ movhi
 834:Core/Src/main.c ****       break;
 3925              		.loc 1 834 7 is_stmt 1 view .LVU1353
 3926 0c5c FFF7FEFF 		bl	LoRa_init
 3927              	.LVL206:
 835:Core/Src/main.c **** 
 3928              		.loc 1 835 7 view .LVU1354
 3929 0c60 FFF785BB 		b	.L96
 3930              	.L108:
 839:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_11;            // default = SF_7
 3931              		.loc 1 839 7 view .LVU1355
 839:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_11;            // default = SF_7
 3932              		.loc 1 839 36 is_stmt 0 view .LVU1356
 3933 0c64 3D48     		ldr	r0, .L172
 3934 0c66 40F2B113 		movw	r3, #433
 3935 0c6a 0362     		str	r3, [r0, #32]
 840:Core/Src/main.c ****       myLoRa.bandWidth             = BW_500KHz;       // default = BW_125KHz
 3936              		.loc 1 840 7 is_stmt 1 view .LVU1357
 840:Core/Src/main.c ****       myLoRa.bandWidth             = BW_500KHz;       // default = BW_125KHz
 3937              		.loc 1 840 36 is_stmt 0 view .LVU1358
 3938 0c6c 0B23     		movs	r3, #11
 3939 0c6e 80F82430 		strb	r3, [r0, #36]
 841:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3940              		.loc 1 841 7 is_stmt 1 view .LVU1359
 841:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3941              		.loc 1 841 36 is_stmt 0 view .LVU1360
 3942 0c72 0923     		movs	r3, #9
 3943 0c74 80F82530 		strb	r3, [r0, #37]
 842:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3944              		.loc 1 842 7 is_stmt 1 view .LVU1361
 842:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3945              		.loc 1 842 36 is_stmt 0 view .LVU1362
 3946 0c78 0123     		movs	r3, #1
 3947 0c7a 80F82630 		strb	r3, [r0, #38]
 843:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 125


 3948              		.loc 1 843 7 is_stmt 1 view .LVU1363
 843:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3949              		.loc 1 843 36 is_stmt 0 view .LVU1364
 3950 0c7e FF23     		movs	r3, #255
 3951 0c80 80F82A30 		strb	r3, [r0, #42]
 844:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3952              		.loc 1 844 7 is_stmt 1 view .LVU1365
 844:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3953              		.loc 1 844 36 is_stmt 0 view .LVU1366
 3954 0c84 6423     		movs	r3, #100
 3955 0c86 80F82B30 		strb	r3, [r0, #43]
 845:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3956              		.loc 1 845 7 is_stmt 1 view .LVU1367
 845:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3957              		.loc 1 845 36 is_stmt 0 view .LVU1368
 3958 0c8a 0823     		movs	r3, #8
 3959 0c8c 0385     		strh	r3, [r0, #40]	@ movhi
 846:Core/Src/main.c ****       break;
 3960              		.loc 1 846 7 is_stmt 1 view .LVU1369
 3961 0c8e FFF7FEFF 		bl	LoRa_init
 3962              	.LVL207:
 847:Core/Src/main.c **** 
 3963              		.loc 1 847 7 view .LVU1370
 3964 0c92 FFF76CBB 		b	.L96
 3965              	.L107:
 851:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_12;            // default = SF_7
 3966              		.loc 1 851 7 view .LVU1371
 851:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_12;            // default = SF_7
 3967              		.loc 1 851 36 is_stmt 0 view .LVU1372
 3968 0c96 3148     		ldr	r0, .L172
 3969 0c98 40F2B113 		movw	r3, #433
 3970 0c9c 0362     		str	r3, [r0, #32]
 852:Core/Src/main.c ****       myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 3971              		.loc 1 852 7 is_stmt 1 view .LVU1373
 852:Core/Src/main.c ****       myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 3972              		.loc 1 852 36 is_stmt 0 view .LVU1374
 3973 0c9e 0C23     		movs	r3, #12
 3974 0ca0 80F82430 		strb	r3, [r0, #36]
 853:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3975              		.loc 1 853 7 is_stmt 1 view .LVU1375
 853:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3976              		.loc 1 853 36 is_stmt 0 view .LVU1376
 3977 0ca4 0023     		movs	r3, #0
 3978 0ca6 80F82530 		strb	r3, [r0, #37]
 854:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3979              		.loc 1 854 7 is_stmt 1 view .LVU1377
 854:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3980              		.loc 1 854 36 is_stmt 0 view .LVU1378
 3981 0caa 0123     		movs	r3, #1
 3982 0cac 80F82630 		strb	r3, [r0, #38]
 855:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3983              		.loc 1 855 7 is_stmt 1 view .LVU1379
 855:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3984              		.loc 1 855 36 is_stmt 0 view .LVU1380
 3985 0cb0 FF23     		movs	r3, #255
 3986 0cb2 80F82A30 		strb	r3, [r0, #42]
 856:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 126


 3987              		.loc 1 856 7 is_stmt 1 view .LVU1381
 856:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3988              		.loc 1 856 36 is_stmt 0 view .LVU1382
 3989 0cb6 6423     		movs	r3, #100
 3990 0cb8 80F82B30 		strb	r3, [r0, #43]
 857:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3991              		.loc 1 857 7 is_stmt 1 view .LVU1383
 857:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3992              		.loc 1 857 36 is_stmt 0 view .LVU1384
 3993 0cbc 0823     		movs	r3, #8
 3994 0cbe 0385     		strh	r3, [r0, #40]	@ movhi
 858:Core/Src/main.c ****       break;
 3995              		.loc 1 858 7 is_stmt 1 view .LVU1385
 3996 0cc0 FFF7FEFF 		bl	LoRa_init
 3997              	.LVL208:
 859:Core/Src/main.c **** 
 3998              		.loc 1 859 7 view .LVU1386
 3999 0cc4 FFF753BB 		b	.L96
 4000              	.L106:
 863:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_12;            // default = SF_7
 4001              		.loc 1 863 7 view .LVU1387
 863:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_12;            // default = SF_7
 4002              		.loc 1 863 36 is_stmt 0 view .LVU1388
 4003 0cc8 2448     		ldr	r0, .L172
 4004 0cca 40F2B113 		movw	r3, #433
 4005 0cce 0362     		str	r3, [r0, #32]
 864:Core/Src/main.c ****       myLoRa.bandWidth             = BW_10_4KHz;       // default = BW_125KHz
 4006              		.loc 1 864 7 is_stmt 1 view .LVU1389
 864:Core/Src/main.c ****       myLoRa.bandWidth             = BW_10_4KHz;       // default = BW_125KHz
 4007              		.loc 1 864 36 is_stmt 0 view .LVU1390
 4008 0cd0 0C23     		movs	r3, #12
 4009 0cd2 80F82430 		strb	r3, [r0, #36]
 865:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 4010              		.loc 1 865 7 is_stmt 1 view .LVU1391
 865:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 4011              		.loc 1 865 36 is_stmt 0 view .LVU1392
 4012 0cd6 0123     		movs	r3, #1
 4013 0cd8 80F82530 		strb	r3, [r0, #37]
 866:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 4014              		.loc 1 866 7 is_stmt 1 view .LVU1393
 866:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 4015              		.loc 1 866 36 is_stmt 0 view .LVU1394
 4016 0cdc 80F82630 		strb	r3, [r0, #38]
 867:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 4017              		.loc 1 867 7 is_stmt 1 view .LVU1395
 867:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 4018              		.loc 1 867 36 is_stmt 0 view .LVU1396
 4019 0ce0 FF23     		movs	r3, #255
 4020 0ce2 80F82A30 		strb	r3, [r0, #42]
 868:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 4021              		.loc 1 868 7 is_stmt 1 view .LVU1397
 868:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 4022              		.loc 1 868 36 is_stmt 0 view .LVU1398
 4023 0ce6 6423     		movs	r3, #100
 4024 0ce8 80F82B30 		strb	r3, [r0, #43]
 869:Core/Src/main.c ****       LoRa_init(&myLoRa);
 4025              		.loc 1 869 7 is_stmt 1 view .LVU1399
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 127


 869:Core/Src/main.c ****       LoRa_init(&myLoRa);
 4026              		.loc 1 869 36 is_stmt 0 view .LVU1400
 4027 0cec 0823     		movs	r3, #8
 4028 0cee 0385     		strh	r3, [r0, #40]	@ movhi
 870:Core/Src/main.c ****       break;
 4029              		.loc 1 870 7 is_stmt 1 view .LVU1401
 4030 0cf0 FFF7FEFF 		bl	LoRa_init
 4031              	.LVL209:
 871:Core/Src/main.c **** 
 4032              		.loc 1 871 7 view .LVU1402
 4033 0cf4 FFF73BBB 		b	.L96
 4034              	.L105:
 875:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_12;            // default = SF_7
 4035              		.loc 1 875 7 view .LVU1403
 875:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_12;            // default = SF_7
 4036              		.loc 1 875 36 is_stmt 0 view .LVU1404
 4037 0cf8 1848     		ldr	r0, .L172
 4038 0cfa 40F2B113 		movw	r3, #433
 4039 0cfe 0362     		str	r3, [r0, #32]
 876:Core/Src/main.c ****       myLoRa.bandWidth             = BW_15_6KHz;       // default = BW_125KHz
 4040              		.loc 1 876 7 is_stmt 1 view .LVU1405
 876:Core/Src/main.c ****       myLoRa.bandWidth             = BW_15_6KHz;       // default = BW_125KHz
 4041              		.loc 1 876 36 is_stmt 0 view .LVU1406
 4042 0d00 0C23     		movs	r3, #12
 4043 0d02 80F82430 		strb	r3, [r0, #36]
 877:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 4044              		.loc 1 877 7 is_stmt 1 view .LVU1407
 877:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 4045              		.loc 1 877 36 is_stmt 0 view .LVU1408
 4046 0d06 0223     		movs	r3, #2
 4047 0d08 80F82530 		strb	r3, [r0, #37]
 878:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 4048              		.loc 1 878 7 is_stmt 1 view .LVU1409
 878:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 4049              		.loc 1 878 36 is_stmt 0 view .LVU1410
 4050 0d0c 0123     		movs	r3, #1
 4051 0d0e 80F82630 		strb	r3, [r0, #38]
 879:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 4052              		.loc 1 879 7 is_stmt 1 view .LVU1411
 879:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 4053              		.loc 1 879 36 is_stmt 0 view .LVU1412
 4054 0d12 FF23     		movs	r3, #255
 4055 0d14 80F82A30 		strb	r3, [r0, #42]
 880:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 4056              		.loc 1 880 7 is_stmt 1 view .LVU1413
 880:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 4057              		.loc 1 880 36 is_stmt 0 view .LVU1414
 4058 0d18 6423     		movs	r3, #100
 4059 0d1a 80F82B30 		strb	r3, [r0, #43]
 881:Core/Src/main.c ****       LoRa_init(&myLoRa);
 4060              		.loc 1 881 7 is_stmt 1 view .LVU1415
 881:Core/Src/main.c ****       LoRa_init(&myLoRa);
 4061              		.loc 1 881 36 is_stmt 0 view .LVU1416
 4062 0d1e 0823     		movs	r3, #8
 4063 0d20 0385     		strh	r3, [r0, #40]	@ movhi
 882:Core/Src/main.c ****       break;
 4064              		.loc 1 882 7 is_stmt 1 view .LVU1417
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 128


 4065 0d22 FFF7FEFF 		bl	LoRa_init
 4066              	.LVL210:
 883:Core/Src/main.c **** 
 4067              		.loc 1 883 7 view .LVU1418
 4068 0d26 FFF722BB 		b	.L96
 4069              	.L104:
 887:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_12;            // default = SF_7
 4070              		.loc 1 887 7 view .LVU1419
 887:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_12;            // default = SF_7
 4071              		.loc 1 887 36 is_stmt 0 view .LVU1420
 4072 0d2a 0C48     		ldr	r0, .L172
 4073 0d2c 40F2B113 		movw	r3, #433
 4074 0d30 0362     		str	r3, [r0, #32]
 888:Core/Src/main.c ****       myLoRa.bandWidth             = BW_20_8KHz;       // default = BW_125KHz
 4075              		.loc 1 888 7 is_stmt 1 view .LVU1421
 888:Core/Src/main.c ****       myLoRa.bandWidth             = BW_20_8KHz;       // default = BW_125KHz
 4076              		.loc 1 888 36 is_stmt 0 view .LVU1422
 4077 0d32 0C23     		movs	r3, #12
 4078 0d34 80F82430 		strb	r3, [r0, #36]
 889:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 4079              		.loc 1 889 7 is_stmt 1 view .LVU1423
 889:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 4080              		.loc 1 889 36 is_stmt 0 view .LVU1424
 4081 0d38 0323     		movs	r3, #3
 4082 0d3a 80F82530 		strb	r3, [r0, #37]
 890:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 4083              		.loc 1 890 7 is_stmt 1 view .LVU1425
 890:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 4084              		.loc 1 890 36 is_stmt 0 view .LVU1426
 4085 0d3e 0123     		movs	r3, #1
 4086 0d40 80F82630 		strb	r3, [r0, #38]
 891:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 4087              		.loc 1 891 7 is_stmt 1 view .LVU1427
 891:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 4088              		.loc 1 891 36 is_stmt 0 view .LVU1428
 4089 0d44 FF23     		movs	r3, #255
 4090 0d46 80F82A30 		strb	r3, [r0, #42]
 892:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 4091              		.loc 1 892 7 is_stmt 1 view .LVU1429
 892:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 4092              		.loc 1 892 36 is_stmt 0 view .LVU1430
 4093 0d4a 6423     		movs	r3, #100
 4094 0d4c 80F82B30 		strb	r3, [r0, #43]
 893:Core/Src/main.c ****       LoRa_init(&myLoRa);
 4095              		.loc 1 893 7 is_stmt 1 view .LVU1431
 893:Core/Src/main.c ****       LoRa_init(&myLoRa);
 4096              		.loc 1 893 36 is_stmt 0 view .LVU1432
 4097 0d50 0823     		movs	r3, #8
 4098 0d52 0385     		strh	r3, [r0, #40]	@ movhi
 894:Core/Src/main.c ****       break;
 4099              		.loc 1 894 7 is_stmt 1 view .LVU1433
 4100 0d54 FFF7FEFF 		bl	LoRa_init
 4101              	.LVL211:
 895:Core/Src/main.c **** 
 4102              		.loc 1 895 7 view .LVU1434
 4103 0d58 FFF709BB 		b	.L96
 4104              	.L173:
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 129


 4105              		.align	2
 4106              	.L172:
 4107 0d5c 00000000 		.word	myLoRa
 4108              	.L103:
 899:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_12;            // default = SF_7
 4109              		.loc 1 899 7 view .LVU1435
 899:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_12;            // default = SF_7
 4110              		.loc 1 899 36 is_stmt 0 view .LVU1436
 4111 0d60 4A48     		ldr	r0, .L174
 4112 0d62 40F2B113 		movw	r3, #433
 4113 0d66 0362     		str	r3, [r0, #32]
 900:Core/Src/main.c ****       myLoRa.bandWidth             = BW_31_25KHz;       // default = BW_125KHz
 4114              		.loc 1 900 7 is_stmt 1 view .LVU1437
 900:Core/Src/main.c ****       myLoRa.bandWidth             = BW_31_25KHz;       // default = BW_125KHz
 4115              		.loc 1 900 36 is_stmt 0 view .LVU1438
 4116 0d68 0C23     		movs	r3, #12
 4117 0d6a 80F82430 		strb	r3, [r0, #36]
 901:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 4118              		.loc 1 901 7 is_stmt 1 view .LVU1439
 901:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 4119              		.loc 1 901 36 is_stmt 0 view .LVU1440
 4120 0d6e 0423     		movs	r3, #4
 4121 0d70 80F82530 		strb	r3, [r0, #37]
 902:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 4122              		.loc 1 902 7 is_stmt 1 view .LVU1441
 902:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 4123              		.loc 1 902 36 is_stmt 0 view .LVU1442
 4124 0d74 0123     		movs	r3, #1
 4125 0d76 80F82630 		strb	r3, [r0, #38]
 903:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 4126              		.loc 1 903 7 is_stmt 1 view .LVU1443
 903:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 4127              		.loc 1 903 36 is_stmt 0 view .LVU1444
 4128 0d7a FF23     		movs	r3, #255
 4129 0d7c 80F82A30 		strb	r3, [r0, #42]
 904:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 4130              		.loc 1 904 7 is_stmt 1 view .LVU1445
 904:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 4131              		.loc 1 904 36 is_stmt 0 view .LVU1446
 4132 0d80 6423     		movs	r3, #100
 4133 0d82 80F82B30 		strb	r3, [r0, #43]
 905:Core/Src/main.c ****       LoRa_init(&myLoRa);
 4134              		.loc 1 905 7 is_stmt 1 view .LVU1447
 905:Core/Src/main.c ****       LoRa_init(&myLoRa);
 4135              		.loc 1 905 36 is_stmt 0 view .LVU1448
 4136 0d86 0823     		movs	r3, #8
 4137 0d88 0385     		strh	r3, [r0, #40]	@ movhi
 906:Core/Src/main.c ****       break;
 4138              		.loc 1 906 7 is_stmt 1 view .LVU1449
 4139 0d8a FFF7FEFF 		bl	LoRa_init
 4140              	.LVL212:
 907:Core/Src/main.c **** 
 4141              		.loc 1 907 7 view .LVU1450
 4142 0d8e FFF7EEBA 		b	.L96
 4143              	.L102:
 911:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_12;            // default = SF_7
 4144              		.loc 1 911 7 view .LVU1451
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 130


 911:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_12;            // default = SF_7
 4145              		.loc 1 911 36 is_stmt 0 view .LVU1452
 4146 0d92 3E48     		ldr	r0, .L174
 4147 0d94 40F2B113 		movw	r3, #433
 4148 0d98 0362     		str	r3, [r0, #32]
 912:Core/Src/main.c ****       myLoRa.bandWidth             = BW_41_7KHz;       // default = BW_125KHz
 4149              		.loc 1 912 7 is_stmt 1 view .LVU1453
 912:Core/Src/main.c ****       myLoRa.bandWidth             = BW_41_7KHz;       // default = BW_125KHz
 4150              		.loc 1 912 36 is_stmt 0 view .LVU1454
 4151 0d9a 0C23     		movs	r3, #12
 4152 0d9c 80F82430 		strb	r3, [r0, #36]
 913:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 4153              		.loc 1 913 7 is_stmt 1 view .LVU1455
 913:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 4154              		.loc 1 913 36 is_stmt 0 view .LVU1456
 4155 0da0 0523     		movs	r3, #5
 4156 0da2 80F82530 		strb	r3, [r0, #37]
 914:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 4157              		.loc 1 914 7 is_stmt 1 view .LVU1457
 914:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 4158              		.loc 1 914 36 is_stmt 0 view .LVU1458
 4159 0da6 0123     		movs	r3, #1
 4160 0da8 80F82630 		strb	r3, [r0, #38]
 915:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 4161              		.loc 1 915 7 is_stmt 1 view .LVU1459
 915:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 4162              		.loc 1 915 36 is_stmt 0 view .LVU1460
 4163 0dac FF23     		movs	r3, #255
 4164 0dae 80F82A30 		strb	r3, [r0, #42]
 916:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 4165              		.loc 1 916 7 is_stmt 1 view .LVU1461
 916:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 4166              		.loc 1 916 36 is_stmt 0 view .LVU1462
 4167 0db2 6423     		movs	r3, #100
 4168 0db4 80F82B30 		strb	r3, [r0, #43]
 917:Core/Src/main.c ****       LoRa_init(&myLoRa);
 4169              		.loc 1 917 7 is_stmt 1 view .LVU1463
 917:Core/Src/main.c ****       LoRa_init(&myLoRa);
 4170              		.loc 1 917 36 is_stmt 0 view .LVU1464
 4171 0db8 0823     		movs	r3, #8
 4172 0dba 0385     		strh	r3, [r0, #40]	@ movhi
 918:Core/Src/main.c ****       break;
 4173              		.loc 1 918 7 is_stmt 1 view .LVU1465
 4174 0dbc FFF7FEFF 		bl	LoRa_init
 4175              	.LVL213:
 919:Core/Src/main.c **** 
 4176              		.loc 1 919 7 view .LVU1466
 4177 0dc0 FFF7D5BA 		b	.L96
 4178              	.L101:
 923:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_12;            // default = SF_7
 4179              		.loc 1 923 7 view .LVU1467
 923:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_12;            // default = SF_7
 4180              		.loc 1 923 36 is_stmt 0 view .LVU1468
 4181 0dc4 3148     		ldr	r0, .L174
 4182 0dc6 40F2B113 		movw	r3, #433
 4183 0dca 0362     		str	r3, [r0, #32]
 924:Core/Src/main.c ****       myLoRa.bandWidth             = BW_62_5KHz;       // default = BW_125KHz
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 131


 4184              		.loc 1 924 7 is_stmt 1 view .LVU1469
 924:Core/Src/main.c ****       myLoRa.bandWidth             = BW_62_5KHz;       // default = BW_125KHz
 4185              		.loc 1 924 36 is_stmt 0 view .LVU1470
 4186 0dcc 0C23     		movs	r3, #12
 4187 0dce 80F82430 		strb	r3, [r0, #36]
 925:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 4188              		.loc 1 925 7 is_stmt 1 view .LVU1471
 925:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 4189              		.loc 1 925 36 is_stmt 0 view .LVU1472
 4190 0dd2 0623     		movs	r3, #6
 4191 0dd4 80F82530 		strb	r3, [r0, #37]
 926:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 4192              		.loc 1 926 7 is_stmt 1 view .LVU1473
 926:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 4193              		.loc 1 926 36 is_stmt 0 view .LVU1474
 4194 0dd8 0123     		movs	r3, #1
 4195 0dda 80F82630 		strb	r3, [r0, #38]
 927:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 4196              		.loc 1 927 7 is_stmt 1 view .LVU1475
 927:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 4197              		.loc 1 927 36 is_stmt 0 view .LVU1476
 4198 0dde FF23     		movs	r3, #255
 4199 0de0 80F82A30 		strb	r3, [r0, #42]
 928:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 4200              		.loc 1 928 7 is_stmt 1 view .LVU1477
 928:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 4201              		.loc 1 928 36 is_stmt 0 view .LVU1478
 4202 0de4 6423     		movs	r3, #100
 4203 0de6 80F82B30 		strb	r3, [r0, #43]
 929:Core/Src/main.c ****       LoRa_init(&myLoRa);
 4204              		.loc 1 929 7 is_stmt 1 view .LVU1479
 929:Core/Src/main.c ****       LoRa_init(&myLoRa);
 4205              		.loc 1 929 36 is_stmt 0 view .LVU1480
 4206 0dea 0823     		movs	r3, #8
 4207 0dec 0385     		strh	r3, [r0, #40]	@ movhi
 930:Core/Src/main.c ****       break;
 4208              		.loc 1 930 7 is_stmt 1 view .LVU1481
 4209 0dee FFF7FEFF 		bl	LoRa_init
 4210              	.LVL214:
 931:Core/Src/main.c **** 
 4211              		.loc 1 931 7 view .LVU1482
 4212 0df2 FFF7BCBA 		b	.L96
 4213              	.L100:
 935:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_12;            // default = SF_7
 4214              		.loc 1 935 7 view .LVU1483
 935:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_12;            // default = SF_7
 4215              		.loc 1 935 36 is_stmt 0 view .LVU1484
 4216 0df6 2548     		ldr	r0, .L174
 4217 0df8 40F2B113 		movw	r3, #433
 4218 0dfc 0362     		str	r3, [r0, #32]
 936:Core/Src/main.c ****       myLoRa.bandWidth             = BW_125KHz;       // default = BW_125KHz
 4219              		.loc 1 936 7 is_stmt 1 view .LVU1485
 936:Core/Src/main.c ****       myLoRa.bandWidth             = BW_125KHz;       // default = BW_125KHz
 4220              		.loc 1 936 36 is_stmt 0 view .LVU1486
 4221 0dfe 0C23     		movs	r3, #12
 4222 0e00 80F82430 		strb	r3, [r0, #36]
 937:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 132


 4223              		.loc 1 937 7 is_stmt 1 view .LVU1487
 937:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 4224              		.loc 1 937 36 is_stmt 0 view .LVU1488
 4225 0e04 0723     		movs	r3, #7
 4226 0e06 80F82530 		strb	r3, [r0, #37]
 938:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 4227              		.loc 1 938 7 is_stmt 1 view .LVU1489
 938:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 4228              		.loc 1 938 36 is_stmt 0 view .LVU1490
 4229 0e0a 0123     		movs	r3, #1
 4230 0e0c 80F82630 		strb	r3, [r0, #38]
 939:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 4231              		.loc 1 939 7 is_stmt 1 view .LVU1491
 939:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 4232              		.loc 1 939 36 is_stmt 0 view .LVU1492
 4233 0e10 FF23     		movs	r3, #255
 4234 0e12 80F82A30 		strb	r3, [r0, #42]
 940:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 4235              		.loc 1 940 7 is_stmt 1 view .LVU1493
 940:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 4236              		.loc 1 940 36 is_stmt 0 view .LVU1494
 4237 0e16 6423     		movs	r3, #100
 4238 0e18 80F82B30 		strb	r3, [r0, #43]
 941:Core/Src/main.c ****       LoRa_init(&myLoRa);
 4239              		.loc 1 941 7 is_stmt 1 view .LVU1495
 941:Core/Src/main.c ****       LoRa_init(&myLoRa);
 4240              		.loc 1 941 36 is_stmt 0 view .LVU1496
 4241 0e1c 0823     		movs	r3, #8
 4242 0e1e 0385     		strh	r3, [r0, #40]	@ movhi
 942:Core/Src/main.c ****       break;
 4243              		.loc 1 942 7 is_stmt 1 view .LVU1497
 4244 0e20 FFF7FEFF 		bl	LoRa_init
 4245              	.LVL215:
 943:Core/Src/main.c **** 
 4246              		.loc 1 943 7 view .LVU1498
 4247 0e24 FFF7A3BA 		b	.L96
 4248              	.L99:
 947:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_12;            // default = SF_7
 4249              		.loc 1 947 7 view .LVU1499
 947:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_12;            // default = SF_7
 4250              		.loc 1 947 36 is_stmt 0 view .LVU1500
 4251 0e28 1848     		ldr	r0, .L174
 4252 0e2a 40F2B113 		movw	r3, #433
 4253 0e2e 0362     		str	r3, [r0, #32]
 948:Core/Src/main.c ****       myLoRa.bandWidth             = BW_250KHz;       // default = BW_125KHz
 4254              		.loc 1 948 7 is_stmt 1 view .LVU1501
 948:Core/Src/main.c ****       myLoRa.bandWidth             = BW_250KHz;       // default = BW_125KHz
 4255              		.loc 1 948 36 is_stmt 0 view .LVU1502
 4256 0e30 0C23     		movs	r3, #12
 4257 0e32 80F82430 		strb	r3, [r0, #36]
 949:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 4258              		.loc 1 949 7 is_stmt 1 view .LVU1503
 949:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 4259              		.loc 1 949 36 is_stmt 0 view .LVU1504
 4260 0e36 0823     		movs	r3, #8
 4261 0e38 80F82530 		strb	r3, [r0, #37]
 950:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 133


 4262              		.loc 1 950 7 is_stmt 1 view .LVU1505
 950:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 4263              		.loc 1 950 36 is_stmt 0 view .LVU1506
 4264 0e3c 0122     		movs	r2, #1
 4265 0e3e 80F82620 		strb	r2, [r0, #38]
 951:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 4266              		.loc 1 951 7 is_stmt 1 view .LVU1507
 951:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 4267              		.loc 1 951 36 is_stmt 0 view .LVU1508
 4268 0e42 FF22     		movs	r2, #255
 4269 0e44 80F82A20 		strb	r2, [r0, #42]
 952:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 4270              		.loc 1 952 7 is_stmt 1 view .LVU1509
 952:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 4271              		.loc 1 952 36 is_stmt 0 view .LVU1510
 4272 0e48 6422     		movs	r2, #100
 4273 0e4a 80F82B20 		strb	r2, [r0, #43]
 953:Core/Src/main.c ****       LoRa_init(&myLoRa);
 4274              		.loc 1 953 7 is_stmt 1 view .LVU1511
 953:Core/Src/main.c ****       LoRa_init(&myLoRa);
 4275              		.loc 1 953 36 is_stmt 0 view .LVU1512
 4276 0e4e 0385     		strh	r3, [r0, #40]	@ movhi
 954:Core/Src/main.c ****       break;
 4277              		.loc 1 954 7 is_stmt 1 view .LVU1513
 4278 0e50 FFF7FEFF 		bl	LoRa_init
 4279              	.LVL216:
 955:Core/Src/main.c **** 
 4280              		.loc 1 955 7 view .LVU1514
 4281 0e54 FFF78BBA 		b	.L96
 4282              	.L97:
 959:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_12;            // default = SF_7
 4283              		.loc 1 959 7 view .LVU1515
 959:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_12;            // default = SF_7
 4284              		.loc 1 959 36 is_stmt 0 view .LVU1516
 4285 0e58 0C48     		ldr	r0, .L174
 4286 0e5a 40F2B113 		movw	r3, #433
 4287 0e5e 0362     		str	r3, [r0, #32]
 960:Core/Src/main.c ****       myLoRa.bandWidth             = BW_500KHz;       // default = BW_125KHz
 4288              		.loc 1 960 7 is_stmt 1 view .LVU1517
 960:Core/Src/main.c ****       myLoRa.bandWidth             = BW_500KHz;       // default = BW_125KHz
 4289              		.loc 1 960 36 is_stmt 0 view .LVU1518
 4290 0e60 0C23     		movs	r3, #12
 4291 0e62 80F82430 		strb	r3, [r0, #36]
 961:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 4292              		.loc 1 961 7 is_stmt 1 view .LVU1519
 961:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 4293              		.loc 1 961 36 is_stmt 0 view .LVU1520
 4294 0e66 0923     		movs	r3, #9
 4295 0e68 80F82530 		strb	r3, [r0, #37]
 962:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 4296              		.loc 1 962 7 is_stmt 1 view .LVU1521
 962:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 4297              		.loc 1 962 36 is_stmt 0 view .LVU1522
 4298 0e6c 0123     		movs	r3, #1
 4299 0e6e 80F82630 		strb	r3, [r0, #38]
 963:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 4300              		.loc 1 963 7 is_stmt 1 view .LVU1523
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 134


 963:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 4301              		.loc 1 963 36 is_stmt 0 view .LVU1524
 4302 0e72 FF23     		movs	r3, #255
 4303 0e74 80F82A30 		strb	r3, [r0, #42]
 964:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 4304              		.loc 1 964 7 is_stmt 1 view .LVU1525
 964:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 4305              		.loc 1 964 36 is_stmt 0 view .LVU1526
 4306 0e78 6423     		movs	r3, #100
 4307 0e7a 80F82B30 		strb	r3, [r0, #43]
 965:Core/Src/main.c ****       LoRa_init(&myLoRa);
 4308              		.loc 1 965 7 is_stmt 1 view .LVU1527
 965:Core/Src/main.c ****       LoRa_init(&myLoRa);
 4309              		.loc 1 965 36 is_stmt 0 view .LVU1528
 4310 0e7e 0823     		movs	r3, #8
 4311 0e80 0385     		strh	r3, [r0, #40]	@ movhi
 966:Core/Src/main.c ****       break;
 4312              		.loc 1 966 7 is_stmt 1 view .LVU1529
 4313 0e82 FFF7FEFF 		bl	LoRa_init
 4314              	.LVL217:
 967:Core/Src/main.c **** 
 4315              		.loc 1 967 7 view .LVU1530
 4316 0e86 FFF772BA 		b	.L96
 4317              	.L175:
 4318 0e8a 00BF     		.align	2
 4319              	.L174:
 4320 0e8c 00000000 		.word	myLoRa
 4321              		.cfi_endproc
 4322              	.LFE138:
 4324              		.global	Data
 4325              		.section	.bss.Data,"aw",%nobits
 4326              		.align	2
 4329              	Data:
 4330 0000 00000000 		.space	256
 4330      00000000 
 4330      00000000 
 4330      00000000 
 4330      00000000 
 4331              		.global	size
 4332              		.section	.bss.size,"aw",%nobits
 4333              		.align	2
 4336              	size:
 4337 0000 00000000 		.space	4
 4338              		.global	sAltitude
 4339              		.section	.bss.sAltitude,"aw",%nobits
 4340              		.align	2
 4343              	sAltitude:
 4344 0000 00000000 		.space	128
 4344      00000000 
 4344      00000000 
 4344      00000000 
 4344      00000000 
 4345              		.global	sHumidity
 4346              		.section	.bss.sHumidity,"aw",%nobits
 4347              		.align	2
 4350              	sHumidity:
 4351 0000 00000000 		.space	128
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 135


 4351      00000000 
 4351      00000000 
 4351      00000000 
 4351      00000000 
 4352              		.global	sTemperature
 4353              		.section	.bss.sTemperature,"aw",%nobits
 4354              		.align	2
 4357              	sTemperature:
 4358 0000 00000000 		.space	128
 4358      00000000 
 4358      00000000 
 4358      00000000 
 4358      00000000 
 4359              		.global	sPressure
 4360              		.section	.bss.sPressure,"aw",%nobits
 4361              		.align	2
 4364              	sPressure:
 4365 0000 00000000 		.space	128
 4365      00000000 
 4365      00000000 
 4365      00000000 
 4365      00000000 
 4366              		.global	humidity
 4367              		.section	.bss.humidity,"aw",%nobits
 4368              		.align	2
 4371              	humidity:
 4372 0000 00000000 		.space	4
 4373              		.global	temperature
 4374              		.section	.bss.temperature,"aw",%nobits
 4375              		.align	2
 4378              	temperature:
 4379 0000 00000000 		.space	4
 4380              		.global	pressure
 4381              		.section	.bss.pressure,"aw",%nobits
 4382              		.align	2
 4385              	pressure:
 4386 0000 00000000 		.space	4
 4387              		.global	bmp280
 4388              		.section	.bss.bmp280,"aw",%nobits
 4389              		.align	2
 4392              	bmp280:
 4393 0000 00000000 		.space	52
 4393      00000000 
 4393      00000000 
 4393      00000000 
 4393      00000000 
 4394              		.global	altitude
 4395              		.section	.bss.altitude,"aw",%nobits
 4396              		.align	2
 4399              	altitude:
 4400 0000 00000000 		.space	4
 4401              		.global	P_b
 4402              		.section	.data.P_b,"aw"
 4403              		.align	2
 4406              	P_b:
 4407 0000 80E6C547 		.word	1204151936
 4408              		.global	sendData
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 136


 4409              		.section	.bss.sendData,"aw",%nobits
 4412              	sendData:
 4413 0000 00       		.space	1
 4414              		.global	bModeChanged
 4415              		.section	.bss.bModeChanged,"aw",%nobits
 4418              	bModeChanged:
 4419 0000 00       		.space	1
 4420              		.global	sMode
 4421              		.section	.bss.sMode,"aw",%nobits
 4422              		.align	2
 4425              	sMode:
 4426 0000 00000000 		.space	10
 4426      00000000 
 4426      0000
 4427              		.global	iMode
 4428              		.section	.data.iMode,"aw"
 4429              		.align	2
 4432              	iMode:
 4433 0000 01000000 		.word	1
 4434              		.global	currentTicks
 4435              		.section	.bss.currentTicks,"aw",%nobits
 4436              		.align	2
 4439              	currentTicks:
 4440 0000 00000000 		.space	4
 4441              		.global	preTicks
 4442              		.section	.bss.preTicks,"aw",%nobits
 4443              		.align	2
 4446              	preTicks:
 4447 0000 00000000 		.space	4
 4448              		.global	isLoraReady
 4449              		.section	.data.isLoraReady,"aw"
 4452              	isLoraReady:
 4453 0000 01       		.byte	1
 4454              		.global	myLoRa
 4455              		.section	.bss.myLoRa,"aw",%nobits
 4456              		.align	2
 4459              	myLoRa:
 4460 0000 00000000 		.space	44
 4460      00000000 
 4460      00000000 
 4460      00000000 
 4460      00000000 
 4461              		.global	transmit_data
 4462              		.section	.bss.transmit_data,"aw",%nobits
 4463              		.align	2
 4466              	transmit_data:
 4467 0000 00000000 		.space	256
 4467      00000000 
 4467      00000000 
 4467      00000000 
 4467      00000000 
 4468              		.global	bme280p
 4469              		.section	.bss.bme280p,"aw",%nobits
 4472              	bme280p:
 4473 0000 00       		.space	1
 4474              		.global	line
 4475              		.section	.bss.line,"aw",%nobits
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 137


 4476              		.align	2
 4479              	line:
 4480 0000 00000000 		.space	512
 4480      00000000 
 4480      00000000 
 4480      00000000 
 4480      00000000 
 4481              		.global	line_out
 4482              		.section	.bss.line_out,"aw",%nobits
 4483              		.align	2
 4486              	line_out:
 4487 0000 00000000 		.space	512
 4487      00000000 
 4487      00000000 
 4487      00000000 
 4487      00000000 
 4488              		.global	flag
 4489              		.section	.bss.flag,"aw",%nobits
 4492              	flag:
 4493 0000 00       		.space	1
 4494              		.global	gps_raw
 4495              		.section	.bss.gps_raw,"aw",%nobits
 4496              		.align	2
 4499              	gps_raw:
 4500 0000 00000000 		.space	512
 4500      00000000 
 4500      00000000 
 4500      00000000 
 4500      00000000 
 4501              		.global	huart2
 4502              		.section	.bss.huart2,"aw",%nobits
 4503              		.align	2
 4506              	huart2:
 4507 0000 00000000 		.space	68
 4507      00000000 
 4507      00000000 
 4507      00000000 
 4507      00000000 
 4508              		.global	huart1
 4509              		.section	.bss.huart1,"aw",%nobits
 4510              		.align	2
 4513              	huart1:
 4514 0000 00000000 		.space	68
 4514      00000000 
 4514      00000000 
 4514      00000000 
 4514      00000000 
 4515              		.global	htim3
 4516              		.section	.bss.htim3,"aw",%nobits
 4517              		.align	2
 4520              	htim3:
 4521 0000 00000000 		.space	72
 4521      00000000 
 4521      00000000 
 4521      00000000 
 4521      00000000 
 4522              		.global	hspi3
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 138


 4523              		.section	.bss.hspi3,"aw",%nobits
 4524              		.align	2
 4527              	hspi3:
 4528 0000 00000000 		.space	88
 4528      00000000 
 4528      00000000 
 4528      00000000 
 4528      00000000 
 4529              		.global	hi2c2
 4530              		.section	.bss.hi2c2,"aw",%nobits
 4531              		.align	2
 4534              	hi2c2:
 4535 0000 00000000 		.space	84
 4535      00000000 
 4535      00000000 
 4535      00000000 
 4535      00000000 
 4536              		.global	hi2c1
 4537              		.section	.bss.hi2c1,"aw",%nobits
 4538              		.align	2
 4541              	hi2c1:
 4542 0000 00000000 		.space	84
 4542      00000000 
 4542      00000000 
 4542      00000000 
 4542      00000000 
 4543              		.text
 4544              	.Letext0:
 4545              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 4546              		.file 5 "/Users/roryschram/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscod
 4547              		.file 6 "/Users/roryschram/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscod
 4548              		.file 7 "/Users/roryschram/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscod
 4549              		.file 8 "/Users/roryschram/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscod
 4550              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 4551              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 4552              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 4553              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 4554              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 4555              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 4556              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 4557              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 4558              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 4559              		.file 18 "Core/Inc/bmp280.h"
 4560              		.file 19 "Core/Inc/LoRa.h"
 4561              		.file 20 "Core/Inc/fonts.h"
 4562              		.file 21 "Core/Inc/ssd1306.h"
 4563              		.file 22 "/Users/roryschram/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vsco
 4564              		.file 23 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 4565              		.file 24 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 4566              		.file 25 "/Users/roryschram/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vsco
 4567              		.file 26 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 4568              		.file 27 "/Users/roryschram/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vsco
 4569              		.file 28 "<built-in>"
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 139


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:21     .text.minmea_rescale:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:26     .text.minmea_rescale:00000000 minmea_rescale
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:97     .text.MX_GPIO_Init:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:102    .text.MX_GPIO_Init:00000000 MX_GPIO_Init
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:326    .text.MX_GPIO_Init:0000011c $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:334    .rodata.HAL_UARTEx_RxEventCallback.str1.4:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:354    .text.HAL_UARTEx_RxEventCallback:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:360    .text.HAL_UARTEx_RxEventCallback:00000000 HAL_UARTEx_RxEventCallback
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:618    .text.HAL_UARTEx_RxEventCallback:000001a0 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:4492   .bss.flag:00000000 flag
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:4452   .data.isLoraReady:00000000 isLoraReady
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:4466   .bss.transmit_data:00000000 transmit_data
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:4499   .bss.gps_raw:00000000 gps_raw
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:4479   .bss.line:00000000 line
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:4336   .bss.size:00000000 size
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:4371   .bss.humidity:00000000 humidity
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:4385   .bss.pressure:00000000 pressure
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:4378   .bss.temperature:00000000 temperature
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:4392   .bss.bmp280:00000000 bmp280
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:4406   .data.P_b:00000000 P_b
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:4399   .bss.altitude:00000000 altitude
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:4364   .bss.sPressure:00000000 sPressure
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:4357   .bss.sTemperature:00000000 sTemperature
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:4350   .bss.sHumidity:00000000 sHumidity
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:4343   .bss.sAltitude:00000000 sAltitude
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:648    .rodata.HAL_GPIO_EXTI_Callback.str1.4:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:661    .text.HAL_GPIO_EXTI_Callback:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:667    .text.HAL_GPIO_EXTI_Callback:00000000 HAL_GPIO_EXTI_Callback
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:986    .text.HAL_GPIO_EXTI_Callback:000001dc $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:4439   .bss.currentTicks:00000000 currentTicks
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:4446   .bss.preTicks:00000000 preTicks
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:4506   .bss.huart2:00000000 huart2
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:4418   .bss.bModeChanged:00000000 bModeChanged
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:4432   .data.iMode:00000000 iMode
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:4425   .bss.sMode:00000000 sMode
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:4534   .bss.hi2c2:00000000 hi2c2
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:1003   .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:1009   .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:1036   .text.HAL_TIM_PeriodElapsedCallback:00000010 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:4520   .bss.htim3:00000000 htim3
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:4412   .bss.sendData:00000000 sendData
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:1042   .text.Error_Handler:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:1048   .text.Error_Handler:00000000 Error_Handler
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:1080   .text.MX_USART1_UART_Init:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:1085   .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:1139   .text.MX_USART1_UART_Init:0000002c $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:4513   .bss.huart1:00000000 huart1
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:1145   .text.MX_USART2_UART_Init:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:1150   .text.MX_USART2_UART_Init:00000000 MX_USART2_UART_Init
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:1204   .text.MX_USART2_UART_Init:0000002c $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:1210   .text.MX_I2C1_Init:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:1215   .text.MX_I2C1_Init:00000000 MX_I2C1_Init
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:1272   .text.MX_I2C1_Init:0000002c $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:4541   .bss.hi2c1:00000000 hi2c1
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:1279   .text.MX_SPI3_Init:00000000 $t
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 140


/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:1284   .text.MX_SPI3_Init:00000000 MX_SPI3_Init
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:1351   .text.MX_SPI3_Init:00000038 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:4527   .bss.hspi3:00000000 hspi3
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:1357   .text.MX_I2C2_Init:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:1362   .text.MX_I2C2_Init:00000000 MX_I2C2_Init
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:1419   .text.MX_I2C2_Init:0000002c $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:1426   .text.MX_TIM3_Init:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:1431   .text.MX_TIM3_Init:00000000 MX_TIM3_Init
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:1530   .text.MX_TIM3_Init:00000064 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:1536   .text.SystemClock_Config:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:1542   .text.SystemClock_Config:00000000 SystemClock_Config
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:1666   .text.SystemClock_Config:00000080 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:1672   .rodata.main.str1.4:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:1698   .text.main:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:1704   .text.main:00000000 main
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:2128   .text.main:00000250 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:2192   .text.main:000002c8 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:4329   .bss.Data:00000000 Data
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:4459   .bss.myLoRa:00000000 myLoRa
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:2225   .text.main:00000340 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:2849   .text.main:00000690 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:2854   .text.main:00000698 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:3477   .text.main:000009ec $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:3481   .text.main:000009f0 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:4107   .text.main:00000d5c $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:4111   .text.main:00000d60 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:4320   .text.main:00000e8c $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:4326   .bss.Data:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:4333   .bss.size:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:4340   .bss.sAltitude:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:4347   .bss.sHumidity:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:4354   .bss.sTemperature:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:4361   .bss.sPressure:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:4368   .bss.humidity:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:4375   .bss.temperature:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:4382   .bss.pressure:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:4389   .bss.bmp280:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:4396   .bss.altitude:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:4403   .data.P_b:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:4413   .bss.sendData:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:4419   .bss.bModeChanged:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:4422   .bss.sMode:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:4429   .data.iMode:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:4436   .bss.currentTicks:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:4443   .bss.preTicks:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:4456   .bss.myLoRa:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:4463   .bss.transmit_data:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:4472   .bss.bme280p:00000000 bme280p
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:4473   .bss.bme280p:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:4476   .bss.line:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:4486   .bss.line_out:00000000 line_out
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:4483   .bss.line_out:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:4493   .bss.flag:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:4496   .bss.gps_raw:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:4503   .bss.huart2:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:4510   .bss.huart1:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:4517   .bss.htim3:00000000 $d
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s 			page 141


/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:4524   .bss.hspi3:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:4531   .bss.hi2c2:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccEicosP.s:4538   .bss.hi2c1:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
__aeabi_f2d
__aeabi_dsub
__aeabi_dmul
__aeabi_d2f
memset
strtok
strcpy
minmea_parse_rmc
strlen
sprintf
bmp280_read_float
pow
gcvt
HAL_GetTick
HAL_UART_Transmit
ssd1306_SetCursor
ssd1306_WriteString
ssd1306_UpdateScreen
Font_16x26
HAL_UART_Init
HAL_I2C_Init
HAL_SPI_Init
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_TIM_Base_Start_IT
bmp280_init_default_params
bmp280_init
HAL_Delay
newLoRa
LoRa_init
snprintf
ssd1306_Init
LoRa_transmit
HAL_UARTEx_ReceiveToIdle_IT
