ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.minmea_rescale,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	minmea_rescale:
  27              	.LVL0:
  28              	.LFB134:
  29              		.file 2 "Core/Inc/minmea.h"
   1:Core/Inc/minmea.h **** /*
   2:Core/Inc/minmea.h ****  * Copyright Â© 2014 Kosma Moczek <kosma@cloudyourcar.com>
   3:Core/Inc/minmea.h ****  * This program is free software. It comes without any warranty, to the extent
   4:Core/Inc/minmea.h ****  * permitted by applicable law. You can redistribute it and/or modify it under
   5:Core/Inc/minmea.h ****  * the terms of the Do What The Fuck You Want To Public License, Version 2, as
   6:Core/Inc/minmea.h ****  * published by Sam Hocevar. See the COPYING file for more details.
   7:Core/Inc/minmea.h ****  */
   8:Core/Inc/minmea.h **** 
   9:Core/Inc/minmea.h **** #ifndef MINMEA_H
  10:Core/Inc/minmea.h **** #define MINMEA_H
  11:Core/Inc/minmea.h **** 
  12:Core/Inc/minmea.h **** #ifdef __cplusplus
  13:Core/Inc/minmea.h **** extern "C" {
  14:Core/Inc/minmea.h **** #endif
  15:Core/Inc/minmea.h **** 
  16:Core/Inc/minmea.h **** #include <ctype.h>
  17:Core/Inc/minmea.h **** #include <stdint.h>
  18:Core/Inc/minmea.h **** #include <stdbool.h>
  19:Core/Inc/minmea.h **** #include <time.h>
  20:Core/Inc/minmea.h **** #include <math.h>
  21:Core/Inc/minmea.h **** #ifdef MINMEA_INCLUDE_COMPAT
  22:Core/Inc/minmea.h **** #include <minmea_compat.h>
  23:Core/Inc/minmea.h **** #endif
  24:Core/Inc/minmea.h **** 
  25:Core/Inc/minmea.h **** #ifndef MINMEA_MAX_SENTENCE_LENGTH
  26:Core/Inc/minmea.h **** #define MINMEA_MAX_SENTENCE_LENGTH 80
  27:Core/Inc/minmea.h **** #endif
  28:Core/Inc/minmea.h **** 
  29:Core/Inc/minmea.h **** enum minmea_sentence_id {
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s 			page 2


  30:Core/Inc/minmea.h ****     MINMEA_INVALID = -1,
  31:Core/Inc/minmea.h ****     MINMEA_UNKNOWN = 0,
  32:Core/Inc/minmea.h ****     MINMEA_SENTENCE_GBS,
  33:Core/Inc/minmea.h ****     MINMEA_SENTENCE_GGA,
  34:Core/Inc/minmea.h ****     MINMEA_SENTENCE_GLL,
  35:Core/Inc/minmea.h ****     MINMEA_SENTENCE_GSA,
  36:Core/Inc/minmea.h ****     MINMEA_SENTENCE_GST,
  37:Core/Inc/minmea.h ****     MINMEA_SENTENCE_GSV,
  38:Core/Inc/minmea.h ****     MINMEA_SENTENCE_RMC,
  39:Core/Inc/minmea.h ****     MINMEA_SENTENCE_VTG,
  40:Core/Inc/minmea.h ****     MINMEA_SENTENCE_ZDA,
  41:Core/Inc/minmea.h **** };
  42:Core/Inc/minmea.h **** 
  43:Core/Inc/minmea.h **** struct minmea_float {
  44:Core/Inc/minmea.h ****     int_least32_t value;
  45:Core/Inc/minmea.h ****     int_least32_t scale;
  46:Core/Inc/minmea.h **** };
  47:Core/Inc/minmea.h **** 
  48:Core/Inc/minmea.h **** struct minmea_date {
  49:Core/Inc/minmea.h ****     int day;
  50:Core/Inc/minmea.h ****     int month;
  51:Core/Inc/minmea.h ****     int year;
  52:Core/Inc/minmea.h **** };
  53:Core/Inc/minmea.h **** 
  54:Core/Inc/minmea.h **** struct minmea_time {
  55:Core/Inc/minmea.h ****     int hours;
  56:Core/Inc/minmea.h ****     int minutes;
  57:Core/Inc/minmea.h ****     int seconds;
  58:Core/Inc/minmea.h ****     int microseconds;
  59:Core/Inc/minmea.h **** };
  60:Core/Inc/minmea.h **** 
  61:Core/Inc/minmea.h **** struct minmea_sentence_gbs {
  62:Core/Inc/minmea.h ****     struct minmea_time time;
  63:Core/Inc/minmea.h ****     struct minmea_float err_latitude;
  64:Core/Inc/minmea.h ****     struct minmea_float err_longitude;
  65:Core/Inc/minmea.h ****     struct minmea_float err_altitude;
  66:Core/Inc/minmea.h ****     int svid;
  67:Core/Inc/minmea.h ****     struct minmea_float prob;
  68:Core/Inc/minmea.h ****     struct minmea_float bias;
  69:Core/Inc/minmea.h ****     struct minmea_float stddev;
  70:Core/Inc/minmea.h **** };
  71:Core/Inc/minmea.h **** 
  72:Core/Inc/minmea.h **** struct minmea_sentence_rmc {
  73:Core/Inc/minmea.h ****     struct minmea_time time;
  74:Core/Inc/minmea.h ****     bool valid;
  75:Core/Inc/minmea.h ****     struct minmea_float latitude;
  76:Core/Inc/minmea.h ****     struct minmea_float longitude;
  77:Core/Inc/minmea.h ****     struct minmea_float speed;
  78:Core/Inc/minmea.h ****     struct minmea_float course;
  79:Core/Inc/minmea.h ****     struct minmea_date date;
  80:Core/Inc/minmea.h ****     struct minmea_float variation;
  81:Core/Inc/minmea.h **** };
  82:Core/Inc/minmea.h **** 
  83:Core/Inc/minmea.h **** struct minmea_sentence_gga {
  84:Core/Inc/minmea.h ****     struct minmea_time time;
  85:Core/Inc/minmea.h ****     struct minmea_float latitude;
  86:Core/Inc/minmea.h ****     struct minmea_float longitude;
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s 			page 3


  87:Core/Inc/minmea.h ****     int fix_quality;
  88:Core/Inc/minmea.h ****     int satellites_tracked;
  89:Core/Inc/minmea.h ****     struct minmea_float hdop;
  90:Core/Inc/minmea.h ****     struct minmea_float altitude; char altitude_units;
  91:Core/Inc/minmea.h ****     struct minmea_float height; char height_units;
  92:Core/Inc/minmea.h ****     struct minmea_float dgps_age;
  93:Core/Inc/minmea.h **** };
  94:Core/Inc/minmea.h **** 
  95:Core/Inc/minmea.h **** enum minmea_gll_status {
  96:Core/Inc/minmea.h ****     MINMEA_GLL_STATUS_DATA_VALID = 'A',
  97:Core/Inc/minmea.h ****     MINMEA_GLL_STATUS_DATA_NOT_VALID = 'V',
  98:Core/Inc/minmea.h **** };
  99:Core/Inc/minmea.h **** 
 100:Core/Inc/minmea.h **** // FAA mode added to some fields in NMEA 2.3.
 101:Core/Inc/minmea.h **** enum minmea_faa_mode {
 102:Core/Inc/minmea.h ****     MINMEA_FAA_MODE_AUTONOMOUS = 'A',
 103:Core/Inc/minmea.h ****     MINMEA_FAA_MODE_DIFFERENTIAL = 'D',
 104:Core/Inc/minmea.h ****     MINMEA_FAA_MODE_ESTIMATED = 'E',
 105:Core/Inc/minmea.h ****     MINMEA_FAA_MODE_MANUAL = 'M',
 106:Core/Inc/minmea.h ****     MINMEA_FAA_MODE_SIMULATED = 'S',
 107:Core/Inc/minmea.h ****     MINMEA_FAA_MODE_NOT_VALID = 'N',
 108:Core/Inc/minmea.h ****     MINMEA_FAA_MODE_PRECISE = 'P',
 109:Core/Inc/minmea.h **** };
 110:Core/Inc/minmea.h **** 
 111:Core/Inc/minmea.h **** struct minmea_sentence_gll {
 112:Core/Inc/minmea.h ****     struct minmea_float latitude;
 113:Core/Inc/minmea.h ****     struct minmea_float longitude;
 114:Core/Inc/minmea.h ****     struct minmea_time time;
 115:Core/Inc/minmea.h ****     char status;
 116:Core/Inc/minmea.h ****     char mode;
 117:Core/Inc/minmea.h **** };
 118:Core/Inc/minmea.h **** 
 119:Core/Inc/minmea.h **** struct minmea_sentence_gst {
 120:Core/Inc/minmea.h ****     struct minmea_time time;
 121:Core/Inc/minmea.h ****     struct minmea_float rms_deviation;
 122:Core/Inc/minmea.h ****     struct minmea_float semi_major_deviation;
 123:Core/Inc/minmea.h ****     struct minmea_float semi_minor_deviation;
 124:Core/Inc/minmea.h ****     struct minmea_float semi_major_orientation;
 125:Core/Inc/minmea.h ****     struct minmea_float latitude_error_deviation;
 126:Core/Inc/minmea.h ****     struct minmea_float longitude_error_deviation;
 127:Core/Inc/minmea.h ****     struct minmea_float altitude_error_deviation;
 128:Core/Inc/minmea.h **** };
 129:Core/Inc/minmea.h **** 
 130:Core/Inc/minmea.h **** enum minmea_gsa_mode {
 131:Core/Inc/minmea.h ****     MINMEA_GPGSA_MODE_AUTO = 'A',
 132:Core/Inc/minmea.h ****     MINMEA_GPGSA_MODE_FORCED = 'M',
 133:Core/Inc/minmea.h **** };
 134:Core/Inc/minmea.h **** 
 135:Core/Inc/minmea.h **** enum minmea_gsa_fix_type {
 136:Core/Inc/minmea.h ****     MINMEA_GPGSA_FIX_NONE = 1,
 137:Core/Inc/minmea.h ****     MINMEA_GPGSA_FIX_2D = 2,
 138:Core/Inc/minmea.h ****     MINMEA_GPGSA_FIX_3D = 3,
 139:Core/Inc/minmea.h **** };
 140:Core/Inc/minmea.h **** 
 141:Core/Inc/minmea.h **** struct minmea_sentence_gsa {
 142:Core/Inc/minmea.h ****     char mode;
 143:Core/Inc/minmea.h ****     int fix_type;
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s 			page 4


 144:Core/Inc/minmea.h ****     int sats[12];
 145:Core/Inc/minmea.h ****     struct minmea_float pdop;
 146:Core/Inc/minmea.h ****     struct minmea_float hdop;
 147:Core/Inc/minmea.h ****     struct minmea_float vdop;
 148:Core/Inc/minmea.h **** };
 149:Core/Inc/minmea.h **** 
 150:Core/Inc/minmea.h **** struct minmea_sat_info {
 151:Core/Inc/minmea.h ****     int nr;
 152:Core/Inc/minmea.h ****     int elevation;
 153:Core/Inc/minmea.h ****     int azimuth;
 154:Core/Inc/minmea.h ****     int snr;
 155:Core/Inc/minmea.h **** };
 156:Core/Inc/minmea.h **** 
 157:Core/Inc/minmea.h **** struct minmea_sentence_gsv {
 158:Core/Inc/minmea.h ****     int total_msgs;
 159:Core/Inc/minmea.h ****     int msg_nr;
 160:Core/Inc/minmea.h ****     int total_sats;
 161:Core/Inc/minmea.h ****     struct minmea_sat_info sats[4];
 162:Core/Inc/minmea.h **** };
 163:Core/Inc/minmea.h **** 
 164:Core/Inc/minmea.h **** struct minmea_sentence_vtg {
 165:Core/Inc/minmea.h ****     struct minmea_float true_track_degrees;
 166:Core/Inc/minmea.h ****     struct minmea_float magnetic_track_degrees;
 167:Core/Inc/minmea.h ****     struct minmea_float speed_knots;
 168:Core/Inc/minmea.h ****     struct minmea_float speed_kph;
 169:Core/Inc/minmea.h ****     enum minmea_faa_mode faa_mode;
 170:Core/Inc/minmea.h **** };
 171:Core/Inc/minmea.h **** 
 172:Core/Inc/minmea.h **** struct minmea_sentence_zda {
 173:Core/Inc/minmea.h ****     struct minmea_time time;
 174:Core/Inc/minmea.h ****     struct minmea_date date;
 175:Core/Inc/minmea.h ****     int hour_offset;
 176:Core/Inc/minmea.h ****     int minute_offset;
 177:Core/Inc/minmea.h **** };
 178:Core/Inc/minmea.h **** 
 179:Core/Inc/minmea.h **** /**
 180:Core/Inc/minmea.h ****  * Calculate raw sentence checksum. Does not check sentence integrity.
 181:Core/Inc/minmea.h ****  */
 182:Core/Inc/minmea.h **** uint8_t minmea_checksum(const char *sentence);
 183:Core/Inc/minmea.h **** 
 184:Core/Inc/minmea.h **** /**
 185:Core/Inc/minmea.h ****  * Check sentence validity and checksum. Returns true for valid sentences.
 186:Core/Inc/minmea.h ****  */
 187:Core/Inc/minmea.h **** bool minmea_check(const char *sentence, bool strict);
 188:Core/Inc/minmea.h **** 
 189:Core/Inc/minmea.h **** /**
 190:Core/Inc/minmea.h ****  * Determine talker identifier.
 191:Core/Inc/minmea.h ****  */
 192:Core/Inc/minmea.h **** bool minmea_talker_id(char talker[3], const char *sentence);
 193:Core/Inc/minmea.h **** 
 194:Core/Inc/minmea.h **** /**
 195:Core/Inc/minmea.h ****  * Determine sentence identifier.
 196:Core/Inc/minmea.h ****  */
 197:Core/Inc/minmea.h **** enum minmea_sentence_id minmea_sentence_id(const char *sentence, bool strict);
 198:Core/Inc/minmea.h **** 
 199:Core/Inc/minmea.h **** /**
 200:Core/Inc/minmea.h ****  * Scanf-like processor for NMEA sentences. Supports the following formats:
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s 			page 5


 201:Core/Inc/minmea.h ****  * c - single character (char *)
 202:Core/Inc/minmea.h ****  * d - direction, returned as 1/-1, default 0 (int *)
 203:Core/Inc/minmea.h ****  * f - fractional, returned as value + scale (struct minmea_float *)
 204:Core/Inc/minmea.h ****  * i - decimal, default zero (int *)
 205:Core/Inc/minmea.h ****  * s - string (char *)
 206:Core/Inc/minmea.h ****  * t - talker identifier and type (char *)
 207:Core/Inc/minmea.h ****  * D - date (struct minmea_date *)
 208:Core/Inc/minmea.h ****  * T - time stamp (struct minmea_time *)
 209:Core/Inc/minmea.h ****  * _ - ignore this field
 210:Core/Inc/minmea.h ****  * ; - following fields are optional
 211:Core/Inc/minmea.h ****  * Returns true on success. See library source code for details.
 212:Core/Inc/minmea.h ****  */
 213:Core/Inc/minmea.h **** bool minmea_scan(const char *sentence, const char *format, ...);
 214:Core/Inc/minmea.h **** 
 215:Core/Inc/minmea.h **** /*
 216:Core/Inc/minmea.h ****  * Parse a specific type of sentence. Return true on success.
 217:Core/Inc/minmea.h ****  */
 218:Core/Inc/minmea.h **** bool minmea_parse_gbs(struct minmea_sentence_gbs *frame, const char *sentence);
 219:Core/Inc/minmea.h **** bool minmea_parse_rmc(struct minmea_sentence_rmc *frame, const char *sentence);
 220:Core/Inc/minmea.h **** bool minmea_parse_gga(struct minmea_sentence_gga *frame, const char *sentence);
 221:Core/Inc/minmea.h **** bool minmea_parse_gsa(struct minmea_sentence_gsa *frame, const char *sentence);
 222:Core/Inc/minmea.h **** bool minmea_parse_gll(struct minmea_sentence_gll *frame, const char *sentence);
 223:Core/Inc/minmea.h **** bool minmea_parse_gst(struct minmea_sentence_gst *frame, const char *sentence);
 224:Core/Inc/minmea.h **** bool minmea_parse_gsv(struct minmea_sentence_gsv *frame, const char *sentence);
 225:Core/Inc/minmea.h **** bool minmea_parse_vtg(struct minmea_sentence_vtg *frame, const char *sentence);
 226:Core/Inc/minmea.h **** bool minmea_parse_zda(struct minmea_sentence_zda *frame, const char *sentence);
 227:Core/Inc/minmea.h **** 
 228:Core/Inc/minmea.h **** /**
 229:Core/Inc/minmea.h ****  * Convert GPS UTC date/time representation to a UNIX calendar time.
 230:Core/Inc/minmea.h ****  */
 231:Core/Inc/minmea.h **** int minmea_getdatetime(struct tm *tm, const struct minmea_date *date, const struct minmea_time *tim
 232:Core/Inc/minmea.h **** 
 233:Core/Inc/minmea.h **** /**
 234:Core/Inc/minmea.h ****  * Convert GPS UTC date/time representation to a UNIX timestamp.
 235:Core/Inc/minmea.h ****  */
 236:Core/Inc/minmea.h **** int minmea_gettime(struct timespec *ts, const struct minmea_date *date, const struct minmea_time *t
 237:Core/Inc/minmea.h **** 
 238:Core/Inc/minmea.h **** /**
 239:Core/Inc/minmea.h ****  * Rescale a fixed-point value to a different scale. Rounds towards zero.
 240:Core/Inc/minmea.h ****  */
 241:Core/Inc/minmea.h **** static inline int_least32_t minmea_rescale(const struct minmea_float *f, int_least32_t new_scale)
 242:Core/Inc/minmea.h **** {
  30              		.loc 2 242 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              		.loc 2 242 1 is_stmt 0 view .LVU1
  36 0000 0346     		mov	r3, r0
 243:Core/Inc/minmea.h ****     if (f->scale == 0)
  37              		.loc 2 243 5 is_stmt 1 view .LVU2
  38              		.loc 2 243 10 is_stmt 0 view .LVU3
  39 0002 4068     		ldr	r0, [r0, #4]
  40              	.LVL1:
  41              		.loc 2 243 8 view .LVU4
  42 0004 F0B1     		cbz	r0, .L1
 244:Core/Inc/minmea.h ****         return 0;
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s 			page 6


 245:Core/Inc/minmea.h ****     if (f->scale == new_scale)
  43              		.loc 2 245 5 is_stmt 1 view .LVU5
  44              		.loc 2 245 8 is_stmt 0 view .LVU6
  45 0006 8842     		cmp	r0, r1
  46 0008 15D0     		beq	.L5
 246:Core/Inc/minmea.h ****         return f->value;
 247:Core/Inc/minmea.h ****     if (f->scale > new_scale)
  47              		.loc 2 247 5 is_stmt 1 view .LVU7
  48              		.loc 2 247 8 is_stmt 0 view .LVU8
  49 000a 8842     		cmp	r0, r1
  50 000c 15DD     		ble	.L4
 248:Core/Inc/minmea.h ****         return (f->value + ((f->value > 0) - (f->value < 0)) * f->scale/new_scale/2) / (f->scale/ne
  51              		.loc 2 248 9 is_stmt 1 view .LVU9
  52              		.loc 2 248 18 is_stmt 0 view .LVU10
  53 000e 1A68     		ldr	r2, [r3]
  54              		.loc 2 248 56 view .LVU11
  55 0010 D30F     		lsrs	r3, r2, #31
  56              	.LVL2:
  57              		.loc 2 248 44 view .LVU12
  58 0012 002A     		cmp	r2, #0
  59 0014 D4BF     		ite	le
  60 0016 5B42     		rsble	r3, r3, #0
  61 0018 C3F10103 		rsbgt	r3, r3, #1
  62              		.loc 2 248 62 view .LVU13
  63 001c 00FB03F3 		mul	r3, r0, r3
  64              		.loc 2 248 72 view .LVU14
  65 0020 93FBF1F3 		sdiv	r3, r3, r1
  66              		.loc 2 248 82 view .LVU15
  67 0024 03EBD373 		add	r3, r3, r3, lsr #31
  68              		.loc 2 248 26 view .LVU16
  69 0028 02EB6302 		add	r2, r2, r3, asr #1
  70              		.loc 2 248 97 view .LVU17
  71 002c 90FBF1F0 		sdiv	r0, r0, r1
  72              		.loc 2 248 86 view .LVU18
  73 0030 92FBF0F0 		sdiv	r0, r2, r0
  74 0034 7047     		bx	lr
  75              	.LVL3:
  76              	.L5:
 246:Core/Inc/minmea.h ****         return f->value;
  77              		.loc 2 246 9 is_stmt 1 view .LVU19
 246:Core/Inc/minmea.h ****         return f->value;
  78              		.loc 2 246 17 is_stmt 0 view .LVU20
  79 0036 1868     		ldr	r0, [r3]
  80 0038 7047     		bx	lr
  81              	.L4:
 249:Core/Inc/minmea.h ****     else
 250:Core/Inc/minmea.h ****         return f->value * (new_scale/f->scale);
  82              		.loc 2 250 9 is_stmt 1 view .LVU21
  83              		.loc 2 250 17 is_stmt 0 view .LVU22
  84 003a 1B68     		ldr	r3, [r3]
  85              	.LVL4:
  86              		.loc 2 250 37 view .LVU23
  87 003c 91FBF0F0 		sdiv	r0, r1, r0
  88              		.loc 2 250 25 view .LVU24
  89 0040 03FB00F0 		mul	r0, r3, r0
  90              	.L1:
 251:Core/Inc/minmea.h **** }
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s 			page 7


  91              		.loc 2 251 1 view .LVU25
  92 0044 7047     		bx	lr
  93              		.cfi_endproc
  94              	.LFE134:
  96              		.section	.text.MX_GPIO_Init,"ax",%progbits
  97              		.align	1
  98              		.syntax unified
  99              		.thumb
 100              		.thumb_func
 102              	MX_GPIO_Init:
 103              	.LFB143:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include <stdio.h>
  25:Core/Src/main.c **** #include "minmea.h"
  26:Core/Src/main.c **** #include <stdlib.h>
  27:Core/Src/main.c **** #include <string.h>
  28:Core/Src/main.c **** #include <stdint.h>
  29:Core/Src/main.c **** #include "bmp280.h"
  30:Core/Src/main.c **** #include <float.h>
  31:Core/Src/main.c **** #include <math.h>
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* USER CODE END Includes */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  36:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* USER CODE END PTD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  41:Core/Src/main.c **** /* USER CODE BEGIN PD */
  42:Core/Src/main.c **** #define INDENT_SPACES "  "
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* USER CODE END PD */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s 			page 8


  47:Core/Src/main.c **** /* USER CODE BEGIN PM */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* USER CODE END PM */
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  52:Core/Src/main.c **** I2C_HandleTypeDef hi2c1;
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** UART_HandleTypeDef huart1;
  55:Core/Src/main.c **** UART_HandleTypeDef huart2;
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* USER CODE BEGIN PV */
  58:Core/Src/main.c **** uint8_t gps_raw[512] = {"\0"};
  59:Core/Src/main.c **** uint8_t flag = 0;
  60:Core/Src/main.c **** char line_out[512] = {"\0"};
  61:Core/Src/main.c **** char line[512] = {"\0"};
  62:Core/Src/main.c **** bool bme280p;
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** //Variables to work out altitude
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** //Pressure at sea level
  67:Core/Src/main.c **** float P_b = 101325;
  68:Core/Src/main.c **** 
  69:Core/Src/main.c **** //Height that we are calculating
  70:Core/Src/main.c **** float altitude = 0;
  71:Core/Src/main.c **** 
  72:Core/Src/main.c **** 
  73:Core/Src/main.c **** BMP280_HandleTypedef bmp280;
  74:Core/Src/main.c **** 
  75:Core/Src/main.c **** float pressure, temperature, humidity;
  76:Core/Src/main.c **** char sPressure[128] = {"\0"};
  77:Core/Src/main.c **** char sTemperature[128] = {"\0"};
  78:Core/Src/main.c **** char sHumidity[128] = {"\0"};
  79:Core/Src/main.c **** char sAltitude[128] = {"\0"};
  80:Core/Src/main.c **** 
  81:Core/Src/main.c **** uint16_t size;
  82:Core/Src/main.c **** uint8_t Data[256] = {"\0"};
  83:Core/Src/main.c **** 
  84:Core/Src/main.c **** /* USER CODE END PV */
  85:Core/Src/main.c **** 
  86:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  87:Core/Src/main.c **** void SystemClock_Config(void);
  88:Core/Src/main.c **** static void MX_GPIO_Init(void);
  89:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
  90:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
  91:Core/Src/main.c **** static void MX_I2C1_Init(void);
  92:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  93:Core/Src/main.c **** 
  94:Core/Src/main.c **** 
  95:Core/Src/main.c **** /* USER CODE END PFP */
  96:Core/Src/main.c **** 
  97:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  98:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  99:Core/Src/main.c **** 
 100:Core/Src/main.c **** /* USER CODE END 0 */
 101:Core/Src/main.c **** 
 102:Core/Src/main.c **** /**
 103:Core/Src/main.c ****   * @brief  The application entry point.
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s 			page 9


 104:Core/Src/main.c ****   * @retval int
 105:Core/Src/main.c ****   */
 106:Core/Src/main.c **** int main(void)
 107:Core/Src/main.c **** {
 108:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 109:Core/Src/main.c **** 
 110:Core/Src/main.c ****   /* USER CODE END 1 */
 111:Core/Src/main.c **** 
 112:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 113:Core/Src/main.c **** 
 114:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 115:Core/Src/main.c ****   HAL_Init();
 116:Core/Src/main.c **** 
 117:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 118:Core/Src/main.c **** 
 119:Core/Src/main.c ****   /* USER CODE END Init */
 120:Core/Src/main.c **** 
 121:Core/Src/main.c ****   /* Configure the system clock */
 122:Core/Src/main.c ****   SystemClock_Config();
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 125:Core/Src/main.c **** 
 126:Core/Src/main.c ****   /* USER CODE END SysInit */
 127:Core/Src/main.c **** 
 128:Core/Src/main.c ****   /* Initialize all configured peripherals */
 129:Core/Src/main.c ****   MX_GPIO_Init();
 130:Core/Src/main.c ****   MX_USART1_UART_Init();
 131:Core/Src/main.c ****   MX_USART2_UART_Init();
 132:Core/Src/main.c ****   MX_I2C1_Init();
 133:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 134:Core/Src/main.c **** 
 135:Core/Src/main.c **** /*
 136:Core/Src/main.c ****   
 137:Core/Src/main.c ****   uint8_t Buffer[25] = {0};
 138:Core/Src/main.c ****   uint8_t Space[] = " - ";
 139:Core/Src/main.c ****   uint8_t StartMSG[] = "Starting I2C Scanning: \r\n";
 140:Core/Src/main.c ****   uint8_t EndMSG[] = "Done! \r\n\r\n";
 141:Core/Src/main.c ****   int i = 0, ret;
 142:Core/Src/main.c **** 
 143:Core/Src/main.c ****   for(i=1; i<128; i++)
 144:Core/Src/main.c ****     {
 145:Core/Src/main.c ****         ret = HAL_I2C_IsDeviceReady(&hi2c1, (uint16_t)(i<<1), 3, 5);
 146:Core/Src/main.c ****         if (ret != HAL_OK) 
 147:Core/Src/main.c ****         {
 148:Core/Src/main.c ****             HAL_UART_Transmit(&huart2, Space, sizeof(Space), 1000);
 149:Core/Src/main.c ****         }
 150:Core/Src/main.c ****         else if(ret == HAL_OK)
 151:Core/Src/main.c ****         {
 152:Core/Src/main.c ****             sprintf(Buffer, "0x%X", i);
 153:Core/Src/main.c ****             HAL_UART_Transmit(&huart2, Buffer, sizeof(Buffer), 1000);
 154:Core/Src/main.c ****         }
 155:Core/Src/main.c ****     }
 156:Core/Src/main.c ****     HAL_UART_Transmit(&huart2, EndMSG, sizeof(EndMSG), 1000);
 157:Core/Src/main.c **** 
 158:Core/Src/main.c **** */
 159:Core/Src/main.c **** 
 160:Core/Src/main.c ****   bmp280_init_default_params(&bmp280.params);
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s 			page 10


 161:Core/Src/main.c **** 	bmp280.addr = 0x77;
 162:Core/Src/main.c **** 	bmp280.i2c = &hi2c1;
 163:Core/Src/main.c **** 
 164:Core/Src/main.c **** 	while (!bmp280_init(&bmp280, &bmp280.params)) {
 165:Core/Src/main.c **** 		size = sprintf((char *)Data, "BMP280 initialization failed\n");
 166:Core/Src/main.c **** 		HAL_UART_Transmit(&huart2, Data, size, 1000);
 167:Core/Src/main.c **** 		HAL_Delay(2000);
 168:Core/Src/main.c **** 	}
 169:Core/Src/main.c **** 	bool bme280p = bmp280.id == BME280_CHIP_ID;
 170:Core/Src/main.c **** 	size = sprintf((char *)Data, "BMP280: found %s\n", bme280p ? "BME280" : "BMP280");
 171:Core/Src/main.c **** 	HAL_UART_Transmit(&huart2, Data, size, 1000);
 172:Core/Src/main.c **** 
 173:Core/Src/main.c **** 
 174:Core/Src/main.c ****   /* USER CODE END 2 */
 175:Core/Src/main.c **** 
 176:Core/Src/main.c ****   /* Infinite loop */
 177:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 178:Core/Src/main.c ****   while (1)
 179:Core/Src/main.c ****   {
 180:Core/Src/main.c ****     //HAL_UARTEx_ReceiveToIdle_DMA(&huart1,(uint8_t*)gps_raw,512);
 181:Core/Src/main.c ****     HAL_UARTEx_ReceiveToIdle_IT(&huart1,(uint8_t*)gps_raw,512);
 182:Core/Src/main.c ****     
 183:Core/Src/main.c ****     /* USER CODE END WHILE */
 184:Core/Src/main.c **** 
 185:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 186:Core/Src/main.c ****     //HAL_UART_Transmit_IT(&huart2, (uint8_t *)Gpsdata, sizeof(Gpsdata));
 187:Core/Src/main.c ****     //HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13);
 188:Core/Src/main.c **** 
 189:Core/Src/main.c ****     //HAL_Delay(1000); 
 190:Core/Src/main.c **** 
 191:Core/Src/main.c ****   }
 192:Core/Src/main.c ****   /* USER CODE END 3 */
 193:Core/Src/main.c **** }
 194:Core/Src/main.c **** 
 195:Core/Src/main.c **** /**
 196:Core/Src/main.c ****   * @brief System Clock Configuration
 197:Core/Src/main.c ****   * @retval None
 198:Core/Src/main.c ****   */
 199:Core/Src/main.c **** void SystemClock_Config(void)
 200:Core/Src/main.c **** {
 201:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 202:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 203:Core/Src/main.c **** 
 204:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 205:Core/Src/main.c ****   */
 206:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 207:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 208:Core/Src/main.c **** 
 209:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 210:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 211:Core/Src/main.c ****   */
 212:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 213:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 214:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 215:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 216:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 217:Core/Src/main.c ****   {
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s 			page 11


 218:Core/Src/main.c ****     Error_Handler();
 219:Core/Src/main.c ****   }
 220:Core/Src/main.c **** 
 221:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 222:Core/Src/main.c ****   */
 223:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 224:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 225:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 226:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 227:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 228:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 229:Core/Src/main.c **** 
 230:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 231:Core/Src/main.c ****   {
 232:Core/Src/main.c ****     Error_Handler();
 233:Core/Src/main.c ****   }
 234:Core/Src/main.c **** }
 235:Core/Src/main.c **** 
 236:Core/Src/main.c **** /**
 237:Core/Src/main.c ****   * @brief I2C1 Initialization Function
 238:Core/Src/main.c ****   * @param None
 239:Core/Src/main.c ****   * @retval None
 240:Core/Src/main.c ****   */
 241:Core/Src/main.c **** static void MX_I2C1_Init(void)
 242:Core/Src/main.c **** {
 243:Core/Src/main.c **** 
 244:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 0 */
 245:Core/Src/main.c **** 
 246:Core/Src/main.c ****   /* USER CODE END I2C1_Init 0 */
 247:Core/Src/main.c **** 
 248:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 1 */
 249:Core/Src/main.c **** 
 250:Core/Src/main.c ****   /* USER CODE END I2C1_Init 1 */
 251:Core/Src/main.c ****   hi2c1.Instance = I2C1;
 252:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 253:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 254:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 255:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 256:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 257:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 258:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 259:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 260:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 261:Core/Src/main.c ****   {
 262:Core/Src/main.c ****     Error_Handler();
 263:Core/Src/main.c ****   }
 264:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 2 */
 265:Core/Src/main.c **** 
 266:Core/Src/main.c ****   /* USER CODE END I2C1_Init 2 */
 267:Core/Src/main.c **** 
 268:Core/Src/main.c **** }
 269:Core/Src/main.c **** 
 270:Core/Src/main.c **** /**
 271:Core/Src/main.c ****   * @brief USART1 Initialization Function
 272:Core/Src/main.c ****   * @param None
 273:Core/Src/main.c ****   * @retval None
 274:Core/Src/main.c ****   */
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s 			page 12


 275:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
 276:Core/Src/main.c **** {
 277:Core/Src/main.c **** 
 278:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
 279:Core/Src/main.c **** 
 280:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
 281:Core/Src/main.c **** 
 282:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
 283:Core/Src/main.c **** 
 284:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
 285:Core/Src/main.c ****   huart1.Instance = USART1;
 286:Core/Src/main.c ****   huart1.Init.BaudRate = 9600;
 287:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 288:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 289:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 290:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 291:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 292:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 293:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 294:Core/Src/main.c ****   {
 295:Core/Src/main.c ****     Error_Handler();
 296:Core/Src/main.c ****   }
 297:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
 298:Core/Src/main.c **** 
 299:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
 300:Core/Src/main.c **** 
 301:Core/Src/main.c **** }
 302:Core/Src/main.c **** 
 303:Core/Src/main.c **** /**
 304:Core/Src/main.c ****   * @brief USART2 Initialization Function
 305:Core/Src/main.c ****   * @param None
 306:Core/Src/main.c ****   * @retval None
 307:Core/Src/main.c ****   */
 308:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 309:Core/Src/main.c **** {
 310:Core/Src/main.c **** 
 311:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 312:Core/Src/main.c **** 
 313:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 314:Core/Src/main.c **** 
 315:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 316:Core/Src/main.c **** 
 317:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 318:Core/Src/main.c ****   huart2.Instance = USART2;
 319:Core/Src/main.c ****   huart2.Init.BaudRate = 230400;
 320:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 321:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 322:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 323:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 324:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 325:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 326:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 327:Core/Src/main.c ****   {
 328:Core/Src/main.c ****     Error_Handler();
 329:Core/Src/main.c ****   }
 330:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 331:Core/Src/main.c **** 
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s 			page 13


 332:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 333:Core/Src/main.c **** 
 334:Core/Src/main.c **** }
 335:Core/Src/main.c **** 
 336:Core/Src/main.c **** /**
 337:Core/Src/main.c ****   * @brief GPIO Initialization Function
 338:Core/Src/main.c ****   * @param None
 339:Core/Src/main.c ****   * @retval None
 340:Core/Src/main.c ****   */
 341:Core/Src/main.c **** static void MX_GPIO_Init(void)
 342:Core/Src/main.c **** {
 104              		.loc 1 342 1 is_stmt 1 view -0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 32
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108 0000 30B5     		push	{r4, r5, lr}
 109              		.cfi_def_cfa_offset 12
 110              		.cfi_offset 4, -12
 111              		.cfi_offset 5, -8
 112              		.cfi_offset 14, -4
 113 0002 89B0     		sub	sp, sp, #36
 114              		.cfi_def_cfa_offset 48
 343:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 115              		.loc 1 343 3 view .LVU27
 116              		.loc 1 343 20 is_stmt 0 view .LVU28
 117 0004 0024     		movs	r4, #0
 118 0006 0394     		str	r4, [sp, #12]
 119 0008 0494     		str	r4, [sp, #16]
 120 000a 0594     		str	r4, [sp, #20]
 121 000c 0694     		str	r4, [sp, #24]
 122 000e 0794     		str	r4, [sp, #28]
 344:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 345:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 346:Core/Src/main.c **** 
 347:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 348:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 123              		.loc 1 348 3 is_stmt 1 view .LVU29
 124              	.LBB4:
 125              		.loc 1 348 3 view .LVU30
 126 0010 0094     		str	r4, [sp]
 127              		.loc 1 348 3 view .LVU31
 128 0012 194B     		ldr	r3, .L8
 129 0014 1A6B     		ldr	r2, [r3, #48]
 130 0016 42F00402 		orr	r2, r2, #4
 131 001a 1A63     		str	r2, [r3, #48]
 132              		.loc 1 348 3 view .LVU32
 133 001c 1A6B     		ldr	r2, [r3, #48]
 134 001e 02F00402 		and	r2, r2, #4
 135 0022 0092     		str	r2, [sp]
 136              		.loc 1 348 3 view .LVU33
 137 0024 009A     		ldr	r2, [sp]
 138              	.LBE4:
 139              		.loc 1 348 3 view .LVU34
 349:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 140              		.loc 1 349 3 view .LVU35
 141              	.LBB5:
 142              		.loc 1 349 3 view .LVU36
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s 			page 14


 143 0026 0194     		str	r4, [sp, #4]
 144              		.loc 1 349 3 view .LVU37
 145 0028 1A6B     		ldr	r2, [r3, #48]
 146 002a 42F00102 		orr	r2, r2, #1
 147 002e 1A63     		str	r2, [r3, #48]
 148              		.loc 1 349 3 view .LVU38
 149 0030 1A6B     		ldr	r2, [r3, #48]
 150 0032 02F00102 		and	r2, r2, #1
 151 0036 0192     		str	r2, [sp, #4]
 152              		.loc 1 349 3 view .LVU39
 153 0038 019A     		ldr	r2, [sp, #4]
 154              	.LBE5:
 155              		.loc 1 349 3 view .LVU40
 350:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 156              		.loc 1 350 3 view .LVU41
 157              	.LBB6:
 158              		.loc 1 350 3 view .LVU42
 159 003a 0294     		str	r4, [sp, #8]
 160              		.loc 1 350 3 view .LVU43
 161 003c 1A6B     		ldr	r2, [r3, #48]
 162 003e 42F00202 		orr	r2, r2, #2
 163 0042 1A63     		str	r2, [r3, #48]
 164              		.loc 1 350 3 view .LVU44
 165 0044 1B6B     		ldr	r3, [r3, #48]
 166 0046 03F00203 		and	r3, r3, #2
 167 004a 0293     		str	r3, [sp, #8]
 168              		.loc 1 350 3 view .LVU45
 169 004c 029B     		ldr	r3, [sp, #8]
 170              	.LBE6:
 171              		.loc 1 350 3 view .LVU46
 351:Core/Src/main.c **** 
 352:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 353:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
 172              		.loc 1 353 3 view .LVU47
 173 004e 0B4D     		ldr	r5, .L8+4
 174 0050 2246     		mov	r2, r4
 175 0052 4FF40051 		mov	r1, #8192
 176 0056 2846     		mov	r0, r5
 177 0058 FFF7FEFF 		bl	HAL_GPIO_WritePin
 178              	.LVL5:
 354:Core/Src/main.c **** 
 355:Core/Src/main.c ****   /*Configure GPIO pin : PC13 */
 356:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_13;
 179              		.loc 1 356 3 view .LVU48
 180              		.loc 1 356 23 is_stmt 0 view .LVU49
 181 005c 4FF40053 		mov	r3, #8192
 182 0060 0393     		str	r3, [sp, #12]
 357:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 183              		.loc 1 357 3 is_stmt 1 view .LVU50
 184              		.loc 1 357 24 is_stmt 0 view .LVU51
 185 0062 0123     		movs	r3, #1
 186 0064 0493     		str	r3, [sp, #16]
 358:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 187              		.loc 1 358 3 is_stmt 1 view .LVU52
 188              		.loc 1 358 24 is_stmt 0 view .LVU53
 189 0066 0594     		str	r4, [sp, #20]
 359:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s 			page 15


 190              		.loc 1 359 3 is_stmt 1 view .LVU54
 191              		.loc 1 359 25 is_stmt 0 view .LVU55
 192 0068 0694     		str	r4, [sp, #24]
 360:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 193              		.loc 1 360 3 is_stmt 1 view .LVU56
 194 006a 03A9     		add	r1, sp, #12
 195 006c 2846     		mov	r0, r5
 196 006e FFF7FEFF 		bl	HAL_GPIO_Init
 197              	.LVL6:
 361:Core/Src/main.c **** 
 362:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 363:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 364:Core/Src/main.c **** }
 198              		.loc 1 364 1 is_stmt 0 view .LVU57
 199 0072 09B0     		add	sp, sp, #36
 200              		.cfi_def_cfa_offset 12
 201              		@ sp needed
 202 0074 30BD     		pop	{r4, r5, pc}
 203              	.L9:
 204 0076 00BF     		.align	2
 205              	.L8:
 206 0078 00380240 		.word	1073887232
 207 007c 00080240 		.word	1073874944
 208              		.cfi_endproc
 209              	.LFE143:
 211              		.section	.rodata.HAL_UARTEx_RxEventCallback.str1.4,"aMS",%progbits,1
 212              		.align	2
 213              	.LC0:
 214 0000 0A00     		.ascii	"\012\000"
 215 0002 0000     		.align	2
 216              	.LC1:
 217 0004 0A54696D 		.ascii	"\012Time: %d:%d:%d\012\000"
 217      653A2025 
 217      643A2564 
 217      3A25640A 
 217      00
 218 0015 000000   		.align	2
 219              	.LC2:
 220 0018 436F2D4F 		.ascii	"Co-Ordinates: (%d,%d) \012\000"
 220      7264696E 
 220      61746573 
 220      3A202825 
 220      642C2564 
 221              		.align	2
 222              	.LC3:
 223 0030 54656D70 		.ascii	"Temperature/pressure reading failed\012\000"
 223      65726174 
 223      7572652F 
 223      70726573 
 223      73757265 
 224              		.global	__aeabi_f2d
 225              		.global	__aeabi_dsub
 226              		.global	__aeabi_dmul
 227              		.global	__aeabi_d2f
 228 0055 000000   		.align	2
 229              	.LC4:
 230 0058 50726573 		.ascii	"Pressure: %s Pa, Temperature: %s C, Humidity: %s Al"
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s 			page 16


 230      73757265 
 230      3A202573 
 230      2050612C 
 230      2054656D 
 231 008b 74697475 		.ascii	"titude: %s\012\000"
 231      64653A20 
 231      25730A00 
 232              		.section	.text.HAL_UARTEx_RxEventCallback,"ax",%progbits
 233              		.align	1
 234              		.global	HAL_UARTEx_RxEventCallback
 235              		.syntax unified
 236              		.thumb
 237              		.thumb_func
 239              	HAL_UARTEx_RxEventCallback:
 240              	.LVL7:
 241              	.LFB144:
 365:Core/Src/main.c **** 
 366:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 367:Core/Src/main.c **** void HAL_UARTEx_RxEventCallback(UART_HandleTypeDef *huart, uint16_t Size) {
 242              		.loc 1 367 75 is_stmt 1 view -0
 243              		.cfi_startproc
 244              		@ args = 0, pretend = 0, frame = 72
 245              		@ frame_needed = 0, uses_anonymous_args = 0
 246              		.loc 1 367 75 is_stmt 0 view .LVU59
 247 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 248              		.cfi_def_cfa_offset 24
 249              		.cfi_offset 4, -24
 250              		.cfi_offset 5, -20
 251              		.cfi_offset 6, -16
 252              		.cfi_offset 7, -12
 253              		.cfi_offset 8, -8
 254              		.cfi_offset 14, -4
 255 0004 94B0     		sub	sp, sp, #80
 256              		.cfi_def_cfa_offset 104
 368:Core/Src/main.c ****   //Set a flag high when the GPS sends data
 369:Core/Src/main.c ****   flag = 1;
 257              		.loc 1 369 3 is_stmt 1 view .LVU60
 258              		.loc 1 369 8 is_stmt 0 view .LVU61
 259 0006 7C4B     		ldr	r3, .L17+16
 260 0008 0122     		movs	r2, #1
 261 000a 1A70     		strb	r2, [r3]
 370:Core/Src/main.c **** 
 371:Core/Src/main.c ****   //Set memory of line_out to emtpy
 372:Core/Src/main.c ****   memset(line_out, '\0', sizeof(line_out));
 262              		.loc 1 372 3 is_stmt 1 view .LVU62
 263 000c 7B4C     		ldr	r4, .L17+20
 264 000e 4FF40075 		mov	r5, #512
 265 0012 2A46     		mov	r2, r5
 266 0014 0021     		movs	r1, #0
 267              	.LVL8:
 268              		.loc 1 372 3 is_stmt 0 view .LVU63
 269 0016 2046     		mov	r0, r4
 270              	.LVL9:
 271              		.loc 1 372 3 view .LVU64
 272 0018 FFF7FEFF 		bl	memset
 273              	.LVL10:
 373:Core/Src/main.c **** 
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s 			page 17


 374:Core/Src/main.c ****   //Copy a new line character to line_out
 375:Core/Src/main.c ****   memcpy(line_out, "\r\n\n", sizeof("\r\n\n"));
 274              		.loc 1 375 3 is_stmt 1 view .LVU65
 275 001c 784B     		ldr	r3, .L17+24
 276 001e 2360     		str	r3, [r4]
 376:Core/Src/main.c **** 
 377:Core/Src/main.c ****   //Transmit the data over uart2
 378:Core/Src/main.c ****   HAL_UART_Transmit(&huart2, (uint8_t*)line_out, sizeof(line_out)/sizeof(line_out[0]), 1000);
 277              		.loc 1 378 3 view .LVU66
 278 0020 4FF47A73 		mov	r3, #1000
 279 0024 2A46     		mov	r2, r5
 280 0026 2146     		mov	r1, r4
 281 0028 7648     		ldr	r0, .L17+28
 282 002a FFF7FEFF 		bl	HAL_UART_Transmit
 283              	.LVL11:
 379:Core/Src/main.c **** 
 380:Core/Src/main.c **** 
 381:Core/Src/main.c ****   
 382:Core/Src/main.c ****   //Search for the \n character
 383:Core/Src/main.c ****   uint8_t *token = strtok(gps_raw, "\n");
 284              		.loc 1 383 3 view .LVU67
 285              		.loc 1 383 20 is_stmt 0 view .LVU68
 286 002e 7649     		ldr	r1, .L17+32
 287 0030 7648     		ldr	r0, .L17+36
 288 0032 FFF7FEFF 		bl	strtok
 289              	.LVL12:
 384:Core/Src/main.c **** 
 385:Core/Src/main.c ****   if (token == NULL) {
 290              		.loc 1 385 3 is_stmt 1 view .LVU69
 291              		.loc 1 385 6 is_stmt 0 view .LVU70
 292 0036 80B1     		cbz	r0, .L11
 293 0038 0546     		mov	r5, r0
 294              	.LBB7:
 386:Core/Src/main.c ****     //break
 387:Core/Src/main.c ****   } else {
 388:Core/Src/main.c ****     memset(line, '\0', sizeof(line));
 295              		.loc 1 388 5 is_stmt 1 view .LVU71
 296 003a 754C     		ldr	r4, .L17+40
 297 003c 4FF40072 		mov	r2, #512
 298 0040 0021     		movs	r1, #0
 299 0042 2046     		mov	r0, r4
 300              	.LVL13:
 301              		.loc 1 388 5 is_stmt 0 view .LVU72
 302 0044 FFF7FEFF 		bl	memset
 303              	.LVL14:
 389:Core/Src/main.c ****     strcpy(line, token);
 304              		.loc 1 389 5 is_stmt 1 view .LVU73
 305 0048 2946     		mov	r1, r5
 306 004a 2046     		mov	r0, r4
 307 004c FFF7FEFF 		bl	strcpy
 308              	.LVL15:
 390:Core/Src/main.c ****     struct minmea_sentence_rmc frame;
 309              		.loc 1 390 5 view .LVU74
 391:Core/Src/main.c ****     if (minmea_parse_rmc(&frame, line)) {
 310              		.loc 1 391 5 view .LVU75
 311              		.loc 1 391 9 is_stmt 0 view .LVU76
 312 0050 2146     		mov	r1, r4
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s 			page 18


 313 0052 02A8     		add	r0, sp, #8
 314 0054 FFF7FEFF 		bl	minmea_parse_rmc
 315              	.LVL16:
 316              		.loc 1 391 8 view .LVU77
 317 0058 30B9     		cbnz	r0, .L16
 318              	.LVL17:
 319              	.L11:
 320              		.loc 1 391 8 view .LVU78
 321              	.LBE7:
 392:Core/Src/main.c ****       memset(line_out, '\0', sizeof(line_out));
 393:Core/Src/main.c ****       sprintf(line_out,"\nTime: %d:%d:%d\n",frame.time.hours, frame.time.minutes,frame.time.seconds
 394:Core/Src/main.c ****       HAL_UART_Transmit(&huart2, (uint8_t*)line_out, sizeof(line_out)/sizeof(line_out[0]), 1000);
 395:Core/Src/main.c **** 
 396:Core/Src/main.c ****       memset(line_out, '\0', sizeof(line_out));
 397:Core/Src/main.c ****       sprintf(line_out, "Co-Ordinates: (%d,%d) \n",minmea_rescale(&frame.latitude, 1000),minmea_res
 398:Core/Src/main.c ****       HAL_UART_Transmit(&huart2, (uint8_t*)line_out, sizeof(line_out)/sizeof(line_out[0]), 1000);
 399:Core/Src/main.c ****       
 400:Core/Src/main.c ****     }
 401:Core/Src/main.c ****   }
 402:Core/Src/main.c **** 
 403:Core/Src/main.c ****   //Set gps_raw data register to empty
 404:Core/Src/main.c ****   memset(gps_raw, '\0', sizeof(gps_raw));
 322              		.loc 1 404 3 is_stmt 1 view .LVU79
 323 005a 4FF40072 		mov	r2, #512
 324 005e 0021     		movs	r1, #0
 325 0060 6A48     		ldr	r0, .L17+36
 326 0062 FFF7FEFF 		bl	memset
 327              	.LVL18:
 405:Core/Src/main.c **** 
 406:Core/Src/main.c **** 
 407:Core/Src/main.c **** 
 408:Core/Src/main.c ****   	//HAL_Delay(100);
 409:Core/Src/main.c **** 	while (!bmp280_read_float(&bmp280, &temperature, &pressure, &humidity)) {
 328              		.loc 1 409 2 view .LVU80
 329              		.loc 1 409 8 is_stmt 0 view .LVU81
 330 0066 4DE0     		b	.L13
 331              	.LVL19:
 332              	.L16:
 333              	.LBB8:
 392:Core/Src/main.c ****       memset(line_out, '\0', sizeof(line_out));
 334              		.loc 1 392 7 is_stmt 1 view .LVU82
 335 0068 644C     		ldr	r4, .L17+20
 336 006a 4FF40075 		mov	r5, #512
 337              	.LVL20:
 392:Core/Src/main.c ****       memset(line_out, '\0', sizeof(line_out));
 338              		.loc 1 392 7 is_stmt 0 view .LVU83
 339 006e 2A46     		mov	r2, r5
 340 0070 0021     		movs	r1, #0
 341 0072 2046     		mov	r0, r4
 342 0074 FFF7FEFF 		bl	memset
 343              	.LVL21:
 393:Core/Src/main.c ****       HAL_UART_Transmit(&huart2, (uint8_t*)line_out, sizeof(line_out)/sizeof(line_out[0]), 1000);
 344              		.loc 1 393 7 is_stmt 1 view .LVU84
 345 0078 049B     		ldr	r3, [sp, #16]
 346 007a 0093     		str	r3, [sp]
 347 007c 039B     		ldr	r3, [sp, #12]
 348 007e 029A     		ldr	r2, [sp, #8]
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s 			page 19


 349 0080 6449     		ldr	r1, .L17+44
 350 0082 2046     		mov	r0, r4
 351 0084 FFF7FEFF 		bl	sprintf
 352              	.LVL22:
 394:Core/Src/main.c **** 
 353              		.loc 1 394 7 view .LVU85
 354 0088 5E4F     		ldr	r7, .L17+28
 355 008a 4FF47A73 		mov	r3, #1000
 356 008e 2A46     		mov	r2, r5
 357 0090 2146     		mov	r1, r4
 358 0092 3846     		mov	r0, r7
 359 0094 FFF7FEFF 		bl	HAL_UART_Transmit
 360              	.LVL23:
 396:Core/Src/main.c ****       sprintf(line_out, "Co-Ordinates: (%d,%d) \n",minmea_rescale(&frame.latitude, 1000),minmea_res
 361              		.loc 1 396 7 view .LVU86
 362 0098 2A46     		mov	r2, r5
 363 009a 0021     		movs	r1, #0
 364 009c 2046     		mov	r0, r4
 365 009e FFF7FEFF 		bl	memset
 366              	.LVL24:
 397:Core/Src/main.c ****       HAL_UART_Transmit(&huart2, (uint8_t*)line_out, sizeof(line_out)/sizeof(line_out[0]), 1000);
 367              		.loc 1 397 7 view .LVU87
 368 00a2 4FF47A71 		mov	r1, #1000
 369 00a6 07A8     		add	r0, sp, #28
 370 00a8 FFF7FEFF 		bl	minmea_rescale
 371              	.LVL25:
 372 00ac 0646     		mov	r6, r0
 373 00ae 4FF47A71 		mov	r1, #1000
 374 00b2 09A8     		add	r0, sp, #36
 375 00b4 FFF7FEFF 		bl	minmea_rescale
 376              	.LVL26:
 377 00b8 0346     		mov	r3, r0
 378 00ba 3246     		mov	r2, r6
 379 00bc 5649     		ldr	r1, .L17+48
 380 00be 2046     		mov	r0, r4
 381 00c0 FFF7FEFF 		bl	sprintf
 382              	.LVL27:
 398:Core/Src/main.c ****       
 383              		.loc 1 398 7 view .LVU88
 384 00c4 4FF47A73 		mov	r3, #1000
 385 00c8 2A46     		mov	r2, r5
 386 00ca 2146     		mov	r1, r4
 387 00cc 3846     		mov	r0, r7
 388 00ce FFF7FEFF 		bl	HAL_UART_Transmit
 389              	.LVL28:
 390 00d2 C2E7     		b	.L11
 391              	.L14:
 392              	.LBE8:
 410:Core/Src/main.c **** 	  size = sprintf(Data,"Temperature/pressure reading failed\n");
 393              		.loc 1 410 4 view .LVU89
 394              		.loc 1 410 11 is_stmt 0 view .LVU90
 395 00d4 514D     		ldr	r5, .L17+52
 396 00d6 AC46     		mov	ip, r5
 397 00d8 514C     		ldr	r4, .L17+56
 398 00da 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 399 00dc ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 400 00e0 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s 			page 20


 401 00e2 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 402 00e6 94E80300 		ldm	r4, {r0, r1}
 403 00ea 4CF8040B 		str	r0, [ip], #4
 404 00ee 8CF80010 		strb	r1, [ip]
 405              		.loc 1 410 9 view .LVU91
 406 00f2 2422     		movs	r2, #36
 407 00f4 4B4B     		ldr	r3, .L17+60
 408 00f6 1A80     		strh	r2, [r3]	@ movhi
 411:Core/Src/main.c **** 	  HAL_UART_Transmit(&huart2, Data, size, 1000);
 409              		.loc 1 411 4 is_stmt 1 view .LVU92
 410 00f8 4FF47A73 		mov	r3, #1000
 411 00fc 2946     		mov	r1, r5
 412 00fe 4148     		ldr	r0, .L17+28
 413 0100 FFF7FEFF 		bl	HAL_UART_Transmit
 414              	.LVL29:
 415              	.L13:
 409:Core/Src/main.c **** 	  size = sprintf(Data,"Temperature/pressure reading failed\n");
 416              		.loc 1 409 9 view .LVU93
 409:Core/Src/main.c **** 	  size = sprintf(Data,"Temperature/pressure reading failed\n");
 417              		.loc 1 409 10 is_stmt 0 view .LVU94
 418 0104 484B     		ldr	r3, .L17+64
 419 0106 494A     		ldr	r2, .L17+68
 420 0108 4949     		ldr	r1, .L17+72
 421 010a 4A48     		ldr	r0, .L17+76
 422 010c FFF7FEFF 		bl	bmp280_read_float
 423              	.LVL30:
 409:Core/Src/main.c **** 	  size = sprintf(Data,"Temperature/pressure reading failed\n");
 424              		.loc 1 409 9 view .LVU95
 425 0110 0028     		cmp	r0, #0
 426 0112 DFD0     		beq	.L14
 412:Core/Src/main.c **** 	}
 413:Core/Src/main.c **** 
 414:Core/Src/main.c **** 
 415:Core/Src/main.c **** 
 416:Core/Src/main.c **** 
 417:Core/Src/main.c ****   //altitude = H_b + (T_b/L_b)*(pow((pressure/P_b),(-1*R*L_b)/(G_0*M))-1);
 418:Core/Src/main.c **** 
 419:Core/Src/main.c ****   altitude = 44330*(1-pow((pressure/P_b),(1/5.255)));
 427              		.loc 1 419 3 is_stmt 1 view .LVU96
 428              		.loc 1 419 36 is_stmt 0 view .LVU97
 429 0114 454C     		ldr	r4, .L17+68
 430 0116 94ED007A 		vldr.32	s14, [r4]
 431 011a 474B     		ldr	r3, .L17+80
 432 011c D3ED007A 		vldr.32	s15, [r3]
 433              		.loc 1 419 23 view .LVU98
 434 0120 C7EE277A 		vdiv.f32	s15, s14, s15
 435 0124 17EE900A 		vmov	r0, s15
 436 0128 FFF7FEFF 		bl	__aeabi_f2d
 437              	.LVL31:
 438 012c 9FED2E1B 		vldr.64	d1, .L17
 439 0130 41EC100B 		vmov	d0, r0, r1
 440 0134 FFF7FEFF 		bl	pow
 441              	.LVL32:
 442 0138 53EC102B 		vmov	r2, r3, d0
 443              		.loc 1 419 22 view .LVU99
 444 013c 0020     		movs	r0, #0
 445 013e 3F49     		ldr	r1, .L17+84
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s 			page 21


 446 0140 FFF7FEFF 		bl	__aeabi_dsub
 447              	.LVL33:
 448              		.loc 1 419 19 view .LVU100
 449 0144 2AA3     		adr	r3, .L17+8
 450 0146 D3E90023 		ldrd	r2, [r3]
 451 014a FFF7FEFF 		bl	__aeabi_dmul
 452              	.LVL34:
 453 014e FFF7FEFF 		bl	__aeabi_d2f
 454              	.LVL35:
 455              		.loc 1 419 12 view .LVU101
 456 0152 3B4B     		ldr	r3, .L17+88
 457 0154 1860     		str	r0, [r3]	@ float
 420:Core/Src/main.c **** 
 421:Core/Src/main.c ****   gcvt(altitude, 8, sAltitude);
 458              		.loc 1 421 3 is_stmt 1 view .LVU102
 459 0156 DFF8FC80 		ldr	r8, .L17+108
 460 015a FFF7FEFF 		bl	__aeabi_f2d
 461              	.LVL36:
 462 015e 41EC100B 		vmov	d0, r0, r1
 463 0162 4146     		mov	r1, r8
 464 0164 0820     		movs	r0, #8
 465 0166 FFF7FEFF 		bl	gcvt
 466              	.LVL37:
 422:Core/Src/main.c ****   gcvt(pressure, 8, sPressure);
 467              		.loc 1 422 3 view .LVU103
 468 016a 364D     		ldr	r5, .L17+92
 469 016c 2068     		ldr	r0, [r4]	@ float
 470 016e FFF7FEFF 		bl	__aeabi_f2d
 471              	.LVL38:
 472 0172 41EC100B 		vmov	d0, r0, r1
 473 0176 2946     		mov	r1, r5
 474 0178 0820     		movs	r0, #8
 475 017a FFF7FEFF 		bl	gcvt
 476              	.LVL39:
 423:Core/Src/main.c ****   gcvt(temperature, 4, sTemperature);
 477              		.loc 1 423 3 view .LVU104
 478 017e 324E     		ldr	r6, .L17+96
 479 0180 2B4B     		ldr	r3, .L17+72
 480 0182 1868     		ldr	r0, [r3]	@ float
 481 0184 FFF7FEFF 		bl	__aeabi_f2d
 482              	.LVL40:
 483 0188 41EC100B 		vmov	d0, r0, r1
 484 018c 3146     		mov	r1, r6
 485 018e 0420     		movs	r0, #4
 486 0190 FFF7FEFF 		bl	gcvt
 487              	.LVL41:
 424:Core/Src/main.c ****   gcvt(humidity, 4, sHumidity);
 488              		.loc 1 424 3 view .LVU105
 489 0194 2D4F     		ldr	r7, .L17+100
 490 0196 244B     		ldr	r3, .L17+64
 491 0198 1868     		ldr	r0, [r3]	@ float
 492 019a FFF7FEFF 		bl	__aeabi_f2d
 493              	.LVL42:
 494 019e 41EC100B 		vmov	d0, r0, r1
 495 01a2 3946     		mov	r1, r7
 496 01a4 0420     		movs	r0, #4
 497 01a6 FFF7FEFF 		bl	gcvt
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s 			page 22


 498              	.LVL43:
 425:Core/Src/main.c **** 
 426:Core/Src/main.c **** 	size = sprintf(Data,"Pressure: %s Pa, Temperature: %s C, Humidity: %s Altitude: %s\n",sPressure, s
 499              		.loc 1 426 2 view .LVU106
 500              		.loc 1 426 9 is_stmt 0 view .LVU107
 501 01aa 1C4C     		ldr	r4, .L17+52
 502 01ac CDF80480 		str	r8, [sp, #4]
 503 01b0 0097     		str	r7, [sp]
 504 01b2 3346     		mov	r3, r6
 505 01b4 2A46     		mov	r2, r5
 506 01b6 2649     		ldr	r1, .L17+104
 507 01b8 2046     		mov	r0, r4
 508 01ba FFF7FEFF 		bl	sprintf
 509              	.LVL44:
 510              		.loc 1 426 7 view .LVU108
 511 01be 82B2     		uxth	r2, r0
 512 01c0 184B     		ldr	r3, .L17+60
 513 01c2 1A80     		strh	r2, [r3]	@ movhi
 427:Core/Src/main.c **** 	HAL_UART_Transmit(&huart2, Data, size, 1000);
 514              		.loc 1 427 2 is_stmt 1 view .LVU109
 515 01c4 4FF47A73 		mov	r3, #1000
 516 01c8 2146     		mov	r1, r4
 517 01ca 0E48     		ldr	r0, .L17+28
 518 01cc FFF7FEFF 		bl	HAL_UART_Transmit
 519              	.LVL45:
 428:Core/Src/main.c ****   memset(Data, '\0', sizeof(Data));
 520              		.loc 1 428 3 view .LVU110
 521 01d0 4FF48072 		mov	r2, #256
 522 01d4 0021     		movs	r1, #0
 523 01d6 2046     		mov	r0, r4
 524 01d8 FFF7FEFF 		bl	memset
 525              	.LVL46:
 429:Core/Src/main.c **** 
 430:Core/Src/main.c **** 	//HAL_Delay(2000);
 431:Core/Src/main.c **** 
 432:Core/Src/main.c **** 
 433:Core/Src/main.c **** 
 434:Core/Src/main.c **** 
 435:Core/Src/main.c **** 
 436:Core/Src/main.c **** 
 437:Core/Src/main.c **** 
 438:Core/Src/main.c **** 
 439:Core/Src/main.c **** 
 440:Core/Src/main.c **** 
 441:Core/Src/main.c **** 
 442:Core/Src/main.c **** 
 443:Core/Src/main.c **** 
 444:Core/Src/main.c **** 
 445:Core/Src/main.c **** 
 446:Core/Src/main.c **** 
 447:Core/Src/main.c **** 
 448:Core/Src/main.c ****   //Set flag low to indicate that data transfer is done
 449:Core/Src/main.c ****   flag = 0;
 526              		.loc 1 449 3 view .LVU111
 527              		.loc 1 449 8 is_stmt 0 view .LVU112
 528 01dc 064B     		ldr	r3, .L17+16
 529 01de 0022     		movs	r2, #0
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s 			page 23


 530 01e0 1A70     		strb	r2, [r3]
 450:Core/Src/main.c ****   
 451:Core/Src/main.c ****   //Send interrupt when data from GPS is sent again
 452:Core/Src/main.c ****   //HAL_UARTEx_ReceiveToIdle_IT(&huart1,(uint8_t*)gps_raw, 512);
 453:Core/Src/main.c **** 
 454:Core/Src/main.c **** }
 531              		.loc 1 454 1 view .LVU113
 532 01e2 14B0     		add	sp, sp, #80
 533              		.cfi_def_cfa_offset 24
 534              		@ sp needed
 535 01e4 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 536              	.L18:
 537              		.align	3
 538              	.L17:
 539 01e8 6C45D9CC 		.word	-858176148
 540 01ec 955BC83F 		.word	1070095253
 541 01f0 00000000 		.word	0
 542 01f4 40A5E540 		.word	1088791872
 543 01f8 00000000 		.word	flag
 544 01fc 00000000 		.word	line_out
 545 0200 0D0A0A00 		.word	657933
 546 0204 00000000 		.word	huart2
 547 0208 00000000 		.word	.LC0
 548 020c 00000000 		.word	gps_raw
 549 0210 00000000 		.word	line
 550 0214 04000000 		.word	.LC1
 551 0218 18000000 		.word	.LC2
 552 021c 00000000 		.word	Data
 553 0220 30000000 		.word	.LC3
 554 0224 00000000 		.word	size
 555 0228 00000000 		.word	humidity
 556 022c 00000000 		.word	pressure
 557 0230 00000000 		.word	temperature
 558 0234 00000000 		.word	bmp280
 559 0238 00000000 		.word	P_b
 560 023c 0000F03F 		.word	1072693248
 561 0240 00000000 		.word	altitude
 562 0244 00000000 		.word	sPressure
 563 0248 00000000 		.word	sTemperature
 564 024c 00000000 		.word	sHumidity
 565 0250 58000000 		.word	.LC4
 566 0254 00000000 		.word	sAltitude
 567              		.cfi_endproc
 568              	.LFE144:
 570              		.section	.text.Error_Handler,"ax",%progbits
 571              		.align	1
 572              		.global	Error_Handler
 573              		.syntax unified
 574              		.thumb
 575              		.thumb_func
 577              	Error_Handler:
 578              	.LFB145:
 455:Core/Src/main.c **** 
 456:Core/Src/main.c **** /* USER CODE END 4 */
 457:Core/Src/main.c **** 
 458:Core/Src/main.c **** /**
 459:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s 			page 24


 460:Core/Src/main.c ****   * @retval None
 461:Core/Src/main.c ****   */
 462:Core/Src/main.c **** void Error_Handler(void)
 463:Core/Src/main.c **** {
 579              		.loc 1 463 1 is_stmt 1 view -0
 580              		.cfi_startproc
 581              		@ Volatile: function does not return.
 582              		@ args = 0, pretend = 0, frame = 0
 583              		@ frame_needed = 0, uses_anonymous_args = 0
 584              		@ link register save eliminated.
 464:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 465:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 466:Core/Src/main.c ****   __disable_irq();
 585              		.loc 1 466 3 view .LVU115
 586              	.LBB9:
 587              	.LBI9:
 588              		.file 3 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s 			page 25


  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s 			page 26


  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 589              		.loc 3 140 27 view .LVU116
 590              	.LBB10:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 591              		.loc 3 142 3 view .LVU117
 592              		.syntax unified
 593              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 594 0000 72B6     		cpsid i
 595              	@ 0 "" 2
 596              		.thumb
 597              		.syntax unified
 598              	.L20:
 599              	.LBE10:
 600              	.LBE9:
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s 			page 27


 467:Core/Src/main.c ****   while (1)
 601              		.loc 1 467 3 discriminator 1 view .LVU118
 468:Core/Src/main.c ****   {
 469:Core/Src/main.c ****   }
 602              		.loc 1 469 3 discriminator 1 view .LVU119
 467:Core/Src/main.c ****   while (1)
 603              		.loc 1 467 9 discriminator 1 view .LVU120
 604 0002 FEE7     		b	.L20
 605              		.cfi_endproc
 606              	.LFE145:
 608              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 609              		.align	1
 610              		.syntax unified
 611              		.thumb
 612              		.thumb_func
 614              	MX_USART1_UART_Init:
 615              	.LFB141:
 276:Core/Src/main.c **** 
 616              		.loc 1 276 1 view -0
 617              		.cfi_startproc
 618              		@ args = 0, pretend = 0, frame = 0
 619              		@ frame_needed = 0, uses_anonymous_args = 0
 620 0000 08B5     		push	{r3, lr}
 621              		.cfi_def_cfa_offset 8
 622              		.cfi_offset 3, -8
 623              		.cfi_offset 14, -4
 285:Core/Src/main.c ****   huart1.Init.BaudRate = 9600;
 624              		.loc 1 285 3 view .LVU122
 285:Core/Src/main.c ****   huart1.Init.BaudRate = 9600;
 625              		.loc 1 285 19 is_stmt 0 view .LVU123
 626 0002 0A48     		ldr	r0, .L25
 627 0004 0A4B     		ldr	r3, .L25+4
 628 0006 0360     		str	r3, [r0]
 286:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 629              		.loc 1 286 3 is_stmt 1 view .LVU124
 286:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 630              		.loc 1 286 24 is_stmt 0 view .LVU125
 631 0008 4FF41653 		mov	r3, #9600
 632 000c 4360     		str	r3, [r0, #4]
 287:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 633              		.loc 1 287 3 is_stmt 1 view .LVU126
 287:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 634              		.loc 1 287 26 is_stmt 0 view .LVU127
 635 000e 0023     		movs	r3, #0
 636 0010 8360     		str	r3, [r0, #8]
 288:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 637              		.loc 1 288 3 is_stmt 1 view .LVU128
 288:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 638              		.loc 1 288 24 is_stmt 0 view .LVU129
 639 0012 C360     		str	r3, [r0, #12]
 289:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 640              		.loc 1 289 3 is_stmt 1 view .LVU130
 289:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 641              		.loc 1 289 22 is_stmt 0 view .LVU131
 642 0014 0361     		str	r3, [r0, #16]
 290:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 643              		.loc 1 290 3 is_stmt 1 view .LVU132
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s 			page 28


 290:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 644              		.loc 1 290 20 is_stmt 0 view .LVU133
 645 0016 0C22     		movs	r2, #12
 646 0018 4261     		str	r2, [r0, #20]
 291:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 647              		.loc 1 291 3 is_stmt 1 view .LVU134
 291:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 648              		.loc 1 291 25 is_stmt 0 view .LVU135
 649 001a 8361     		str	r3, [r0, #24]
 292:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 650              		.loc 1 292 3 is_stmt 1 view .LVU136
 292:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 651              		.loc 1 292 28 is_stmt 0 view .LVU137
 652 001c C361     		str	r3, [r0, #28]
 293:Core/Src/main.c ****   {
 653              		.loc 1 293 3 is_stmt 1 view .LVU138
 293:Core/Src/main.c ****   {
 654              		.loc 1 293 7 is_stmt 0 view .LVU139
 655 001e FFF7FEFF 		bl	HAL_UART_Init
 656              	.LVL47:
 293:Core/Src/main.c ****   {
 657              		.loc 1 293 6 view .LVU140
 658 0022 00B9     		cbnz	r0, .L24
 301:Core/Src/main.c **** 
 659              		.loc 1 301 1 view .LVU141
 660 0024 08BD     		pop	{r3, pc}
 661              	.L24:
 295:Core/Src/main.c ****   }
 662              		.loc 1 295 5 is_stmt 1 view .LVU142
 663 0026 FFF7FEFF 		bl	Error_Handler
 664              	.LVL48:
 665              	.L26:
 666 002a 00BF     		.align	2
 667              	.L25:
 668 002c 00000000 		.word	huart1
 669 0030 00100140 		.word	1073811456
 670              		.cfi_endproc
 671              	.LFE141:
 673              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 674              		.align	1
 675              		.syntax unified
 676              		.thumb
 677              		.thumb_func
 679              	MX_USART2_UART_Init:
 680              	.LFB142:
 309:Core/Src/main.c **** 
 681              		.loc 1 309 1 view -0
 682              		.cfi_startproc
 683              		@ args = 0, pretend = 0, frame = 0
 684              		@ frame_needed = 0, uses_anonymous_args = 0
 685 0000 08B5     		push	{r3, lr}
 686              		.cfi_def_cfa_offset 8
 687              		.cfi_offset 3, -8
 688              		.cfi_offset 14, -4
 318:Core/Src/main.c ****   huart2.Init.BaudRate = 230400;
 689              		.loc 1 318 3 view .LVU144
 318:Core/Src/main.c ****   huart2.Init.BaudRate = 230400;
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s 			page 29


 690              		.loc 1 318 19 is_stmt 0 view .LVU145
 691 0002 0A48     		ldr	r0, .L31
 692 0004 0A4B     		ldr	r3, .L31+4
 693 0006 0360     		str	r3, [r0]
 319:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 694              		.loc 1 319 3 is_stmt 1 view .LVU146
 319:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 695              		.loc 1 319 24 is_stmt 0 view .LVU147
 696 0008 4FF46133 		mov	r3, #230400
 697 000c 4360     		str	r3, [r0, #4]
 320:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 698              		.loc 1 320 3 is_stmt 1 view .LVU148
 320:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 699              		.loc 1 320 26 is_stmt 0 view .LVU149
 700 000e 0023     		movs	r3, #0
 701 0010 8360     		str	r3, [r0, #8]
 321:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 702              		.loc 1 321 3 is_stmt 1 view .LVU150
 321:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 703              		.loc 1 321 24 is_stmt 0 view .LVU151
 704 0012 C360     		str	r3, [r0, #12]
 322:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 705              		.loc 1 322 3 is_stmt 1 view .LVU152
 322:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 706              		.loc 1 322 22 is_stmt 0 view .LVU153
 707 0014 0361     		str	r3, [r0, #16]
 323:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 708              		.loc 1 323 3 is_stmt 1 view .LVU154
 323:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 709              		.loc 1 323 20 is_stmt 0 view .LVU155
 710 0016 0C22     		movs	r2, #12
 711 0018 4261     		str	r2, [r0, #20]
 324:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 712              		.loc 1 324 3 is_stmt 1 view .LVU156
 324:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 713              		.loc 1 324 25 is_stmt 0 view .LVU157
 714 001a 8361     		str	r3, [r0, #24]
 325:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 715              		.loc 1 325 3 is_stmt 1 view .LVU158
 325:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 716              		.loc 1 325 28 is_stmt 0 view .LVU159
 717 001c C361     		str	r3, [r0, #28]
 326:Core/Src/main.c ****   {
 718              		.loc 1 326 3 is_stmt 1 view .LVU160
 326:Core/Src/main.c ****   {
 719              		.loc 1 326 7 is_stmt 0 view .LVU161
 720 001e FFF7FEFF 		bl	HAL_UART_Init
 721              	.LVL49:
 326:Core/Src/main.c ****   {
 722              		.loc 1 326 6 view .LVU162
 723 0022 00B9     		cbnz	r0, .L30
 334:Core/Src/main.c **** 
 724              		.loc 1 334 1 view .LVU163
 725 0024 08BD     		pop	{r3, pc}
 726              	.L30:
 328:Core/Src/main.c ****   }
 727              		.loc 1 328 5 is_stmt 1 view .LVU164
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s 			page 30


 728 0026 FFF7FEFF 		bl	Error_Handler
 729              	.LVL50:
 730              	.L32:
 731 002a 00BF     		.align	2
 732              	.L31:
 733 002c 00000000 		.word	huart2
 734 0030 00440040 		.word	1073759232
 735              		.cfi_endproc
 736              	.LFE142:
 738              		.section	.text.MX_I2C1_Init,"ax",%progbits
 739              		.align	1
 740              		.syntax unified
 741              		.thumb
 742              		.thumb_func
 744              	MX_I2C1_Init:
 745              	.LFB140:
 242:Core/Src/main.c **** 
 746              		.loc 1 242 1 view -0
 747              		.cfi_startproc
 748              		@ args = 0, pretend = 0, frame = 0
 749              		@ frame_needed = 0, uses_anonymous_args = 0
 750 0000 08B5     		push	{r3, lr}
 751              		.cfi_def_cfa_offset 8
 752              		.cfi_offset 3, -8
 753              		.cfi_offset 14, -4
 251:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 754              		.loc 1 251 3 view .LVU166
 251:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 755              		.loc 1 251 18 is_stmt 0 view .LVU167
 756 0002 0A48     		ldr	r0, .L37
 757 0004 0A4B     		ldr	r3, .L37+4
 758 0006 0360     		str	r3, [r0]
 252:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 759              		.loc 1 252 3 is_stmt 1 view .LVU168
 252:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 760              		.loc 1 252 25 is_stmt 0 view .LVU169
 761 0008 0A4B     		ldr	r3, .L37+8
 762 000a 4360     		str	r3, [r0, #4]
 253:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 763              		.loc 1 253 3 is_stmt 1 view .LVU170
 253:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 764              		.loc 1 253 24 is_stmt 0 view .LVU171
 765 000c 0023     		movs	r3, #0
 766 000e 8360     		str	r3, [r0, #8]
 254:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 767              		.loc 1 254 3 is_stmt 1 view .LVU172
 254:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 768              		.loc 1 254 26 is_stmt 0 view .LVU173
 769 0010 C360     		str	r3, [r0, #12]
 255:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 770              		.loc 1 255 3 is_stmt 1 view .LVU174
 255:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 771              		.loc 1 255 29 is_stmt 0 view .LVU175
 772 0012 4FF48042 		mov	r2, #16384
 773 0016 0261     		str	r2, [r0, #16]
 256:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 774              		.loc 1 256 3 is_stmt 1 view .LVU176
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s 			page 31


 256:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 775              		.loc 1 256 30 is_stmt 0 view .LVU177
 776 0018 4361     		str	r3, [r0, #20]
 257:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 777              		.loc 1 257 3 is_stmt 1 view .LVU178
 257:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 778              		.loc 1 257 26 is_stmt 0 view .LVU179
 779 001a 8361     		str	r3, [r0, #24]
 258:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 780              		.loc 1 258 3 is_stmt 1 view .LVU180
 258:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 781              		.loc 1 258 30 is_stmt 0 view .LVU181
 782 001c C361     		str	r3, [r0, #28]
 259:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 783              		.loc 1 259 3 is_stmt 1 view .LVU182
 259:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 784              		.loc 1 259 28 is_stmt 0 view .LVU183
 785 001e 0362     		str	r3, [r0, #32]
 260:Core/Src/main.c ****   {
 786              		.loc 1 260 3 is_stmt 1 view .LVU184
 260:Core/Src/main.c ****   {
 787              		.loc 1 260 7 is_stmt 0 view .LVU185
 788 0020 FFF7FEFF 		bl	HAL_I2C_Init
 789              	.LVL51:
 260:Core/Src/main.c ****   {
 790              		.loc 1 260 6 view .LVU186
 791 0024 00B9     		cbnz	r0, .L36
 268:Core/Src/main.c **** 
 792              		.loc 1 268 1 view .LVU187
 793 0026 08BD     		pop	{r3, pc}
 794              	.L36:
 262:Core/Src/main.c ****   }
 795              		.loc 1 262 5 is_stmt 1 view .LVU188
 796 0028 FFF7FEFF 		bl	Error_Handler
 797              	.LVL52:
 798              	.L38:
 799              		.align	2
 800              	.L37:
 801 002c 00000000 		.word	hi2c1
 802 0030 00540040 		.word	1073763328
 803 0034 A0860100 		.word	100000
 804              		.cfi_endproc
 805              	.LFE140:
 807              		.section	.text.SystemClock_Config,"ax",%progbits
 808              		.align	1
 809              		.global	SystemClock_Config
 810              		.syntax unified
 811              		.thumb
 812              		.thumb_func
 814              	SystemClock_Config:
 815              	.LFB139:
 200:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 816              		.loc 1 200 1 view -0
 817              		.cfi_startproc
 818              		@ args = 0, pretend = 0, frame = 80
 819              		@ frame_needed = 0, uses_anonymous_args = 0
 820 0000 00B5     		push	{lr}
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s 			page 32


 821              		.cfi_def_cfa_offset 4
 822              		.cfi_offset 14, -4
 823 0002 95B0     		sub	sp, sp, #84
 824              		.cfi_def_cfa_offset 88
 201:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 825              		.loc 1 201 3 view .LVU190
 201:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 826              		.loc 1 201 22 is_stmt 0 view .LVU191
 827 0004 3022     		movs	r2, #48
 828 0006 0021     		movs	r1, #0
 829 0008 08A8     		add	r0, sp, #32
 830 000a FFF7FEFF 		bl	memset
 831              	.LVL53:
 202:Core/Src/main.c **** 
 832              		.loc 1 202 3 is_stmt 1 view .LVU192
 202:Core/Src/main.c **** 
 833              		.loc 1 202 22 is_stmt 0 view .LVU193
 834 000e 0023     		movs	r3, #0
 835 0010 0393     		str	r3, [sp, #12]
 836 0012 0493     		str	r3, [sp, #16]
 837 0014 0593     		str	r3, [sp, #20]
 838 0016 0693     		str	r3, [sp, #24]
 839 0018 0793     		str	r3, [sp, #28]
 206:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 840              		.loc 1 206 3 is_stmt 1 view .LVU194
 841              	.LBB11:
 206:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 842              		.loc 1 206 3 view .LVU195
 843 001a 0193     		str	r3, [sp, #4]
 206:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 844              		.loc 1 206 3 view .LVU196
 845 001c 184A     		ldr	r2, .L45
 846 001e 116C     		ldr	r1, [r2, #64]
 847 0020 41F08051 		orr	r1, r1, #268435456
 848 0024 1164     		str	r1, [r2, #64]
 206:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 849              		.loc 1 206 3 view .LVU197
 850 0026 126C     		ldr	r2, [r2, #64]
 851 0028 02F08052 		and	r2, r2, #268435456
 852 002c 0192     		str	r2, [sp, #4]
 206:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 853              		.loc 1 206 3 view .LVU198
 854 002e 019A     		ldr	r2, [sp, #4]
 855              	.LBE11:
 206:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 856              		.loc 1 206 3 view .LVU199
 207:Core/Src/main.c **** 
 857              		.loc 1 207 3 view .LVU200
 858              	.LBB12:
 207:Core/Src/main.c **** 
 859              		.loc 1 207 3 view .LVU201
 860 0030 0293     		str	r3, [sp, #8]
 207:Core/Src/main.c **** 
 861              		.loc 1 207 3 view .LVU202
 862 0032 144A     		ldr	r2, .L45+4
 863 0034 1168     		ldr	r1, [r2]
 864 0036 41F44041 		orr	r1, r1, #49152
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s 			page 33


 865 003a 1160     		str	r1, [r2]
 207:Core/Src/main.c **** 
 866              		.loc 1 207 3 view .LVU203
 867 003c 1268     		ldr	r2, [r2]
 868 003e 02F44042 		and	r2, r2, #49152
 869 0042 0292     		str	r2, [sp, #8]
 207:Core/Src/main.c **** 
 870              		.loc 1 207 3 view .LVU204
 871 0044 029A     		ldr	r2, [sp, #8]
 872              	.LBE12:
 207:Core/Src/main.c **** 
 873              		.loc 1 207 3 view .LVU205
 212:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 874              		.loc 1 212 3 view .LVU206
 212:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 875              		.loc 1 212 36 is_stmt 0 view .LVU207
 876 0046 0222     		movs	r2, #2
 877 0048 0892     		str	r2, [sp, #32]
 213:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 878              		.loc 1 213 3 is_stmt 1 view .LVU208
 213:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 879              		.loc 1 213 30 is_stmt 0 view .LVU209
 880 004a 0122     		movs	r2, #1
 881 004c 0B92     		str	r2, [sp, #44]
 214:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 882              		.loc 1 214 3 is_stmt 1 view .LVU210
 214:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 883              		.loc 1 214 41 is_stmt 0 view .LVU211
 884 004e 1022     		movs	r2, #16
 885 0050 0C92     		str	r2, [sp, #48]
 215:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 886              		.loc 1 215 3 is_stmt 1 view .LVU212
 215:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 887              		.loc 1 215 34 is_stmt 0 view .LVU213
 888 0052 0E93     		str	r3, [sp, #56]
 216:Core/Src/main.c ****   {
 889              		.loc 1 216 3 is_stmt 1 view .LVU214
 216:Core/Src/main.c ****   {
 890              		.loc 1 216 7 is_stmt 0 view .LVU215
 891 0054 08A8     		add	r0, sp, #32
 892 0056 FFF7FEFF 		bl	HAL_RCC_OscConfig
 893              	.LVL54:
 216:Core/Src/main.c ****   {
 894              		.loc 1 216 6 view .LVU216
 895 005a 68B9     		cbnz	r0, .L43
 223:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 896              		.loc 1 223 3 is_stmt 1 view .LVU217
 223:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 897              		.loc 1 223 31 is_stmt 0 view .LVU218
 898 005c 0F23     		movs	r3, #15
 899 005e 0393     		str	r3, [sp, #12]
 225:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 900              		.loc 1 225 3 is_stmt 1 view .LVU219
 225:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 901              		.loc 1 225 34 is_stmt 0 view .LVU220
 902 0060 0021     		movs	r1, #0
 903 0062 0491     		str	r1, [sp, #16]
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s 			page 34


 226:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 904              		.loc 1 226 3 is_stmt 1 view .LVU221
 226:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 905              		.loc 1 226 35 is_stmt 0 view .LVU222
 906 0064 0591     		str	r1, [sp, #20]
 227:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 907              		.loc 1 227 3 is_stmt 1 view .LVU223
 227:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 908              		.loc 1 227 36 is_stmt 0 view .LVU224
 909 0066 0691     		str	r1, [sp, #24]
 228:Core/Src/main.c **** 
 910              		.loc 1 228 3 is_stmt 1 view .LVU225
 228:Core/Src/main.c **** 
 911              		.loc 1 228 36 is_stmt 0 view .LVU226
 912 0068 0791     		str	r1, [sp, #28]
 230:Core/Src/main.c ****   {
 913              		.loc 1 230 3 is_stmt 1 view .LVU227
 230:Core/Src/main.c ****   {
 914              		.loc 1 230 7 is_stmt 0 view .LVU228
 915 006a 03A8     		add	r0, sp, #12
 916 006c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 917              	.LVL55:
 230:Core/Src/main.c ****   {
 918              		.loc 1 230 6 view .LVU229
 919 0070 20B9     		cbnz	r0, .L44
 234:Core/Src/main.c **** 
 920              		.loc 1 234 1 view .LVU230
 921 0072 15B0     		add	sp, sp, #84
 922              		.cfi_remember_state
 923              		.cfi_def_cfa_offset 4
 924              		@ sp needed
 925 0074 5DF804FB 		ldr	pc, [sp], #4
 926              	.L43:
 927              		.cfi_restore_state
 218:Core/Src/main.c ****   }
 928              		.loc 1 218 5 is_stmt 1 view .LVU231
 929 0078 FFF7FEFF 		bl	Error_Handler
 930              	.LVL56:
 931              	.L44:
 232:Core/Src/main.c ****   }
 932              		.loc 1 232 5 view .LVU232
 933 007c FFF7FEFF 		bl	Error_Handler
 934              	.LVL57:
 935              	.L46:
 936              		.align	2
 937              	.L45:
 938 0080 00380240 		.word	1073887232
 939 0084 00700040 		.word	1073770496
 940              		.cfi_endproc
 941              	.LFE139:
 943              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 944              		.align	2
 945              	.LC5:
 946 0000 424D4532 		.ascii	"BME280\000"
 946      383000
 947 0007 00       		.align	2
 948              	.LC6:
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s 			page 35


 949 0008 424D5032 		.ascii	"BMP280\000"
 949      383000
 950 000f 00       		.align	2
 951              	.LC7:
 952 0010 424D5032 		.ascii	"BMP280 initialization failed\012\000"
 952      38302069 
 952      6E697469 
 952      616C697A 
 952      6174696F 
 953 002e 0000     		.align	2
 954              	.LC8:
 955 0030 424D5032 		.ascii	"BMP280: found %s\012\000"
 955      38303A20 
 955      666F756E 
 955      64202573 
 955      0A00
 956              		.section	.text.main,"ax",%progbits
 957              		.align	1
 958              		.global	main
 959              		.syntax unified
 960              		.thumb
 961              		.thumb_func
 963              	main:
 964              	.LFB138:
 107:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 965              		.loc 1 107 1 view -0
 966              		.cfi_startproc
 967              		@ args = 0, pretend = 0, frame = 0
 968              		@ frame_needed = 0, uses_anonymous_args = 0
 969 0000 38B5     		push	{r3, r4, r5, lr}
 970              		.cfi_def_cfa_offset 16
 971              		.cfi_offset 3, -16
 972              		.cfi_offset 4, -12
 973              		.cfi_offset 5, -8
 974              		.cfi_offset 14, -4
 115:Core/Src/main.c **** 
 975              		.loc 1 115 3 view .LVU234
 976 0002 FFF7FEFF 		bl	HAL_Init
 977              	.LVL58:
 122:Core/Src/main.c **** 
 978              		.loc 1 122 3 view .LVU235
 979 0006 FFF7FEFF 		bl	SystemClock_Config
 980              	.LVL59:
 129:Core/Src/main.c ****   MX_USART1_UART_Init();
 981              		.loc 1 129 3 view .LVU236
 982 000a FFF7FEFF 		bl	MX_GPIO_Init
 983              	.LVL60:
 130:Core/Src/main.c ****   MX_USART2_UART_Init();
 984              		.loc 1 130 3 view .LVU237
 985 000e FFF7FEFF 		bl	MX_USART1_UART_Init
 986              	.LVL61:
 131:Core/Src/main.c ****   MX_I2C1_Init();
 987              		.loc 1 131 3 view .LVU238
 988 0012 FFF7FEFF 		bl	MX_USART2_UART_Init
 989              	.LVL62:
 132:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 990              		.loc 1 132 3 view .LVU239
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s 			page 36


 991 0016 FFF7FEFF 		bl	MX_I2C1_Init
 992              	.LVL63:
 160:Core/Src/main.c **** 	bmp280.addr = 0x77;
 993              		.loc 1 160 3 view .LVU240
 994 001a 244C     		ldr	r4, .L55
 995 001c 2046     		mov	r0, r4
 996 001e FFF7FEFF 		bl	bmp280_init_default_params
 997              	.LVL64:
 161:Core/Src/main.c **** 	bmp280.i2c = &hi2c1;
 998              		.loc 1 161 2 view .LVU241
 161:Core/Src/main.c **** 	bmp280.i2c = &hi2c1;
 999              		.loc 1 161 14 is_stmt 0 view .LVU242
 1000 0022 7723     		movs	r3, #119
 1001 0024 24F8083C 		strh	r3, [r4, #-8]	@ movhi
 162:Core/Src/main.c **** 
 1002              		.loc 1 162 2 is_stmt 1 view .LVU243
 162:Core/Src/main.c **** 
 1003              		.loc 1 162 13 is_stmt 0 view .LVU244
 1004 0028 214B     		ldr	r3, .L55+4
 1005 002a 44F8043C 		str	r3, [r4, #-4]
 164:Core/Src/main.c **** 		size = sprintf((char *)Data, "BMP280 initialization failed\n");
 1006              		.loc 1 164 2 is_stmt 1 view .LVU245
 164:Core/Src/main.c **** 		size = sprintf((char *)Data, "BMP280 initialization failed\n");
 1007              		.loc 1 164 8 is_stmt 0 view .LVU246
 1008 002e 18E0     		b	.L48
 1009              	.L49:
 165:Core/Src/main.c **** 		HAL_UART_Transmit(&huart2, Data, size, 1000);
 1010              		.loc 1 165 3 is_stmt 1 view .LVU247
 165:Core/Src/main.c **** 		HAL_UART_Transmit(&huart2, Data, size, 1000);
 1011              		.loc 1 165 10 is_stmt 0 view .LVU248
 1012 0030 204D     		ldr	r5, .L55+8
 1013 0032 AC46     		mov	ip, r5
 1014 0034 204C     		ldr	r4, .L55+12
 1015 0036 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1016 0038 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 1017 003c 94E80F00 		ldm	r4, {r0, r1, r2, r3}
 1018 0040 ACE80700 		stmia	ip!, {r0, r1, r2}
 1019 0044 ACF80030 		strh	r3, [ip]	@ movhi
 165:Core/Src/main.c **** 		HAL_UART_Transmit(&huart2, Data, size, 1000);
 1020              		.loc 1 165 8 view .LVU249
 1021 0048 1D22     		movs	r2, #29
 1022 004a 1C4B     		ldr	r3, .L55+16
 1023 004c 1A80     		strh	r2, [r3]	@ movhi
 166:Core/Src/main.c **** 		HAL_Delay(2000);
 1024              		.loc 1 166 3 is_stmt 1 view .LVU250
 1025 004e 4FF47A73 		mov	r3, #1000
 1026 0052 2946     		mov	r1, r5
 1027 0054 1A48     		ldr	r0, .L55+20
 1028 0056 FFF7FEFF 		bl	HAL_UART_Transmit
 1029              	.LVL65:
 167:Core/Src/main.c **** 	}
 1030              		.loc 1 167 3 view .LVU251
 1031 005a 4FF4FA60 		mov	r0, #2000
 1032 005e FFF7FEFF 		bl	HAL_Delay
 1033              	.LVL66:
 1034              	.L48:
 164:Core/Src/main.c **** 		size = sprintf((char *)Data, "BMP280 initialization failed\n");
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s 			page 37


 1035              		.loc 1 164 9 view .LVU252
 164:Core/Src/main.c **** 		size = sprintf((char *)Data, "BMP280 initialization failed\n");
 1036              		.loc 1 164 10 is_stmt 0 view .LVU253
 1037 0062 1249     		ldr	r1, .L55
 1038 0064 A1F12C00 		sub	r0, r1, #44
 1039 0068 FFF7FEFF 		bl	bmp280_init
 1040              	.LVL67:
 164:Core/Src/main.c **** 		size = sprintf((char *)Data, "BMP280 initialization failed\n");
 1041              		.loc 1 164 9 view .LVU254
 1042 006c 0028     		cmp	r0, #0
 1043 006e DFD0     		beq	.L49
 169:Core/Src/main.c **** 	size = sprintf((char *)Data, "BMP280: found %s\n", bme280p ? "BME280" : "BMP280");
 1044              		.loc 1 169 2 is_stmt 1 view .LVU255
 169:Core/Src/main.c **** 	size = sprintf((char *)Data, "BMP280: found %s\n", bme280p ? "BME280" : "BMP280");
 1045              		.loc 1 169 23 is_stmt 0 view .LVU256
 1046 0070 144B     		ldr	r3, .L55+24
 1047 0072 93F83230 		ldrb	r3, [r3, #50]	@ zero_extendqisi2
 1048              	.LVL68:
 170:Core/Src/main.c **** 	HAL_UART_Transmit(&huart2, Data, size, 1000);
 1049              		.loc 1 170 2 is_stmt 1 view .LVU257
 170:Core/Src/main.c **** 	HAL_UART_Transmit(&huart2, Data, size, 1000);
 1050              		.loc 1 170 9 is_stmt 0 view .LVU258
 1051 0076 602B     		cmp	r3, #96
 1052 0078 15D0     		beq	.L54
 1053 007a 134A     		ldr	r2, .L55+28
 1054              	.L50:
 170:Core/Src/main.c **** 	HAL_UART_Transmit(&huart2, Data, size, 1000);
 1055              		.loc 1 170 9 discriminator 4 view .LVU259
 1056 007c 0D4C     		ldr	r4, .L55+8
 1057 007e 1349     		ldr	r1, .L55+32
 1058 0080 2046     		mov	r0, r4
 1059 0082 FFF7FEFF 		bl	sprintf
 1060              	.LVL69:
 170:Core/Src/main.c **** 	HAL_UART_Transmit(&huart2, Data, size, 1000);
 1061              		.loc 1 170 7 discriminator 4 view .LVU260
 1062 0086 1522     		movs	r2, #21
 1063 0088 0C4B     		ldr	r3, .L55+16
 1064 008a 1A80     		strh	r2, [r3]	@ movhi
 171:Core/Src/main.c **** 
 1065              		.loc 1 171 2 is_stmt 1 discriminator 4 view .LVU261
 1066 008c 4FF47A73 		mov	r3, #1000
 1067 0090 2146     		mov	r1, r4
 1068 0092 0B48     		ldr	r0, .L55+20
 1069 0094 FFF7FEFF 		bl	HAL_UART_Transmit
 1070              	.LVL70:
 1071              	.L51:
 178:Core/Src/main.c ****   {
 1072              		.loc 1 178 3 discriminator 1 view .LVU262
 181:Core/Src/main.c ****     
 1073              		.loc 1 181 5 discriminator 1 view .LVU263
 1074 0098 4FF40072 		mov	r2, #512
 1075 009c 0C49     		ldr	r1, .L55+36
 1076 009e 0D48     		ldr	r0, .L55+40
 1077 00a0 FFF7FEFF 		bl	HAL_UARTEx_ReceiveToIdle_IT
 1078              	.LVL71:
 178:Core/Src/main.c ****   {
 1079              		.loc 1 178 9 discriminator 1 view .LVU264
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s 			page 38


 1080 00a4 F8E7     		b	.L51
 1081              	.LVL72:
 1082              	.L54:
 170:Core/Src/main.c **** 	HAL_UART_Transmit(&huart2, Data, size, 1000);
 1083              		.loc 1 170 9 is_stmt 0 view .LVU265
 1084 00a6 0C4A     		ldr	r2, .L55+44
 1085 00a8 E8E7     		b	.L50
 1086              	.L56:
 1087 00aa 00BF     		.align	2
 1088              	.L55:
 1089 00ac 2C000000 		.word	bmp280+44
 1090 00b0 00000000 		.word	hi2c1
 1091 00b4 00000000 		.word	Data
 1092 00b8 10000000 		.word	.LC7
 1093 00bc 00000000 		.word	size
 1094 00c0 00000000 		.word	huart2
 1095 00c4 00000000 		.word	bmp280
 1096 00c8 08000000 		.word	.LC6
 1097 00cc 30000000 		.word	.LC8
 1098 00d0 00000000 		.word	gps_raw
 1099 00d4 00000000 		.word	huart1
 1100 00d8 00000000 		.word	.LC5
 1101              		.cfi_endproc
 1102              	.LFE138:
 1104              		.global	Data
 1105              		.section	.bss.Data,"aw",%nobits
 1106              		.align	2
 1109              	Data:
 1110 0000 00000000 		.space	256
 1110      00000000 
 1110      00000000 
 1110      00000000 
 1110      00000000 
 1111              		.global	size
 1112              		.section	.bss.size,"aw",%nobits
 1113              		.align	1
 1116              	size:
 1117 0000 0000     		.space	2
 1118              		.global	sAltitude
 1119              		.section	.bss.sAltitude,"aw",%nobits
 1120              		.align	2
 1123              	sAltitude:
 1124 0000 00000000 		.space	128
 1124      00000000 
 1124      00000000 
 1124      00000000 
 1124      00000000 
 1125              		.global	sHumidity
 1126              		.section	.bss.sHumidity,"aw",%nobits
 1127              		.align	2
 1130              	sHumidity:
 1131 0000 00000000 		.space	128
 1131      00000000 
 1131      00000000 
 1131      00000000 
 1131      00000000 
 1132              		.global	sTemperature
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s 			page 39


 1133              		.section	.bss.sTemperature,"aw",%nobits
 1134              		.align	2
 1137              	sTemperature:
 1138 0000 00000000 		.space	128
 1138      00000000 
 1138      00000000 
 1138      00000000 
 1138      00000000 
 1139              		.global	sPressure
 1140              		.section	.bss.sPressure,"aw",%nobits
 1141              		.align	2
 1144              	sPressure:
 1145 0000 00000000 		.space	128
 1145      00000000 
 1145      00000000 
 1145      00000000 
 1145      00000000 
 1146              		.global	humidity
 1147              		.section	.bss.humidity,"aw",%nobits
 1148              		.align	2
 1151              	humidity:
 1152 0000 00000000 		.space	4
 1153              		.global	temperature
 1154              		.section	.bss.temperature,"aw",%nobits
 1155              		.align	2
 1158              	temperature:
 1159 0000 00000000 		.space	4
 1160              		.global	pressure
 1161              		.section	.bss.pressure,"aw",%nobits
 1162              		.align	2
 1165              	pressure:
 1166 0000 00000000 		.space	4
 1167              		.global	bmp280
 1168              		.section	.bss.bmp280,"aw",%nobits
 1169              		.align	2
 1172              	bmp280:
 1173 0000 00000000 		.space	52
 1173      00000000 
 1173      00000000 
 1173      00000000 
 1173      00000000 
 1174              		.global	altitude
 1175              		.section	.bss.altitude,"aw",%nobits
 1176              		.align	2
 1179              	altitude:
 1180 0000 00000000 		.space	4
 1181              		.global	P_b
 1182              		.section	.data.P_b,"aw"
 1183              		.align	2
 1186              	P_b:
 1187 0000 80E6C547 		.word	1204151936
 1188              		.global	bme280p
 1189              		.section	.bss.bme280p,"aw",%nobits
 1192              	bme280p:
 1193 0000 00       		.space	1
 1194              		.global	line
 1195              		.section	.bss.line,"aw",%nobits
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s 			page 40


 1196              		.align	2
 1199              	line:
 1200 0000 00000000 		.space	512
 1200      00000000 
 1200      00000000 
 1200      00000000 
 1200      00000000 
 1201              		.global	line_out
 1202              		.section	.bss.line_out,"aw",%nobits
 1203              		.align	2
 1206              	line_out:
 1207 0000 00000000 		.space	512
 1207      00000000 
 1207      00000000 
 1207      00000000 
 1207      00000000 
 1208              		.global	flag
 1209              		.section	.bss.flag,"aw",%nobits
 1212              	flag:
 1213 0000 00       		.space	1
 1214              		.global	gps_raw
 1215              		.section	.bss.gps_raw,"aw",%nobits
 1216              		.align	2
 1219              	gps_raw:
 1220 0000 00000000 		.space	512
 1220      00000000 
 1220      00000000 
 1220      00000000 
 1220      00000000 
 1221              		.global	huart2
 1222              		.section	.bss.huart2,"aw",%nobits
 1223              		.align	2
 1226              	huart2:
 1227 0000 00000000 		.space	68
 1227      00000000 
 1227      00000000 
 1227      00000000 
 1227      00000000 
 1228              		.global	huart1
 1229              		.section	.bss.huart1,"aw",%nobits
 1230              		.align	2
 1233              	huart1:
 1234 0000 00000000 		.space	68
 1234      00000000 
 1234      00000000 
 1234      00000000 
 1234      00000000 
 1235              		.global	hi2c1
 1236              		.section	.bss.hi2c1,"aw",%nobits
 1237              		.align	2
 1240              	hi2c1:
 1241 0000 00000000 		.space	84
 1241      00000000 
 1241      00000000 
 1241      00000000 
 1241      00000000 
 1242              		.text
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s 			page 41


 1243              	.Letext0:
 1244              		.file 4 "/Users/roryschram/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscod
 1245              		.file 5 "/Users/roryschram/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscod
 1246              		.file 6 "/Users/roryschram/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscod
 1247              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 1248              		.file 8 "/Users/roryschram/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscod
 1249              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1250              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1251              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1252              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1253              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1254              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 1255              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 1256              		.file 16 "Core/Inc/bmp280.h"
 1257              		.file 17 "/Users/roryschram/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vsco
 1258              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1259              		.file 19 "/Users/roryschram/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vsco
 1260              		.file 20 "/Users/roryschram/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vsco
 1261              		.file 21 "<built-in>"
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s 			page 42


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s:21     .text.minmea_rescale:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s:26     .text.minmea_rescale:00000000 minmea_rescale
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s:97     .text.MX_GPIO_Init:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s:102    .text.MX_GPIO_Init:00000000 MX_GPIO_Init
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s:206    .text.MX_GPIO_Init:00000078 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s:212    .rodata.HAL_UARTEx_RxEventCallback.str1.4:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s:233    .text.HAL_UARTEx_RxEventCallback:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s:239    .text.HAL_UARTEx_RxEventCallback:00000000 HAL_UARTEx_RxEventCallback
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s:539    .text.HAL_UARTEx_RxEventCallback:000001e8 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s:1212   .bss.flag:00000000 flag
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s:1206   .bss.line_out:00000000 line_out
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s:1226   .bss.huart2:00000000 huart2
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s:1219   .bss.gps_raw:00000000 gps_raw
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s:1199   .bss.line:00000000 line
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s:1109   .bss.Data:00000000 Data
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s:1116   .bss.size:00000000 size
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s:1151   .bss.humidity:00000000 humidity
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s:1165   .bss.pressure:00000000 pressure
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s:1158   .bss.temperature:00000000 temperature
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s:1172   .bss.bmp280:00000000 bmp280
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s:1186   .data.P_b:00000000 P_b
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s:1179   .bss.altitude:00000000 altitude
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s:1144   .bss.sPressure:00000000 sPressure
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s:1137   .bss.sTemperature:00000000 sTemperature
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s:1130   .bss.sHumidity:00000000 sHumidity
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s:1123   .bss.sAltitude:00000000 sAltitude
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s:571    .text.Error_Handler:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s:577    .text.Error_Handler:00000000 Error_Handler
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s:609    .text.MX_USART1_UART_Init:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s:614    .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s:668    .text.MX_USART1_UART_Init:0000002c $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s:1233   .bss.huart1:00000000 huart1
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s:674    .text.MX_USART2_UART_Init:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s:679    .text.MX_USART2_UART_Init:00000000 MX_USART2_UART_Init
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s:733    .text.MX_USART2_UART_Init:0000002c $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s:739    .text.MX_I2C1_Init:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s:744    .text.MX_I2C1_Init:00000000 MX_I2C1_Init
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s:801    .text.MX_I2C1_Init:0000002c $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s:1240   .bss.hi2c1:00000000 hi2c1
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s:808    .text.SystemClock_Config:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s:814    .text.SystemClock_Config:00000000 SystemClock_Config
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s:938    .text.SystemClock_Config:00000080 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s:944    .rodata.main.str1.4:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s:957    .text.main:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s:963    .text.main:00000000 main
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s:1089   .text.main:000000ac $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s:1106   .bss.Data:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s:1113   .bss.size:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s:1120   .bss.sAltitude:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s:1127   .bss.sHumidity:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s:1134   .bss.sTemperature:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s:1141   .bss.sPressure:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s:1148   .bss.humidity:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s:1155   .bss.temperature:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s:1162   .bss.pressure:00000000 $d
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s 			page 43


/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s:1169   .bss.bmp280:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s:1176   .bss.altitude:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s:1183   .data.P_b:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s:1192   .bss.bme280p:00000000 bme280p
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s:1193   .bss.bme280p:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s:1196   .bss.line:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s:1203   .bss.line_out:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s:1213   .bss.flag:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s:1216   .bss.gps_raw:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s:1223   .bss.huart2:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s:1230   .bss.huart1:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccAqXtWJ.s:1237   .bss.hi2c1:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
__aeabi_f2d
__aeabi_dsub
__aeabi_dmul
__aeabi_d2f
memset
HAL_UART_Transmit
strtok
strcpy
minmea_parse_rmc
sprintf
bmp280_read_float
pow
gcvt
HAL_UART_Init
HAL_I2C_Init
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
bmp280_init_default_params
HAL_Delay
bmp280_init
HAL_UARTEx_ReceiveToIdle_IT
