ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.MX_GPIO_Init,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	MX_GPIO_Init:
  27              	.LFB146:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include <stdio.h>
  25:Core/Src/main.c **** #include "minmea.h"
  26:Core/Src/main.c **** #include <stdlib.h>
  27:Core/Src/main.c **** #include <string.h>
  28:Core/Src/main.c **** #include <stdint.h>
  29:Core/Src/main.c **** #include "bmp280.h"
  30:Core/Src/main.c **** #include <float.h>
  31:Core/Src/main.c **** #include <math.h>
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 2


  32:Core/Src/main.c **** #include <LoRa.h>
  33:Core/Src/main.c **** #include "ssd1306.h"
  34:Core/Src/main.c **** #include "fonts.h"
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* USER CODE END Includes */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* USER CODE END PTD */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  45:Core/Src/main.c **** /* USER CODE BEGIN PD */
  46:Core/Src/main.c **** #define INDENT_SPACES "  "
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* USER CODE END PD */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  51:Core/Src/main.c **** /* USER CODE BEGIN PM */
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* USER CODE END PM */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  56:Core/Src/main.c **** I2C_HandleTypeDef hi2c1;
  57:Core/Src/main.c **** I2C_HandleTypeDef hi2c2;
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** SPI_HandleTypeDef hspi3;
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** TIM_HandleTypeDef htim3;
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** UART_HandleTypeDef huart1;
  64:Core/Src/main.c **** UART_HandleTypeDef huart2;
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** /* USER CODE BEGIN PV */
  67:Core/Src/main.c **** uint8_t gps_raw[512] = {"\0"};
  68:Core/Src/main.c **** uint8_t flag = 0;
  69:Core/Src/main.c **** char line[64] = {"\0"};
  70:Core/Src/main.c **** bool bme280p;
  71:Core/Src/main.c **** uint8_t transmit_data[256] = {"\0"};
  72:Core/Src/main.c **** LoRa myLoRa;
  73:Core/Src/main.c **** bool isLoraReady = true;
  74:Core/Src/main.c **** int preTicks = 0;
  75:Core/Src/main.c **** int currentTicks = 0;
  76:Core/Src/main.c **** int iMode = 1;
  77:Core/Src/main.c **** char sMode[10];
  78:Core/Src/main.c **** bool bModeChanged = true;
  79:Core/Src/main.c **** bool sendData = false;
  80:Core/Src/main.c **** 
  81:Core/Src/main.c **** 
  82:Core/Src/main.c **** bool beginTransmit = false;
  83:Core/Src/main.c **** uint16_t packetSize = 0;
  84:Core/Src/main.c **** 
  85:Core/Src/main.c **** //Variables to work out altitude
  86:Core/Src/main.c **** 
  87:Core/Src/main.c **** //Pressure at sea level
  88:Core/Src/main.c **** float P_b = 101325;
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 3


  89:Core/Src/main.c **** 
  90:Core/Src/main.c **** //Height that we are calculating
  91:Core/Src/main.c **** float altitude = 0;
  92:Core/Src/main.c **** 
  93:Core/Src/main.c **** 
  94:Core/Src/main.c **** BMP280_HandleTypedef bmp280;
  95:Core/Src/main.c **** 
  96:Core/Src/main.c **** float pressure, temperature, humidity;
  97:Core/Src/main.c **** char sPressure[128] = {"\0"};
  98:Core/Src/main.c **** char sTemperature[128] = {"\0"};
  99:Core/Src/main.c **** char sHumidity[128] = {"\0"};
 100:Core/Src/main.c **** char sAltitude[128] = {"\0"};
 101:Core/Src/main.c **** 
 102:Core/Src/main.c **** size_t size;
 103:Core/Src/main.c **** uint8_t Data[256] = {"\0"};
 104:Core/Src/main.c **** 
 105:Core/Src/main.c **** 
 106:Core/Src/main.c **** /* USER CODE END PV */
 107:Core/Src/main.c **** 
 108:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
 109:Core/Src/main.c **** void SystemClock_Config(void);
 110:Core/Src/main.c **** static void MX_GPIO_Init(void);
 111:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
 112:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
 113:Core/Src/main.c **** static void MX_I2C1_Init(void);
 114:Core/Src/main.c **** static void MX_SPI3_Init(void);
 115:Core/Src/main.c **** static void MX_I2C2_Init(void);
 116:Core/Src/main.c **** static void MX_TIM3_Init(void);
 117:Core/Src/main.c **** /* USER CODE BEGIN PFP */
 118:Core/Src/main.c **** uint16_t buildDataPacket();
 119:Core/Src/main.c **** 
 120:Core/Src/main.c **** 
 121:Core/Src/main.c **** /* USER CODE END PFP */
 122:Core/Src/main.c **** 
 123:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 124:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 125:Core/Src/main.c **** 
 126:Core/Src/main.c **** /* USER CODE END 0 */
 127:Core/Src/main.c **** 
 128:Core/Src/main.c **** /**
 129:Core/Src/main.c ****   * @brief  The application entry point.
 130:Core/Src/main.c ****   * @retval int
 131:Core/Src/main.c ****   */
 132:Core/Src/main.c **** int main(void)
 133:Core/Src/main.c **** {
 134:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 135:Core/Src/main.c **** 
 136:Core/Src/main.c ****   /* USER CODE END 1 */
 137:Core/Src/main.c **** 
 138:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 139:Core/Src/main.c **** 
 140:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 141:Core/Src/main.c ****   HAL_Init();
 142:Core/Src/main.c **** 
 143:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 144:Core/Src/main.c **** 
 145:Core/Src/main.c ****   /* USER CODE END Init */
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 4


 146:Core/Src/main.c **** 
 147:Core/Src/main.c ****   /* Configure the system clock */
 148:Core/Src/main.c ****   SystemClock_Config();
 149:Core/Src/main.c **** 
 150:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 151:Core/Src/main.c **** 
 152:Core/Src/main.c ****   /* USER CODE END SysInit */
 153:Core/Src/main.c **** 
 154:Core/Src/main.c ****   /* Initialize all configured peripherals */
 155:Core/Src/main.c ****   MX_GPIO_Init();
 156:Core/Src/main.c ****   MX_USART1_UART_Init();
 157:Core/Src/main.c ****   MX_USART2_UART_Init();
 158:Core/Src/main.c ****   MX_I2C1_Init();
 159:Core/Src/main.c ****   MX_SPI3_Init();
 160:Core/Src/main.c ****   MX_I2C2_Init();
 161:Core/Src/main.c ****   MX_TIM3_Init();
 162:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 163:Core/Src/main.c ****   
 164:Core/Src/main.c ****   // Start timer
 165:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim3);
 166:Core/Src/main.c **** 
 167:Core/Src/main.c ****   bmp280_init_default_params(&bmp280.params);
 168:Core/Src/main.c **** 	bmp280.addr = 0x77;
 169:Core/Src/main.c **** 	bmp280.i2c = &hi2c1;
 170:Core/Src/main.c **** 
 171:Core/Src/main.c **** 	while (!bmp280_init(&bmp280, &bmp280.params)) {
 172:Core/Src/main.c **** 		size = sprintf((char *)Data, "BMP280 initialization failed\n");
 173:Core/Src/main.c **** 		HAL_UART_Transmit(&huart2, Data, size, 1000);
 174:Core/Src/main.c **** 		HAL_Delay(2000);
 175:Core/Src/main.c **** 	}
 176:Core/Src/main.c **** 	bool bme280p = bmp280.id == BME280_CHIP_ID;
 177:Core/Src/main.c **** 	size = sprintf((char *)Data, "\nBMP280: found %s\n", bme280p ? "BME280" : "BMP280");
 178:Core/Src/main.c **** 	HAL_UART_Transmit(&huart2, Data, size, 1000);
 179:Core/Src/main.c **** 
 180:Core/Src/main.c ****   myLoRa = newLoRa();
 181:Core/Src/main.c ****   myLoRa.CS_port         = GPIOA;
 182:Core/Src/main.c ****   myLoRa.CS_pin          = GPIO_PIN_4;
 183:Core/Src/main.c ****   myLoRa.reset_port      = GPIOB;
 184:Core/Src/main.c ****   myLoRa.reset_pin       = GPIO_PIN_8;
 185:Core/Src/main.c ****   myLoRa.DIO0_port       = GPIOB;
 186:Core/Src/main.c ****   myLoRa.DIO0_pin        = GPIO_PIN_9;
 187:Core/Src/main.c ****   myLoRa.hSPIx           = &hspi3;
 188:Core/Src/main.c ****   
 189:Core/Src/main.c ****   
 190:Core/Src/main.c ****   myLoRa.frequency             = 433;             // default = 433 MHz
 191:Core/Src/main.c ****   myLoRa.spreadingFactor        = SF_7;            // default = SF_7
 192:Core/Src/main.c ****   myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 193:Core/Src/main.c ****   myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 194:Core/Src/main.c ****   myLoRa.power                 = POWER_20db;      // default = 20db
 195:Core/Src/main.c ****   myLoRa.overCurrentProtection = 100;             // default = 100 mA
 196:Core/Src/main.c ****   myLoRa.preamble              = 8;              // default = 8;
 197:Core/Src/main.c **** 
 198:Core/Src/main.c ****   uint16_t ret = LoRa_init(&myLoRa);
 199:Core/Src/main.c ****   uint8_t buff[128] = {"\0"};
 200:Core/Src/main.c ****   
 201:Core/Src/main.c **** 
 202:Core/Src/main.c **** if (ret==LORA_OK){
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 5


 203:Core/Src/main.c ****   snprintf(buff,sizeof(buff),"LoRa is running... :) \n\r");
 204:Core/Src/main.c ****   size = strlen(&buff);
 205:Core/Src/main.c ****   LoRa_transmit(&myLoRa, (uint8_t*)buff, size, 100);
 206:Core/Src/main.c ****   HAL_UART_Transmit_IT(&huart2, buff, size);
 207:Core/Src/main.c **** }
 208:Core/Src/main.c **** else{
 209:Core/Src/main.c ****   snprintf(buff,sizeof(buff),"\n\r LoRa failed :( \n\r Error code: %d \n\r", ret);
 210:Core/Src/main.c ****   size = strlen(&buff);
 211:Core/Src/main.c ****   HAL_UART_Transmit_IT(&huart2, buff, size);
 212:Core/Src/main.c **** }
 213:Core/Src/main.c **** 
 214:Core/Src/main.c **** 
 215:Core/Src/main.c **** ssd1306_Init(&hi2c2);
 216:Core/Src/main.c **** 
 217:Core/Src/main.c **** // Set cursors and write the word "mode"
 218:Core/Src/main.c **** ssd1306_SetCursor(0, 0);
 219:Core/Src/main.c **** ssd1306_WriteString("Mode:", Font_16x26, White);
 220:Core/Src/main.c **** 
 221:Core/Src/main.c **** ssd1306_SetCursor(0, 35);
 222:Core/Src/main.c **** sprintf(sMode, "%d", iMode);
 223:Core/Src/main.c **** ssd1306_WriteString(sMode, Font_16x26, White);
 224:Core/Src/main.c **** 
 225:Core/Src/main.c **** // Copy all data from local screenbuffer to the screen
 226:Core/Src/main.c **** ssd1306_UpdateScreen(&hi2c2);
 227:Core/Src/main.c **** 
 228:Core/Src/main.c **** HAL_UARTEx_ReceiveToIdle(&huart1,(uint8_t*)gps_raw,512,512,1000);
 229:Core/Src/main.c **** 
 230:Core/Src/main.c **** 
 231:Core/Src/main.c ****   /* USER CODE END 2 */
 232:Core/Src/main.c **** 
 233:Core/Src/main.c ****   /* Infinite loop */
 234:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 235:Core/Src/main.c ****   while (1)
 236:Core/Src/main.c ****   {
 237:Core/Src/main.c **** 
 238:Core/Src/main.c **** 
 239:Core/Src/main.c ****     if (beginTransmit) {
 240:Core/Src/main.c ****       //HAL_UART_Transmit(&huart2,(uint8_t *)gps_raw,512, 1000);
 241:Core/Src/main.c ****       HAL_UARTEx_ReceiveToIdle_IT(&huart1,(uint8_t*)gps_raw,512);
 242:Core/Src/main.c ****       packetSize = buildDataPacket();
 243:Core/Src/main.c ****       
 244:Core/Src/main.c ****       size = strlen(&transmit_data);
 245:Core/Src/main.c ****       ret = LoRa_transmit(&myLoRa, (uint8_t*)transmit_data, packetSize, 10000);
 246:Core/Src/main.c ****       memset(transmit_data, '\0', sizeof(transmit_data));
 247:Core/Src/main.c **** 
 248:Core/Src/main.c ****       // sprintf(transmit_data, "Data sent with code %u\n", ret);
 249:Core/Src/main.c ****       // size = strlen(&transmit_data);
 250:Core/Src/main.c **** 	    // HAL_UART_Transmit(&huart2, (uint8_t *)transmit_data, size, 1000);
 251:Core/Src/main.c ****       // memset(transmit_data, '\0', sizeof(transmit_data));
 252:Core/Src/main.c ****       
 253:Core/Src/main.c ****       beginTransmit = false;
 254:Core/Src/main.c ****     }      
 255:Core/Src/main.c **** 
 256:Core/Src/main.c ****     if (bModeChanged) {
 257:Core/Src/main.c **** switch (iMode) {
 258:Core/Src/main.c ****     case 1:
 259:Core/Src/main.c ****       // statements
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 6


 260:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 261:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_7;            // default = SF_7
 262:Core/Src/main.c ****       myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 263:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 264:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 265:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 266:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 267:Core/Src/main.c ****       LoRa_init(&myLoRa);
 268:Core/Src/main.c ****       break;
 269:Core/Src/main.c **** 
 270:Core/Src/main.c ****     case 2:
 271:Core/Src/main.c ****       // statements
 272:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 273:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_7;            // default = SF_7
 274:Core/Src/main.c ****       myLoRa.bandWidth             = BW_10_4KHz;       // default = BW_125KHz
 275:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 276:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 277:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 278:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 279:Core/Src/main.c ****       LoRa_init(&myLoRa);
 280:Core/Src/main.c ****       break;
 281:Core/Src/main.c **** 
 282:Core/Src/main.c ****     case 3:
 283:Core/Src/main.c ****       // statements
 284:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 285:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_7;            // default = SF_7
 286:Core/Src/main.c ****       myLoRa.bandWidth             = BW_15_6KHz;       // default = BW_125KHz
 287:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 288:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 289:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 290:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 291:Core/Src/main.c ****       LoRa_init(&myLoRa);
 292:Core/Src/main.c ****       break;
 293:Core/Src/main.c **** 
 294:Core/Src/main.c ****     case 4:
 295:Core/Src/main.c ****       // statements
 296:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 297:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_7;            // default = SF_7
 298:Core/Src/main.c ****       myLoRa.bandWidth             = BW_20_8KHz;       // default = BW_125KHz
 299:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 300:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 301:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 302:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 303:Core/Src/main.c ****       LoRa_init(&myLoRa);
 304:Core/Src/main.c ****       break;
 305:Core/Src/main.c **** 
 306:Core/Src/main.c ****     case 5:
 307:Core/Src/main.c ****       // statements
 308:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 309:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_7;            // default = SF_7
 310:Core/Src/main.c ****       myLoRa.bandWidth             = BW_31_25KHz;       // default = BW_125KHz
 311:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 312:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 313:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 314:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 315:Core/Src/main.c ****       LoRa_init(&myLoRa);
 316:Core/Src/main.c ****       break;
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 7


 317:Core/Src/main.c **** 
 318:Core/Src/main.c ****     case 6:
 319:Core/Src/main.c ****       // statements
 320:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 321:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_7;            // default = SF_7
 322:Core/Src/main.c ****       myLoRa.bandWidth             = BW_41_7KHz;       // default = BW_125KHz
 323:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 324:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 325:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 326:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 327:Core/Src/main.c ****       LoRa_init(&myLoRa);
 328:Core/Src/main.c ****       break;
 329:Core/Src/main.c **** 
 330:Core/Src/main.c ****     case 7:
 331:Core/Src/main.c ****       // statements
 332:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 333:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_7;            // default = SF_7
 334:Core/Src/main.c ****       myLoRa.bandWidth             = BW_62_5KHz;       // default = BW_125KHz
 335:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 336:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 337:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 338:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 339:Core/Src/main.c ****       LoRa_init(&myLoRa);
 340:Core/Src/main.c ****       break;
 341:Core/Src/main.c **** 
 342:Core/Src/main.c ****     case 8:
 343:Core/Src/main.c ****       // statements
 344:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 345:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_7;            // default = SF_7
 346:Core/Src/main.c ****       myLoRa.bandWidth             = BW_125KHz;       // default = BW_125KHz
 347:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 348:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 349:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 350:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 351:Core/Src/main.c ****       LoRa_init(&myLoRa);
 352:Core/Src/main.c ****       break;
 353:Core/Src/main.c **** 
 354:Core/Src/main.c ****     case 9:
 355:Core/Src/main.c ****       // statements
 356:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 357:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_7;            // default = SF_7
 358:Core/Src/main.c ****       myLoRa.bandWidth             = BW_250KHz;       // default = BW_125KHz
 359:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 360:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 361:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 362:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 363:Core/Src/main.c ****       LoRa_init(&myLoRa);
 364:Core/Src/main.c ****       break;
 365:Core/Src/main.c **** 
 366:Core/Src/main.c ****     case 10:
 367:Core/Src/main.c ****       // statements
 368:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 369:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_7;            // default = SF_7
 370:Core/Src/main.c ****       myLoRa.bandWidth             = BW_500KHz;       // default = BW_125KHz
 371:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 372:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 373:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 8


 374:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 375:Core/Src/main.c ****       LoRa_init(&myLoRa);
 376:Core/Src/main.c ****       break;
 377:Core/Src/main.c ****     
 378:Core/Src/main.c ****     case 11:
 379:Core/Src/main.c ****       // statements
 380:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 381:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_8;            // default = SF_7
 382:Core/Src/main.c ****       myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 383:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 384:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 385:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 386:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 387:Core/Src/main.c ****       LoRa_init(&myLoRa);
 388:Core/Src/main.c ****       break;
 389:Core/Src/main.c **** 
 390:Core/Src/main.c ****     case 12:
 391:Core/Src/main.c ****       // statements
 392:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 393:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_8;            // default = SF_7
 394:Core/Src/main.c ****       myLoRa.bandWidth             = BW_10_4KHz;       // default = BW_125KHz
 395:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 396:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 397:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 398:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 399:Core/Src/main.c ****       LoRa_init(&myLoRa);
 400:Core/Src/main.c ****       break;
 401:Core/Src/main.c **** 
 402:Core/Src/main.c ****     case 13:
 403:Core/Src/main.c ****       // statements
 404:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 405:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_8;            // default = SF_7
 406:Core/Src/main.c ****       myLoRa.bandWidth             = BW_15_6KHz;       // default = BW_125KHz
 407:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 408:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 409:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 410:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 411:Core/Src/main.c ****       LoRa_init(&myLoRa);
 412:Core/Src/main.c ****       break;
 413:Core/Src/main.c **** 
 414:Core/Src/main.c ****     case 14:
 415:Core/Src/main.c ****       // statements
 416:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 417:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_8;            // default = SF_7
 418:Core/Src/main.c ****       myLoRa.bandWidth             = BW_20_8KHz;       // default = BW_125KHz
 419:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 420:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 421:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 422:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 423:Core/Src/main.c ****       LoRa_init(&myLoRa);
 424:Core/Src/main.c ****       break;
 425:Core/Src/main.c **** 
 426:Core/Src/main.c ****     case 15:
 427:Core/Src/main.c ****       // statements
 428:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 429:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_8;            // default = SF_7
 430:Core/Src/main.c ****       myLoRa.bandWidth             = BW_31_25KHz;       // default = BW_125KHz
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 9


 431:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 432:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 433:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 434:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 435:Core/Src/main.c ****       LoRa_init(&myLoRa);
 436:Core/Src/main.c ****       break;
 437:Core/Src/main.c **** 
 438:Core/Src/main.c ****     case 16:
 439:Core/Src/main.c ****       // statements
 440:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 441:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_8;            // default = SF_7
 442:Core/Src/main.c ****       myLoRa.bandWidth             = BW_41_7KHz;       // default = BW_125KHz
 443:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 444:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 445:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 446:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 447:Core/Src/main.c ****       LoRa_init(&myLoRa);
 448:Core/Src/main.c ****       break;
 449:Core/Src/main.c **** 
 450:Core/Src/main.c ****     case 17:
 451:Core/Src/main.c ****       // statements
 452:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 453:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_8;            // default = SF_7
 454:Core/Src/main.c ****       myLoRa.bandWidth             = BW_62_5KHz;       // default = BW_125KHz
 455:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 456:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 457:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 458:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 459:Core/Src/main.c ****       LoRa_init(&myLoRa);
 460:Core/Src/main.c ****       break;
 461:Core/Src/main.c **** 
 462:Core/Src/main.c ****     case 18:
 463:Core/Src/main.c ****       // statements
 464:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 465:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_8;            // default = SF_7
 466:Core/Src/main.c ****       myLoRa.bandWidth             = BW_125KHz;       // default = BW_125KHz
 467:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 468:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 469:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 470:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 471:Core/Src/main.c ****       LoRa_init(&myLoRa);
 472:Core/Src/main.c ****       break;
 473:Core/Src/main.c **** 
 474:Core/Src/main.c ****     case 19:
 475:Core/Src/main.c ****       // statements
 476:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 477:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_8;            // default = SF_7
 478:Core/Src/main.c ****       myLoRa.bandWidth             = BW_250KHz;       // default = BW_125KHz
 479:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 480:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 481:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 482:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 483:Core/Src/main.c ****       LoRa_init(&myLoRa);
 484:Core/Src/main.c ****       break;
 485:Core/Src/main.c **** 
 486:Core/Src/main.c ****     case 20:
 487:Core/Src/main.c ****       // statements
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 10


 488:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 489:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_8;            // default = SF_7
 490:Core/Src/main.c ****       myLoRa.bandWidth             = BW_500KHz;       // default = BW_125KHz
 491:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 492:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 493:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 494:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 495:Core/Src/main.c ****       LoRa_init(&myLoRa);
 496:Core/Src/main.c ****       break;
 497:Core/Src/main.c **** 
 498:Core/Src/main.c ****     case 21:
 499:Core/Src/main.c ****       // statements
 500:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 501:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_9;            // default = SF_7
 502:Core/Src/main.c ****       myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 503:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 504:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 505:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 506:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 507:Core/Src/main.c ****       LoRa_init(&myLoRa);
 508:Core/Src/main.c ****       break;
 509:Core/Src/main.c **** 
 510:Core/Src/main.c ****     case 22:
 511:Core/Src/main.c ****       // statements
 512:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 513:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_9;            // default = SF_7
 514:Core/Src/main.c ****       myLoRa.bandWidth             = BW_10_4KHz;       // default = BW_125KHz
 515:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 516:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 517:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 518:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 519:Core/Src/main.c ****       LoRa_init(&myLoRa);
 520:Core/Src/main.c ****       break;
 521:Core/Src/main.c **** 
 522:Core/Src/main.c ****     case 23:
 523:Core/Src/main.c ****       // statements
 524:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 525:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_9;            // default = SF_7
 526:Core/Src/main.c ****       myLoRa.bandWidth             = BW_15_6KHz;       // default = BW_125KHz
 527:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 528:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 529:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 530:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 531:Core/Src/main.c ****       LoRa_init(&myLoRa);
 532:Core/Src/main.c ****       break;
 533:Core/Src/main.c **** 
 534:Core/Src/main.c ****     case 24:
 535:Core/Src/main.c ****       // statements
 536:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 537:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_9;            // default = SF_7
 538:Core/Src/main.c ****       myLoRa.bandWidth             = BW_20_8KHz;       // default = BW_125KHz
 539:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 540:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 541:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 542:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 543:Core/Src/main.c ****       LoRa_init(&myLoRa);
 544:Core/Src/main.c ****       break;
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 11


 545:Core/Src/main.c **** 
 546:Core/Src/main.c ****     case 25:
 547:Core/Src/main.c ****       // statements
 548:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 549:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_9;            // default = SF_7
 550:Core/Src/main.c ****       myLoRa.bandWidth             = BW_31_25KHz;       // default = BW_125KHz
 551:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 552:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 553:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 554:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 555:Core/Src/main.c ****       LoRa_init(&myLoRa);
 556:Core/Src/main.c ****       break;
 557:Core/Src/main.c **** 
 558:Core/Src/main.c ****     case 26:
 559:Core/Src/main.c ****       // statements
 560:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 561:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_9;            // default = SF_7
 562:Core/Src/main.c ****       myLoRa.bandWidth             = BW_41_7KHz;       // default = BW_125KHz
 563:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 564:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 565:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 566:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 567:Core/Src/main.c ****       LoRa_init(&myLoRa);
 568:Core/Src/main.c ****       break;
 569:Core/Src/main.c **** 
 570:Core/Src/main.c ****     case 27:
 571:Core/Src/main.c ****       // statements
 572:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 573:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_9;            // default = SF_7
 574:Core/Src/main.c ****       myLoRa.bandWidth             = BW_62_5KHz;       // default = BW_125KHz
 575:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 576:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 577:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 578:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 579:Core/Src/main.c ****       LoRa_init(&myLoRa);
 580:Core/Src/main.c ****       break;
 581:Core/Src/main.c **** 
 582:Core/Src/main.c ****     case 28:
 583:Core/Src/main.c ****       // statements
 584:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 585:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_9;            // default = SF_7
 586:Core/Src/main.c ****       myLoRa.bandWidth             = BW_125KHz;       // default = BW_125KHz
 587:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 588:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 589:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 590:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 591:Core/Src/main.c ****       LoRa_init(&myLoRa);
 592:Core/Src/main.c ****       break;
 593:Core/Src/main.c **** 
 594:Core/Src/main.c ****     case 29:
 595:Core/Src/main.c ****       // statements
 596:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 597:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_9;            // default = SF_7
 598:Core/Src/main.c ****       myLoRa.bandWidth             = BW_250KHz;       // default = BW_125KHz
 599:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 600:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 601:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 12


 602:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 603:Core/Src/main.c ****       LoRa_init(&myLoRa);
 604:Core/Src/main.c ****       break;
 605:Core/Src/main.c **** 
 606:Core/Src/main.c ****     case 30:
 607:Core/Src/main.c ****       // statements
 608:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 609:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_9;            // default = SF_7
 610:Core/Src/main.c ****       myLoRa.bandWidth             = BW_500KHz;       // default = BW_125KHz
 611:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 612:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 613:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 614:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 615:Core/Src/main.c ****       LoRa_init(&myLoRa);
 616:Core/Src/main.c ****       break;
 617:Core/Src/main.c **** 
 618:Core/Src/main.c ****     case 31:
 619:Core/Src/main.c ****       // statements
 620:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 621:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_10;            // default = SF_7
 622:Core/Src/main.c ****       myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 623:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 624:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 625:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 626:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 627:Core/Src/main.c ****       LoRa_init(&myLoRa);
 628:Core/Src/main.c ****       break;
 629:Core/Src/main.c **** 
 630:Core/Src/main.c ****     case 32:
 631:Core/Src/main.c ****       // statements
 632:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 633:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_10;            // default = SF_7
 634:Core/Src/main.c ****       myLoRa.bandWidth             = BW_10_4KHz;       // default = BW_125KHz
 635:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 636:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 637:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 638:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 639:Core/Src/main.c ****       LoRa_init(&myLoRa);
 640:Core/Src/main.c ****       break;
 641:Core/Src/main.c **** 
 642:Core/Src/main.c ****     case 33:
 643:Core/Src/main.c ****       // statements
 644:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 645:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_10;            // default = SF_7
 646:Core/Src/main.c ****       myLoRa.bandWidth             = BW_15_6KHz;       // default = BW_125KHz
 647:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 648:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 649:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 650:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 651:Core/Src/main.c ****       LoRa_init(&myLoRa);
 652:Core/Src/main.c ****       break;
 653:Core/Src/main.c **** 
 654:Core/Src/main.c ****     case 34:
 655:Core/Src/main.c ****       // statements
 656:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 657:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_10;            // default = SF_7
 658:Core/Src/main.c ****       myLoRa.bandWidth             = BW_20_8KHz;       // default = BW_125KHz
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 13


 659:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 660:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 661:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 662:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 663:Core/Src/main.c ****       LoRa_init(&myLoRa);
 664:Core/Src/main.c ****       break;
 665:Core/Src/main.c **** 
 666:Core/Src/main.c ****     case 35:
 667:Core/Src/main.c ****       // statements
 668:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 669:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_10;            // default = SF_7
 670:Core/Src/main.c ****       myLoRa.bandWidth             = BW_31_25KHz;       // default = BW_125KHz
 671:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 672:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 673:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 674:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 675:Core/Src/main.c ****       LoRa_init(&myLoRa);
 676:Core/Src/main.c ****       break;
 677:Core/Src/main.c **** 
 678:Core/Src/main.c ****     case 36:
 679:Core/Src/main.c ****       // statements
 680:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 681:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_10;            // default = SF_7
 682:Core/Src/main.c ****       myLoRa.bandWidth             = BW_41_7KHz;       // default = BW_125KHz
 683:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 684:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 685:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 686:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 687:Core/Src/main.c ****       LoRa_init(&myLoRa);
 688:Core/Src/main.c ****       break;
 689:Core/Src/main.c **** 
 690:Core/Src/main.c ****     case 37:
 691:Core/Src/main.c ****       // statements
 692:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 693:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_10;            // default = SF_7
 694:Core/Src/main.c ****       myLoRa.bandWidth             = BW_62_5KHz;       // default = BW_125KHz
 695:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 696:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 697:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 698:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 699:Core/Src/main.c ****       LoRa_init(&myLoRa);
 700:Core/Src/main.c ****       break;
 701:Core/Src/main.c **** 
 702:Core/Src/main.c ****     case 38:
 703:Core/Src/main.c ****       // statements
 704:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 705:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_10;            // default = SF_7
 706:Core/Src/main.c ****       myLoRa.bandWidth             = BW_125KHz;       // default = BW_125KHz
 707:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 708:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 709:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 710:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 711:Core/Src/main.c ****       LoRa_init(&myLoRa);
 712:Core/Src/main.c ****       break;
 713:Core/Src/main.c **** 
 714:Core/Src/main.c ****     case 39:
 715:Core/Src/main.c ****       // statements
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 14


 716:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 717:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_10;            // default = SF_7
 718:Core/Src/main.c ****       myLoRa.bandWidth             = BW_250KHz;       // default = BW_125KHz
 719:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 720:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 721:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 722:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 723:Core/Src/main.c ****       LoRa_init(&myLoRa);
 724:Core/Src/main.c ****       break;
 725:Core/Src/main.c **** 
 726:Core/Src/main.c ****     case 40:
 727:Core/Src/main.c ****       // statements
 728:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 729:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_10;            // default = SF_7
 730:Core/Src/main.c ****       myLoRa.bandWidth             = BW_500KHz;       // default = BW_125KHz
 731:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 732:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 733:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 734:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 735:Core/Src/main.c ****       LoRa_init(&myLoRa);
 736:Core/Src/main.c ****       break;
 737:Core/Src/main.c **** 
 738:Core/Src/main.c ****     case 41:
 739:Core/Src/main.c ****       // statements
 740:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 741:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_11;            // default = SF_7
 742:Core/Src/main.c ****       myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 743:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 744:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 745:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 746:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 747:Core/Src/main.c ****       LoRa_init(&myLoRa);
 748:Core/Src/main.c ****       break;
 749:Core/Src/main.c **** 
 750:Core/Src/main.c ****     case 42:
 751:Core/Src/main.c ****       // statements
 752:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 753:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_11;            // default = SF_7
 754:Core/Src/main.c ****       myLoRa.bandWidth             = BW_10_4KHz;       // default = BW_125KHz
 755:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 756:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 757:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 758:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 759:Core/Src/main.c ****       LoRa_init(&myLoRa);
 760:Core/Src/main.c ****       break;
 761:Core/Src/main.c **** 
 762:Core/Src/main.c ****     case 43:
 763:Core/Src/main.c ****       // statements
 764:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 765:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_11;            // default = SF_7
 766:Core/Src/main.c ****       myLoRa.bandWidth             = BW_15_6KHz;       // default = BW_125KHz
 767:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 768:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 769:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 770:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 771:Core/Src/main.c ****       LoRa_init(&myLoRa);
 772:Core/Src/main.c ****       break;
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 15


 773:Core/Src/main.c **** 
 774:Core/Src/main.c ****     case 44:
 775:Core/Src/main.c ****       // statements
 776:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 777:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_11;            // default = SF_7
 778:Core/Src/main.c ****       myLoRa.bandWidth             = BW_20_8KHz;       // default = BW_125KHz
 779:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 780:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 781:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 782:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 783:Core/Src/main.c ****       LoRa_init(&myLoRa);
 784:Core/Src/main.c ****       break;
 785:Core/Src/main.c **** 
 786:Core/Src/main.c ****     case 45:
 787:Core/Src/main.c ****       // statements
 788:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 789:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_11;            // default = SF_7
 790:Core/Src/main.c ****       myLoRa.bandWidth             = BW_31_25KHz;       // default = BW_125KHz
 791:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 792:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 793:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 794:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 795:Core/Src/main.c ****       LoRa_init(&myLoRa);
 796:Core/Src/main.c ****       break;
 797:Core/Src/main.c **** 
 798:Core/Src/main.c ****     case 46:
 799:Core/Src/main.c ****       // statements
 800:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 801:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_11;            // default = SF_7
 802:Core/Src/main.c ****       myLoRa.bandWidth             = BW_41_7KHz;       // default = BW_125KHz
 803:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 804:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 805:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 806:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 807:Core/Src/main.c ****       LoRa_init(&myLoRa);
 808:Core/Src/main.c ****       break;
 809:Core/Src/main.c **** 
 810:Core/Src/main.c ****     case 47:
 811:Core/Src/main.c ****       // statements
 812:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 813:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_11;            // default = SF_7
 814:Core/Src/main.c ****       myLoRa.bandWidth             = BW_62_5KHz;       // default = BW_125KHz
 815:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 816:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 817:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 818:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 819:Core/Src/main.c ****       LoRa_init(&myLoRa);
 820:Core/Src/main.c ****       break;
 821:Core/Src/main.c **** 
 822:Core/Src/main.c ****     case 48:
 823:Core/Src/main.c ****       // statements
 824:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 825:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_11;            // default = SF_7
 826:Core/Src/main.c ****       myLoRa.bandWidth             = BW_125KHz;       // default = BW_125KHz
 827:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 828:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 829:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 16


 830:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 831:Core/Src/main.c ****       LoRa_init(&myLoRa);
 832:Core/Src/main.c ****       break;
 833:Core/Src/main.c **** 
 834:Core/Src/main.c ****     case 49:
 835:Core/Src/main.c ****       // statements
 836:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 837:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_11;            // default = SF_7
 838:Core/Src/main.c ****       myLoRa.bandWidth             = BW_250KHz;       // default = BW_125KHz
 839:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 840:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 841:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 842:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 843:Core/Src/main.c ****       LoRa_init(&myLoRa);
 844:Core/Src/main.c ****       break;
 845:Core/Src/main.c **** 
 846:Core/Src/main.c ****     case 50:
 847:Core/Src/main.c ****       // statements
 848:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 849:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_11;            // default = SF_7
 850:Core/Src/main.c ****       myLoRa.bandWidth             = BW_500KHz;       // default = BW_125KHz
 851:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 852:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 853:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 854:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 855:Core/Src/main.c ****       LoRa_init(&myLoRa);
 856:Core/Src/main.c ****       break;
 857:Core/Src/main.c **** 
 858:Core/Src/main.c ****     case 51:
 859:Core/Src/main.c ****       // statements
 860:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 861:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_12;            // default = SF_7
 862:Core/Src/main.c ****       myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 863:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 864:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 865:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 866:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 867:Core/Src/main.c ****       LoRa_init(&myLoRa);
 868:Core/Src/main.c ****       break;
 869:Core/Src/main.c **** 
 870:Core/Src/main.c ****     case 52:
 871:Core/Src/main.c ****       // statements
 872:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 873:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_12;            // default = SF_7
 874:Core/Src/main.c ****       myLoRa.bandWidth             = BW_10_4KHz;       // default = BW_125KHz
 875:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 876:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 877:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 878:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 879:Core/Src/main.c ****       LoRa_init(&myLoRa);
 880:Core/Src/main.c ****       break;
 881:Core/Src/main.c **** 
 882:Core/Src/main.c ****     case 53:
 883:Core/Src/main.c ****       // statements
 884:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 885:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_12;            // default = SF_7
 886:Core/Src/main.c ****       myLoRa.bandWidth             = BW_15_6KHz;       // default = BW_125KHz
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 17


 887:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 888:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 889:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 890:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 891:Core/Src/main.c ****       LoRa_init(&myLoRa);
 892:Core/Src/main.c ****       break;
 893:Core/Src/main.c **** 
 894:Core/Src/main.c ****     case 54:
 895:Core/Src/main.c ****       // statements
 896:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 897:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_12;            // default = SF_7
 898:Core/Src/main.c ****       myLoRa.bandWidth             = BW_20_8KHz;       // default = BW_125KHz
 899:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 900:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 901:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 902:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 903:Core/Src/main.c ****       LoRa_init(&myLoRa);
 904:Core/Src/main.c ****       break;
 905:Core/Src/main.c **** 
 906:Core/Src/main.c ****     case 55:
 907:Core/Src/main.c ****       // statements
 908:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 909:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_12;            // default = SF_7
 910:Core/Src/main.c ****       myLoRa.bandWidth             = BW_31_25KHz;       // default = BW_125KHz
 911:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 912:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 913:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 914:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 915:Core/Src/main.c ****       LoRa_init(&myLoRa);
 916:Core/Src/main.c ****       break;
 917:Core/Src/main.c **** 
 918:Core/Src/main.c ****     case 56:
 919:Core/Src/main.c ****       // statements
 920:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 921:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_12;            // default = SF_7
 922:Core/Src/main.c ****       myLoRa.bandWidth             = BW_41_7KHz;       // default = BW_125KHz
 923:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 924:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 925:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 926:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 927:Core/Src/main.c ****       LoRa_init(&myLoRa);
 928:Core/Src/main.c ****       break;
 929:Core/Src/main.c **** 
 930:Core/Src/main.c ****     case 57:
 931:Core/Src/main.c ****       // statements
 932:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 933:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_12;            // default = SF_7
 934:Core/Src/main.c ****       myLoRa.bandWidth             = BW_62_5KHz;       // default = BW_125KHz
 935:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 936:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 937:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 938:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 939:Core/Src/main.c ****       LoRa_init(&myLoRa);
 940:Core/Src/main.c ****       break;
 941:Core/Src/main.c **** 
 942:Core/Src/main.c ****     case 58:
 943:Core/Src/main.c ****       // statements
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 18


 944:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 945:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_12;            // default = SF_7
 946:Core/Src/main.c ****       myLoRa.bandWidth             = BW_125KHz;       // default = BW_125KHz
 947:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 948:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 949:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 950:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 951:Core/Src/main.c ****       LoRa_init(&myLoRa);
 952:Core/Src/main.c ****       break;
 953:Core/Src/main.c **** 
 954:Core/Src/main.c ****     case 59:
 955:Core/Src/main.c ****       // statements
 956:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 957:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_12;            // default = SF_7
 958:Core/Src/main.c ****       myLoRa.bandWidth             = BW_250KHz;       // default = BW_125KHz
 959:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 960:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 961:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 962:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 963:Core/Src/main.c ****       LoRa_init(&myLoRa);
 964:Core/Src/main.c ****       break;
 965:Core/Src/main.c **** 
 966:Core/Src/main.c ****     case 60:
 967:Core/Src/main.c ****       // statements
 968:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 969:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_12;            // default = SF_7
 970:Core/Src/main.c ****       myLoRa.bandWidth             = BW_500KHz;       // default = BW_125KHz
 971:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 972:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 973:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 974:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 975:Core/Src/main.c ****       LoRa_init(&myLoRa);
 976:Core/Src/main.c ****       break;
 977:Core/Src/main.c **** 
 978:Core/Src/main.c ****     default:
 979:Core/Src/main.c ****       // default statements
 980:Core/Src/main.c **** }
 981:Core/Src/main.c ****       bModeChanged = false;
 982:Core/Src/main.c **** 
 983:Core/Src/main.c ****       // sprintf(transmit_data, "Data Optimization %d\n", myLoRa.lowDataRateOptimization);
 984:Core/Src/main.c ****       // size = strlen(&transmit_data);
 985:Core/Src/main.c **** 	    // HAL_UART_Transmit(&huart2, (uint8_t *)transmit_data, size, 1000);
 986:Core/Src/main.c ****       // memset(transmit_data, '\0', sizeof(transmit_data));
 987:Core/Src/main.c ****     }
 988:Core/Src/main.c **** 
 989:Core/Src/main.c ****     
 990:Core/Src/main.c ****     
 991:Core/Src/main.c ****     
 992:Core/Src/main.c ****     /* USER CODE END WHILE */
 993:Core/Src/main.c **** 
 994:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 995:Core/Src/main.c ****     //HAL_UART_Transmit_IT(&huart2, (uint8_t *)Gpsdata, sizeof(Gpsdata));
 996:Core/Src/main.c ****     //HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13);
 997:Core/Src/main.c ****     HAL_UARTEx_ReceiveToIdle_IT(&huart1,(uint8_t*)gps_raw,512);
 998:Core/Src/main.c **** 
 999:Core/Src/main.c ****   }
1000:Core/Src/main.c ****   /* USER CODE END 3 */
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 19


1001:Core/Src/main.c **** }
1002:Core/Src/main.c **** 
1003:Core/Src/main.c **** /**
1004:Core/Src/main.c ****   * @brief System Clock Configuration
1005:Core/Src/main.c ****   * @retval None
1006:Core/Src/main.c ****   */
1007:Core/Src/main.c **** void SystemClock_Config(void)
1008:Core/Src/main.c **** {
1009:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
1010:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
1011:Core/Src/main.c **** 
1012:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
1013:Core/Src/main.c ****   */
1014:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
1015:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
1016:Core/Src/main.c **** 
1017:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
1018:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
1019:Core/Src/main.c ****   */
1020:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
1021:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
1022:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
1023:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
1024:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
1025:Core/Src/main.c ****   {
1026:Core/Src/main.c ****     Error_Handler();
1027:Core/Src/main.c ****   }
1028:Core/Src/main.c **** 
1029:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
1030:Core/Src/main.c ****   */
1031:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
1032:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
1033:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
1034:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
1035:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
1036:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
1037:Core/Src/main.c **** 
1038:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
1039:Core/Src/main.c ****   {
1040:Core/Src/main.c ****     Error_Handler();
1041:Core/Src/main.c ****   }
1042:Core/Src/main.c **** }
1043:Core/Src/main.c **** 
1044:Core/Src/main.c **** /**
1045:Core/Src/main.c ****   * @brief I2C1 Initialization Function
1046:Core/Src/main.c ****   * @param None
1047:Core/Src/main.c ****   * @retval None
1048:Core/Src/main.c ****   */
1049:Core/Src/main.c **** static void MX_I2C1_Init(void)
1050:Core/Src/main.c **** {
1051:Core/Src/main.c **** 
1052:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 0 */
1053:Core/Src/main.c **** 
1054:Core/Src/main.c ****   /* USER CODE END I2C1_Init 0 */
1055:Core/Src/main.c **** 
1056:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 1 */
1057:Core/Src/main.c **** 
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 20


1058:Core/Src/main.c ****   /* USER CODE END I2C1_Init 1 */
1059:Core/Src/main.c ****   hi2c1.Instance = I2C1;
1060:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
1061:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
1062:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
1063:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
1064:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
1065:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
1066:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
1067:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
1068:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
1069:Core/Src/main.c ****   {
1070:Core/Src/main.c ****     Error_Handler();
1071:Core/Src/main.c ****   }
1072:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 2 */
1073:Core/Src/main.c **** 
1074:Core/Src/main.c ****   /* USER CODE END I2C1_Init 2 */
1075:Core/Src/main.c **** 
1076:Core/Src/main.c **** }
1077:Core/Src/main.c **** 
1078:Core/Src/main.c **** /**
1079:Core/Src/main.c ****   * @brief I2C2 Initialization Function
1080:Core/Src/main.c ****   * @param None
1081:Core/Src/main.c ****   * @retval None
1082:Core/Src/main.c ****   */
1083:Core/Src/main.c **** static void MX_I2C2_Init(void)
1084:Core/Src/main.c **** {
1085:Core/Src/main.c **** 
1086:Core/Src/main.c ****   /* USER CODE BEGIN I2C2_Init 0 */
1087:Core/Src/main.c **** 
1088:Core/Src/main.c ****   /* USER CODE END I2C2_Init 0 */
1089:Core/Src/main.c **** 
1090:Core/Src/main.c ****   /* USER CODE BEGIN I2C2_Init 1 */
1091:Core/Src/main.c **** 
1092:Core/Src/main.c ****   /* USER CODE END I2C2_Init 1 */
1093:Core/Src/main.c ****   hi2c2.Instance = I2C2;
1094:Core/Src/main.c ****   hi2c2.Init.ClockSpeed = 100000;
1095:Core/Src/main.c ****   hi2c2.Init.DutyCycle = I2C_DUTYCYCLE_2;
1096:Core/Src/main.c ****   hi2c2.Init.OwnAddress1 = 0;
1097:Core/Src/main.c ****   hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
1098:Core/Src/main.c ****   hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
1099:Core/Src/main.c ****   hi2c2.Init.OwnAddress2 = 0;
1100:Core/Src/main.c ****   hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
1101:Core/Src/main.c ****   hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
1102:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c2) != HAL_OK)
1103:Core/Src/main.c ****   {
1104:Core/Src/main.c ****     Error_Handler();
1105:Core/Src/main.c ****   }
1106:Core/Src/main.c ****   /* USER CODE BEGIN I2C2_Init 2 */
1107:Core/Src/main.c **** 
1108:Core/Src/main.c ****   /* USER CODE END I2C2_Init 2 */
1109:Core/Src/main.c **** 
1110:Core/Src/main.c **** }
1111:Core/Src/main.c **** 
1112:Core/Src/main.c **** /**
1113:Core/Src/main.c ****   * @brief SPI3 Initialization Function
1114:Core/Src/main.c ****   * @param None
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 21


1115:Core/Src/main.c ****   * @retval None
1116:Core/Src/main.c ****   */
1117:Core/Src/main.c **** static void MX_SPI3_Init(void)
1118:Core/Src/main.c **** {
1119:Core/Src/main.c **** 
1120:Core/Src/main.c ****   /* USER CODE BEGIN SPI3_Init 0 */
1121:Core/Src/main.c **** 
1122:Core/Src/main.c ****   /* USER CODE END SPI3_Init 0 */
1123:Core/Src/main.c **** 
1124:Core/Src/main.c ****   /* USER CODE BEGIN SPI3_Init 1 */
1125:Core/Src/main.c **** 
1126:Core/Src/main.c ****   /* USER CODE END SPI3_Init 1 */
1127:Core/Src/main.c ****   /* SPI3 parameter configuration*/
1128:Core/Src/main.c ****   hspi3.Instance = SPI3;
1129:Core/Src/main.c ****   hspi3.Init.Mode = SPI_MODE_MASTER;
1130:Core/Src/main.c ****   hspi3.Init.Direction = SPI_DIRECTION_2LINES;
1131:Core/Src/main.c ****   hspi3.Init.DataSize = SPI_DATASIZE_8BIT;
1132:Core/Src/main.c ****   hspi3.Init.CLKPolarity = SPI_POLARITY_LOW;
1133:Core/Src/main.c ****   hspi3.Init.CLKPhase = SPI_PHASE_1EDGE;
1134:Core/Src/main.c ****   hspi3.Init.NSS = SPI_NSS_SOFT;
1135:Core/Src/main.c ****   hspi3.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
1136:Core/Src/main.c ****   hspi3.Init.FirstBit = SPI_FIRSTBIT_MSB;
1137:Core/Src/main.c ****   hspi3.Init.TIMode = SPI_TIMODE_DISABLE;
1138:Core/Src/main.c ****   hspi3.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
1139:Core/Src/main.c ****   hspi3.Init.CRCPolynomial = 10;
1140:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi3) != HAL_OK)
1141:Core/Src/main.c ****   {
1142:Core/Src/main.c ****     Error_Handler();
1143:Core/Src/main.c ****   }
1144:Core/Src/main.c ****   /* USER CODE BEGIN SPI3_Init 2 */
1145:Core/Src/main.c **** 
1146:Core/Src/main.c ****   /* USER CODE END SPI3_Init 2 */
1147:Core/Src/main.c **** 
1148:Core/Src/main.c **** }
1149:Core/Src/main.c **** 
1150:Core/Src/main.c **** /**
1151:Core/Src/main.c ****   * @brief TIM3 Initialization Function
1152:Core/Src/main.c ****   * @param None
1153:Core/Src/main.c ****   * @retval None
1154:Core/Src/main.c ****   */
1155:Core/Src/main.c **** static void MX_TIM3_Init(void)
1156:Core/Src/main.c **** {
1157:Core/Src/main.c **** 
1158:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 0 */
1159:Core/Src/main.c **** 
1160:Core/Src/main.c ****   /* USER CODE END TIM3_Init 0 */
1161:Core/Src/main.c **** 
1162:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
1163:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
1164:Core/Src/main.c **** 
1165:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 1 */
1166:Core/Src/main.c **** 
1167:Core/Src/main.c ****   /* USER CODE END TIM3_Init 1 */
1168:Core/Src/main.c ****   htim3.Instance = TIM3;
1169:Core/Src/main.c ****   htim3.Init.Prescaler = 16000-1;
1170:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
1171:Core/Src/main.c ****   htim3.Init.Period = 4000-1;
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 22


1172:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
1173:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
1174:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
1175:Core/Src/main.c ****   {
1176:Core/Src/main.c ****     Error_Handler();
1177:Core/Src/main.c ****   }
1178:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
1179:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
1180:Core/Src/main.c ****   {
1181:Core/Src/main.c ****     Error_Handler();
1182:Core/Src/main.c ****   }
1183:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
1184:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
1185:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
1186:Core/Src/main.c ****   {
1187:Core/Src/main.c ****     Error_Handler();
1188:Core/Src/main.c ****   }
1189:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 2 */
1190:Core/Src/main.c **** 
1191:Core/Src/main.c ****   /* USER CODE END TIM3_Init 2 */
1192:Core/Src/main.c **** 
1193:Core/Src/main.c **** }
1194:Core/Src/main.c **** 
1195:Core/Src/main.c **** /**
1196:Core/Src/main.c ****   * @brief USART1 Initialization Function
1197:Core/Src/main.c ****   * @param None
1198:Core/Src/main.c ****   * @retval None
1199:Core/Src/main.c ****   */
1200:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
1201:Core/Src/main.c **** {
1202:Core/Src/main.c **** 
1203:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
1204:Core/Src/main.c **** 
1205:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
1206:Core/Src/main.c **** 
1207:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
1208:Core/Src/main.c **** 
1209:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
1210:Core/Src/main.c ****   huart1.Instance = USART1;
1211:Core/Src/main.c ****   huart1.Init.BaudRate = 9600;
1212:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
1213:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
1214:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
1215:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
1216:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
1217:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
1218:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
1219:Core/Src/main.c ****   {
1220:Core/Src/main.c ****     Error_Handler();
1221:Core/Src/main.c ****   }
1222:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
1223:Core/Src/main.c **** 
1224:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
1225:Core/Src/main.c **** 
1226:Core/Src/main.c **** }
1227:Core/Src/main.c **** 
1228:Core/Src/main.c **** /**
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 23


1229:Core/Src/main.c ****   * @brief USART2 Initialization Function
1230:Core/Src/main.c ****   * @param None
1231:Core/Src/main.c ****   * @retval None
1232:Core/Src/main.c ****   */
1233:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
1234:Core/Src/main.c **** {
1235:Core/Src/main.c **** 
1236:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
1237:Core/Src/main.c **** 
1238:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
1239:Core/Src/main.c **** 
1240:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
1241:Core/Src/main.c **** 
1242:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
1243:Core/Src/main.c ****   huart2.Instance = USART2;
1244:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
1245:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
1246:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
1247:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
1248:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
1249:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
1250:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
1251:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
1252:Core/Src/main.c ****   {
1253:Core/Src/main.c ****     Error_Handler();
1254:Core/Src/main.c ****   }
1255:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
1256:Core/Src/main.c **** 
1257:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
1258:Core/Src/main.c **** 
1259:Core/Src/main.c **** }
1260:Core/Src/main.c **** 
1261:Core/Src/main.c **** /**
1262:Core/Src/main.c ****   * @brief GPIO Initialization Function
1263:Core/Src/main.c ****   * @param None
1264:Core/Src/main.c ****   * @retval None
1265:Core/Src/main.c ****   */
1266:Core/Src/main.c **** static void MX_GPIO_Init(void)
1267:Core/Src/main.c **** {
  28              		.loc 1 1267 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
  33              		.cfi_def_cfa_offset 28
  34              		.cfi_offset 4, -28
  35              		.cfi_offset 5, -24
  36              		.cfi_offset 6, -20
  37              		.cfi_offset 7, -16
  38              		.cfi_offset 8, -12
  39              		.cfi_offset 9, -8
  40              		.cfi_offset 14, -4
  41 0004 89B0     		sub	sp, sp, #36
  42              		.cfi_def_cfa_offset 64
1268:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  43              		.loc 1 1268 3 view .LVU1
  44              		.loc 1 1268 20 is_stmt 0 view .LVU2
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 24


  45 0006 0024     		movs	r4, #0
  46 0008 0394     		str	r4, [sp, #12]
  47 000a 0494     		str	r4, [sp, #16]
  48 000c 0594     		str	r4, [sp, #20]
  49 000e 0694     		str	r4, [sp, #24]
  50 0010 0794     		str	r4, [sp, #28]
1269:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
1270:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
1271:Core/Src/main.c **** 
1272:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
1273:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  51              		.loc 1 1273 3 is_stmt 1 view .LVU3
  52              	.LBB4:
  53              		.loc 1 1273 3 view .LVU4
  54 0012 0094     		str	r4, [sp]
  55              		.loc 1 1273 3 view .LVU5
  56 0014 414B     		ldr	r3, .L3
  57 0016 1A6B     		ldr	r2, [r3, #48]
  58 0018 42F00402 		orr	r2, r2, #4
  59 001c 1A63     		str	r2, [r3, #48]
  60              		.loc 1 1273 3 view .LVU6
  61 001e 1A6B     		ldr	r2, [r3, #48]
  62 0020 02F00402 		and	r2, r2, #4
  63 0024 0092     		str	r2, [sp]
  64              		.loc 1 1273 3 view .LVU7
  65 0026 009A     		ldr	r2, [sp]
  66              	.LBE4:
  67              		.loc 1 1273 3 view .LVU8
1274:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  68              		.loc 1 1274 3 view .LVU9
  69              	.LBB5:
  70              		.loc 1 1274 3 view .LVU10
  71 0028 0194     		str	r4, [sp, #4]
  72              		.loc 1 1274 3 view .LVU11
  73 002a 1A6B     		ldr	r2, [r3, #48]
  74 002c 42F00102 		orr	r2, r2, #1
  75 0030 1A63     		str	r2, [r3, #48]
  76              		.loc 1 1274 3 view .LVU12
  77 0032 1A6B     		ldr	r2, [r3, #48]
  78 0034 02F00102 		and	r2, r2, #1
  79 0038 0192     		str	r2, [sp, #4]
  80              		.loc 1 1274 3 view .LVU13
  81 003a 019A     		ldr	r2, [sp, #4]
  82              	.LBE5:
  83              		.loc 1 1274 3 view .LVU14
1275:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  84              		.loc 1 1275 3 view .LVU15
  85              	.LBB6:
  86              		.loc 1 1275 3 view .LVU16
  87 003c 0294     		str	r4, [sp, #8]
  88              		.loc 1 1275 3 view .LVU17
  89 003e 1A6B     		ldr	r2, [r3, #48]
  90 0040 42F00202 		orr	r2, r2, #2
  91 0044 1A63     		str	r2, [r3, #48]
  92              		.loc 1 1275 3 view .LVU18
  93 0046 1B6B     		ldr	r3, [r3, #48]
  94 0048 03F00203 		and	r3, r3, #2
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 25


  95 004c 0293     		str	r3, [sp, #8]
  96              		.loc 1 1275 3 view .LVU19
  97 004e 029B     		ldr	r3, [sp, #8]
  98              	.LBE6:
  99              		.loc 1 1275 3 view .LVU20
1276:Core/Src/main.c **** 
1277:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
1278:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
 100              		.loc 1 1278 3 view .LVU21
 101 0050 DFF8D480 		ldr	r8, .L3+12
 102 0054 2246     		mov	r2, r4
 103 0056 4FF40051 		mov	r1, #8192
 104 005a 4046     		mov	r0, r8
 105 005c FFF7FEFF 		bl	HAL_GPIO_WritePin
 106              	.LVL0:
1279:Core/Src/main.c **** 
1280:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
1281:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_4, GPIO_PIN_SET);
 107              		.loc 1 1281 3 view .LVU22
 108 0060 2F4F     		ldr	r7, .L3+4
 109 0062 0122     		movs	r2, #1
 110 0064 1021     		movs	r1, #16
 111 0066 3846     		mov	r0, r7
 112 0068 FFF7FEFF 		bl	HAL_GPIO_WritePin
 113              	.LVL1:
1282:Core/Src/main.c **** 
1283:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
1284:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_8, GPIO_PIN_SET);
 114              		.loc 1 1284 3 view .LVU23
 115 006c 2D4E     		ldr	r6, .L3+8
 116 006e 0122     		movs	r2, #1
 117 0070 4FF48071 		mov	r1, #256
 118 0074 3046     		mov	r0, r6
 119 0076 FFF7FEFF 		bl	HAL_GPIO_WritePin
 120              	.LVL2:
1285:Core/Src/main.c **** 
1286:Core/Src/main.c ****   /*Configure GPIO pin : PC13 */
1287:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_13;
 121              		.loc 1 1287 3 view .LVU24
 122              		.loc 1 1287 23 is_stmt 0 view .LVU25
 123 007a 4FF40059 		mov	r9, #8192
 124 007e CDF80C90 		str	r9, [sp, #12]
1288:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 125              		.loc 1 1288 3 is_stmt 1 view .LVU26
 126              		.loc 1 1288 24 is_stmt 0 view .LVU27
 127 0082 0125     		movs	r5, #1
 128 0084 0495     		str	r5, [sp, #16]
1289:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 129              		.loc 1 1289 3 is_stmt 1 view .LVU28
 130              		.loc 1 1289 24 is_stmt 0 view .LVU29
 131 0086 0594     		str	r4, [sp, #20]
1290:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 132              		.loc 1 1290 3 is_stmt 1 view .LVU30
 133              		.loc 1 1290 25 is_stmt 0 view .LVU31
 134 0088 0694     		str	r4, [sp, #24]
1291:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 135              		.loc 1 1291 3 is_stmt 1 view .LVU32
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 26


 136 008a 03A9     		add	r1, sp, #12
 137 008c 4046     		mov	r0, r8
 138 008e FFF7FEFF 		bl	HAL_GPIO_Init
 139              	.LVL3:
1292:Core/Src/main.c **** 
1293:Core/Src/main.c ****   /*Configure GPIO pin : PA4 */
1294:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_4;
 140              		.loc 1 1294 3 view .LVU33
 141              		.loc 1 1294 23 is_stmt 0 view .LVU34
 142 0092 1023     		movs	r3, #16
 143 0094 0393     		str	r3, [sp, #12]
1295:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 144              		.loc 1 1295 3 is_stmt 1 view .LVU35
 145              		.loc 1 1295 24 is_stmt 0 view .LVU36
 146 0096 0495     		str	r5, [sp, #16]
1296:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 147              		.loc 1 1296 3 is_stmt 1 view .LVU37
 148              		.loc 1 1296 24 is_stmt 0 view .LVU38
 149 0098 0594     		str	r4, [sp, #20]
1297:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 150              		.loc 1 1297 3 is_stmt 1 view .LVU39
 151              		.loc 1 1297 25 is_stmt 0 view .LVU40
 152 009a 0694     		str	r4, [sp, #24]
1298:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 153              		.loc 1 1298 3 is_stmt 1 view .LVU41
 154 009c 03A9     		add	r1, sp, #12
 155 009e 3846     		mov	r0, r7
 156 00a0 FFF7FEFF 		bl	HAL_GPIO_Init
 157              	.LVL4:
1299:Core/Src/main.c **** 
1300:Core/Src/main.c ****   /*Configure GPIO pin : rightButton_Pin */
1301:Core/Src/main.c ****   GPIO_InitStruct.Pin = rightButton_Pin;
 158              		.loc 1 1301 3 view .LVU42
 159              		.loc 1 1301 23 is_stmt 0 view .LVU43
 160 00a4 2023     		movs	r3, #32
 161 00a6 0393     		str	r3, [sp, #12]
1302:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 162              		.loc 1 1302 3 is_stmt 1 view .LVU44
 163              		.loc 1 1302 24 is_stmt 0 view .LVU45
 164 00a8 4FF40418 		mov	r8, #2162688
 165 00ac CDF81080 		str	r8, [sp, #16]
1303:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 166              		.loc 1 1303 3 is_stmt 1 view .LVU46
 167              		.loc 1 1303 24 is_stmt 0 view .LVU47
 168 00b0 0595     		str	r5, [sp, #20]
1304:Core/Src/main.c ****   HAL_GPIO_Init(rightButton_GPIO_Port, &GPIO_InitStruct);
 169              		.loc 1 1304 3 is_stmt 1 view .LVU48
 170 00b2 03A9     		add	r1, sp, #12
 171 00b4 3846     		mov	r0, r7
 172 00b6 FFF7FEFF 		bl	HAL_GPIO_Init
 173              	.LVL5:
1305:Core/Src/main.c **** 
1306:Core/Src/main.c ****   /*Configure GPIO pin : leftButton_Pin */
1307:Core/Src/main.c ****   GPIO_InitStruct.Pin = leftButton_Pin;
 174              		.loc 1 1307 3 view .LVU49
 175              		.loc 1 1307 23 is_stmt 0 view .LVU50
 176 00ba CDF80C90 		str	r9, [sp, #12]
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 27


1308:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 177              		.loc 1 1308 3 is_stmt 1 view .LVU51
 178              		.loc 1 1308 24 is_stmt 0 view .LVU52
 179 00be CDF81080 		str	r8, [sp, #16]
1309:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 180              		.loc 1 1309 3 is_stmt 1 view .LVU53
 181              		.loc 1 1309 24 is_stmt 0 view .LVU54
 182 00c2 0595     		str	r5, [sp, #20]
1310:Core/Src/main.c ****   HAL_GPIO_Init(leftButton_GPIO_Port, &GPIO_InitStruct);
 183              		.loc 1 1310 3 is_stmt 1 view .LVU55
 184 00c4 03A9     		add	r1, sp, #12
 185 00c6 3046     		mov	r0, r6
 186 00c8 FFF7FEFF 		bl	HAL_GPIO_Init
 187              	.LVL6:
1311:Core/Src/main.c **** 
1312:Core/Src/main.c ****   /*Configure GPIO pin : PB8 */
1313:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_8;
 188              		.loc 1 1313 3 view .LVU56
 189              		.loc 1 1313 23 is_stmt 0 view .LVU57
 190 00cc 4FF48073 		mov	r3, #256
 191 00d0 0393     		str	r3, [sp, #12]
1314:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 192              		.loc 1 1314 3 is_stmt 1 view .LVU58
 193              		.loc 1 1314 24 is_stmt 0 view .LVU59
 194 00d2 0495     		str	r5, [sp, #16]
1315:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 195              		.loc 1 1315 3 is_stmt 1 view .LVU60
 196              		.loc 1 1315 24 is_stmt 0 view .LVU61
 197 00d4 0594     		str	r4, [sp, #20]
1316:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 198              		.loc 1 1316 3 is_stmt 1 view .LVU62
 199              		.loc 1 1316 25 is_stmt 0 view .LVU63
 200 00d6 0694     		str	r4, [sp, #24]
1317:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 201              		.loc 1 1317 3 is_stmt 1 view .LVU64
 202 00d8 03A9     		add	r1, sp, #12
 203 00da 3046     		mov	r0, r6
 204 00dc FFF7FEFF 		bl	HAL_GPIO_Init
 205              	.LVL7:
1318:Core/Src/main.c **** 
1319:Core/Src/main.c ****   /*Configure GPIO pin : PB9 */
1320:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_9;
 206              		.loc 1 1320 3 view .LVU65
 207              		.loc 1 1320 23 is_stmt 0 view .LVU66
 208 00e0 4FF40073 		mov	r3, #512
 209 00e4 0393     		str	r3, [sp, #12]
1321:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 210              		.loc 1 1321 3 is_stmt 1 view .LVU67
 211              		.loc 1 1321 24 is_stmt 0 view .LVU68
 212 00e6 4FF48813 		mov	r3, #1114112
 213 00ea 0493     		str	r3, [sp, #16]
1322:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 214              		.loc 1 1322 3 is_stmt 1 view .LVU69
 215              		.loc 1 1322 24 is_stmt 0 view .LVU70
 216 00ec 0594     		str	r4, [sp, #20]
1323:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 217              		.loc 1 1323 3 is_stmt 1 view .LVU71
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 28


 218 00ee 03A9     		add	r1, sp, #12
 219 00f0 3046     		mov	r0, r6
 220 00f2 FFF7FEFF 		bl	HAL_GPIO_Init
 221              	.LVL8:
1324:Core/Src/main.c **** 
1325:Core/Src/main.c ****   /* EXTI interrupt init*/
1326:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI9_5_IRQn, 0, 0);
 222              		.loc 1 1326 3 view .LVU72
 223 00f6 2246     		mov	r2, r4
 224 00f8 2146     		mov	r1, r4
 225 00fa 1720     		movs	r0, #23
 226 00fc FFF7FEFF 		bl	HAL_NVIC_SetPriority
 227              	.LVL9:
1327:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 228              		.loc 1 1327 3 view .LVU73
 229 0100 1720     		movs	r0, #23
 230 0102 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 231              	.LVL10:
1328:Core/Src/main.c **** 
1329:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI15_10_IRQn, 0, 0);
 232              		.loc 1 1329 3 view .LVU74
 233 0106 2246     		mov	r2, r4
 234 0108 2146     		mov	r1, r4
 235 010a 2820     		movs	r0, #40
 236 010c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 237              	.LVL11:
1330:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 238              		.loc 1 1330 3 view .LVU75
 239 0110 2820     		movs	r0, #40
 240 0112 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 241              	.LVL12:
1331:Core/Src/main.c **** 
1332:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
1333:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
1334:Core/Src/main.c **** }
 242              		.loc 1 1334 1 is_stmt 0 view .LVU76
 243 0116 09B0     		add	sp, sp, #36
 244              		.cfi_def_cfa_offset 28
 245              		@ sp needed
 246 0118 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 247              	.L4:
 248              		.align	2
 249              	.L3:
 250 011c 00380240 		.word	1073887232
 251 0120 00000240 		.word	1073872896
 252 0124 00040240 		.word	1073873920
 253 0128 00080240 		.word	1073874944
 254              		.cfi_endproc
 255              	.LFE146:
 257              		.section	.rodata.buildDataPacket.str1.4,"aMS",%progbits,1
 258              		.align	2
 259              	.LC0:
 260 0000 0A00     		.ascii	"\012\000"
 261 0002 0000     		.align	2
 262              	.LC1:
 263 0004 25643A25 		.ascii	"%d:%d:%d|\000"
 263      643A2564 
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 29


 263      7C00
 264 000e 0000     		.align	2
 265              	.LC2:
 266 0010 2825642C 		.ascii	"(%d,%d)|\000"
 266      2564297C 
 266      00
 267 0019 000000   		.align	2
 268              	.LC3:
 269 001c 54656D70 		.ascii	"Temperature/pressure reading failed\012\000"
 269      65726174 
 269      7572652F 
 269      70726573 
 269      73757265 
 270              		.global	__aeabi_f2d
 271              		.global	__aeabi_dsub
 272              		.global	__aeabi_dmul
 273              		.global	__aeabi_d2f
 274 0041 000000   		.align	2
 275              	.LC4:
 276 0044 25737C25 		.ascii	"%s|%s|%s|%s\000"
 276      737C2573 
 276      7C257300 
 277              		.section	.text.buildDataPacket,"ax",%progbits
 278              		.align	1
 279              		.global	buildDataPacket
 280              		.syntax unified
 281              		.thumb
 282              		.thumb_func
 284              	buildDataPacket:
 285              	.LFB147:
1335:Core/Src/main.c **** 
1336:Core/Src/main.c **** /* USER CODE BEGIN 4 */
1337:Core/Src/main.c **** uint16_t buildDataPacket() {
 286              		.loc 1 1337 28 is_stmt 1 view -0
 287              		.cfi_startproc
 288              		@ args = 0, pretend = 0, frame = 72
 289              		@ frame_needed = 0, uses_anonymous_args = 0
 290 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 291              		.cfi_def_cfa_offset 24
 292              		.cfi_offset 4, -24
 293              		.cfi_offset 5, -20
 294              		.cfi_offset 6, -16
 295              		.cfi_offset 7, -12
 296              		.cfi_offset 8, -8
 297              		.cfi_offset 14, -4
 298 0004 94B0     		sub	sp, sp, #80
 299              		.cfi_def_cfa_offset 104
1338:Core/Src/main.c ****   //Set memory of line_out to emtpy
1339:Core/Src/main.c ****   //memset(line_out, '\0', sizeof(line_out));
1340:Core/Src/main.c ****   memset(transmit_data, '\0', sizeof(transmit_data));
 300              		.loc 1 1340 3 view .LVU78
 301 0006 4FF48072 		mov	r2, #256
 302 000a 0021     		movs	r1, #0
 303 000c 6048     		ldr	r0, .L12+16
 304 000e FFF7FEFF 		bl	memset
 305              	.LVL13:
1341:Core/Src/main.c **** 
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 30


1342:Core/Src/main.c ****   //Copy a new line character to line_out
1343:Core/Src/main.c ****   //memcpy(line_out, "\r\n\n", sizeof("\r\n\n"));
1344:Core/Src/main.c ****   //memcpy(transmit_data, "\r\n\n", sizeof("\r\n\n"));
1345:Core/Src/main.c **** 
1346:Core/Src/main.c ****   //Transmit the data over uart2
1347:Core/Src/main.c ****   //HAL_UART_Transmit(&huart2, (uint8_t*)line_out, sizeof(line_out)/sizeof(line_out[0]), 1000);
1348:Core/Src/main.c **** 
1349:Core/Src/main.c **** 
1350:Core/Src/main.c ****   
1351:Core/Src/main.c ****   //Search for the \n character
1352:Core/Src/main.c ****   uint8_t *token = strtok(gps_raw, "\n");
 306              		.loc 1 1352 3 view .LVU79
 307              		.loc 1 1352 20 is_stmt 0 view .LVU80
 308 0012 6049     		ldr	r1, .L12+20
 309 0014 6048     		ldr	r0, .L12+24
 310 0016 FFF7FEFF 		bl	strtok
 311              	.LVL14:
1353:Core/Src/main.c **** 
1354:Core/Src/main.c ****   if (token == NULL) {
 312              		.loc 1 1354 3 is_stmt 1 view .LVU81
 313              		.loc 1 1354 6 is_stmt 0 view .LVU82
 314 001a 0028     		cmp	r0, #0
 315 001c 47D0     		beq	.L9
 316 001e 0146     		mov	r1, r0
 317              	.LBB7:
1355:Core/Src/main.c ****     //break
1356:Core/Src/main.c ****   } else {
1357:Core/Src/main.c ****     //memset(line, '\0', sizeof(line));
1358:Core/Src/main.c ****     strcpy(line, token);
 318              		.loc 1 1358 5 is_stmt 1 view .LVU83
 319 0020 5E4C     		ldr	r4, .L12+28
 320 0022 2046     		mov	r0, r4
 321              	.LVL15:
 322              		.loc 1 1358 5 is_stmt 0 view .LVU84
 323 0024 FFF7FEFF 		bl	strcpy
 324              	.LVL16:
1359:Core/Src/main.c ****     struct minmea_sentence_rmc frame;
 325              		.loc 1 1359 5 is_stmt 1 view .LVU85
1360:Core/Src/main.c ****     if (minmea_parse_rmc(&frame, line)) {
 326              		.loc 1 1360 5 view .LVU86
 327              		.loc 1 1360 9 is_stmt 0 view .LVU87
 328 0028 2146     		mov	r1, r4
 329 002a 02A8     		add	r0, sp, #8
 330 002c FFF7FEFF 		bl	minmea_parse_rmc
 331              	.LVL17:
 332              		.loc 1 1360 8 view .LVU88
 333 0030 0028     		cmp	r0, #0
 334 0032 3CD0     		beq	.L9
1361:Core/Src/main.c ****       //Set gps_raw data register to empty
1362:Core/Src/main.c ****       memset(gps_raw, '\0', sizeof(gps_raw));
 335              		.loc 1 1362 7 is_stmt 1 view .LVU89
 336 0034 4FF40072 		mov	r2, #512
 337 0038 0021     		movs	r1, #0
 338 003a 5748     		ldr	r0, .L12+24
 339 003c FFF7FEFF 		bl	memset
 340              	.LVL18:
1363:Core/Src/main.c ****       //memset(line_out, '\0', sizeof(line_out));
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 31


1364:Core/Src/main.c ****       sprintf(transmit_data + strlen(transmit_data),"%d:%d:%d|",frame.time.hours, frame.time.minute
 341              		.loc 1 1364 7 view .LVU90
 342              		.loc 1 1364 31 is_stmt 0 view .LVU91
 343 0040 534C     		ldr	r4, .L12+16
 344 0042 2046     		mov	r0, r4
 345 0044 FFF7FEFF 		bl	strlen
 346              	.LVL19:
 347              		.loc 1 1364 7 view .LVU92
 348 0048 049B     		ldr	r3, [sp, #16]
 349 004a 0093     		str	r3, [sp]
 350 004c 039B     		ldr	r3, [sp, #12]
 351 004e 029A     		ldr	r2, [sp, #8]
 352 0050 5349     		ldr	r1, .L12+32
 353 0052 2044     		add	r0, r0, r4
 354 0054 FFF7FEFF 		bl	sprintf
 355              	.LVL20:
1365:Core/Src/main.c ****       //HAL_UART_Transmit(&huart2, (uint8_t*)line_out, sizeof(line_out)/sizeof(line_out[0]), 1000);
1366:Core/Src/main.c **** 
1367:Core/Src/main.c ****       //memset(line_out, '\0', sizeof(line_out));
1368:Core/Src/main.c ****       sprintf(transmit_data + strlen(transmit_data), "(%d,%d)|", frame.latitude.value,frame.longitu
 356              		.loc 1 1368 7 is_stmt 1 view .LVU93
 357              		.loc 1 1368 31 is_stmt 0 view .LVU94
 358 0058 2046     		mov	r0, r4
 359 005a FFF7FEFF 		bl	strlen
 360              	.LVL21:
 361              		.loc 1 1368 7 view .LVU95
 362 005e 099B     		ldr	r3, [sp, #36]
 363 0060 079A     		ldr	r2, [sp, #28]
 364 0062 5049     		ldr	r1, .L12+36
 365 0064 2044     		add	r0, r0, r4
 366 0066 FFF7FEFF 		bl	sprintf
 367              	.LVL22:
 368 006a 20E0     		b	.L9
 369              	.L10:
 370              	.LBE7:
1369:Core/Src/main.c ****       //HAL_UART_Transmit(&huart2, (uint8_t*)line_out, sizeof(line_out)/sizeof(line_out[0]), 1000);
1370:Core/Src/main.c ****     }
1371:Core/Src/main.c ****   }
1372:Core/Src/main.c **** 
1373:Core/Src/main.c **** 
1374:Core/Src/main.c **** 
1375:Core/Src/main.c **** 
1376:Core/Src/main.c **** 
1377:Core/Src/main.c **** 
1378:Core/Src/main.c **** 
1379:Core/Src/main.c **** 
1380:Core/Src/main.c ****   	//HAL_Delay(100);
1381:Core/Src/main.c **** 	while (!bmp280_read_float(&bmp280, &temperature, &pressure, &humidity)) {
1382:Core/Src/main.c **** 	  size = sprintf(transmit_data + strlen(transmit_data),"Temperature/pressure reading failed\n");
 371              		.loc 1 1382 4 is_stmt 1 view .LVU96
 372              		.loc 1 1382 35 is_stmt 0 view .LVU97
 373 006c 484C     		ldr	r4, .L12+16
 374 006e 2046     		mov	r0, r4
 375 0070 FFF7FEFF 		bl	strlen
 376              	.LVL23:
 377              		.loc 1 1382 11 view .LVU98
 378 0074 4C4D     		ldr	r5, .L12+40
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 32


 379 0076 04EB000C 		add	ip, r4, r0
 380 007a 05F1200E 		add	lr, r5, #32
 381              	.L8:
 382 007e 2C46     		mov	r4, r5
 383 0080 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 384 0082 CCF80000 		str	r0, [ip]	@ unaligned
 385 0086 CCF80410 		str	r1, [ip, #4]	@ unaligned
 386 008a CCF80820 		str	r2, [ip, #8]	@ unaligned
 387 008e CCF80C30 		str	r3, [ip, #12]	@ unaligned
 388 0092 2546     		mov	r5, r4
 389 0094 0CF1100C 		add	ip, ip, #16
 390 0098 7445     		cmp	r4, lr
 391 009a F0D1     		bne	.L8
 392 009c 2068     		ldr	r0, [r4]
 393 009e CCF80000 		str	r0, [ip]	@ unaligned
 394 00a2 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 395 00a4 8CF80430 		strb	r3, [ip, #4]
 396              		.loc 1 1382 9 view .LVU99
 397 00a8 2422     		movs	r2, #36
 398 00aa 404B     		ldr	r3, .L12+44
 399 00ac 1A60     		str	r2, [r3]
 400              	.L9:
1381:Core/Src/main.c **** 	  size = sprintf(transmit_data + strlen(transmit_data),"Temperature/pressure reading failed\n");
 401              		.loc 1 1381 9 is_stmt 1 view .LVU100
1381:Core/Src/main.c **** 	  size = sprintf(transmit_data + strlen(transmit_data),"Temperature/pressure reading failed\n");
 402              		.loc 1 1381 10 is_stmt 0 view .LVU101
 403 00ae 404B     		ldr	r3, .L12+48
 404 00b0 404A     		ldr	r2, .L12+52
 405 00b2 4149     		ldr	r1, .L12+56
 406 00b4 4148     		ldr	r0, .L12+60
 407 00b6 FFF7FEFF 		bl	bmp280_read_float
 408              	.LVL24:
1381:Core/Src/main.c **** 	  size = sprintf(transmit_data + strlen(transmit_data),"Temperature/pressure reading failed\n");
 409              		.loc 1 1381 9 view .LVU102
 410 00ba 0028     		cmp	r0, #0
 411 00bc D6D0     		beq	.L10
1383:Core/Src/main.c **** 	}
1384:Core/Src/main.c **** 
1385:Core/Src/main.c ****   altitude = 44330*(1-pow((pressure/P_b),(1/5.255)));
 412              		.loc 1 1385 3 is_stmt 1 view .LVU103
 413              		.loc 1 1385 36 is_stmt 0 view .LVU104
 414 00be 3D4C     		ldr	r4, .L12+52
 415 00c0 94ED007A 		vldr.32	s14, [r4]
 416 00c4 3E4B     		ldr	r3, .L12+64
 417 00c6 D3ED007A 		vldr.32	s15, [r3]
 418              		.loc 1 1385 23 view .LVU105
 419 00ca C7EE277A 		vdiv.f32	s15, s14, s15
 420 00ce 17EE900A 		vmov	r0, s15
 421 00d2 FFF7FEFF 		bl	__aeabi_f2d
 422              	.LVL25:
 423 00d6 9FED2A1B 		vldr.64	d1, .L12
 424 00da 41EC100B 		vmov	d0, r0, r1
 425 00de FFF7FEFF 		bl	pow
 426              	.LVL26:
 427 00e2 53EC102B 		vmov	r2, r3, d0
 428              		.loc 1 1385 22 view .LVU106
 429 00e6 0020     		movs	r0, #0
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 33


 430 00e8 3649     		ldr	r1, .L12+68
 431 00ea FFF7FEFF 		bl	__aeabi_dsub
 432              	.LVL27:
 433              		.loc 1 1385 19 view .LVU107
 434 00ee 26A3     		adr	r3, .L12+8
 435 00f0 D3E90023 		ldrd	r2, [r3]
 436 00f4 FFF7FEFF 		bl	__aeabi_dmul
 437              	.LVL28:
 438 00f8 FFF7FEFF 		bl	__aeabi_d2f
 439              	.LVL29:
 440              		.loc 1 1385 12 view .LVU108
 441 00fc 324B     		ldr	r3, .L12+72
 442 00fe 1860     		str	r0, [r3]	@ float
1386:Core/Src/main.c **** 
1387:Core/Src/main.c ****   gcvt(altitude, 6, sAltitude);
 443              		.loc 1 1387 3 is_stmt 1 view .LVU109
 444 0100 DFF8D880 		ldr	r8, .L12+92
 445 0104 FFF7FEFF 		bl	__aeabi_f2d
 446              	.LVL30:
 447 0108 41EC100B 		vmov	d0, r0, r1
 448 010c 4146     		mov	r1, r8
 449 010e 0620     		movs	r0, #6
 450 0110 FFF7FEFF 		bl	gcvt
 451              	.LVL31:
1388:Core/Src/main.c ****   gcvt(pressure, 8, sPressure);
 452              		.loc 1 1388 3 view .LVU110
 453 0114 2D4D     		ldr	r5, .L12+76
 454 0116 2068     		ldr	r0, [r4]	@ float
 455 0118 FFF7FEFF 		bl	__aeabi_f2d
 456              	.LVL32:
 457 011c 41EC100B 		vmov	d0, r0, r1
 458 0120 2946     		mov	r1, r5
 459 0122 0820     		movs	r0, #8
 460 0124 FFF7FEFF 		bl	gcvt
 461              	.LVL33:
1389:Core/Src/main.c ****   gcvt(temperature, 4, sTemperature);
 462              		.loc 1 1389 3 view .LVU111
 463 0128 294E     		ldr	r6, .L12+80
 464 012a 234B     		ldr	r3, .L12+56
 465 012c 1868     		ldr	r0, [r3]	@ float
 466 012e FFF7FEFF 		bl	__aeabi_f2d
 467              	.LVL34:
 468 0132 41EC100B 		vmov	d0, r0, r1
 469 0136 3146     		mov	r1, r6
 470 0138 0420     		movs	r0, #4
 471 013a FFF7FEFF 		bl	gcvt
 472              	.LVL35:
1390:Core/Src/main.c ****   gcvt(humidity, 4, sHumidity);
 473              		.loc 1 1390 3 view .LVU112
 474 013e 254F     		ldr	r7, .L12+84
 475 0140 1B4B     		ldr	r3, .L12+48
 476 0142 1868     		ldr	r0, [r3]	@ float
 477 0144 FFF7FEFF 		bl	__aeabi_f2d
 478              	.LVL36:
 479 0148 41EC100B 		vmov	d0, r0, r1
 480 014c 3946     		mov	r1, r7
 481 014e 0420     		movs	r0, #4
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 34


 482 0150 FFF7FEFF 		bl	gcvt
 483              	.LVL37:
1391:Core/Src/main.c **** 
1392:Core/Src/main.c **** 	sprintf(transmit_data + strlen(transmit_data),"%s|%s|%s|%s",sPressure, sTemperature, sHumidity, sA
 484              		.loc 1 1392 2 view .LVU113
 485              		.loc 1 1392 26 is_stmt 0 view .LVU114
 486 0154 0E4C     		ldr	r4, .L12+16
 487 0156 2046     		mov	r0, r4
 488 0158 FFF7FEFF 		bl	strlen
 489              	.LVL38:
 490              		.loc 1 1392 2 view .LVU115
 491 015c CDF80480 		str	r8, [sp, #4]
 492 0160 0097     		str	r7, [sp]
 493 0162 3346     		mov	r3, r6
 494 0164 2A46     		mov	r2, r5
 495 0166 1C49     		ldr	r1, .L12+88
 496 0168 2044     		add	r0, r0, r4
 497 016a FFF7FEFF 		bl	sprintf
 498              	.LVL39:
1393:Core/Src/main.c ****   return strlen(transmit_data);
 499              		.loc 1 1393 3 is_stmt 1 view .LVU116
 500              		.loc 1 1393 10 is_stmt 0 view .LVU117
 501 016e 2046     		mov	r0, r4
 502 0170 FFF7FEFF 		bl	strlen
 503              	.LVL40:
1394:Core/Src/main.c **** }
 504              		.loc 1 1394 1 view .LVU118
 505 0174 80B2     		uxth	r0, r0
 506 0176 14B0     		add	sp, sp, #80
 507              		.cfi_def_cfa_offset 24
 508              		@ sp needed
 509 0178 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 510              	.L13:
 511 017c AFF30080 		.align	3
 512              	.L12:
 513 0180 6C45D9CC 		.word	-858176148
 514 0184 955BC83F 		.word	1070095253
 515 0188 00000000 		.word	0
 516 018c 40A5E540 		.word	1088791872
 517 0190 00000000 		.word	transmit_data
 518 0194 00000000 		.word	.LC0
 519 0198 00000000 		.word	gps_raw
 520 019c 00000000 		.word	line
 521 01a0 04000000 		.word	.LC1
 522 01a4 10000000 		.word	.LC2
 523 01a8 1C000000 		.word	.LC3
 524 01ac 00000000 		.word	size
 525 01b0 00000000 		.word	humidity
 526 01b4 00000000 		.word	pressure
 527 01b8 00000000 		.word	temperature
 528 01bc 00000000 		.word	bmp280
 529 01c0 00000000 		.word	P_b
 530 01c4 0000F03F 		.word	1072693248
 531 01c8 00000000 		.word	altitude
 532 01cc 00000000 		.word	sPressure
 533 01d0 00000000 		.word	sTemperature
 534 01d4 00000000 		.word	sHumidity
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 35


 535 01d8 44000000 		.word	.LC4
 536 01dc 00000000 		.word	sAltitude
 537              		.cfi_endproc
 538              	.LFE147:
 540              		.section	.rodata.HAL_GPIO_EXTI_Callback.str1.4,"aMS",%progbits,1
 541              		.align	2
 542              	.LC5:
 543 0000 0A4C6566 		.ascii	"\012Left Button Pushed\000"
 543      74204275 
 543      74746F6E 
 543      20507573 
 543      68656400 
 544              		.align	2
 545              	.LC6:
 546 0014 4D6F6465 		.ascii	"Mode:\000"
 546      3A00
 547 001a 0000     		.align	2
 548              	.LC7:
 549 001c 25642020 		.ascii	"%d        \000"
 549      20202020 
 549      202000
 550 0027 00       		.align	2
 551              	.LC8:
 552 0028 0A526967 		.ascii	"\012Right Button Pushed\000"
 552      68742042 
 552      7574746F 
 552      6E205075 
 552      73686564 
 553              		.section	.text.HAL_GPIO_EXTI_Callback,"ax",%progbits
 554              		.align	1
 555              		.global	HAL_GPIO_EXTI_Callback
 556              		.syntax unified
 557              		.thumb
 558              		.thumb_func
 560              	HAL_GPIO_EXTI_Callback:
 561              	.LVL41:
 562              	.LFB148:
1395:Core/Src/main.c **** 
1396:Core/Src/main.c **** 
1397:Core/Src/main.c **** void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
1398:Core/Src/main.c **** {
 563              		.loc 1 1398 1 is_stmt 1 view -0
 564              		.cfi_startproc
 565              		@ args = 0, pretend = 0, frame = 0
 566              		@ frame_needed = 0, uses_anonymous_args = 0
 567              		.loc 1 1398 1 is_stmt 0 view .LVU120
 568 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 569              		.cfi_def_cfa_offset 24
 570              		.cfi_offset 4, -24
 571              		.cfi_offset 5, -20
 572              		.cfi_offset 6, -16
 573              		.cfi_offset 7, -12
 574              		.cfi_offset 8, -8
 575              		.cfi_offset 14, -4
 576 0004 0446     		mov	r4, r0
1399:Core/Src/main.c ****   if(GPIO_Pin == GPIO_PIN_13) // Left button pushed
 577              		.loc 1 1399 3 is_stmt 1 view .LVU121
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 36


 578              		.loc 1 1399 5 is_stmt 0 view .LVU122
 579 0006 B0F5005F 		cmp	r0, #8192
 580 000a 07D0     		beq	.L20
 581              	.LVL42:
 582              	.L15:
1400:Core/Src/main.c ****     {
1401:Core/Src/main.c ****       //get the current time
1402:Core/Src/main.c ****       currentTicks = HAL_GetTick();
1403:Core/Src/main.c ****       if (((currentTicks-preTicks)>200)) {
1404:Core/Src/main.c ****         memset(transmit_data, '\0', sizeof(transmit_data));
1405:Core/Src/main.c ****         sprintf(transmit_data,"%s","\nLeft Button Pushed");
1406:Core/Src/main.c **** 	      HAL_UART_Transmit(&huart2, transmit_data, sizeof(transmit_data)/sizeof(transmit_data[0]),100
1407:Core/Src/main.c ****         memset(transmit_data, '\0', sizeof(transmit_data));
1408:Core/Src/main.c ****         bModeChanged = true;
1409:Core/Src/main.c **** 
1410:Core/Src/main.c ****         if (iMode == 1) {
1411:Core/Src/main.c ****           iMode = 60;
1412:Core/Src/main.c ****           // Set cursors and write the word "mode"
1413:Core/Src/main.c ****           ssd1306_SetCursor(0, 0);
1414:Core/Src/main.c ****           ssd1306_WriteString("Mode:", Font_16x26, White);
1415:Core/Src/main.c **** 
1416:Core/Src/main.c ****           ssd1306_SetCursor(0, 35);
1417:Core/Src/main.c ****           sprintf(sMode, "%d        ", iMode);
1418:Core/Src/main.c ****           ssd1306_WriteString(sMode, Font_16x26, White);
1419:Core/Src/main.c **** 
1420:Core/Src/main.c ****           // Copy all data from local screenbuffer to the screen
1421:Core/Src/main.c ****           ssd1306_UpdateScreen(&hi2c2);
1422:Core/Src/main.c ****         } else {
1423:Core/Src/main.c ****           iMode = iMode - 1;
1424:Core/Src/main.c ****           // Set cursors and write the word "mode"
1425:Core/Src/main.c ****           ssd1306_SetCursor(0, 0);
1426:Core/Src/main.c ****           ssd1306_WriteString("Mode:", Font_16x26, White);
1427:Core/Src/main.c **** 
1428:Core/Src/main.c ****           ssd1306_SetCursor(0, 35);
1429:Core/Src/main.c ****           sprintf(sMode, "%d        ", iMode);
1430:Core/Src/main.c ****           ssd1306_WriteString(sMode, Font_16x26, White);
1431:Core/Src/main.c **** 
1432:Core/Src/main.c ****           // Copy all data from local screenbuffer to the screen
1433:Core/Src/main.c ****           ssd1306_UpdateScreen(&hi2c2);
1434:Core/Src/main.c **** 
1435:Core/Src/main.c ****         }
1436:Core/Src/main.c **** 
1437:Core/Src/main.c **** 
1438:Core/Src/main.c **** 
1439:Core/Src/main.c ****       } else {
1440:Core/Src/main.c ****         //break
1441:Core/Src/main.c ****       }
 583              		.loc 1 1441 7 is_stmt 1 view .LVU123
1442:Core/Src/main.c ****     }
1443:Core/Src/main.c **** 
1444:Core/Src/main.c ****   if(GPIO_Pin == GPIO_PIN_5) // Right button pushed
 584              		.loc 1 1444 3 view .LVU124
 585              		.loc 1 1444 5 is_stmt 0 view .LVU125
 586 000c 202C     		cmp	r4, #32
 587 000e 73D0     		beq	.L21
 588              	.L17:
1445:Core/Src/main.c ****     {
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 37


1446:Core/Src/main.c ****       //get the current time
1447:Core/Src/main.c ****       currentTicks = HAL_GetTick();
1448:Core/Src/main.c ****       if (((currentTicks-preTicks)>200 )) {
1449:Core/Src/main.c ****         memset(transmit_data, '\0', sizeof(transmit_data));
1450:Core/Src/main.c ****         sprintf(transmit_data,"%s","\nRight Button Pushed");
1451:Core/Src/main.c **** 	      HAL_UART_Transmit(&huart2, transmit_data, sizeof(transmit_data)/sizeof(transmit_data[0]),100
1452:Core/Src/main.c ****         memset(transmit_data, '\0', sizeof(transmit_data));
1453:Core/Src/main.c ****         bModeChanged = true;
1454:Core/Src/main.c ****         
1455:Core/Src/main.c ****         if (iMode == 60) {
1456:Core/Src/main.c ****           iMode = 1;
1457:Core/Src/main.c ****           // Set cursors and write the word "mode"
1458:Core/Src/main.c ****           ssd1306_SetCursor(0, 0);
1459:Core/Src/main.c ****           ssd1306_WriteString("Mode:", Font_16x26, White);
1460:Core/Src/main.c **** 
1461:Core/Src/main.c ****           ssd1306_SetCursor(0, 35);
1462:Core/Src/main.c ****           sprintf(sMode, "%d        ", iMode);
1463:Core/Src/main.c ****           ssd1306_WriteString(sMode, Font_16x26, White);
1464:Core/Src/main.c **** 
1465:Core/Src/main.c ****           // Copy all data from local screenbuffer to the screen
1466:Core/Src/main.c ****           ssd1306_UpdateScreen(&hi2c2);
1467:Core/Src/main.c ****         } else {
1468:Core/Src/main.c ****           iMode = iMode + 1;
1469:Core/Src/main.c ****           // Set cursors and write the word "mode"
1470:Core/Src/main.c ****           ssd1306_SetCursor(0, 0);
1471:Core/Src/main.c ****           ssd1306_WriteString("Mode:", Font_16x26, White);
1472:Core/Src/main.c **** 
1473:Core/Src/main.c ****           ssd1306_SetCursor(0, 35);
1474:Core/Src/main.c ****           sprintf(sMode, "%d        ", iMode);
1475:Core/Src/main.c ****           ssd1306_WriteString(sMode, Font_16x26, White);
1476:Core/Src/main.c **** 
1477:Core/Src/main.c ****           // Copy all data from local screenbuffer to the screen
1478:Core/Src/main.c ****           ssd1306_UpdateScreen(&hi2c2);
1479:Core/Src/main.c **** 
1480:Core/Src/main.c ****         }
1481:Core/Src/main.c **** 
1482:Core/Src/main.c **** 
1483:Core/Src/main.c ****       } else {
1484:Core/Src/main.c ****         //break
1485:Core/Src/main.c ****       }
 589              		.loc 1 1485 7 is_stmt 1 view .LVU126
1486:Core/Src/main.c ****     }  
1487:Core/Src/main.c ****   preTicks = currentTicks;
 590              		.loc 1 1487 3 view .LVU127
 591              		.loc 1 1487 12 is_stmt 0 view .LVU128
 592 0010 724B     		ldr	r3, .L24
 593 0012 1A68     		ldr	r2, [r3]
 594 0014 724B     		ldr	r3, .L24+4
 595 0016 1A60     		str	r2, [r3]
1488:Core/Src/main.c **** }
 596              		.loc 1 1488 1 view .LVU129
 597 0018 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 598              	.LVL43:
 599              	.L20:
1402:Core/Src/main.c ****       if (((currentTicks-preTicks)>200)) {
 600              		.loc 1 1402 7 is_stmt 1 view .LVU130
1402:Core/Src/main.c ****       if (((currentTicks-preTicks)>200)) {
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 38


 601              		.loc 1 1402 22 is_stmt 0 view .LVU131
 602 001c FFF7FEFF 		bl	HAL_GetTick
 603              	.LVL44:
1402:Core/Src/main.c ****       if (((currentTicks-preTicks)>200)) {
 604              		.loc 1 1402 20 view .LVU132
 605 0020 6E4B     		ldr	r3, .L24
 606 0022 1860     		str	r0, [r3]
1403:Core/Src/main.c ****         memset(transmit_data, '\0', sizeof(transmit_data));
 607              		.loc 1 1403 7 is_stmt 1 view .LVU133
1403:Core/Src/main.c ****         memset(transmit_data, '\0', sizeof(transmit_data));
 608              		.loc 1 1403 25 is_stmt 0 view .LVU134
 609 0024 6E4B     		ldr	r3, .L24+4
 610 0026 1B68     		ldr	r3, [r3]
 611 0028 C01A     		subs	r0, r0, r3
1403:Core/Src/main.c ****         memset(transmit_data, '\0', sizeof(transmit_data));
 612              		.loc 1 1403 10 view .LVU135
 613 002a C828     		cmp	r0, #200
 614 002c EEDD     		ble	.L15
1404:Core/Src/main.c ****         sprintf(transmit_data,"%s","\nLeft Button Pushed");
 615              		.loc 1 1404 9 is_stmt 1 view .LVU136
 616 002e 6D4F     		ldr	r7, .L24+8
 617 0030 4FF48078 		mov	r8, #256
 618 0034 4246     		mov	r2, r8
 619 0036 0021     		movs	r1, #0
 620 0038 3846     		mov	r0, r7
 621 003a FFF7FEFF 		bl	memset
 622              	.LVL45:
1405:Core/Src/main.c **** 	      HAL_UART_Transmit(&huart2, transmit_data, sizeof(transmit_data)/sizeof(transmit_data[0]),100
 623              		.loc 1 1405 9 view .LVU137
 624 003e 3D46     		mov	r5, r7
 625 0040 694E     		ldr	r6, .L24+12
 626 0042 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 627 0044 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 628 0046 3368     		ldr	r3, [r6]
 629 0048 2B60     		str	r3, [r5]
1406:Core/Src/main.c ****         memset(transmit_data, '\0', sizeof(transmit_data));
 630              		.loc 1 1406 8 view .LVU138
 631 004a 4FF47A73 		mov	r3, #1000
 632 004e 4246     		mov	r2, r8
 633 0050 3946     		mov	r1, r7
 634 0052 6648     		ldr	r0, .L24+16
 635 0054 FFF7FEFF 		bl	HAL_UART_Transmit
 636              	.LVL46:
1407:Core/Src/main.c ****         bModeChanged = true;
 637              		.loc 1 1407 9 view .LVU139
 638 0058 4246     		mov	r2, r8
 639 005a 0021     		movs	r1, #0
 640 005c 3846     		mov	r0, r7
 641 005e FFF7FEFF 		bl	memset
 642              	.LVL47:
1408:Core/Src/main.c **** 
 643              		.loc 1 1408 9 view .LVU140
1408:Core/Src/main.c **** 
 644              		.loc 1 1408 22 is_stmt 0 view .LVU141
 645 0062 634B     		ldr	r3, .L24+20
 646 0064 0122     		movs	r2, #1
 647 0066 1A70     		strb	r2, [r3]
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 39


1410:Core/Src/main.c ****           iMode = 60;
 648              		.loc 1 1410 9 is_stmt 1 view .LVU142
1410:Core/Src/main.c ****           iMode = 60;
 649              		.loc 1 1410 19 is_stmt 0 view .LVU143
 650 0068 624B     		ldr	r3, .L24+24
 651 006a 1B68     		ldr	r3, [r3]
1410:Core/Src/main.c ****           iMode = 60;
 652              		.loc 1 1410 12 view .LVU144
 653 006c 9342     		cmp	r3, r2
 654 006e 21D0     		beq	.L22
1423:Core/Src/main.c ****           // Set cursors and write the word "mode"
 655              		.loc 1 1423 11 is_stmt 1 view .LVU145
1423:Core/Src/main.c ****           // Set cursors and write the word "mode"
 656              		.loc 1 1423 25 is_stmt 0 view .LVU146
 657 0070 013B     		subs	r3, r3, #1
1423:Core/Src/main.c ****           // Set cursors and write the word "mode"
 658              		.loc 1 1423 17 view .LVU147
 659 0072 604F     		ldr	r7, .L24+24
 660 0074 3B60     		str	r3, [r7]
1425:Core/Src/main.c ****           ssd1306_WriteString("Mode:", Font_16x26, White);
 661              		.loc 1 1425 11 is_stmt 1 view .LVU148
 662 0076 0021     		movs	r1, #0
 663 0078 0846     		mov	r0, r1
 664 007a FFF7FEFF 		bl	ssd1306_SetCursor
 665              	.LVL48:
1426:Core/Src/main.c **** 
 666              		.loc 1 1426 11 view .LVU149
 667 007e 5E4D     		ldr	r5, .L24+28
 668 0080 0123     		movs	r3, #1
 669 0082 95E80600 		ldm	r5, {r1, r2}
 670 0086 5D48     		ldr	r0, .L24+32
 671 0088 FFF7FEFF 		bl	ssd1306_WriteString
 672              	.LVL49:
1428:Core/Src/main.c ****           sprintf(sMode, "%d        ", iMode);
 673              		.loc 1 1428 11 view .LVU150
 674 008c 2321     		movs	r1, #35
 675 008e 0020     		movs	r0, #0
 676 0090 FFF7FEFF 		bl	ssd1306_SetCursor
 677              	.LVL50:
1429:Core/Src/main.c ****           ssd1306_WriteString(sMode, Font_16x26, White);
 678              		.loc 1 1429 11 view .LVU151
 679 0094 5A4E     		ldr	r6, .L24+36
 680 0096 3A68     		ldr	r2, [r7]
 681 0098 5A49     		ldr	r1, .L24+40
 682 009a 3046     		mov	r0, r6
 683 009c FFF7FEFF 		bl	sprintf
 684              	.LVL51:
1430:Core/Src/main.c **** 
 685              		.loc 1 1430 11 view .LVU152
 686 00a0 0123     		movs	r3, #1
 687 00a2 95E80600 		ldm	r5, {r1, r2}
 688 00a6 3046     		mov	r0, r6
 689 00a8 FFF7FEFF 		bl	ssd1306_WriteString
 690              	.LVL52:
1433:Core/Src/main.c **** 
 691              		.loc 1 1433 11 view .LVU153
 692 00ac 5648     		ldr	r0, .L24+44
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 40


 693 00ae FFF7FEFF 		bl	ssd1306_UpdateScreen
 694              	.LVL53:
 695 00b2 ABE7     		b	.L15
 696              	.L22:
1411:Core/Src/main.c ****           // Set cursors and write the word "mode"
 697              		.loc 1 1411 11 view .LVU154
1411:Core/Src/main.c ****           // Set cursors and write the word "mode"
 698              		.loc 1 1411 17 is_stmt 0 view .LVU155
 699 00b4 4F4F     		ldr	r7, .L24+24
 700 00b6 3C23     		movs	r3, #60
 701 00b8 3B60     		str	r3, [r7]
1413:Core/Src/main.c ****           ssd1306_WriteString("Mode:", Font_16x26, White);
 702              		.loc 1 1413 11 is_stmt 1 view .LVU156
 703 00ba 0021     		movs	r1, #0
 704 00bc 0846     		mov	r0, r1
 705 00be FFF7FEFF 		bl	ssd1306_SetCursor
 706              	.LVL54:
1414:Core/Src/main.c **** 
 707              		.loc 1 1414 11 view .LVU157
 708 00c2 4D4D     		ldr	r5, .L24+28
 709 00c4 0123     		movs	r3, #1
 710 00c6 95E80600 		ldm	r5, {r1, r2}
 711 00ca 4C48     		ldr	r0, .L24+32
 712 00cc FFF7FEFF 		bl	ssd1306_WriteString
 713              	.LVL55:
1416:Core/Src/main.c ****           sprintf(sMode, "%d        ", iMode);
 714              		.loc 1 1416 11 view .LVU158
 715 00d0 2321     		movs	r1, #35
 716 00d2 0020     		movs	r0, #0
 717 00d4 FFF7FEFF 		bl	ssd1306_SetCursor
 718              	.LVL56:
1417:Core/Src/main.c ****           ssd1306_WriteString(sMode, Font_16x26, White);
 719              		.loc 1 1417 11 view .LVU159
 720 00d8 494E     		ldr	r6, .L24+36
 721 00da 3A68     		ldr	r2, [r7]
 722 00dc 4949     		ldr	r1, .L24+40
 723 00de 3046     		mov	r0, r6
 724 00e0 FFF7FEFF 		bl	sprintf
 725              	.LVL57:
1418:Core/Src/main.c **** 
 726              		.loc 1 1418 11 view .LVU160
 727 00e4 0123     		movs	r3, #1
 728 00e6 95E80600 		ldm	r5, {r1, r2}
 729 00ea 3046     		mov	r0, r6
 730 00ec FFF7FEFF 		bl	ssd1306_WriteString
 731              	.LVL58:
1421:Core/Src/main.c ****         } else {
 732              		.loc 1 1421 11 view .LVU161
 733 00f0 4548     		ldr	r0, .L24+44
 734 00f2 FFF7FEFF 		bl	ssd1306_UpdateScreen
 735              	.LVL59:
 736 00f6 89E7     		b	.L15
 737              	.L21:
1447:Core/Src/main.c ****       if (((currentTicks-preTicks)>200 )) {
 738              		.loc 1 1447 7 view .LVU162
1447:Core/Src/main.c ****       if (((currentTicks-preTicks)>200 )) {
 739              		.loc 1 1447 22 is_stmt 0 view .LVU163
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 41


 740 00f8 FFF7FEFF 		bl	HAL_GetTick
 741              	.LVL60:
1447:Core/Src/main.c ****       if (((currentTicks-preTicks)>200 )) {
 742              		.loc 1 1447 20 view .LVU164
 743 00fc 374B     		ldr	r3, .L24
 744 00fe 1860     		str	r0, [r3]
1448:Core/Src/main.c ****         memset(transmit_data, '\0', sizeof(transmit_data));
 745              		.loc 1 1448 7 is_stmt 1 view .LVU165
1448:Core/Src/main.c ****         memset(transmit_data, '\0', sizeof(transmit_data));
 746              		.loc 1 1448 25 is_stmt 0 view .LVU166
 747 0100 374B     		ldr	r3, .L24+4
 748 0102 1B68     		ldr	r3, [r3]
 749 0104 C01A     		subs	r0, r0, r3
1448:Core/Src/main.c ****         memset(transmit_data, '\0', sizeof(transmit_data));
 750              		.loc 1 1448 10 view .LVU167
 751 0106 C828     		cmp	r0, #200
 752 0108 82DD     		ble	.L17
1449:Core/Src/main.c ****         sprintf(transmit_data,"%s","\nRight Button Pushed");
 753              		.loc 1 1449 9 is_stmt 1 view .LVU168
 754 010a 364E     		ldr	r6, .L24+8
 755 010c 4FF48077 		mov	r7, #256
 756 0110 3A46     		mov	r2, r7
 757 0112 0021     		movs	r1, #0
 758 0114 3046     		mov	r0, r6
 759 0116 FFF7FEFF 		bl	memset
 760              	.LVL61:
1450:Core/Src/main.c **** 	      HAL_UART_Transmit(&huart2, transmit_data, sizeof(transmit_data)/sizeof(transmit_data[0]),100
 761              		.loc 1 1450 9 view .LVU169
 762 011a 3446     		mov	r4, r6
 763 011c 3B4D     		ldr	r5, .L24+48
 764 011e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 765 0120 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 766 0122 95E80300 		ldm	r5, {r0, r1}
 767 0126 44F8040B 		str	r0, [r4], #4
 768 012a 2170     		strb	r1, [r4]
1451:Core/Src/main.c ****         memset(transmit_data, '\0', sizeof(transmit_data));
 769              		.loc 1 1451 8 view .LVU170
 770 012c 4FF47A73 		mov	r3, #1000
 771 0130 3A46     		mov	r2, r7
 772 0132 3146     		mov	r1, r6
 773 0134 2D48     		ldr	r0, .L24+16
 774 0136 FFF7FEFF 		bl	HAL_UART_Transmit
 775              	.LVL62:
1452:Core/Src/main.c ****         bModeChanged = true;
 776              		.loc 1 1452 9 view .LVU171
 777 013a 3A46     		mov	r2, r7
 778 013c 0021     		movs	r1, #0
 779 013e 3046     		mov	r0, r6
 780 0140 FFF7FEFF 		bl	memset
 781              	.LVL63:
1453:Core/Src/main.c ****         
 782              		.loc 1 1453 9 view .LVU172
1453:Core/Src/main.c ****         
 783              		.loc 1 1453 22 is_stmt 0 view .LVU173
 784 0144 2A4B     		ldr	r3, .L24+20
 785 0146 0122     		movs	r2, #1
 786 0148 1A70     		strb	r2, [r3]
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 42


1455:Core/Src/main.c ****           iMode = 1;
 787              		.loc 1 1455 9 is_stmt 1 view .LVU174
1455:Core/Src/main.c ****           iMode = 1;
 788              		.loc 1 1455 19 is_stmt 0 view .LVU175
 789 014a 2A4B     		ldr	r3, .L24+24
 790 014c 1B68     		ldr	r3, [r3]
1455:Core/Src/main.c ****           iMode = 1;
 791              		.loc 1 1455 12 view .LVU176
 792 014e 3C2B     		cmp	r3, #60
 793 0150 21D0     		beq	.L23
1468:Core/Src/main.c ****           // Set cursors and write the word "mode"
 794              		.loc 1 1468 11 is_stmt 1 view .LVU177
1468:Core/Src/main.c ****           // Set cursors and write the word "mode"
 795              		.loc 1 1468 25 is_stmt 0 view .LVU178
 796 0152 0133     		adds	r3, r3, #1
1468:Core/Src/main.c ****           // Set cursors and write the word "mode"
 797              		.loc 1 1468 17 view .LVU179
 798 0154 274E     		ldr	r6, .L24+24
 799 0156 3360     		str	r3, [r6]
1470:Core/Src/main.c ****           ssd1306_WriteString("Mode:", Font_16x26, White);
 800              		.loc 1 1470 11 is_stmt 1 view .LVU180
 801 0158 0021     		movs	r1, #0
 802 015a 0846     		mov	r0, r1
 803 015c FFF7FEFF 		bl	ssd1306_SetCursor
 804              	.LVL64:
1471:Core/Src/main.c **** 
 805              		.loc 1 1471 11 view .LVU181
 806 0160 254C     		ldr	r4, .L24+28
 807 0162 0123     		movs	r3, #1
 808 0164 94E80600 		ldm	r4, {r1, r2}
 809 0168 2448     		ldr	r0, .L24+32
 810 016a FFF7FEFF 		bl	ssd1306_WriteString
 811              	.LVL65:
1473:Core/Src/main.c ****           sprintf(sMode, "%d        ", iMode);
 812              		.loc 1 1473 11 view .LVU182
 813 016e 2321     		movs	r1, #35
 814 0170 0020     		movs	r0, #0
 815 0172 FFF7FEFF 		bl	ssd1306_SetCursor
 816              	.LVL66:
1474:Core/Src/main.c ****           ssd1306_WriteString(sMode, Font_16x26, White);
 817              		.loc 1 1474 11 view .LVU183
 818 0176 224D     		ldr	r5, .L24+36
 819 0178 3268     		ldr	r2, [r6]
 820 017a 2249     		ldr	r1, .L24+40
 821 017c 2846     		mov	r0, r5
 822 017e FFF7FEFF 		bl	sprintf
 823              	.LVL67:
1475:Core/Src/main.c **** 
 824              		.loc 1 1475 11 view .LVU184
 825 0182 0123     		movs	r3, #1
 826 0184 94E80600 		ldm	r4, {r1, r2}
 827 0188 2846     		mov	r0, r5
 828 018a FFF7FEFF 		bl	ssd1306_WriteString
 829              	.LVL68:
1478:Core/Src/main.c **** 
 830              		.loc 1 1478 11 view .LVU185
 831 018e 1E48     		ldr	r0, .L24+44
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 43


 832 0190 FFF7FEFF 		bl	ssd1306_UpdateScreen
 833              	.LVL69:
 834 0194 3CE7     		b	.L17
 835              	.L23:
1456:Core/Src/main.c ****           // Set cursors and write the word "mode"
 836              		.loc 1 1456 11 view .LVU186
1456:Core/Src/main.c ****           // Set cursors and write the word "mode"
 837              		.loc 1 1456 17 is_stmt 0 view .LVU187
 838 0196 174F     		ldr	r7, .L24+24
 839 0198 1546     		mov	r5, r2
 840 019a 3A60     		str	r2, [r7]
1458:Core/Src/main.c ****           ssd1306_WriteString("Mode:", Font_16x26, White);
 841              		.loc 1 1458 11 is_stmt 1 view .LVU188
 842 019c 0021     		movs	r1, #0
 843 019e 0846     		mov	r0, r1
 844 01a0 FFF7FEFF 		bl	ssd1306_SetCursor
 845              	.LVL70:
1459:Core/Src/main.c **** 
 846              		.loc 1 1459 11 view .LVU189
 847 01a4 144C     		ldr	r4, .L24+28
 848 01a6 2B46     		mov	r3, r5
 849 01a8 94E80600 		ldm	r4, {r1, r2}
 850 01ac 1348     		ldr	r0, .L24+32
 851 01ae FFF7FEFF 		bl	ssd1306_WriteString
 852              	.LVL71:
1461:Core/Src/main.c ****           sprintf(sMode, "%d        ", iMode);
 853              		.loc 1 1461 11 view .LVU190
 854 01b2 2321     		movs	r1, #35
 855 01b4 0020     		movs	r0, #0
 856 01b6 FFF7FEFF 		bl	ssd1306_SetCursor
 857              	.LVL72:
1462:Core/Src/main.c ****           ssd1306_WriteString(sMode, Font_16x26, White);
 858              		.loc 1 1462 11 view .LVU191
 859 01ba 114E     		ldr	r6, .L24+36
 860 01bc 3A68     		ldr	r2, [r7]
 861 01be 1149     		ldr	r1, .L24+40
 862 01c0 3046     		mov	r0, r6
 863 01c2 FFF7FEFF 		bl	sprintf
 864              	.LVL73:
1463:Core/Src/main.c **** 
 865              		.loc 1 1463 11 view .LVU192
 866 01c6 2B46     		mov	r3, r5
 867 01c8 94E80600 		ldm	r4, {r1, r2}
 868 01cc 3046     		mov	r0, r6
 869 01ce FFF7FEFF 		bl	ssd1306_WriteString
 870              	.LVL74:
1466:Core/Src/main.c ****         } else {
 871              		.loc 1 1466 11 view .LVU193
 872 01d2 0D48     		ldr	r0, .L24+44
 873 01d4 FFF7FEFF 		bl	ssd1306_UpdateScreen
 874              	.LVL75:
 875 01d8 1AE7     		b	.L17
 876              	.L25:
 877 01da 00BF     		.align	2
 878              	.L24:
 879 01dc 00000000 		.word	currentTicks
 880 01e0 00000000 		.word	preTicks
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 44


 881 01e4 00000000 		.word	transmit_data
 882 01e8 00000000 		.word	.LC5
 883 01ec 00000000 		.word	huart2
 884 01f0 00000000 		.word	bModeChanged
 885 01f4 00000000 		.word	iMode
 886 01f8 00000000 		.word	Font_16x26
 887 01fc 14000000 		.word	.LC6
 888 0200 00000000 		.word	sMode
 889 0204 1C000000 		.word	.LC7
 890 0208 00000000 		.word	hi2c2
 891 020c 28000000 		.word	.LC8
 892              		.cfi_endproc
 893              	.LFE148:
 895              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 896              		.align	1
 897              		.global	HAL_TIM_PeriodElapsedCallback
 898              		.syntax unified
 899              		.thumb
 900              		.thumb_func
 902              	HAL_TIM_PeriodElapsedCallback:
 903              	.LVL76:
 904              	.LFB149:
1489:Core/Src/main.c **** 
1490:Core/Src/main.c **** 
1491:Core/Src/main.c **** // Callback: timer has rolled over
1492:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
1493:Core/Src/main.c **** {
 905              		.loc 1 1493 1 view -0
 906              		.cfi_startproc
 907              		@ args = 0, pretend = 0, frame = 0
 908              		@ frame_needed = 0, uses_anonymous_args = 0
 909              		@ link register save eliminated.
1494:Core/Src/main.c ****   // Check which version of the timer triggered this callback and toggle LED
1495:Core/Src/main.c ****   if (htim == &htim3)
 910              		.loc 1 1495 3 view .LVU195
 911              		.loc 1 1495 6 is_stmt 0 view .LVU196
 912 0000 034B     		ldr	r3, .L29
 913 0002 8342     		cmp	r3, r0
 914 0004 00D0     		beq	.L28
 915              	.L26:
1496:Core/Src/main.c ****   {
1497:Core/Src/main.c ****     beginTransmit = true;
1498:Core/Src/main.c ****   }
1499:Core/Src/main.c **** }
 916              		.loc 1 1499 1 view .LVU197
 917 0006 7047     		bx	lr
 918              	.L28:
1497:Core/Src/main.c ****   }
 919              		.loc 1 1497 5 is_stmt 1 view .LVU198
1497:Core/Src/main.c ****   }
 920              		.loc 1 1497 19 is_stmt 0 view .LVU199
 921 0008 024B     		ldr	r3, .L29+4
 922 000a 0122     		movs	r2, #1
 923 000c 1A70     		strb	r2, [r3]
 924              		.loc 1 1499 1 view .LVU200
 925 000e FAE7     		b	.L26
 926              	.L30:
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 45


 927              		.align	2
 928              	.L29:
 929 0010 00000000 		.word	htim3
 930 0014 00000000 		.word	beginTransmit
 931              		.cfi_endproc
 932              	.LFE149:
 934              		.section	.text.Error_Handler,"ax",%progbits
 935              		.align	1
 936              		.global	Error_Handler
 937              		.syntax unified
 938              		.thumb
 939              		.thumb_func
 941              	Error_Handler:
 942              	.LFB150:
1500:Core/Src/main.c **** 
1501:Core/Src/main.c **** /* USER CODE END 4 */
1502:Core/Src/main.c **** 
1503:Core/Src/main.c **** /**
1504:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
1505:Core/Src/main.c ****   * @retval None
1506:Core/Src/main.c ****   */
1507:Core/Src/main.c **** void Error_Handler(void)
1508:Core/Src/main.c **** {
 943              		.loc 1 1508 1 is_stmt 1 view -0
 944              		.cfi_startproc
 945              		@ Volatile: function does not return.
 946              		@ args = 0, pretend = 0, frame = 0
 947              		@ frame_needed = 0, uses_anonymous_args = 0
 948              		@ link register save eliminated.
1509:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
1510:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
1511:Core/Src/main.c ****   __disable_irq();
 949              		.loc 1 1511 3 view .LVU202
 950              	.LBB8:
 951              	.LBI8:
 952              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 46


  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 47


  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 48


 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 953              		.loc 2 140 27 view .LVU203
 954              	.LBB9:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 955              		.loc 2 142 3 view .LVU204
 956              		.syntax unified
 957              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 958 0000 72B6     		cpsid i
 959              	@ 0 "" 2
 960              		.thumb
 961              		.syntax unified
 962              	.L32:
 963              	.LBE9:
 964              	.LBE8:
1512:Core/Src/main.c ****   while (1)
 965              		.loc 1 1512 3 discriminator 1 view .LVU205
1513:Core/Src/main.c ****   {
1514:Core/Src/main.c ****   }
 966              		.loc 1 1514 3 discriminator 1 view .LVU206
1512:Core/Src/main.c ****   while (1)
 967              		.loc 1 1512 9 discriminator 1 view .LVU207
 968 0002 FEE7     		b	.L32
 969              		.cfi_endproc
 970              	.LFE150:
 972              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 973              		.align	1
 974              		.syntax unified
 975              		.thumb
 976              		.thumb_func
 978              	MX_USART1_UART_Init:
 979              	.LFB144:
1201:Core/Src/main.c **** 
 980              		.loc 1 1201 1 view -0
 981              		.cfi_startproc
 982              		@ args = 0, pretend = 0, frame = 0
 983              		@ frame_needed = 0, uses_anonymous_args = 0
 984 0000 08B5     		push	{r3, lr}
 985              		.cfi_def_cfa_offset 8
 986              		.cfi_offset 3, -8
 987              		.cfi_offset 14, -4
1210:Core/Src/main.c ****   huart1.Init.BaudRate = 9600;
 988              		.loc 1 1210 3 view .LVU209
1210:Core/Src/main.c ****   huart1.Init.BaudRate = 9600;
 989              		.loc 1 1210 19 is_stmt 0 view .LVU210
 990 0002 0A48     		ldr	r0, .L37
 991 0004 0A4B     		ldr	r3, .L37+4
 992 0006 0360     		str	r3, [r0]
1211:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 993              		.loc 1 1211 3 is_stmt 1 view .LVU211
1211:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 994              		.loc 1 1211 24 is_stmt 0 view .LVU212
 995 0008 4FF41653 		mov	r3, #9600
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 49


 996 000c 4360     		str	r3, [r0, #4]
1212:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 997              		.loc 1 1212 3 is_stmt 1 view .LVU213
1212:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 998              		.loc 1 1212 26 is_stmt 0 view .LVU214
 999 000e 0023     		movs	r3, #0
 1000 0010 8360     		str	r3, [r0, #8]
1213:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 1001              		.loc 1 1213 3 is_stmt 1 view .LVU215
1213:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 1002              		.loc 1 1213 24 is_stmt 0 view .LVU216
 1003 0012 C360     		str	r3, [r0, #12]
1214:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 1004              		.loc 1 1214 3 is_stmt 1 view .LVU217
1214:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 1005              		.loc 1 1214 22 is_stmt 0 view .LVU218
 1006 0014 0361     		str	r3, [r0, #16]
1215:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1007              		.loc 1 1215 3 is_stmt 1 view .LVU219
1215:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1008              		.loc 1 1215 20 is_stmt 0 view .LVU220
 1009 0016 0C22     		movs	r2, #12
 1010 0018 4261     		str	r2, [r0, #20]
1216:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 1011              		.loc 1 1216 3 is_stmt 1 view .LVU221
1216:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 1012              		.loc 1 1216 25 is_stmt 0 view .LVU222
 1013 001a 8361     		str	r3, [r0, #24]
1217:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 1014              		.loc 1 1217 3 is_stmt 1 view .LVU223
1217:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 1015              		.loc 1 1217 28 is_stmt 0 view .LVU224
 1016 001c C361     		str	r3, [r0, #28]
1218:Core/Src/main.c ****   {
 1017              		.loc 1 1218 3 is_stmt 1 view .LVU225
1218:Core/Src/main.c ****   {
 1018              		.loc 1 1218 7 is_stmt 0 view .LVU226
 1019 001e FFF7FEFF 		bl	HAL_UART_Init
 1020              	.LVL77:
1218:Core/Src/main.c ****   {
 1021              		.loc 1 1218 6 view .LVU227
 1022 0022 00B9     		cbnz	r0, .L36
1226:Core/Src/main.c **** 
 1023              		.loc 1 1226 1 view .LVU228
 1024 0024 08BD     		pop	{r3, pc}
 1025              	.L36:
1220:Core/Src/main.c ****   }
 1026              		.loc 1 1220 5 is_stmt 1 view .LVU229
 1027 0026 FFF7FEFF 		bl	Error_Handler
 1028              	.LVL78:
 1029              	.L38:
 1030 002a 00BF     		.align	2
 1031              	.L37:
 1032 002c 00000000 		.word	huart1
 1033 0030 00100140 		.word	1073811456
 1034              		.cfi_endproc
 1035              	.LFE144:
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 50


 1037              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 1038              		.align	1
 1039              		.syntax unified
 1040              		.thumb
 1041              		.thumb_func
 1043              	MX_USART2_UART_Init:
 1044              	.LFB145:
1234:Core/Src/main.c **** 
 1045              		.loc 1 1234 1 view -0
 1046              		.cfi_startproc
 1047              		@ args = 0, pretend = 0, frame = 0
 1048              		@ frame_needed = 0, uses_anonymous_args = 0
 1049 0000 08B5     		push	{r3, lr}
 1050              		.cfi_def_cfa_offset 8
 1051              		.cfi_offset 3, -8
 1052              		.cfi_offset 14, -4
1243:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 1053              		.loc 1 1243 3 view .LVU231
1243:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 1054              		.loc 1 1243 19 is_stmt 0 view .LVU232
 1055 0002 0A48     		ldr	r0, .L43
 1056 0004 0A4B     		ldr	r3, .L43+4
 1057 0006 0360     		str	r3, [r0]
1244:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 1058              		.loc 1 1244 3 is_stmt 1 view .LVU233
1244:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 1059              		.loc 1 1244 24 is_stmt 0 view .LVU234
 1060 0008 4FF4E133 		mov	r3, #115200
 1061 000c 4360     		str	r3, [r0, #4]
1245:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 1062              		.loc 1 1245 3 is_stmt 1 view .LVU235
1245:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 1063              		.loc 1 1245 26 is_stmt 0 view .LVU236
 1064 000e 0023     		movs	r3, #0
 1065 0010 8360     		str	r3, [r0, #8]
1246:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 1066              		.loc 1 1246 3 is_stmt 1 view .LVU237
1246:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 1067              		.loc 1 1246 24 is_stmt 0 view .LVU238
 1068 0012 C360     		str	r3, [r0, #12]
1247:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 1069              		.loc 1 1247 3 is_stmt 1 view .LVU239
1247:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 1070              		.loc 1 1247 22 is_stmt 0 view .LVU240
 1071 0014 0361     		str	r3, [r0, #16]
1248:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1072              		.loc 1 1248 3 is_stmt 1 view .LVU241
1248:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1073              		.loc 1 1248 20 is_stmt 0 view .LVU242
 1074 0016 0C22     		movs	r2, #12
 1075 0018 4261     		str	r2, [r0, #20]
1249:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 1076              		.loc 1 1249 3 is_stmt 1 view .LVU243
1249:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 1077              		.loc 1 1249 25 is_stmt 0 view .LVU244
 1078 001a 8361     		str	r3, [r0, #24]
1250:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 51


 1079              		.loc 1 1250 3 is_stmt 1 view .LVU245
1250:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 1080              		.loc 1 1250 28 is_stmt 0 view .LVU246
 1081 001c C361     		str	r3, [r0, #28]
1251:Core/Src/main.c ****   {
 1082              		.loc 1 1251 3 is_stmt 1 view .LVU247
1251:Core/Src/main.c ****   {
 1083              		.loc 1 1251 7 is_stmt 0 view .LVU248
 1084 001e FFF7FEFF 		bl	HAL_UART_Init
 1085              	.LVL79:
1251:Core/Src/main.c ****   {
 1086              		.loc 1 1251 6 view .LVU249
 1087 0022 00B9     		cbnz	r0, .L42
1259:Core/Src/main.c **** 
 1088              		.loc 1 1259 1 view .LVU250
 1089 0024 08BD     		pop	{r3, pc}
 1090              	.L42:
1253:Core/Src/main.c ****   }
 1091              		.loc 1 1253 5 is_stmt 1 view .LVU251
 1092 0026 FFF7FEFF 		bl	Error_Handler
 1093              	.LVL80:
 1094              	.L44:
 1095 002a 00BF     		.align	2
 1096              	.L43:
 1097 002c 00000000 		.word	huart2
 1098 0030 00440040 		.word	1073759232
 1099              		.cfi_endproc
 1100              	.LFE145:
 1102              		.section	.text.MX_I2C1_Init,"ax",%progbits
 1103              		.align	1
 1104              		.syntax unified
 1105              		.thumb
 1106              		.thumb_func
 1108              	MX_I2C1_Init:
 1109              	.LFB140:
1050:Core/Src/main.c **** 
 1110              		.loc 1 1050 1 view -0
 1111              		.cfi_startproc
 1112              		@ args = 0, pretend = 0, frame = 0
 1113              		@ frame_needed = 0, uses_anonymous_args = 0
 1114 0000 08B5     		push	{r3, lr}
 1115              		.cfi_def_cfa_offset 8
 1116              		.cfi_offset 3, -8
 1117              		.cfi_offset 14, -4
1059:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 1118              		.loc 1 1059 3 view .LVU253
1059:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 1119              		.loc 1 1059 18 is_stmt 0 view .LVU254
 1120 0002 0A48     		ldr	r0, .L49
 1121 0004 0A4B     		ldr	r3, .L49+4
 1122 0006 0360     		str	r3, [r0]
1060:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 1123              		.loc 1 1060 3 is_stmt 1 view .LVU255
1060:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 1124              		.loc 1 1060 25 is_stmt 0 view .LVU256
 1125 0008 0A4B     		ldr	r3, .L49+8
 1126 000a 4360     		str	r3, [r0, #4]
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 52


1061:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 1127              		.loc 1 1061 3 is_stmt 1 view .LVU257
1061:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 1128              		.loc 1 1061 24 is_stmt 0 view .LVU258
 1129 000c 0023     		movs	r3, #0
 1130 000e 8360     		str	r3, [r0, #8]
1062:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 1131              		.loc 1 1062 3 is_stmt 1 view .LVU259
1062:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 1132              		.loc 1 1062 26 is_stmt 0 view .LVU260
 1133 0010 C360     		str	r3, [r0, #12]
1063:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 1134              		.loc 1 1063 3 is_stmt 1 view .LVU261
1063:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 1135              		.loc 1 1063 29 is_stmt 0 view .LVU262
 1136 0012 4FF48042 		mov	r2, #16384
 1137 0016 0261     		str	r2, [r0, #16]
1064:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 1138              		.loc 1 1064 3 is_stmt 1 view .LVU263
1064:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 1139              		.loc 1 1064 30 is_stmt 0 view .LVU264
 1140 0018 4361     		str	r3, [r0, #20]
1065:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 1141              		.loc 1 1065 3 is_stmt 1 view .LVU265
1065:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 1142              		.loc 1 1065 26 is_stmt 0 view .LVU266
 1143 001a 8361     		str	r3, [r0, #24]
1066:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 1144              		.loc 1 1066 3 is_stmt 1 view .LVU267
1066:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 1145              		.loc 1 1066 30 is_stmt 0 view .LVU268
 1146 001c C361     		str	r3, [r0, #28]
1067:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 1147              		.loc 1 1067 3 is_stmt 1 view .LVU269
1067:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 1148              		.loc 1 1067 28 is_stmt 0 view .LVU270
 1149 001e 0362     		str	r3, [r0, #32]
1068:Core/Src/main.c ****   {
 1150              		.loc 1 1068 3 is_stmt 1 view .LVU271
1068:Core/Src/main.c ****   {
 1151              		.loc 1 1068 7 is_stmt 0 view .LVU272
 1152 0020 FFF7FEFF 		bl	HAL_I2C_Init
 1153              	.LVL81:
1068:Core/Src/main.c ****   {
 1154              		.loc 1 1068 6 view .LVU273
 1155 0024 00B9     		cbnz	r0, .L48
1076:Core/Src/main.c **** 
 1156              		.loc 1 1076 1 view .LVU274
 1157 0026 08BD     		pop	{r3, pc}
 1158              	.L48:
1070:Core/Src/main.c ****   }
 1159              		.loc 1 1070 5 is_stmt 1 view .LVU275
 1160 0028 FFF7FEFF 		bl	Error_Handler
 1161              	.LVL82:
 1162              	.L50:
 1163              		.align	2
 1164              	.L49:
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 53


 1165 002c 00000000 		.word	hi2c1
 1166 0030 00540040 		.word	1073763328
 1167 0034 A0860100 		.word	100000
 1168              		.cfi_endproc
 1169              	.LFE140:
 1171              		.section	.text.MX_SPI3_Init,"ax",%progbits
 1172              		.align	1
 1173              		.syntax unified
 1174              		.thumb
 1175              		.thumb_func
 1177              	MX_SPI3_Init:
 1178              	.LFB142:
1118:Core/Src/main.c **** 
 1179              		.loc 1 1118 1 view -0
 1180              		.cfi_startproc
 1181              		@ args = 0, pretend = 0, frame = 0
 1182              		@ frame_needed = 0, uses_anonymous_args = 0
 1183 0000 08B5     		push	{r3, lr}
 1184              		.cfi_def_cfa_offset 8
 1185              		.cfi_offset 3, -8
 1186              		.cfi_offset 14, -4
1128:Core/Src/main.c ****   hspi3.Init.Mode = SPI_MODE_MASTER;
 1187              		.loc 1 1128 3 view .LVU277
1128:Core/Src/main.c ****   hspi3.Init.Mode = SPI_MODE_MASTER;
 1188              		.loc 1 1128 18 is_stmt 0 view .LVU278
 1189 0002 0D48     		ldr	r0, .L55
 1190 0004 0D4B     		ldr	r3, .L55+4
 1191 0006 0360     		str	r3, [r0]
1129:Core/Src/main.c ****   hspi3.Init.Direction = SPI_DIRECTION_2LINES;
 1192              		.loc 1 1129 3 is_stmt 1 view .LVU279
1129:Core/Src/main.c ****   hspi3.Init.Direction = SPI_DIRECTION_2LINES;
 1193              		.loc 1 1129 19 is_stmt 0 view .LVU280
 1194 0008 4FF48273 		mov	r3, #260
 1195 000c 4360     		str	r3, [r0, #4]
1130:Core/Src/main.c ****   hspi3.Init.DataSize = SPI_DATASIZE_8BIT;
 1196              		.loc 1 1130 3 is_stmt 1 view .LVU281
1130:Core/Src/main.c ****   hspi3.Init.DataSize = SPI_DATASIZE_8BIT;
 1197              		.loc 1 1130 24 is_stmt 0 view .LVU282
 1198 000e 0023     		movs	r3, #0
 1199 0010 8360     		str	r3, [r0, #8]
1131:Core/Src/main.c ****   hspi3.Init.CLKPolarity = SPI_POLARITY_LOW;
 1200              		.loc 1 1131 3 is_stmt 1 view .LVU283
1131:Core/Src/main.c ****   hspi3.Init.CLKPolarity = SPI_POLARITY_LOW;
 1201              		.loc 1 1131 23 is_stmt 0 view .LVU284
 1202 0012 C360     		str	r3, [r0, #12]
1132:Core/Src/main.c ****   hspi3.Init.CLKPhase = SPI_PHASE_1EDGE;
 1203              		.loc 1 1132 3 is_stmt 1 view .LVU285
1132:Core/Src/main.c ****   hspi3.Init.CLKPhase = SPI_PHASE_1EDGE;
 1204              		.loc 1 1132 26 is_stmt 0 view .LVU286
 1205 0014 0361     		str	r3, [r0, #16]
1133:Core/Src/main.c ****   hspi3.Init.NSS = SPI_NSS_SOFT;
 1206              		.loc 1 1133 3 is_stmt 1 view .LVU287
1133:Core/Src/main.c ****   hspi3.Init.NSS = SPI_NSS_SOFT;
 1207              		.loc 1 1133 23 is_stmt 0 view .LVU288
 1208 0016 4361     		str	r3, [r0, #20]
1134:Core/Src/main.c ****   hspi3.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 1209              		.loc 1 1134 3 is_stmt 1 view .LVU289
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 54


1134:Core/Src/main.c ****   hspi3.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 1210              		.loc 1 1134 18 is_stmt 0 view .LVU290
 1211 0018 4FF40072 		mov	r2, #512
 1212 001c 8261     		str	r2, [r0, #24]
1135:Core/Src/main.c ****   hspi3.Init.FirstBit = SPI_FIRSTBIT_MSB;
 1213              		.loc 1 1135 3 is_stmt 1 view .LVU291
1135:Core/Src/main.c ****   hspi3.Init.FirstBit = SPI_FIRSTBIT_MSB;
 1214              		.loc 1 1135 32 is_stmt 0 view .LVU292
 1215 001e C361     		str	r3, [r0, #28]
1136:Core/Src/main.c ****   hspi3.Init.TIMode = SPI_TIMODE_DISABLE;
 1216              		.loc 1 1136 3 is_stmt 1 view .LVU293
1136:Core/Src/main.c ****   hspi3.Init.TIMode = SPI_TIMODE_DISABLE;
 1217              		.loc 1 1136 23 is_stmt 0 view .LVU294
 1218 0020 0362     		str	r3, [r0, #32]
1137:Core/Src/main.c ****   hspi3.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 1219              		.loc 1 1137 3 is_stmt 1 view .LVU295
1137:Core/Src/main.c ****   hspi3.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 1220              		.loc 1 1137 21 is_stmt 0 view .LVU296
 1221 0022 4362     		str	r3, [r0, #36]
1138:Core/Src/main.c ****   hspi3.Init.CRCPolynomial = 10;
 1222              		.loc 1 1138 3 is_stmt 1 view .LVU297
1138:Core/Src/main.c ****   hspi3.Init.CRCPolynomial = 10;
 1223              		.loc 1 1138 29 is_stmt 0 view .LVU298
 1224 0024 8362     		str	r3, [r0, #40]
1139:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi3) != HAL_OK)
 1225              		.loc 1 1139 3 is_stmt 1 view .LVU299
1139:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi3) != HAL_OK)
 1226              		.loc 1 1139 28 is_stmt 0 view .LVU300
 1227 0026 0A23     		movs	r3, #10
 1228 0028 C362     		str	r3, [r0, #44]
1140:Core/Src/main.c ****   {
 1229              		.loc 1 1140 3 is_stmt 1 view .LVU301
1140:Core/Src/main.c ****   {
 1230              		.loc 1 1140 7 is_stmt 0 view .LVU302
 1231 002a FFF7FEFF 		bl	HAL_SPI_Init
 1232              	.LVL83:
1140:Core/Src/main.c ****   {
 1233              		.loc 1 1140 6 view .LVU303
 1234 002e 00B9     		cbnz	r0, .L54
1148:Core/Src/main.c **** 
 1235              		.loc 1 1148 1 view .LVU304
 1236 0030 08BD     		pop	{r3, pc}
 1237              	.L54:
1142:Core/Src/main.c ****   }
 1238              		.loc 1 1142 5 is_stmt 1 view .LVU305
 1239 0032 FFF7FEFF 		bl	Error_Handler
 1240              	.LVL84:
 1241              	.L56:
 1242 0036 00BF     		.align	2
 1243              	.L55:
 1244 0038 00000000 		.word	hspi3
 1245 003c 003C0040 		.word	1073757184
 1246              		.cfi_endproc
 1247              	.LFE142:
 1249              		.section	.text.MX_I2C2_Init,"ax",%progbits
 1250              		.align	1
 1251              		.syntax unified
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 55


 1252              		.thumb
 1253              		.thumb_func
 1255              	MX_I2C2_Init:
 1256              	.LFB141:
1084:Core/Src/main.c **** 
 1257              		.loc 1 1084 1 view -0
 1258              		.cfi_startproc
 1259              		@ args = 0, pretend = 0, frame = 0
 1260              		@ frame_needed = 0, uses_anonymous_args = 0
 1261 0000 08B5     		push	{r3, lr}
 1262              		.cfi_def_cfa_offset 8
 1263              		.cfi_offset 3, -8
 1264              		.cfi_offset 14, -4
1093:Core/Src/main.c ****   hi2c2.Init.ClockSpeed = 100000;
 1265              		.loc 1 1093 3 view .LVU307
1093:Core/Src/main.c ****   hi2c2.Init.ClockSpeed = 100000;
 1266              		.loc 1 1093 18 is_stmt 0 view .LVU308
 1267 0002 0A48     		ldr	r0, .L61
 1268 0004 0A4B     		ldr	r3, .L61+4
 1269 0006 0360     		str	r3, [r0]
1094:Core/Src/main.c ****   hi2c2.Init.DutyCycle = I2C_DUTYCYCLE_2;
 1270              		.loc 1 1094 3 is_stmt 1 view .LVU309
1094:Core/Src/main.c ****   hi2c2.Init.DutyCycle = I2C_DUTYCYCLE_2;
 1271              		.loc 1 1094 25 is_stmt 0 view .LVU310
 1272 0008 0A4B     		ldr	r3, .L61+8
 1273 000a 4360     		str	r3, [r0, #4]
1095:Core/Src/main.c ****   hi2c2.Init.OwnAddress1 = 0;
 1274              		.loc 1 1095 3 is_stmt 1 view .LVU311
1095:Core/Src/main.c ****   hi2c2.Init.OwnAddress1 = 0;
 1275              		.loc 1 1095 24 is_stmt 0 view .LVU312
 1276 000c 0023     		movs	r3, #0
 1277 000e 8360     		str	r3, [r0, #8]
1096:Core/Src/main.c ****   hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 1278              		.loc 1 1096 3 is_stmt 1 view .LVU313
1096:Core/Src/main.c ****   hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 1279              		.loc 1 1096 26 is_stmt 0 view .LVU314
 1280 0010 C360     		str	r3, [r0, #12]
1097:Core/Src/main.c ****   hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 1281              		.loc 1 1097 3 is_stmt 1 view .LVU315
1097:Core/Src/main.c ****   hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 1282              		.loc 1 1097 29 is_stmt 0 view .LVU316
 1283 0012 4FF48042 		mov	r2, #16384
 1284 0016 0261     		str	r2, [r0, #16]
1098:Core/Src/main.c ****   hi2c2.Init.OwnAddress2 = 0;
 1285              		.loc 1 1098 3 is_stmt 1 view .LVU317
1098:Core/Src/main.c ****   hi2c2.Init.OwnAddress2 = 0;
 1286              		.loc 1 1098 30 is_stmt 0 view .LVU318
 1287 0018 4361     		str	r3, [r0, #20]
1099:Core/Src/main.c ****   hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 1288              		.loc 1 1099 3 is_stmt 1 view .LVU319
1099:Core/Src/main.c ****   hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 1289              		.loc 1 1099 26 is_stmt 0 view .LVU320
 1290 001a 8361     		str	r3, [r0, #24]
1100:Core/Src/main.c ****   hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 1291              		.loc 1 1100 3 is_stmt 1 view .LVU321
1100:Core/Src/main.c ****   hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 1292              		.loc 1 1100 30 is_stmt 0 view .LVU322
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 56


 1293 001c C361     		str	r3, [r0, #28]
1101:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 1294              		.loc 1 1101 3 is_stmt 1 view .LVU323
1101:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 1295              		.loc 1 1101 28 is_stmt 0 view .LVU324
 1296 001e 0362     		str	r3, [r0, #32]
1102:Core/Src/main.c ****   {
 1297              		.loc 1 1102 3 is_stmt 1 view .LVU325
1102:Core/Src/main.c ****   {
 1298              		.loc 1 1102 7 is_stmt 0 view .LVU326
 1299 0020 FFF7FEFF 		bl	HAL_I2C_Init
 1300              	.LVL85:
1102:Core/Src/main.c ****   {
 1301              		.loc 1 1102 6 view .LVU327
 1302 0024 00B9     		cbnz	r0, .L60
1110:Core/Src/main.c **** 
 1303              		.loc 1 1110 1 view .LVU328
 1304 0026 08BD     		pop	{r3, pc}
 1305              	.L60:
1104:Core/Src/main.c ****   }
 1306              		.loc 1 1104 5 is_stmt 1 view .LVU329
 1307 0028 FFF7FEFF 		bl	Error_Handler
 1308              	.LVL86:
 1309              	.L62:
 1310              		.align	2
 1311              	.L61:
 1312 002c 00000000 		.word	hi2c2
 1313 0030 00580040 		.word	1073764352
 1314 0034 A0860100 		.word	100000
 1315              		.cfi_endproc
 1316              	.LFE141:
 1318              		.section	.text.MX_TIM3_Init,"ax",%progbits
 1319              		.align	1
 1320              		.syntax unified
 1321              		.thumb
 1322              		.thumb_func
 1324              	MX_TIM3_Init:
 1325              	.LFB143:
1156:Core/Src/main.c **** 
 1326              		.loc 1 1156 1 view -0
 1327              		.cfi_startproc
 1328              		@ args = 0, pretend = 0, frame = 24
 1329              		@ frame_needed = 0, uses_anonymous_args = 0
 1330 0000 00B5     		push	{lr}
 1331              		.cfi_def_cfa_offset 4
 1332              		.cfi_offset 14, -4
 1333 0002 87B0     		sub	sp, sp, #28
 1334              		.cfi_def_cfa_offset 32
1162:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1335              		.loc 1 1162 3 view .LVU331
1162:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1336              		.loc 1 1162 26 is_stmt 0 view .LVU332
 1337 0004 0023     		movs	r3, #0
 1338 0006 0293     		str	r3, [sp, #8]
 1339 0008 0393     		str	r3, [sp, #12]
 1340 000a 0493     		str	r3, [sp, #16]
 1341 000c 0593     		str	r3, [sp, #20]
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 57


1163:Core/Src/main.c **** 
 1342              		.loc 1 1163 3 is_stmt 1 view .LVU333
1163:Core/Src/main.c **** 
 1343              		.loc 1 1163 27 is_stmt 0 view .LVU334
 1344 000e 0093     		str	r3, [sp]
 1345 0010 0193     		str	r3, [sp, #4]
1168:Core/Src/main.c ****   htim3.Init.Prescaler = 16000-1;
 1346              		.loc 1 1168 3 is_stmt 1 view .LVU335
1168:Core/Src/main.c ****   htim3.Init.Prescaler = 16000-1;
 1347              		.loc 1 1168 18 is_stmt 0 view .LVU336
 1348 0012 1448     		ldr	r0, .L71
 1349 0014 144A     		ldr	r2, .L71+4
 1350 0016 0260     		str	r2, [r0]
1169:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 1351              		.loc 1 1169 3 is_stmt 1 view .LVU337
1169:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 1352              		.loc 1 1169 24 is_stmt 0 view .LVU338
 1353 0018 43F67F62 		movw	r2, #15999
 1354 001c 4260     		str	r2, [r0, #4]
1170:Core/Src/main.c ****   htim3.Init.Period = 4000-1;
 1355              		.loc 1 1170 3 is_stmt 1 view .LVU339
1170:Core/Src/main.c ****   htim3.Init.Period = 4000-1;
 1356              		.loc 1 1170 26 is_stmt 0 view .LVU340
 1357 001e 8360     		str	r3, [r0, #8]
1171:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1358              		.loc 1 1171 3 is_stmt 1 view .LVU341
1171:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1359              		.loc 1 1171 21 is_stmt 0 view .LVU342
 1360 0020 40F69F72 		movw	r2, #3999
 1361 0024 C260     		str	r2, [r0, #12]
1172:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1362              		.loc 1 1172 3 is_stmt 1 view .LVU343
1172:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1363              		.loc 1 1172 28 is_stmt 0 view .LVU344
 1364 0026 0361     		str	r3, [r0, #16]
1173:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 1365              		.loc 1 1173 3 is_stmt 1 view .LVU345
1173:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 1366              		.loc 1 1173 32 is_stmt 0 view .LVU346
 1367 0028 8361     		str	r3, [r0, #24]
1174:Core/Src/main.c ****   {
 1368              		.loc 1 1174 3 is_stmt 1 view .LVU347
1174:Core/Src/main.c ****   {
 1369              		.loc 1 1174 7 is_stmt 0 view .LVU348
 1370 002a FFF7FEFF 		bl	HAL_TIM_Base_Init
 1371              	.LVL87:
1174:Core/Src/main.c ****   {
 1372              		.loc 1 1174 6 view .LVU349
 1373 002e 90B9     		cbnz	r0, .L68
1178:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 1374              		.loc 1 1178 3 is_stmt 1 view .LVU350
1178:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 1375              		.loc 1 1178 34 is_stmt 0 view .LVU351
 1376 0030 4FF48053 		mov	r3, #4096
 1377 0034 0293     		str	r3, [sp, #8]
1179:Core/Src/main.c ****   {
 1378              		.loc 1 1179 3 is_stmt 1 view .LVU352
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 58


1179:Core/Src/main.c ****   {
 1379              		.loc 1 1179 7 is_stmt 0 view .LVU353
 1380 0036 02A9     		add	r1, sp, #8
 1381 0038 0A48     		ldr	r0, .L71
 1382 003a FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 1383              	.LVL88:
1179:Core/Src/main.c ****   {
 1384              		.loc 1 1179 6 view .LVU354
 1385 003e 60B9     		cbnz	r0, .L69
1183:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1386              		.loc 1 1183 3 is_stmt 1 view .LVU355
1183:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1387              		.loc 1 1183 37 is_stmt 0 view .LVU356
 1388 0040 0023     		movs	r3, #0
 1389 0042 0093     		str	r3, [sp]
1184:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 1390              		.loc 1 1184 3 is_stmt 1 view .LVU357
1184:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 1391              		.loc 1 1184 33 is_stmt 0 view .LVU358
 1392 0044 0193     		str	r3, [sp, #4]
1185:Core/Src/main.c ****   {
 1393              		.loc 1 1185 3 is_stmt 1 view .LVU359
1185:Core/Src/main.c ****   {
 1394              		.loc 1 1185 7 is_stmt 0 view .LVU360
 1395 0046 6946     		mov	r1, sp
 1396 0048 0648     		ldr	r0, .L71
 1397 004a FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1398              	.LVL89:
1185:Core/Src/main.c ****   {
 1399              		.loc 1 1185 6 view .LVU361
 1400 004e 30B9     		cbnz	r0, .L70
1193:Core/Src/main.c **** 
 1401              		.loc 1 1193 1 view .LVU362
 1402 0050 07B0     		add	sp, sp, #28
 1403              		.cfi_remember_state
 1404              		.cfi_def_cfa_offset 4
 1405              		@ sp needed
 1406 0052 5DF804FB 		ldr	pc, [sp], #4
 1407              	.L68:
 1408              		.cfi_restore_state
1176:Core/Src/main.c ****   }
 1409              		.loc 1 1176 5 is_stmt 1 view .LVU363
 1410 0056 FFF7FEFF 		bl	Error_Handler
 1411              	.LVL90:
 1412              	.L69:
1181:Core/Src/main.c ****   }
 1413              		.loc 1 1181 5 view .LVU364
 1414 005a FFF7FEFF 		bl	Error_Handler
 1415              	.LVL91:
 1416              	.L70:
1187:Core/Src/main.c ****   }
 1417              		.loc 1 1187 5 view .LVU365
 1418 005e FFF7FEFF 		bl	Error_Handler
 1419              	.LVL92:
 1420              	.L72:
 1421 0062 00BF     		.align	2
 1422              	.L71:
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 59


 1423 0064 00000000 		.word	htim3
 1424 0068 00040040 		.word	1073742848
 1425              		.cfi_endproc
 1426              	.LFE143:
 1428              		.section	.text.SystemClock_Config,"ax",%progbits
 1429              		.align	1
 1430              		.global	SystemClock_Config
 1431              		.syntax unified
 1432              		.thumb
 1433              		.thumb_func
 1435              	SystemClock_Config:
 1436              	.LFB139:
1008:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1437              		.loc 1 1008 1 view -0
 1438              		.cfi_startproc
 1439              		@ args = 0, pretend = 0, frame = 80
 1440              		@ frame_needed = 0, uses_anonymous_args = 0
 1441 0000 00B5     		push	{lr}
 1442              		.cfi_def_cfa_offset 4
 1443              		.cfi_offset 14, -4
 1444 0002 95B0     		sub	sp, sp, #84
 1445              		.cfi_def_cfa_offset 88
1009:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1446              		.loc 1 1009 3 view .LVU367
1009:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1447              		.loc 1 1009 22 is_stmt 0 view .LVU368
 1448 0004 3022     		movs	r2, #48
 1449 0006 0021     		movs	r1, #0
 1450 0008 08A8     		add	r0, sp, #32
 1451 000a FFF7FEFF 		bl	memset
 1452              	.LVL93:
1010:Core/Src/main.c **** 
 1453              		.loc 1 1010 3 is_stmt 1 view .LVU369
1010:Core/Src/main.c **** 
 1454              		.loc 1 1010 22 is_stmt 0 view .LVU370
 1455 000e 0023     		movs	r3, #0
 1456 0010 0393     		str	r3, [sp, #12]
 1457 0012 0493     		str	r3, [sp, #16]
 1458 0014 0593     		str	r3, [sp, #20]
 1459 0016 0693     		str	r3, [sp, #24]
 1460 0018 0793     		str	r3, [sp, #28]
1014:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1461              		.loc 1 1014 3 is_stmt 1 view .LVU371
 1462              	.LBB10:
1014:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1463              		.loc 1 1014 3 view .LVU372
 1464 001a 0193     		str	r3, [sp, #4]
1014:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1465              		.loc 1 1014 3 view .LVU373
 1466 001c 184A     		ldr	r2, .L79
 1467 001e 116C     		ldr	r1, [r2, #64]
 1468 0020 41F08051 		orr	r1, r1, #268435456
 1469 0024 1164     		str	r1, [r2, #64]
1014:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1470              		.loc 1 1014 3 view .LVU374
 1471 0026 126C     		ldr	r2, [r2, #64]
 1472 0028 02F08052 		and	r2, r2, #268435456
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 60


 1473 002c 0192     		str	r2, [sp, #4]
1014:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1474              		.loc 1 1014 3 view .LVU375
 1475 002e 019A     		ldr	r2, [sp, #4]
 1476              	.LBE10:
1014:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1477              		.loc 1 1014 3 view .LVU376
1015:Core/Src/main.c **** 
 1478              		.loc 1 1015 3 view .LVU377
 1479              	.LBB11:
1015:Core/Src/main.c **** 
 1480              		.loc 1 1015 3 view .LVU378
 1481 0030 0293     		str	r3, [sp, #8]
1015:Core/Src/main.c **** 
 1482              		.loc 1 1015 3 view .LVU379
 1483 0032 144A     		ldr	r2, .L79+4
 1484 0034 1168     		ldr	r1, [r2]
 1485 0036 41F44041 		orr	r1, r1, #49152
 1486 003a 1160     		str	r1, [r2]
1015:Core/Src/main.c **** 
 1487              		.loc 1 1015 3 view .LVU380
 1488 003c 1268     		ldr	r2, [r2]
 1489 003e 02F44042 		and	r2, r2, #49152
 1490 0042 0292     		str	r2, [sp, #8]
1015:Core/Src/main.c **** 
 1491              		.loc 1 1015 3 view .LVU381
 1492 0044 029A     		ldr	r2, [sp, #8]
 1493              	.LBE11:
1015:Core/Src/main.c **** 
 1494              		.loc 1 1015 3 view .LVU382
1020:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1495              		.loc 1 1020 3 view .LVU383
1020:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1496              		.loc 1 1020 36 is_stmt 0 view .LVU384
 1497 0046 0222     		movs	r2, #2
 1498 0048 0892     		str	r2, [sp, #32]
1021:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1499              		.loc 1 1021 3 is_stmt 1 view .LVU385
1021:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1500              		.loc 1 1021 30 is_stmt 0 view .LVU386
 1501 004a 0122     		movs	r2, #1
 1502 004c 0B92     		str	r2, [sp, #44]
1022:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 1503              		.loc 1 1022 3 is_stmt 1 view .LVU387
1022:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 1504              		.loc 1 1022 41 is_stmt 0 view .LVU388
 1505 004e 1022     		movs	r2, #16
 1506 0050 0C92     		str	r2, [sp, #48]
1023:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1507              		.loc 1 1023 3 is_stmt 1 view .LVU389
1023:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1508              		.loc 1 1023 34 is_stmt 0 view .LVU390
 1509 0052 0E93     		str	r3, [sp, #56]
1024:Core/Src/main.c ****   {
 1510              		.loc 1 1024 3 is_stmt 1 view .LVU391
1024:Core/Src/main.c ****   {
 1511              		.loc 1 1024 7 is_stmt 0 view .LVU392
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 61


 1512 0054 08A8     		add	r0, sp, #32
 1513 0056 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1514              	.LVL94:
1024:Core/Src/main.c ****   {
 1515              		.loc 1 1024 6 view .LVU393
 1516 005a 68B9     		cbnz	r0, .L77
1031:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1517              		.loc 1 1031 3 is_stmt 1 view .LVU394
1031:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1518              		.loc 1 1031 31 is_stmt 0 view .LVU395
 1519 005c 0F23     		movs	r3, #15
 1520 005e 0393     		str	r3, [sp, #12]
1033:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1521              		.loc 1 1033 3 is_stmt 1 view .LVU396
1033:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1522              		.loc 1 1033 34 is_stmt 0 view .LVU397
 1523 0060 0021     		movs	r1, #0
 1524 0062 0491     		str	r1, [sp, #16]
1034:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1525              		.loc 1 1034 3 is_stmt 1 view .LVU398
1034:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1526              		.loc 1 1034 35 is_stmt 0 view .LVU399
 1527 0064 0591     		str	r1, [sp, #20]
1035:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1528              		.loc 1 1035 3 is_stmt 1 view .LVU400
1035:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1529              		.loc 1 1035 36 is_stmt 0 view .LVU401
 1530 0066 0691     		str	r1, [sp, #24]
1036:Core/Src/main.c **** 
 1531              		.loc 1 1036 3 is_stmt 1 view .LVU402
1036:Core/Src/main.c **** 
 1532              		.loc 1 1036 36 is_stmt 0 view .LVU403
 1533 0068 0791     		str	r1, [sp, #28]
1038:Core/Src/main.c ****   {
 1534              		.loc 1 1038 3 is_stmt 1 view .LVU404
1038:Core/Src/main.c ****   {
 1535              		.loc 1 1038 7 is_stmt 0 view .LVU405
 1536 006a 03A8     		add	r0, sp, #12
 1537 006c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1538              	.LVL95:
1038:Core/Src/main.c ****   {
 1539              		.loc 1 1038 6 view .LVU406
 1540 0070 20B9     		cbnz	r0, .L78
1042:Core/Src/main.c **** 
 1541              		.loc 1 1042 1 view .LVU407
 1542 0072 15B0     		add	sp, sp, #84
 1543              		.cfi_remember_state
 1544              		.cfi_def_cfa_offset 4
 1545              		@ sp needed
 1546 0074 5DF804FB 		ldr	pc, [sp], #4
 1547              	.L77:
 1548              		.cfi_restore_state
1026:Core/Src/main.c ****   }
 1549              		.loc 1 1026 5 is_stmt 1 view .LVU408
 1550 0078 FFF7FEFF 		bl	Error_Handler
 1551              	.LVL96:
 1552              	.L78:
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 62


1040:Core/Src/main.c ****   }
 1553              		.loc 1 1040 5 view .LVU409
 1554 007c FFF7FEFF 		bl	Error_Handler
 1555              	.LVL97:
 1556              	.L80:
 1557              		.align	2
 1558              	.L79:
 1559 0080 00380240 		.word	1073887232
 1560 0084 00700040 		.word	1073770496
 1561              		.cfi_endproc
 1562              	.LFE139:
 1564              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 1565              		.align	2
 1566              	.LC9:
 1567 0000 424D4532 		.ascii	"BME280\000"
 1567      383000
 1568 0007 00       		.align	2
 1569              	.LC10:
 1570 0008 424D5032 		.ascii	"BMP280\000"
 1570      383000
 1571 000f 00       		.align	2
 1572              	.LC11:
 1573 0010 424D5032 		.ascii	"BMP280 initialization failed\012\000"
 1573      38302069 
 1573      6E697469 
 1573      616C697A 
 1573      6174696F 
 1574 002e 0000     		.align	2
 1575              	.LC12:
 1576 0030 0A424D50 		.ascii	"\012BMP280: found %s\012\000"
 1576      3238303A 
 1576      20666F75 
 1576      6E642025 
 1576      730A00
 1577 0043 00       		.align	2
 1578              	.LC13:
 1579 0044 4C6F5261 		.ascii	"LoRa is running... :) \012\015\000"
 1579      20697320 
 1579      72756E6E 
 1579      696E672E 
 1579      2E2E203A 
 1580 005d 000000   		.align	2
 1581              	.LC14:
 1582 0060 0A0D204C 		.ascii	"\012\015 LoRa failed :( \012\015 Error code: %d \012"
 1582      6F526120 
 1582      6661696C 
 1582      6564203A 
 1582      28200A0D 
 1583 0085 0D00     		.ascii	"\015\000"
 1584 0087 00       		.align	2
 1585              	.LC15:
 1586 0088 256400   		.ascii	"%d\000"
 1587              		.section	.text.main,"ax",%progbits
 1588              		.align	1
 1589              		.global	main
 1590              		.syntax unified
 1591              		.thumb
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 63


 1592              		.thumb_func
 1594              	main:
 1595              	.LFB138:
 133:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 1596              		.loc 1 133 1 view -0
 1597              		.cfi_startproc
 1598              		@ args = 0, pretend = 0, frame = 176
 1599              		@ frame_needed = 0, uses_anonymous_args = 0
 1600 0000 70B5     		push	{r4, r5, r6, lr}
 1601              		.cfi_def_cfa_offset 16
 1602              		.cfi_offset 4, -16
 1603              		.cfi_offset 5, -12
 1604              		.cfi_offset 6, -8
 1605              		.cfi_offset 14, -4
 1606 0002 AEB0     		sub	sp, sp, #184
 1607              		.cfi_def_cfa_offset 200
 141:Core/Src/main.c **** 
 1608              		.loc 1 141 3 view .LVU411
 1609 0004 FFF7FEFF 		bl	HAL_Init
 1610              	.LVL98:
 148:Core/Src/main.c **** 
 1611              		.loc 1 148 3 view .LVU412
 1612 0008 FFF7FEFF 		bl	SystemClock_Config
 1613              	.LVL99:
 155:Core/Src/main.c ****   MX_USART1_UART_Init();
 1614              		.loc 1 155 3 view .LVU413
 1615 000c FFF7FEFF 		bl	MX_GPIO_Init
 1616              	.LVL100:
 156:Core/Src/main.c ****   MX_USART2_UART_Init();
 1617              		.loc 1 156 3 view .LVU414
 1618 0010 FFF7FEFF 		bl	MX_USART1_UART_Init
 1619              	.LVL101:
 157:Core/Src/main.c ****   MX_I2C1_Init();
 1620              		.loc 1 157 3 view .LVU415
 1621 0014 FFF7FEFF 		bl	MX_USART2_UART_Init
 1622              	.LVL102:
 158:Core/Src/main.c ****   MX_SPI3_Init();
 1623              		.loc 1 158 3 view .LVU416
 1624 0018 FFF7FEFF 		bl	MX_I2C1_Init
 1625              	.LVL103:
 159:Core/Src/main.c ****   MX_I2C2_Init();
 1626              		.loc 1 159 3 view .LVU417
 1627 001c FFF7FEFF 		bl	MX_SPI3_Init
 1628              	.LVL104:
 160:Core/Src/main.c ****   MX_TIM3_Init();
 1629              		.loc 1 160 3 view .LVU418
 1630 0020 FFF7FEFF 		bl	MX_I2C2_Init
 1631              	.LVL105:
 161:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1632              		.loc 1 161 3 view .LVU419
 1633 0024 FFF7FEFF 		bl	MX_TIM3_Init
 1634              	.LVL106:
 165:Core/Src/main.c **** 
 1635              		.loc 1 165 3 view .LVU420
 1636 0028 7B48     		ldr	r0, .L158
 1637 002a FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1638              	.LVL107:
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 64


 167:Core/Src/main.c **** 	bmp280.addr = 0x77;
 1639              		.loc 1 167 3 view .LVU421
 1640 002e 7B4C     		ldr	r4, .L158+4
 1641 0030 2046     		mov	r0, r4
 1642 0032 FFF7FEFF 		bl	bmp280_init_default_params
 1643              	.LVL108:
 168:Core/Src/main.c **** 	bmp280.i2c = &hi2c1;
 1644              		.loc 1 168 2 view .LVU422
 168:Core/Src/main.c **** 	bmp280.i2c = &hi2c1;
 1645              		.loc 1 168 14 is_stmt 0 view .LVU423
 1646 0036 7723     		movs	r3, #119
 1647 0038 24F8083C 		strh	r3, [r4, #-8]	@ movhi
 169:Core/Src/main.c **** 
 1648              		.loc 1 169 2 is_stmt 1 view .LVU424
 169:Core/Src/main.c **** 
 1649              		.loc 1 169 13 is_stmt 0 view .LVU425
 1650 003c 784B     		ldr	r3, .L158+8
 1651 003e 44F8043C 		str	r3, [r4, #-4]
 171:Core/Src/main.c **** 		size = sprintf((char *)Data, "BMP280 initialization failed\n");
 1652              		.loc 1 171 2 is_stmt 1 view .LVU426
 171:Core/Src/main.c **** 		size = sprintf((char *)Data, "BMP280 initialization failed\n");
 1653              		.loc 1 171 8 is_stmt 0 view .LVU427
 1654 0042 15E0     		b	.L82
 1655              	.L83:
 172:Core/Src/main.c **** 		HAL_UART_Transmit(&huart2, Data, size, 1000);
 1656              		.loc 1 172 3 is_stmt 1 view .LVU428
 172:Core/Src/main.c **** 		HAL_UART_Transmit(&huart2, Data, size, 1000);
 1657              		.loc 1 172 10 is_stmt 0 view .LVU429
 1658 0044 774E     		ldr	r6, .L158+12
 1659 0046 3446     		mov	r4, r6
 1660 0048 774D     		ldr	r5, .L158+16
 1661 004a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1662 004c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1663 004e 95E80F00 		ldm	r5, {r0, r1, r2, r3}
 1664 0052 07C4     		stmia	r4!, {r0, r1, r2}
 1665 0054 2380     		strh	r3, [r4]	@ movhi
 1666 0056 1D22     		movs	r2, #29
 172:Core/Src/main.c **** 		HAL_UART_Transmit(&huart2, Data, size, 1000);
 1667              		.loc 1 172 8 view .LVU430
 1668 0058 744B     		ldr	r3, .L158+20
 1669 005a 1A60     		str	r2, [r3]
 173:Core/Src/main.c **** 		HAL_Delay(2000);
 1670              		.loc 1 173 3 is_stmt 1 view .LVU431
 1671 005c 4FF47A73 		mov	r3, #1000
 1672 0060 3146     		mov	r1, r6
 1673 0062 7348     		ldr	r0, .L158+24
 1674 0064 FFF7FEFF 		bl	HAL_UART_Transmit
 1675              	.LVL109:
 174:Core/Src/main.c **** 	}
 1676              		.loc 1 174 3 view .LVU432
 1677 0068 4FF4FA60 		mov	r0, #2000
 1678 006c FFF7FEFF 		bl	HAL_Delay
 1679              	.LVL110:
 1680              	.L82:
 171:Core/Src/main.c **** 		size = sprintf((char *)Data, "BMP280 initialization failed\n");
 1681              		.loc 1 171 9 view .LVU433
 171:Core/Src/main.c **** 		size = sprintf((char *)Data, "BMP280 initialization failed\n");
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 65


 1682              		.loc 1 171 10 is_stmt 0 view .LVU434
 1683 0070 6A49     		ldr	r1, .L158+4
 1684 0072 A1F12C00 		sub	r0, r1, #44
 1685 0076 FFF7FEFF 		bl	bmp280_init
 1686              	.LVL111:
 171:Core/Src/main.c **** 		size = sprintf((char *)Data, "BMP280 initialization failed\n");
 1687              		.loc 1 171 9 view .LVU435
 1688 007a 0028     		cmp	r0, #0
 1689 007c E2D0     		beq	.L83
 176:Core/Src/main.c **** 	size = sprintf((char *)Data, "\nBMP280: found %s\n", bme280p ? "BME280" : "BMP280");
 1690              		.loc 1 176 2 is_stmt 1 view .LVU436
 176:Core/Src/main.c **** 	size = sprintf((char *)Data, "\nBMP280: found %s\n", bme280p ? "BME280" : "BMP280");
 1691              		.loc 1 176 23 is_stmt 0 view .LVU437
 1692 007e 6D4B     		ldr	r3, .L158+28
 1693 0080 93F83230 		ldrb	r3, [r3, #50]	@ zero_extendqisi2
 1694              	.LVL112:
 177:Core/Src/main.c **** 	HAL_UART_Transmit(&huart2, Data, size, 1000);
 1695              		.loc 1 177 2 is_stmt 1 view .LVU438
 177:Core/Src/main.c **** 	HAL_UART_Transmit(&huart2, Data, size, 1000);
 1696              		.loc 1 177 9 is_stmt 0 view .LVU439
 1697 0084 602B     		cmp	r3, #96
 1698 0086 00F08A80 		beq	.L155
 1699 008a 6B4A     		ldr	r2, .L158+32
 1700              	.L84:
 177:Core/Src/main.c **** 	HAL_UART_Transmit(&huart2, Data, size, 1000);
 1701              		.loc 1 177 9 discriminator 4 view .LVU440
 1702 008c 654C     		ldr	r4, .L158+12
 1703 008e 6B49     		ldr	r1, .L158+36
 1704 0090 2046     		mov	r0, r4
 1705 0092 FFF7FEFF 		bl	sprintf
 1706              	.LVL113:
 177:Core/Src/main.c **** 	HAL_UART_Transmit(&huart2, Data, size, 1000);
 1707              		.loc 1 177 9 discriminator 4 view .LVU441
 1708 0096 1622     		movs	r2, #22
 177:Core/Src/main.c **** 	HAL_UART_Transmit(&huart2, Data, size, 1000);
 1709              		.loc 1 177 7 discriminator 4 view .LVU442
 1710 0098 644B     		ldr	r3, .L158+20
 1711 009a 1A60     		str	r2, [r3]
 178:Core/Src/main.c **** 
 1712              		.loc 1 178 2 is_stmt 1 discriminator 4 view .LVU443
 1713 009c 4FF47A73 		mov	r3, #1000
 1714 00a0 2146     		mov	r1, r4
 1715 00a2 6348     		ldr	r0, .L158+24
 1716 00a4 FFF7FEFF 		bl	HAL_UART_Transmit
 1717              	.LVL114:
 180:Core/Src/main.c ****   myLoRa.CS_port         = GPIOA;
 1718              		.loc 1 180 3 discriminator 4 view .LVU444
 180:Core/Src/main.c ****   myLoRa.CS_port         = GPIOA;
 1719              		.loc 1 180 12 is_stmt 0 discriminator 4 view .LVU445
 1720 00a8 654D     		ldr	r5, .L158+40
 1721 00aa 02A8     		add	r0, sp, #8
 1722 00ac FFF7FEFF 		bl	newLoRa
 1723              	.LVL115:
 1724 00b0 2E46     		mov	r6, r5
 1725 00b2 02AC     		add	r4, sp, #8
 1726 00b4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1727 00b6 0FC6     		stmia	r6!, {r0, r1, r2, r3}
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 66


 1728 00b8 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1729 00ba 0FC6     		stmia	r6!, {r0, r1, r2, r3}
 1730 00bc 94E80F00 		ldm	r4, {r0, r1, r2, r3}
 1731 00c0 86E80F00 		stm	r6, {r0, r1, r2, r3}
 181:Core/Src/main.c ****   myLoRa.CS_pin          = GPIO_PIN_4;
 1732              		.loc 1 181 3 is_stmt 1 discriminator 4 view .LVU446
 181:Core/Src/main.c ****   myLoRa.CS_pin          = GPIO_PIN_4;
 1733              		.loc 1 181 26 is_stmt 0 discriminator 4 view .LVU447
 1734 00c4 5F4B     		ldr	r3, .L158+44
 1735 00c6 2B60     		str	r3, [r5]
 182:Core/Src/main.c ****   myLoRa.reset_port      = GPIOB;
 1736              		.loc 1 182 3 is_stmt 1 discriminator 4 view .LVU448
 182:Core/Src/main.c ****   myLoRa.reset_port      = GPIOB;
 1737              		.loc 1 182 26 is_stmt 0 discriminator 4 view .LVU449
 1738 00c8 1023     		movs	r3, #16
 1739 00ca AB80     		strh	r3, [r5, #4]	@ movhi
 183:Core/Src/main.c ****   myLoRa.reset_pin       = GPIO_PIN_8;
 1740              		.loc 1 183 3 is_stmt 1 discriminator 4 view .LVU450
 183:Core/Src/main.c ****   myLoRa.reset_pin       = GPIO_PIN_8;
 1741              		.loc 1 183 26 is_stmt 0 discriminator 4 view .LVU451
 1742 00cc 5E4B     		ldr	r3, .L158+48
 1743 00ce AB60     		str	r3, [r5, #8]
 184:Core/Src/main.c ****   myLoRa.DIO0_port       = GPIOB;
 1744              		.loc 1 184 3 is_stmt 1 discriminator 4 view .LVU452
 184:Core/Src/main.c ****   myLoRa.DIO0_port       = GPIOB;
 1745              		.loc 1 184 26 is_stmt 0 discriminator 4 view .LVU453
 1746 00d0 4FF48072 		mov	r2, #256
 1747 00d4 AA81     		strh	r2, [r5, #12]	@ movhi
 185:Core/Src/main.c ****   myLoRa.DIO0_pin        = GPIO_PIN_9;
 1748              		.loc 1 185 3 is_stmt 1 discriminator 4 view .LVU454
 185:Core/Src/main.c ****   myLoRa.DIO0_pin        = GPIO_PIN_9;
 1749              		.loc 1 185 26 is_stmt 0 discriminator 4 view .LVU455
 1750 00d6 2B61     		str	r3, [r5, #16]
 186:Core/Src/main.c ****   myLoRa.hSPIx           = &hspi3;
 1751              		.loc 1 186 3 is_stmt 1 discriminator 4 view .LVU456
 186:Core/Src/main.c ****   myLoRa.hSPIx           = &hspi3;
 1752              		.loc 1 186 26 is_stmt 0 discriminator 4 view .LVU457
 1753 00d8 4FF40073 		mov	r3, #512
 1754 00dc AB82     		strh	r3, [r5, #20]	@ movhi
 187:Core/Src/main.c ****   
 1755              		.loc 1 187 3 is_stmt 1 discriminator 4 view .LVU458
 187:Core/Src/main.c ****   
 1756              		.loc 1 187 26 is_stmt 0 discriminator 4 view .LVU459
 1757 00de 5B4B     		ldr	r3, .L158+52
 1758 00e0 AB61     		str	r3, [r5, #24]
 190:Core/Src/main.c ****   myLoRa.spreadingFactor        = SF_7;            // default = SF_7
 1759              		.loc 1 190 3 is_stmt 1 discriminator 4 view .LVU460
 190:Core/Src/main.c ****   myLoRa.spreadingFactor        = SF_7;            // default = SF_7
 1760              		.loc 1 190 32 is_stmt 0 discriminator 4 view .LVU461
 1761 00e2 40F2B113 		movw	r3, #433
 1762 00e6 2B62     		str	r3, [r5, #32]
 191:Core/Src/main.c ****   myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 1763              		.loc 1 191 3 is_stmt 1 discriminator 4 view .LVU462
 191:Core/Src/main.c ****   myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 1764              		.loc 1 191 33 is_stmt 0 discriminator 4 view .LVU463
 1765 00e8 0723     		movs	r3, #7
 1766 00ea 85F82430 		strb	r3, [r5, #36]
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 67


 192:Core/Src/main.c ****   myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 1767              		.loc 1 192 3 is_stmt 1 discriminator 4 view .LVU464
 192:Core/Src/main.c ****   myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 1768              		.loc 1 192 32 is_stmt 0 discriminator 4 view .LVU465
 1769 00ee 0026     		movs	r6, #0
 1770 00f0 85F82560 		strb	r6, [r5, #37]
 193:Core/Src/main.c ****   myLoRa.power                 = POWER_20db;      // default = 20db
 1771              		.loc 1 193 3 is_stmt 1 discriminator 4 view .LVU466
 193:Core/Src/main.c ****   myLoRa.power                 = POWER_20db;      // default = 20db
 1772              		.loc 1 193 32 is_stmt 0 discriminator 4 view .LVU467
 1773 00f4 0123     		movs	r3, #1
 1774 00f6 85F82630 		strb	r3, [r5, #38]
 194:Core/Src/main.c ****   myLoRa.overCurrentProtection = 100;             // default = 100 mA
 1775              		.loc 1 194 3 is_stmt 1 discriminator 4 view .LVU468
 194:Core/Src/main.c ****   myLoRa.overCurrentProtection = 100;             // default = 100 mA
 1776              		.loc 1 194 32 is_stmt 0 discriminator 4 view .LVU469
 1777 00fa FF23     		movs	r3, #255
 1778 00fc 85F82A30 		strb	r3, [r5, #42]
 195:Core/Src/main.c ****   myLoRa.preamble              = 8;              // default = 8;
 1779              		.loc 1 195 3 is_stmt 1 discriminator 4 view .LVU470
 195:Core/Src/main.c ****   myLoRa.preamble              = 8;              // default = 8;
 1780              		.loc 1 195 32 is_stmt 0 discriminator 4 view .LVU471
 1781 0100 6423     		movs	r3, #100
 1782 0102 85F82B30 		strb	r3, [r5, #43]
 196:Core/Src/main.c **** 
 1783              		.loc 1 196 3 is_stmt 1 discriminator 4 view .LVU472
 196:Core/Src/main.c **** 
 1784              		.loc 1 196 32 is_stmt 0 discriminator 4 view .LVU473
 1785 0106 0823     		movs	r3, #8
 1786 0108 2B85     		strh	r3, [r5, #40]	@ movhi
 198:Core/Src/main.c ****   uint8_t buff[128] = {"\0"};
 1787              		.loc 1 198 3 is_stmt 1 discriminator 4 view .LVU474
 198:Core/Src/main.c ****   uint8_t buff[128] = {"\0"};
 1788              		.loc 1 198 18 is_stmt 0 discriminator 4 view .LVU475
 1789 010a 2846     		mov	r0, r5
 1790 010c FFF7FEFF 		bl	LoRa_init
 1791              	.LVL116:
 1792 0110 0446     		mov	r4, r0
 1793              	.LVL117:
 199:Core/Src/main.c ****   
 1794              		.loc 1 199 3 is_stmt 1 discriminator 4 view .LVU476
 199:Core/Src/main.c ****   
 1795              		.loc 1 199 11 is_stmt 0 discriminator 4 view .LVU477
 1796 0112 0E96     		str	r6, [sp, #56]
 1797 0114 7C22     		movs	r2, #124
 1798 0116 3146     		mov	r1, r6
 1799 0118 0FA8     		add	r0, sp, #60
 1800 011a FFF7FEFF 		bl	memset
 1801              	.LVL118:
 202:Core/Src/main.c ****   snprintf(buff,sizeof(buff),"LoRa is running... :) \n\r");
 1802              		.loc 1 202 1 is_stmt 1 discriminator 4 view .LVU478
 202:Core/Src/main.c ****   snprintf(buff,sizeof(buff),"LoRa is running... :) \n\r");
 1803              		.loc 1 202 4 is_stmt 0 discriminator 4 view .LVU479
 1804 011e C82C     		cmp	r4, #200
 1805 0120 3FD0     		beq	.L156
 209:Core/Src/main.c ****   size = strlen(&buff);
 1806              		.loc 1 209 3 is_stmt 1 view .LVU480
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 68


 1807 0122 2346     		mov	r3, r4
 1808 0124 4A4A     		ldr	r2, .L158+56
 1809 0126 8021     		movs	r1, #128
 1810 0128 0EA8     		add	r0, sp, #56
 1811 012a FFF7FEFF 		bl	snprintf
 1812              	.LVL119:
 210:Core/Src/main.c ****   HAL_UART_Transmit_IT(&huart2, buff, size);
 1813              		.loc 1 210 3 view .LVU481
 210:Core/Src/main.c ****   HAL_UART_Transmit_IT(&huart2, buff, size);
 1814              		.loc 1 210 10 is_stmt 0 view .LVU482
 1815 012e 0EA8     		add	r0, sp, #56
 1816 0130 FFF7FEFF 		bl	strlen
 1817              	.LVL120:
 210:Core/Src/main.c ****   HAL_UART_Transmit_IT(&huart2, buff, size);
 1818              		.loc 1 210 8 view .LVU483
 1819 0134 3D4B     		ldr	r3, .L158+20
 1820 0136 1860     		str	r0, [r3]
 211:Core/Src/main.c **** }
 1821              		.loc 1 211 3 is_stmt 1 view .LVU484
 1822 0138 82B2     		uxth	r2, r0
 1823 013a 0EA9     		add	r1, sp, #56
 1824 013c 3C48     		ldr	r0, .L158+24
 1825 013e FFF7FEFF 		bl	HAL_UART_Transmit_IT
 1826              	.LVL121:
 1827              	.L86:
 215:Core/Src/main.c **** 
 1828              		.loc 1 215 1 view .LVU485
 1829 0142 444D     		ldr	r5, .L158+60
 1830 0144 2846     		mov	r0, r5
 1831 0146 FFF7FEFF 		bl	ssd1306_Init
 1832              	.LVL122:
 218:Core/Src/main.c **** ssd1306_WriteString("Mode:", Font_16x26, White);
 1833              		.loc 1 218 1 view .LVU486
 1834 014a 0021     		movs	r1, #0
 1835 014c 0846     		mov	r0, r1
 1836 014e FFF7FEFF 		bl	ssd1306_SetCursor
 1837              	.LVL123:
 219:Core/Src/main.c **** 
 1838              		.loc 1 219 1 view .LVU487
 1839 0152 414C     		ldr	r4, .L158+64
 1840 0154 0123     		movs	r3, #1
 1841 0156 94E80600 		ldm	r4, {r1, r2}
 1842 015a 4048     		ldr	r0, .L158+68
 1843 015c FFF7FEFF 		bl	ssd1306_WriteString
 1844              	.LVL124:
 221:Core/Src/main.c **** sprintf(sMode, "%d", iMode);
 1845              		.loc 1 221 1 view .LVU488
 1846 0160 2321     		movs	r1, #35
 1847 0162 0020     		movs	r0, #0
 1848 0164 FFF7FEFF 		bl	ssd1306_SetCursor
 1849              	.LVL125:
 222:Core/Src/main.c **** ssd1306_WriteString(sMode, Font_16x26, White);
 1850              		.loc 1 222 1 view .LVU489
 1851 0168 3D4E     		ldr	r6, .L158+72
 1852 016a 3E4B     		ldr	r3, .L158+76
 1853 016c 1A68     		ldr	r2, [r3]
 1854 016e 3E49     		ldr	r1, .L158+80
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 69


 1855 0170 3046     		mov	r0, r6
 1856 0172 FFF7FEFF 		bl	sprintf
 1857              	.LVL126:
 223:Core/Src/main.c **** 
 1858              		.loc 1 223 1 view .LVU490
 1859 0176 0123     		movs	r3, #1
 1860 0178 94E80600 		ldm	r4, {r1, r2}
 1861 017c 3046     		mov	r0, r6
 1862 017e FFF7FEFF 		bl	ssd1306_WriteString
 1863              	.LVL127:
 226:Core/Src/main.c **** 
 1864              		.loc 1 226 1 view .LVU491
 1865 0182 2846     		mov	r0, r5
 1866 0184 FFF7FEFF 		bl	ssd1306_UpdateScreen
 1867              	.LVL128:
 228:Core/Src/main.c **** 
 1868              		.loc 1 228 1 view .LVU492
 1869 0188 4FF47A73 		mov	r3, #1000
 1870 018c 0093     		str	r3, [sp]
 1871 018e 4FF40073 		mov	r3, #512
 1872 0192 1A46     		mov	r2, r3
 1873 0194 3549     		ldr	r1, .L158+84
 1874 0196 3648     		ldr	r0, .L158+88
 1875 0198 FFF7FEFF 		bl	HAL_UARTEx_ReceiveToIdle
 1876              	.LVL129:
 1877 019c 94E0     		b	.L151
 1878              	.LVL130:
 1879              	.L155:
 177:Core/Src/main.c **** 	HAL_UART_Transmit(&huart2, Data, size, 1000);
 1880              		.loc 1 177 9 is_stmt 0 view .LVU493
 1881 019e 354A     		ldr	r2, .L158+92
 1882 01a0 74E7     		b	.L84
 1883              	.LVL131:
 1884              	.L156:
 203:Core/Src/main.c ****   size = strlen(&buff);
 1885              		.loc 1 203 3 is_stmt 1 view .LVU494
 1886 01a2 0EAC     		add	r4, sp, #56
 1887              	.LVL132:
 203:Core/Src/main.c ****   size = strlen(&buff);
 1888              		.loc 1 203 3 is_stmt 0 view .LVU495
 1889 01a4 344D     		ldr	r5, .L158+96
 1890 01a6 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1891 01a8 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1892 01aa 95E80700 		ldm	r5, {r0, r1, r2}
 1893 01ae 03C4     		stmia	r4!, {r0, r1}
 1894 01b0 2270     		strb	r2, [r4]
 204:Core/Src/main.c ****   LoRa_transmit(&myLoRa, (uint8_t*)buff, size, 100);
 1895              		.loc 1 204 3 is_stmt 1 view .LVU496
 204:Core/Src/main.c ****   LoRa_transmit(&myLoRa, (uint8_t*)buff, size, 100);
 1896              		.loc 1 204 10 is_stmt 0 view .LVU497
 1897 01b2 0EA8     		add	r0, sp, #56
 1898 01b4 FFF7FEFF 		bl	strlen
 1899              	.LVL133:
 204:Core/Src/main.c ****   LoRa_transmit(&myLoRa, (uint8_t*)buff, size, 100);
 1900              		.loc 1 204 8 view .LVU498
 1901 01b8 1C4C     		ldr	r4, .L158+20
 1902 01ba 2060     		str	r0, [r4]
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 70


 205:Core/Src/main.c ****   HAL_UART_Transmit_IT(&huart2, buff, size);
 1903              		.loc 1 205 3 is_stmt 1 view .LVU499
 1904 01bc 6423     		movs	r3, #100
 1905 01be C2B2     		uxtb	r2, r0
 1906 01c0 0EA9     		add	r1, sp, #56
 1907 01c2 1F48     		ldr	r0, .L158+40
 1908 01c4 FFF7FEFF 		bl	LoRa_transmit
 1909              	.LVL134:
 206:Core/Src/main.c **** }
 1910              		.loc 1 206 3 view .LVU500
 1911 01c8 2288     		ldrh	r2, [r4]
 1912 01ca 0EA9     		add	r1, sp, #56
 1913 01cc 1848     		ldr	r0, .L158+24
 1914 01ce FFF7FEFF 		bl	HAL_UART_Transmit_IT
 1915              	.LVL135:
 1916 01d2 B6E7     		b	.L86
 1917              	.LVL136:
 1918              	.L157:
 241:Core/Src/main.c ****       packetSize = buildDataPacket();
 1919              		.loc 1 241 7 view .LVU501
 1920 01d4 4FF40072 		mov	r2, #512
 1921 01d8 2449     		ldr	r1, .L158+84
 1922 01da 2548     		ldr	r0, .L158+88
 1923 01dc FFF7FEFF 		bl	HAL_UARTEx_ReceiveToIdle_IT
 1924              	.LVL137:
 242:Core/Src/main.c ****       
 1925              		.loc 1 242 7 view .LVU502
 242:Core/Src/main.c ****       
 1926              		.loc 1 242 20 is_stmt 0 view .LVU503
 1927 01e0 FFF7FEFF 		bl	buildDataPacket
 1928              	.LVL138:
 1929 01e4 0446     		mov	r4, r0
 242:Core/Src/main.c ****       
 1930              		.loc 1 242 18 view .LVU504
 1931 01e6 254B     		ldr	r3, .L158+100
 1932 01e8 1880     		strh	r0, [r3]	@ movhi
 244:Core/Src/main.c ****       ret = LoRa_transmit(&myLoRa, (uint8_t*)transmit_data, packetSize, 10000);
 1933              		.loc 1 244 7 is_stmt 1 view .LVU505
 244:Core/Src/main.c ****       ret = LoRa_transmit(&myLoRa, (uint8_t*)transmit_data, packetSize, 10000);
 1934              		.loc 1 244 14 is_stmt 0 view .LVU506
 1935 01ea 254D     		ldr	r5, .L158+104
 1936 01ec 2846     		mov	r0, r5
 1937 01ee FFF7FEFF 		bl	strlen
 1938              	.LVL139:
 244:Core/Src/main.c ****       ret = LoRa_transmit(&myLoRa, (uint8_t*)transmit_data, packetSize, 10000);
 1939              		.loc 1 244 12 view .LVU507
 1940 01f2 0E4B     		ldr	r3, .L158+20
 1941 01f4 1860     		str	r0, [r3]
 245:Core/Src/main.c ****       memset(transmit_data, '\0', sizeof(transmit_data));
 1942              		.loc 1 245 7 is_stmt 1 view .LVU508
 245:Core/Src/main.c ****       memset(transmit_data, '\0', sizeof(transmit_data));
 1943              		.loc 1 245 13 is_stmt 0 view .LVU509
 1944 01f6 42F21073 		movw	r3, #10000
 1945 01fa E2B2     		uxtb	r2, r4
 1946 01fc 2946     		mov	r1, r5
 1947 01fe 1048     		ldr	r0, .L158+40
 1948 0200 FFF7FEFF 		bl	LoRa_transmit
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 71


 1949              	.LVL140:
 246:Core/Src/main.c **** 
 1950              		.loc 1 246 7 is_stmt 1 view .LVU510
 1951 0204 4FF48072 		mov	r2, #256
 1952 0208 0021     		movs	r1, #0
 1953 020a 2846     		mov	r0, r5
 1954 020c FFF7FEFF 		bl	memset
 1955              	.LVL141:
 253:Core/Src/main.c ****     }      
 1956              		.loc 1 253 7 view .LVU511
 253:Core/Src/main.c ****     }      
 1957              		.loc 1 253 21 is_stmt 0 view .LVU512
 1958 0210 1C4B     		ldr	r3, .L158+108
 1959 0212 0022     		movs	r2, #0
 1960 0214 1A70     		strb	r2, [r3]
 1961 0216 5BE0     		b	.L87
 1962              	.L159:
 1963              		.align	2
 1964              	.L158:
 1965 0218 00000000 		.word	htim3
 1966 021c 2C000000 		.word	bmp280+44
 1967 0220 00000000 		.word	hi2c1
 1968 0224 00000000 		.word	Data
 1969 0228 10000000 		.word	.LC11
 1970 022c 00000000 		.word	size
 1971 0230 00000000 		.word	huart2
 1972 0234 00000000 		.word	bmp280
 1973 0238 08000000 		.word	.LC10
 1974 023c 30000000 		.word	.LC12
 1975 0240 00000000 		.word	myLoRa
 1976 0244 00000240 		.word	1073872896
 1977 0248 00040240 		.word	1073873920
 1978 024c 00000000 		.word	hspi3
 1979 0250 60000000 		.word	.LC14
 1980 0254 00000000 		.word	hi2c2
 1981 0258 00000000 		.word	Font_16x26
 1982 025c 14000000 		.word	.LC6
 1983 0260 00000000 		.word	sMode
 1984 0264 00000000 		.word	iMode
 1985 0268 88000000 		.word	.LC15
 1986 026c 00000000 		.word	gps_raw
 1987 0270 00000000 		.word	huart1
 1988 0274 00000000 		.word	.LC9
 1989 0278 44000000 		.word	.LC13
 1990 027c 00000000 		.word	packetSize
 1991 0280 00000000 		.word	transmit_data
 1992 0284 00000000 		.word	beginTransmit
 1993              	.L150:
 260:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_7;            // default = SF_7
 1994              		.loc 1 260 7 is_stmt 1 view .LVU513
 260:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_7;            // default = SF_7
 1995              		.loc 1 260 36 is_stmt 0 view .LVU514
 1996 0288 D448     		ldr	r0, .L160
 1997 028a 40F2B113 		movw	r3, #433
 1998 028e 0362     		str	r3, [r0, #32]
 261:Core/Src/main.c ****       myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 1999              		.loc 1 261 7 is_stmt 1 view .LVU515
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 72


 261:Core/Src/main.c ****       myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 2000              		.loc 1 261 37 is_stmt 0 view .LVU516
 2001 0290 0723     		movs	r3, #7
 2002 0292 80F82430 		strb	r3, [r0, #36]
 262:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2003              		.loc 1 262 7 is_stmt 1 view .LVU517
 262:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2004              		.loc 1 262 36 is_stmt 0 view .LVU518
 2005 0296 0023     		movs	r3, #0
 2006 0298 80F82530 		strb	r3, [r0, #37]
 263:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2007              		.loc 1 263 7 is_stmt 1 view .LVU519
 263:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2008              		.loc 1 263 36 is_stmt 0 view .LVU520
 2009 029c 0123     		movs	r3, #1
 2010 029e 80F82630 		strb	r3, [r0, #38]
 264:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2011              		.loc 1 264 7 is_stmt 1 view .LVU521
 264:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2012              		.loc 1 264 36 is_stmt 0 view .LVU522
 2013 02a2 FF23     		movs	r3, #255
 2014 02a4 80F82A30 		strb	r3, [r0, #42]
 265:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2015              		.loc 1 265 7 is_stmt 1 view .LVU523
 265:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2016              		.loc 1 265 36 is_stmt 0 view .LVU524
 2017 02a8 6423     		movs	r3, #100
 2018 02aa 80F82B30 		strb	r3, [r0, #43]
 266:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2019              		.loc 1 266 7 is_stmt 1 view .LVU525
 266:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2020              		.loc 1 266 36 is_stmt 0 view .LVU526
 2021 02ae 0823     		movs	r3, #8
 2022 02b0 0385     		strh	r3, [r0, #40]	@ movhi
 267:Core/Src/main.c ****       break;
 2023              		.loc 1 267 7 is_stmt 1 view .LVU527
 2024 02b2 FFF7FEFF 		bl	LoRa_init
 2025              	.LVL142:
 268:Core/Src/main.c **** 
 2026              		.loc 1 268 7 view .LVU528
 2027              	.L89:
 981:Core/Src/main.c **** 
 2028              		.loc 1 981 7 view .LVU529
 981:Core/Src/main.c **** 
 2029              		.loc 1 981 20 is_stmt 0 view .LVU530
 2030 02b6 CA4B     		ldr	r3, .L160+4
 2031 02b8 0022     		movs	r2, #0
 2032 02ba 1A70     		strb	r2, [r3]
 2033              	.L88:
 997:Core/Src/main.c **** 
 2034              		.loc 1 997 5 is_stmt 1 view .LVU531
 2035 02bc 4FF40072 		mov	r2, #512
 2036 02c0 C849     		ldr	r1, .L160+8
 2037 02c2 C948     		ldr	r0, .L160+12
 2038 02c4 FFF7FEFF 		bl	HAL_UARTEx_ReceiveToIdle_IT
 2039              	.LVL143:
 235:Core/Src/main.c ****   {
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 73


 2040              		.loc 1 235 9 view .LVU532
 2041              	.L151:
 235:Core/Src/main.c ****   {
 2042              		.loc 1 235 3 view .LVU533
 239:Core/Src/main.c ****       //HAL_UART_Transmit(&huart2,(uint8_t *)gps_raw,512, 1000);
 2043              		.loc 1 239 5 view .LVU534
 239:Core/Src/main.c ****       //HAL_UART_Transmit(&huart2,(uint8_t *)gps_raw,512, 1000);
 2044              		.loc 1 239 9 is_stmt 0 view .LVU535
 2045 02c8 C84B     		ldr	r3, .L160+16
 2046 02ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 239:Core/Src/main.c ****       //HAL_UART_Transmit(&huart2,(uint8_t *)gps_raw,512, 1000);
 2047              		.loc 1 239 8 view .LVU536
 2048 02cc 002B     		cmp	r3, #0
 2049 02ce 81D1     		bne	.L157
 2050              	.L87:
 256:Core/Src/main.c **** switch (iMode) {
 2051              		.loc 1 256 5 is_stmt 1 view .LVU537
 256:Core/Src/main.c **** switch (iMode) {
 2052              		.loc 1 256 9 is_stmt 0 view .LVU538
 2053 02d0 C34B     		ldr	r3, .L160+4
 2054 02d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 256:Core/Src/main.c **** switch (iMode) {
 2055              		.loc 1 256 8 view .LVU539
 2056 02d4 002B     		cmp	r3, #0
 2057 02d6 F1D0     		beq	.L88
 257:Core/Src/main.c ****     case 1:
 2058              		.loc 1 257 1 is_stmt 1 view .LVU540
 2059 02d8 C54B     		ldr	r3, .L160+20
 2060 02da 1B68     		ldr	r3, [r3]
 2061 02dc 013B     		subs	r3, r3, #1
 2062 02de 3B2B     		cmp	r3, #59
 2063 02e0 E9D8     		bhi	.L89
 2064 02e2 01A2     		adr	r2, .L91
 2065 02e4 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2066              		.p2align 2
 2067              	.L91:
 2068 02e8 89020000 		.word	.L150+1
 2069 02ec D9030000 		.word	.L149+1
 2070 02f0 07040000 		.word	.L148+1
 2071 02f4 37040000 		.word	.L147+1
 2072 02f8 67040000 		.word	.L146+1
 2073 02fc 97040000 		.word	.L145+1
 2074 0300 C7040000 		.word	.L144+1
 2075 0304 F7040000 		.word	.L143+1
 2076 0308 25050000 		.word	.L142+1
 2077 030c 53050000 		.word	.L141+1
 2078 0310 83050000 		.word	.L140+1
 2079 0314 B1050000 		.word	.L139+1
 2080 0318 F5050000 		.word	.L138+1
 2081 031c 23060000 		.word	.L137+1
 2082 0320 51060000 		.word	.L136+1
 2083 0324 7F060000 		.word	.L135+1
 2084 0328 AD060000 		.word	.L134+1
 2085 032c DB060000 		.word	.L133+1
 2086 0330 09070000 		.word	.L132+1
 2087 0334 35070000 		.word	.L131+1
 2088 0338 63070000 		.word	.L130+1
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 74


 2089 033c 93070000 		.word	.L129+1
 2090 0340 C1070000 		.word	.L128+1
 2091 0344 F1070000 		.word	.L127+1
 2092 0348 21080000 		.word	.L126+1
 2093 034c 51080000 		.word	.L125+1
 2094 0350 81080000 		.word	.L124+1
 2095 0354 B1080000 		.word	.L123+1
 2096 0358 E1080000 		.word	.L122+1
 2097 035c 0F090000 		.word	.L121+1
 2098 0360 41090000 		.word	.L120+1
 2099 0364 71090000 		.word	.L119+1
 2100 0368 9F090000 		.word	.L118+1
 2101 036c CF090000 		.word	.L117+1
 2102 0370 FF090000 		.word	.L116+1
 2103 0374 2F0A0000 		.word	.L115+1
 2104 0378 5F0A0000 		.word	.L114+1
 2105 037c 8F0A0000 		.word	.L113+1
 2106 0380 C10A0000 		.word	.L112+1
 2107 0384 F10A0000 		.word	.L111+1
 2108 0388 230B0000 		.word	.L110+1
 2109 038c 550B0000 		.word	.L109+1
 2110 0390 850B0000 		.word	.L108+1
 2111 0394 B70B0000 		.word	.L107+1
 2112 0398 E90B0000 		.word	.L106+1
 2113 039c 1B0C0000 		.word	.L105+1
 2114 03a0 4D0C0000 		.word	.L104+1
 2115 03a4 7F0C0000 		.word	.L103+1
 2116 03a8 B50C0000 		.word	.L102+1
 2117 03ac E50C0000 		.word	.L101+1
 2118 03b0 170D0000 		.word	.L100+1
 2119 03b4 490D0000 		.word	.L99+1
 2120 03b8 790D0000 		.word	.L98+1
 2121 03bc AB0D0000 		.word	.L97+1
 2122 03c0 DD0D0000 		.word	.L96+1
 2123 03c4 0F0E0000 		.word	.L95+1
 2124 03c8 410E0000 		.word	.L94+1
 2125 03cc 730E0000 		.word	.L93+1
 2126 03d0 A50E0000 		.word	.L92+1
 2127 03d4 D50E0000 		.word	.L90+1
 2128              		.p2align 1
 2129              	.L149:
 272:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_7;            // default = SF_7
 2130              		.loc 1 272 7 view .LVU541
 272:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_7;            // default = SF_7
 2131              		.loc 1 272 36 is_stmt 0 view .LVU542
 2132 03d8 8048     		ldr	r0, .L160
 2133 03da 40F2B113 		movw	r3, #433
 2134 03de 0362     		str	r3, [r0, #32]
 273:Core/Src/main.c ****       myLoRa.bandWidth             = BW_10_4KHz;       // default = BW_125KHz
 2135              		.loc 1 273 7 is_stmt 1 view .LVU543
 273:Core/Src/main.c ****       myLoRa.bandWidth             = BW_10_4KHz;       // default = BW_125KHz
 2136              		.loc 1 273 37 is_stmt 0 view .LVU544
 2137 03e0 0723     		movs	r3, #7
 2138 03e2 80F82430 		strb	r3, [r0, #36]
 274:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2139              		.loc 1 274 7 is_stmt 1 view .LVU545
 274:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 75


 2140              		.loc 1 274 36 is_stmt 0 view .LVU546
 2141 03e6 0123     		movs	r3, #1
 2142 03e8 80F82530 		strb	r3, [r0, #37]
 275:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2143              		.loc 1 275 7 is_stmt 1 view .LVU547
 275:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2144              		.loc 1 275 36 is_stmt 0 view .LVU548
 2145 03ec 80F82630 		strb	r3, [r0, #38]
 276:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2146              		.loc 1 276 7 is_stmt 1 view .LVU549
 276:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2147              		.loc 1 276 36 is_stmt 0 view .LVU550
 2148 03f0 FF23     		movs	r3, #255
 2149 03f2 80F82A30 		strb	r3, [r0, #42]
 277:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2150              		.loc 1 277 7 is_stmt 1 view .LVU551
 277:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2151              		.loc 1 277 36 is_stmt 0 view .LVU552
 2152 03f6 6423     		movs	r3, #100
 2153 03f8 80F82B30 		strb	r3, [r0, #43]
 278:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2154              		.loc 1 278 7 is_stmt 1 view .LVU553
 278:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2155              		.loc 1 278 36 is_stmt 0 view .LVU554
 2156 03fc 0823     		movs	r3, #8
 2157 03fe 0385     		strh	r3, [r0, #40]	@ movhi
 279:Core/Src/main.c ****       break;
 2158              		.loc 1 279 7 is_stmt 1 view .LVU555
 2159 0400 FFF7FEFF 		bl	LoRa_init
 2160              	.LVL144:
 280:Core/Src/main.c **** 
 2161              		.loc 1 280 7 view .LVU556
 2162 0404 57E7     		b	.L89
 2163              	.L148:
 284:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_7;            // default = SF_7
 2164              		.loc 1 284 7 view .LVU557
 284:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_7;            // default = SF_7
 2165              		.loc 1 284 36 is_stmt 0 view .LVU558
 2166 0406 7548     		ldr	r0, .L160
 2167 0408 40F2B113 		movw	r3, #433
 2168 040c 0362     		str	r3, [r0, #32]
 285:Core/Src/main.c ****       myLoRa.bandWidth             = BW_15_6KHz;       // default = BW_125KHz
 2169              		.loc 1 285 7 is_stmt 1 view .LVU559
 285:Core/Src/main.c ****       myLoRa.bandWidth             = BW_15_6KHz;       // default = BW_125KHz
 2170              		.loc 1 285 37 is_stmt 0 view .LVU560
 2171 040e 0723     		movs	r3, #7
 2172 0410 80F82430 		strb	r3, [r0, #36]
 286:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2173              		.loc 1 286 7 is_stmt 1 view .LVU561
 286:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2174              		.loc 1 286 36 is_stmt 0 view .LVU562
 2175 0414 0223     		movs	r3, #2
 2176 0416 80F82530 		strb	r3, [r0, #37]
 287:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2177              		.loc 1 287 7 is_stmt 1 view .LVU563
 287:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2178              		.loc 1 287 36 is_stmt 0 view .LVU564
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 76


 2179 041a 0123     		movs	r3, #1
 2180 041c 80F82630 		strb	r3, [r0, #38]
 288:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2181              		.loc 1 288 7 is_stmt 1 view .LVU565
 288:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2182              		.loc 1 288 36 is_stmt 0 view .LVU566
 2183 0420 FF23     		movs	r3, #255
 2184 0422 80F82A30 		strb	r3, [r0, #42]
 289:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2185              		.loc 1 289 7 is_stmt 1 view .LVU567
 289:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2186              		.loc 1 289 36 is_stmt 0 view .LVU568
 2187 0426 6423     		movs	r3, #100
 2188 0428 80F82B30 		strb	r3, [r0, #43]
 290:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2189              		.loc 1 290 7 is_stmt 1 view .LVU569
 290:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2190              		.loc 1 290 36 is_stmt 0 view .LVU570
 2191 042c 0823     		movs	r3, #8
 2192 042e 0385     		strh	r3, [r0, #40]	@ movhi
 291:Core/Src/main.c ****       break;
 2193              		.loc 1 291 7 is_stmt 1 view .LVU571
 2194 0430 FFF7FEFF 		bl	LoRa_init
 2195              	.LVL145:
 292:Core/Src/main.c **** 
 2196              		.loc 1 292 7 view .LVU572
 2197 0434 3FE7     		b	.L89
 2198              	.L147:
 296:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_7;            // default = SF_7
 2199              		.loc 1 296 7 view .LVU573
 296:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_7;            // default = SF_7
 2200              		.loc 1 296 36 is_stmt 0 view .LVU574
 2201 0436 6948     		ldr	r0, .L160
 2202 0438 40F2B113 		movw	r3, #433
 2203 043c 0362     		str	r3, [r0, #32]
 297:Core/Src/main.c ****       myLoRa.bandWidth             = BW_20_8KHz;       // default = BW_125KHz
 2204              		.loc 1 297 7 is_stmt 1 view .LVU575
 297:Core/Src/main.c ****       myLoRa.bandWidth             = BW_20_8KHz;       // default = BW_125KHz
 2205              		.loc 1 297 37 is_stmt 0 view .LVU576
 2206 043e 0723     		movs	r3, #7
 2207 0440 80F82430 		strb	r3, [r0, #36]
 298:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2208              		.loc 1 298 7 is_stmt 1 view .LVU577
 298:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2209              		.loc 1 298 36 is_stmt 0 view .LVU578
 2210 0444 0323     		movs	r3, #3
 2211 0446 80F82530 		strb	r3, [r0, #37]
 299:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2212              		.loc 1 299 7 is_stmt 1 view .LVU579
 299:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2213              		.loc 1 299 36 is_stmt 0 view .LVU580
 2214 044a 0123     		movs	r3, #1
 2215 044c 80F82630 		strb	r3, [r0, #38]
 300:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2216              		.loc 1 300 7 is_stmt 1 view .LVU581
 300:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2217              		.loc 1 300 36 is_stmt 0 view .LVU582
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 77


 2218 0450 FF23     		movs	r3, #255
 2219 0452 80F82A30 		strb	r3, [r0, #42]
 301:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2220              		.loc 1 301 7 is_stmt 1 view .LVU583
 301:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2221              		.loc 1 301 36 is_stmt 0 view .LVU584
 2222 0456 6423     		movs	r3, #100
 2223 0458 80F82B30 		strb	r3, [r0, #43]
 302:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2224              		.loc 1 302 7 is_stmt 1 view .LVU585
 302:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2225              		.loc 1 302 36 is_stmt 0 view .LVU586
 2226 045c 0823     		movs	r3, #8
 2227 045e 0385     		strh	r3, [r0, #40]	@ movhi
 303:Core/Src/main.c ****       break;
 2228              		.loc 1 303 7 is_stmt 1 view .LVU587
 2229 0460 FFF7FEFF 		bl	LoRa_init
 2230              	.LVL146:
 304:Core/Src/main.c **** 
 2231              		.loc 1 304 7 view .LVU588
 2232 0464 27E7     		b	.L89
 2233              	.L146:
 308:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_7;            // default = SF_7
 2234              		.loc 1 308 7 view .LVU589
 308:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_7;            // default = SF_7
 2235              		.loc 1 308 36 is_stmt 0 view .LVU590
 2236 0466 5D48     		ldr	r0, .L160
 2237 0468 40F2B113 		movw	r3, #433
 2238 046c 0362     		str	r3, [r0, #32]
 309:Core/Src/main.c ****       myLoRa.bandWidth             = BW_31_25KHz;       // default = BW_125KHz
 2239              		.loc 1 309 7 is_stmt 1 view .LVU591
 309:Core/Src/main.c ****       myLoRa.bandWidth             = BW_31_25KHz;       // default = BW_125KHz
 2240              		.loc 1 309 37 is_stmt 0 view .LVU592
 2241 046e 0723     		movs	r3, #7
 2242 0470 80F82430 		strb	r3, [r0, #36]
 310:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2243              		.loc 1 310 7 is_stmt 1 view .LVU593
 310:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2244              		.loc 1 310 36 is_stmt 0 view .LVU594
 2245 0474 0423     		movs	r3, #4
 2246 0476 80F82530 		strb	r3, [r0, #37]
 311:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2247              		.loc 1 311 7 is_stmt 1 view .LVU595
 311:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2248              		.loc 1 311 36 is_stmt 0 view .LVU596
 2249 047a 0123     		movs	r3, #1
 2250 047c 80F82630 		strb	r3, [r0, #38]
 312:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2251              		.loc 1 312 7 is_stmt 1 view .LVU597
 312:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2252              		.loc 1 312 36 is_stmt 0 view .LVU598
 2253 0480 FF23     		movs	r3, #255
 2254 0482 80F82A30 		strb	r3, [r0, #42]
 313:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2255              		.loc 1 313 7 is_stmt 1 view .LVU599
 313:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2256              		.loc 1 313 36 is_stmt 0 view .LVU600
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 78


 2257 0486 6423     		movs	r3, #100
 2258 0488 80F82B30 		strb	r3, [r0, #43]
 314:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2259              		.loc 1 314 7 is_stmt 1 view .LVU601
 314:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2260              		.loc 1 314 36 is_stmt 0 view .LVU602
 2261 048c 0823     		movs	r3, #8
 2262 048e 0385     		strh	r3, [r0, #40]	@ movhi
 315:Core/Src/main.c ****       break;
 2263              		.loc 1 315 7 is_stmt 1 view .LVU603
 2264 0490 FFF7FEFF 		bl	LoRa_init
 2265              	.LVL147:
 316:Core/Src/main.c **** 
 2266              		.loc 1 316 7 view .LVU604
 2267 0494 0FE7     		b	.L89
 2268              	.L145:
 320:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_7;            // default = SF_7
 2269              		.loc 1 320 7 view .LVU605
 320:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_7;            // default = SF_7
 2270              		.loc 1 320 36 is_stmt 0 view .LVU606
 2271 0496 5148     		ldr	r0, .L160
 2272 0498 40F2B113 		movw	r3, #433
 2273 049c 0362     		str	r3, [r0, #32]
 321:Core/Src/main.c ****       myLoRa.bandWidth             = BW_41_7KHz;       // default = BW_125KHz
 2274              		.loc 1 321 7 is_stmt 1 view .LVU607
 321:Core/Src/main.c ****       myLoRa.bandWidth             = BW_41_7KHz;       // default = BW_125KHz
 2275              		.loc 1 321 37 is_stmt 0 view .LVU608
 2276 049e 0723     		movs	r3, #7
 2277 04a0 80F82430 		strb	r3, [r0, #36]
 322:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2278              		.loc 1 322 7 is_stmt 1 view .LVU609
 322:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2279              		.loc 1 322 36 is_stmt 0 view .LVU610
 2280 04a4 0523     		movs	r3, #5
 2281 04a6 80F82530 		strb	r3, [r0, #37]
 323:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2282              		.loc 1 323 7 is_stmt 1 view .LVU611
 323:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2283              		.loc 1 323 36 is_stmt 0 view .LVU612
 2284 04aa 0123     		movs	r3, #1
 2285 04ac 80F82630 		strb	r3, [r0, #38]
 324:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2286              		.loc 1 324 7 is_stmt 1 view .LVU613
 324:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2287              		.loc 1 324 36 is_stmt 0 view .LVU614
 2288 04b0 FF23     		movs	r3, #255
 2289 04b2 80F82A30 		strb	r3, [r0, #42]
 325:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2290              		.loc 1 325 7 is_stmt 1 view .LVU615
 325:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2291              		.loc 1 325 36 is_stmt 0 view .LVU616
 2292 04b6 6423     		movs	r3, #100
 2293 04b8 80F82B30 		strb	r3, [r0, #43]
 326:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2294              		.loc 1 326 7 is_stmt 1 view .LVU617
 326:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2295              		.loc 1 326 36 is_stmt 0 view .LVU618
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 79


 2296 04bc 0823     		movs	r3, #8
 2297 04be 0385     		strh	r3, [r0, #40]	@ movhi
 327:Core/Src/main.c ****       break;
 2298              		.loc 1 327 7 is_stmt 1 view .LVU619
 2299 04c0 FFF7FEFF 		bl	LoRa_init
 2300              	.LVL148:
 328:Core/Src/main.c **** 
 2301              		.loc 1 328 7 view .LVU620
 2302 04c4 F7E6     		b	.L89
 2303              	.L144:
 332:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_7;            // default = SF_7
 2304              		.loc 1 332 7 view .LVU621
 332:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_7;            // default = SF_7
 2305              		.loc 1 332 36 is_stmt 0 view .LVU622
 2306 04c6 4548     		ldr	r0, .L160
 2307 04c8 40F2B113 		movw	r3, #433
 2308 04cc 0362     		str	r3, [r0, #32]
 333:Core/Src/main.c ****       myLoRa.bandWidth             = BW_62_5KHz;       // default = BW_125KHz
 2309              		.loc 1 333 7 is_stmt 1 view .LVU623
 333:Core/Src/main.c ****       myLoRa.bandWidth             = BW_62_5KHz;       // default = BW_125KHz
 2310              		.loc 1 333 37 is_stmt 0 view .LVU624
 2311 04ce 0723     		movs	r3, #7
 2312 04d0 80F82430 		strb	r3, [r0, #36]
 334:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2313              		.loc 1 334 7 is_stmt 1 view .LVU625
 334:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2314              		.loc 1 334 36 is_stmt 0 view .LVU626
 2315 04d4 0623     		movs	r3, #6
 2316 04d6 80F82530 		strb	r3, [r0, #37]
 335:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2317              		.loc 1 335 7 is_stmt 1 view .LVU627
 335:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2318              		.loc 1 335 36 is_stmt 0 view .LVU628
 2319 04da 0123     		movs	r3, #1
 2320 04dc 80F82630 		strb	r3, [r0, #38]
 336:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2321              		.loc 1 336 7 is_stmt 1 view .LVU629
 336:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2322              		.loc 1 336 36 is_stmt 0 view .LVU630
 2323 04e0 FF23     		movs	r3, #255
 2324 04e2 80F82A30 		strb	r3, [r0, #42]
 337:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2325              		.loc 1 337 7 is_stmt 1 view .LVU631
 337:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2326              		.loc 1 337 36 is_stmt 0 view .LVU632
 2327 04e6 6423     		movs	r3, #100
 2328 04e8 80F82B30 		strb	r3, [r0, #43]
 338:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2329              		.loc 1 338 7 is_stmt 1 view .LVU633
 338:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2330              		.loc 1 338 36 is_stmt 0 view .LVU634
 2331 04ec 0823     		movs	r3, #8
 2332 04ee 0385     		strh	r3, [r0, #40]	@ movhi
 339:Core/Src/main.c ****       break;
 2333              		.loc 1 339 7 is_stmt 1 view .LVU635
 2334 04f0 FFF7FEFF 		bl	LoRa_init
 2335              	.LVL149:
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 80


 340:Core/Src/main.c **** 
 2336              		.loc 1 340 7 view .LVU636
 2337 04f4 DFE6     		b	.L89
 2338              	.L143:
 344:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_7;            // default = SF_7
 2339              		.loc 1 344 7 view .LVU637
 344:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_7;            // default = SF_7
 2340              		.loc 1 344 36 is_stmt 0 view .LVU638
 2341 04f6 3948     		ldr	r0, .L160
 2342 04f8 40F2B113 		movw	r3, #433
 2343 04fc 0362     		str	r3, [r0, #32]
 345:Core/Src/main.c ****       myLoRa.bandWidth             = BW_125KHz;       // default = BW_125KHz
 2344              		.loc 1 345 7 is_stmt 1 view .LVU639
 345:Core/Src/main.c ****       myLoRa.bandWidth             = BW_125KHz;       // default = BW_125KHz
 2345              		.loc 1 345 37 is_stmt 0 view .LVU640
 2346 04fe 0723     		movs	r3, #7
 2347 0500 80F82430 		strb	r3, [r0, #36]
 346:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2348              		.loc 1 346 7 is_stmt 1 view .LVU641
 346:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2349              		.loc 1 346 36 is_stmt 0 view .LVU642
 2350 0504 80F82530 		strb	r3, [r0, #37]
 347:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2351              		.loc 1 347 7 is_stmt 1 view .LVU643
 347:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2352              		.loc 1 347 36 is_stmt 0 view .LVU644
 2353 0508 0123     		movs	r3, #1
 2354 050a 80F82630 		strb	r3, [r0, #38]
 348:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2355              		.loc 1 348 7 is_stmt 1 view .LVU645
 348:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2356              		.loc 1 348 36 is_stmt 0 view .LVU646
 2357 050e FF23     		movs	r3, #255
 2358 0510 80F82A30 		strb	r3, [r0, #42]
 349:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2359              		.loc 1 349 7 is_stmt 1 view .LVU647
 349:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2360              		.loc 1 349 36 is_stmt 0 view .LVU648
 2361 0514 6423     		movs	r3, #100
 2362 0516 80F82B30 		strb	r3, [r0, #43]
 350:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2363              		.loc 1 350 7 is_stmt 1 view .LVU649
 350:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2364              		.loc 1 350 36 is_stmt 0 view .LVU650
 2365 051a 0823     		movs	r3, #8
 2366 051c 0385     		strh	r3, [r0, #40]	@ movhi
 351:Core/Src/main.c ****       break;
 2367              		.loc 1 351 7 is_stmt 1 view .LVU651
 2368 051e FFF7FEFF 		bl	LoRa_init
 2369              	.LVL150:
 352:Core/Src/main.c **** 
 2370              		.loc 1 352 7 view .LVU652
 2371 0522 C8E6     		b	.L89
 2372              	.L142:
 356:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_7;            // default = SF_7
 2373              		.loc 1 356 7 view .LVU653
 356:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_7;            // default = SF_7
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 81


 2374              		.loc 1 356 36 is_stmt 0 view .LVU654
 2375 0524 2D48     		ldr	r0, .L160
 2376 0526 40F2B113 		movw	r3, #433
 2377 052a 0362     		str	r3, [r0, #32]
 357:Core/Src/main.c ****       myLoRa.bandWidth             = BW_250KHz;       // default = BW_125KHz
 2378              		.loc 1 357 7 is_stmt 1 view .LVU655
 357:Core/Src/main.c ****       myLoRa.bandWidth             = BW_250KHz;       // default = BW_125KHz
 2379              		.loc 1 357 37 is_stmt 0 view .LVU656
 2380 052c 0723     		movs	r3, #7
 2381 052e 80F82430 		strb	r3, [r0, #36]
 358:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2382              		.loc 1 358 7 is_stmt 1 view .LVU657
 358:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2383              		.loc 1 358 36 is_stmt 0 view .LVU658
 2384 0532 0823     		movs	r3, #8
 2385 0534 80F82530 		strb	r3, [r0, #37]
 359:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2386              		.loc 1 359 7 is_stmt 1 view .LVU659
 359:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2387              		.loc 1 359 36 is_stmt 0 view .LVU660
 2388 0538 0122     		movs	r2, #1
 2389 053a 80F82620 		strb	r2, [r0, #38]
 360:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2390              		.loc 1 360 7 is_stmt 1 view .LVU661
 360:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2391              		.loc 1 360 36 is_stmt 0 view .LVU662
 2392 053e FF22     		movs	r2, #255
 2393 0540 80F82A20 		strb	r2, [r0, #42]
 361:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2394              		.loc 1 361 7 is_stmt 1 view .LVU663
 361:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2395              		.loc 1 361 36 is_stmt 0 view .LVU664
 2396 0544 6422     		movs	r2, #100
 2397 0546 80F82B20 		strb	r2, [r0, #43]
 362:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2398              		.loc 1 362 7 is_stmt 1 view .LVU665
 362:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2399              		.loc 1 362 36 is_stmt 0 view .LVU666
 2400 054a 0385     		strh	r3, [r0, #40]	@ movhi
 363:Core/Src/main.c ****       break;
 2401              		.loc 1 363 7 is_stmt 1 view .LVU667
 2402 054c FFF7FEFF 		bl	LoRa_init
 2403              	.LVL151:
 364:Core/Src/main.c **** 
 2404              		.loc 1 364 7 view .LVU668
 2405 0550 B1E6     		b	.L89
 2406              	.L141:
 368:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_7;            // default = SF_7
 2407              		.loc 1 368 7 view .LVU669
 368:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_7;            // default = SF_7
 2408              		.loc 1 368 36 is_stmt 0 view .LVU670
 2409 0552 2248     		ldr	r0, .L160
 2410 0554 40F2B113 		movw	r3, #433
 2411 0558 0362     		str	r3, [r0, #32]
 369:Core/Src/main.c ****       myLoRa.bandWidth             = BW_500KHz;       // default = BW_125KHz
 2412              		.loc 1 369 7 is_stmt 1 view .LVU671
 369:Core/Src/main.c ****       myLoRa.bandWidth             = BW_500KHz;       // default = BW_125KHz
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 82


 2413              		.loc 1 369 37 is_stmt 0 view .LVU672
 2414 055a 0723     		movs	r3, #7
 2415 055c 80F82430 		strb	r3, [r0, #36]
 370:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2416              		.loc 1 370 7 is_stmt 1 view .LVU673
 370:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2417              		.loc 1 370 36 is_stmt 0 view .LVU674
 2418 0560 0923     		movs	r3, #9
 2419 0562 80F82530 		strb	r3, [r0, #37]
 371:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2420              		.loc 1 371 7 is_stmt 1 view .LVU675
 371:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2421              		.loc 1 371 36 is_stmt 0 view .LVU676
 2422 0566 0123     		movs	r3, #1
 2423 0568 80F82630 		strb	r3, [r0, #38]
 372:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2424              		.loc 1 372 7 is_stmt 1 view .LVU677
 372:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2425              		.loc 1 372 36 is_stmt 0 view .LVU678
 2426 056c FF23     		movs	r3, #255
 2427 056e 80F82A30 		strb	r3, [r0, #42]
 373:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2428              		.loc 1 373 7 is_stmt 1 view .LVU679
 373:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2429              		.loc 1 373 36 is_stmt 0 view .LVU680
 2430 0572 6423     		movs	r3, #100
 2431 0574 80F82B30 		strb	r3, [r0, #43]
 374:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2432              		.loc 1 374 7 is_stmt 1 view .LVU681
 374:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2433              		.loc 1 374 36 is_stmt 0 view .LVU682
 2434 0578 0823     		movs	r3, #8
 2435 057a 0385     		strh	r3, [r0, #40]	@ movhi
 375:Core/Src/main.c ****       break;
 2436              		.loc 1 375 7 is_stmt 1 view .LVU683
 2437 057c FFF7FEFF 		bl	LoRa_init
 2438              	.LVL152:
 376:Core/Src/main.c ****     
 2439              		.loc 1 376 7 view .LVU684
 2440 0580 99E6     		b	.L89
 2441              	.L140:
 380:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_8;            // default = SF_7
 2442              		.loc 1 380 7 view .LVU685
 380:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_8;            // default = SF_7
 2443              		.loc 1 380 36 is_stmt 0 view .LVU686
 2444 0582 1648     		ldr	r0, .L160
 2445 0584 40F2B113 		movw	r3, #433
 2446 0588 0362     		str	r3, [r0, #32]
 381:Core/Src/main.c ****       myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 2447              		.loc 1 381 7 is_stmt 1 view .LVU687
 381:Core/Src/main.c ****       myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 2448              		.loc 1 381 37 is_stmt 0 view .LVU688
 2449 058a 0823     		movs	r3, #8
 2450 058c 80F82430 		strb	r3, [r0, #36]
 382:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2451              		.loc 1 382 7 is_stmt 1 view .LVU689
 382:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 83


 2452              		.loc 1 382 36 is_stmt 0 view .LVU690
 2453 0590 0022     		movs	r2, #0
 2454 0592 80F82520 		strb	r2, [r0, #37]
 383:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2455              		.loc 1 383 7 is_stmt 1 view .LVU691
 383:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2456              		.loc 1 383 36 is_stmt 0 view .LVU692
 2457 0596 0122     		movs	r2, #1
 2458 0598 80F82620 		strb	r2, [r0, #38]
 384:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2459              		.loc 1 384 7 is_stmt 1 view .LVU693
 384:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2460              		.loc 1 384 36 is_stmt 0 view .LVU694
 2461 059c FF22     		movs	r2, #255
 2462 059e 80F82A20 		strb	r2, [r0, #42]
 385:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2463              		.loc 1 385 7 is_stmt 1 view .LVU695
 385:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2464              		.loc 1 385 36 is_stmt 0 view .LVU696
 2465 05a2 6422     		movs	r2, #100
 2466 05a4 80F82B20 		strb	r2, [r0, #43]
 386:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2467              		.loc 1 386 7 is_stmt 1 view .LVU697
 386:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2468              		.loc 1 386 36 is_stmt 0 view .LVU698
 2469 05a8 0385     		strh	r3, [r0, #40]	@ movhi
 387:Core/Src/main.c ****       break;
 2470              		.loc 1 387 7 is_stmt 1 view .LVU699
 2471 05aa FFF7FEFF 		bl	LoRa_init
 2472              	.LVL153:
 388:Core/Src/main.c **** 
 2473              		.loc 1 388 7 view .LVU700
 2474 05ae 82E6     		b	.L89
 2475              	.L139:
 392:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_8;            // default = SF_7
 2476              		.loc 1 392 7 view .LVU701
 392:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_8;            // default = SF_7
 2477              		.loc 1 392 36 is_stmt 0 view .LVU702
 2478 05b0 0A48     		ldr	r0, .L160
 2479 05b2 40F2B113 		movw	r3, #433
 2480 05b6 0362     		str	r3, [r0, #32]
 393:Core/Src/main.c ****       myLoRa.bandWidth             = BW_10_4KHz;       // default = BW_125KHz
 2481              		.loc 1 393 7 is_stmt 1 view .LVU703
 393:Core/Src/main.c ****       myLoRa.bandWidth             = BW_10_4KHz;       // default = BW_125KHz
 2482              		.loc 1 393 37 is_stmt 0 view .LVU704
 2483 05b8 0823     		movs	r3, #8
 2484 05ba 80F82430 		strb	r3, [r0, #36]
 394:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2485              		.loc 1 394 7 is_stmt 1 view .LVU705
 394:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2486              		.loc 1 394 36 is_stmt 0 view .LVU706
 2487 05be 0122     		movs	r2, #1
 2488 05c0 80F82520 		strb	r2, [r0, #37]
 395:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2489              		.loc 1 395 7 is_stmt 1 view .LVU707
 395:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2490              		.loc 1 395 36 is_stmt 0 view .LVU708
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 84


 2491 05c4 80F82620 		strb	r2, [r0, #38]
 396:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2492              		.loc 1 396 7 is_stmt 1 view .LVU709
 396:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2493              		.loc 1 396 36 is_stmt 0 view .LVU710
 2494 05c8 FF22     		movs	r2, #255
 2495 05ca 80F82A20 		strb	r2, [r0, #42]
 397:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2496              		.loc 1 397 7 is_stmt 1 view .LVU711
 397:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2497              		.loc 1 397 36 is_stmt 0 view .LVU712
 2498 05ce 6422     		movs	r2, #100
 2499 05d0 80F82B20 		strb	r2, [r0, #43]
 398:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2500              		.loc 1 398 7 is_stmt 1 view .LVU713
 398:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2501              		.loc 1 398 36 is_stmt 0 view .LVU714
 2502 05d4 0385     		strh	r3, [r0, #40]	@ movhi
 399:Core/Src/main.c ****       break;
 2503              		.loc 1 399 7 is_stmt 1 view .LVU715
 2504 05d6 FFF7FEFF 		bl	LoRa_init
 2505              	.LVL154:
 400:Core/Src/main.c **** 
 2506              		.loc 1 400 7 view .LVU716
 2507 05da 6CE6     		b	.L89
 2508              	.L161:
 2509              		.align	2
 2510              	.L160:
 2511 05dc 00000000 		.word	myLoRa
 2512 05e0 00000000 		.word	bModeChanged
 2513 05e4 00000000 		.word	gps_raw
 2514 05e8 00000000 		.word	huart1
 2515 05ec 00000000 		.word	beginTransmit
 2516 05f0 00000000 		.word	iMode
 2517              	.L138:
 404:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_8;            // default = SF_7
 2518              		.loc 1 404 7 view .LVU717
 404:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_8;            // default = SF_7
 2519              		.loc 1 404 36 is_stmt 0 view .LVU718
 2520 05f4 D148     		ldr	r0, .L162
 2521 05f6 40F2B113 		movw	r3, #433
 2522 05fa 0362     		str	r3, [r0, #32]
 405:Core/Src/main.c ****       myLoRa.bandWidth             = BW_15_6KHz;       // default = BW_125KHz
 2523              		.loc 1 405 7 is_stmt 1 view .LVU719
 405:Core/Src/main.c ****       myLoRa.bandWidth             = BW_15_6KHz;       // default = BW_125KHz
 2524              		.loc 1 405 37 is_stmt 0 view .LVU720
 2525 05fc 0823     		movs	r3, #8
 2526 05fe 80F82430 		strb	r3, [r0, #36]
 406:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2527              		.loc 1 406 7 is_stmt 1 view .LVU721
 406:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2528              		.loc 1 406 36 is_stmt 0 view .LVU722
 2529 0602 0222     		movs	r2, #2
 2530 0604 80F82520 		strb	r2, [r0, #37]
 407:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2531              		.loc 1 407 7 is_stmt 1 view .LVU723
 407:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 85


 2532              		.loc 1 407 36 is_stmt 0 view .LVU724
 2533 0608 0122     		movs	r2, #1
 2534 060a 80F82620 		strb	r2, [r0, #38]
 408:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2535              		.loc 1 408 7 is_stmt 1 view .LVU725
 408:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2536              		.loc 1 408 36 is_stmt 0 view .LVU726
 2537 060e FF22     		movs	r2, #255
 2538 0610 80F82A20 		strb	r2, [r0, #42]
 409:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2539              		.loc 1 409 7 is_stmt 1 view .LVU727
 409:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2540              		.loc 1 409 36 is_stmt 0 view .LVU728
 2541 0614 6422     		movs	r2, #100
 2542 0616 80F82B20 		strb	r2, [r0, #43]
 410:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2543              		.loc 1 410 7 is_stmt 1 view .LVU729
 410:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2544              		.loc 1 410 36 is_stmt 0 view .LVU730
 2545 061a 0385     		strh	r3, [r0, #40]	@ movhi
 411:Core/Src/main.c ****       break;
 2546              		.loc 1 411 7 is_stmt 1 view .LVU731
 2547 061c FFF7FEFF 		bl	LoRa_init
 2548              	.LVL155:
 412:Core/Src/main.c **** 
 2549              		.loc 1 412 7 view .LVU732
 2550 0620 49E6     		b	.L89
 2551              	.L137:
 416:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_8;            // default = SF_7
 2552              		.loc 1 416 7 view .LVU733
 416:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_8;            // default = SF_7
 2553              		.loc 1 416 36 is_stmt 0 view .LVU734
 2554 0622 C648     		ldr	r0, .L162
 2555 0624 40F2B113 		movw	r3, #433
 2556 0628 0362     		str	r3, [r0, #32]
 417:Core/Src/main.c ****       myLoRa.bandWidth             = BW_20_8KHz;       // default = BW_125KHz
 2557              		.loc 1 417 7 is_stmt 1 view .LVU735
 417:Core/Src/main.c ****       myLoRa.bandWidth             = BW_20_8KHz;       // default = BW_125KHz
 2558              		.loc 1 417 37 is_stmt 0 view .LVU736
 2559 062a 0823     		movs	r3, #8
 2560 062c 80F82430 		strb	r3, [r0, #36]
 418:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2561              		.loc 1 418 7 is_stmt 1 view .LVU737
 418:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2562              		.loc 1 418 36 is_stmt 0 view .LVU738
 2563 0630 0322     		movs	r2, #3
 2564 0632 80F82520 		strb	r2, [r0, #37]
 419:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2565              		.loc 1 419 7 is_stmt 1 view .LVU739
 419:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2566              		.loc 1 419 36 is_stmt 0 view .LVU740
 2567 0636 0122     		movs	r2, #1
 2568 0638 80F82620 		strb	r2, [r0, #38]
 420:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2569              		.loc 1 420 7 is_stmt 1 view .LVU741
 420:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2570              		.loc 1 420 36 is_stmt 0 view .LVU742
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 86


 2571 063c FF22     		movs	r2, #255
 2572 063e 80F82A20 		strb	r2, [r0, #42]
 421:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2573              		.loc 1 421 7 is_stmt 1 view .LVU743
 421:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2574              		.loc 1 421 36 is_stmt 0 view .LVU744
 2575 0642 6422     		movs	r2, #100
 2576 0644 80F82B20 		strb	r2, [r0, #43]
 422:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2577              		.loc 1 422 7 is_stmt 1 view .LVU745
 422:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2578              		.loc 1 422 36 is_stmt 0 view .LVU746
 2579 0648 0385     		strh	r3, [r0, #40]	@ movhi
 423:Core/Src/main.c ****       break;
 2580              		.loc 1 423 7 is_stmt 1 view .LVU747
 2581 064a FFF7FEFF 		bl	LoRa_init
 2582              	.LVL156:
 424:Core/Src/main.c **** 
 2583              		.loc 1 424 7 view .LVU748
 2584 064e 32E6     		b	.L89
 2585              	.L136:
 428:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_8;            // default = SF_7
 2586              		.loc 1 428 7 view .LVU749
 428:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_8;            // default = SF_7
 2587              		.loc 1 428 36 is_stmt 0 view .LVU750
 2588 0650 BA48     		ldr	r0, .L162
 2589 0652 40F2B113 		movw	r3, #433
 2590 0656 0362     		str	r3, [r0, #32]
 429:Core/Src/main.c ****       myLoRa.bandWidth             = BW_31_25KHz;       // default = BW_125KHz
 2591              		.loc 1 429 7 is_stmt 1 view .LVU751
 429:Core/Src/main.c ****       myLoRa.bandWidth             = BW_31_25KHz;       // default = BW_125KHz
 2592              		.loc 1 429 37 is_stmt 0 view .LVU752
 2593 0658 0823     		movs	r3, #8
 2594 065a 80F82430 		strb	r3, [r0, #36]
 430:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2595              		.loc 1 430 7 is_stmt 1 view .LVU753
 430:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2596              		.loc 1 430 36 is_stmt 0 view .LVU754
 2597 065e 0422     		movs	r2, #4
 2598 0660 80F82520 		strb	r2, [r0, #37]
 431:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2599              		.loc 1 431 7 is_stmt 1 view .LVU755
 431:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2600              		.loc 1 431 36 is_stmt 0 view .LVU756
 2601 0664 0122     		movs	r2, #1
 2602 0666 80F82620 		strb	r2, [r0, #38]
 432:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2603              		.loc 1 432 7 is_stmt 1 view .LVU757
 432:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2604              		.loc 1 432 36 is_stmt 0 view .LVU758
 2605 066a FF22     		movs	r2, #255
 2606 066c 80F82A20 		strb	r2, [r0, #42]
 433:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2607              		.loc 1 433 7 is_stmt 1 view .LVU759
 433:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2608              		.loc 1 433 36 is_stmt 0 view .LVU760
 2609 0670 6422     		movs	r2, #100
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 87


 2610 0672 80F82B20 		strb	r2, [r0, #43]
 434:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2611              		.loc 1 434 7 is_stmt 1 view .LVU761
 434:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2612              		.loc 1 434 36 is_stmt 0 view .LVU762
 2613 0676 0385     		strh	r3, [r0, #40]	@ movhi
 435:Core/Src/main.c ****       break;
 2614              		.loc 1 435 7 is_stmt 1 view .LVU763
 2615 0678 FFF7FEFF 		bl	LoRa_init
 2616              	.LVL157:
 436:Core/Src/main.c **** 
 2617              		.loc 1 436 7 view .LVU764
 2618 067c 1BE6     		b	.L89
 2619              	.L135:
 440:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_8;            // default = SF_7
 2620              		.loc 1 440 7 view .LVU765
 440:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_8;            // default = SF_7
 2621              		.loc 1 440 36 is_stmt 0 view .LVU766
 2622 067e AF48     		ldr	r0, .L162
 2623 0680 40F2B113 		movw	r3, #433
 2624 0684 0362     		str	r3, [r0, #32]
 441:Core/Src/main.c ****       myLoRa.bandWidth             = BW_41_7KHz;       // default = BW_125KHz
 2625              		.loc 1 441 7 is_stmt 1 view .LVU767
 441:Core/Src/main.c ****       myLoRa.bandWidth             = BW_41_7KHz;       // default = BW_125KHz
 2626              		.loc 1 441 37 is_stmt 0 view .LVU768
 2627 0686 0823     		movs	r3, #8
 2628 0688 80F82430 		strb	r3, [r0, #36]
 442:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2629              		.loc 1 442 7 is_stmt 1 view .LVU769
 442:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2630              		.loc 1 442 36 is_stmt 0 view .LVU770
 2631 068c 0522     		movs	r2, #5
 2632 068e 80F82520 		strb	r2, [r0, #37]
 443:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2633              		.loc 1 443 7 is_stmt 1 view .LVU771
 443:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2634              		.loc 1 443 36 is_stmt 0 view .LVU772
 2635 0692 0122     		movs	r2, #1
 2636 0694 80F82620 		strb	r2, [r0, #38]
 444:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2637              		.loc 1 444 7 is_stmt 1 view .LVU773
 444:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2638              		.loc 1 444 36 is_stmt 0 view .LVU774
 2639 0698 FF22     		movs	r2, #255
 2640 069a 80F82A20 		strb	r2, [r0, #42]
 445:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2641              		.loc 1 445 7 is_stmt 1 view .LVU775
 445:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2642              		.loc 1 445 36 is_stmt 0 view .LVU776
 2643 069e 6422     		movs	r2, #100
 2644 06a0 80F82B20 		strb	r2, [r0, #43]
 446:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2645              		.loc 1 446 7 is_stmt 1 view .LVU777
 446:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2646              		.loc 1 446 36 is_stmt 0 view .LVU778
 2647 06a4 0385     		strh	r3, [r0, #40]	@ movhi
 447:Core/Src/main.c ****       break;
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 88


 2648              		.loc 1 447 7 is_stmt 1 view .LVU779
 2649 06a6 FFF7FEFF 		bl	LoRa_init
 2650              	.LVL158:
 448:Core/Src/main.c **** 
 2651              		.loc 1 448 7 view .LVU780
 2652 06aa 04E6     		b	.L89
 2653              	.L134:
 452:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_8;            // default = SF_7
 2654              		.loc 1 452 7 view .LVU781
 452:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_8;            // default = SF_7
 2655              		.loc 1 452 36 is_stmt 0 view .LVU782
 2656 06ac A348     		ldr	r0, .L162
 2657 06ae 40F2B113 		movw	r3, #433
 2658 06b2 0362     		str	r3, [r0, #32]
 453:Core/Src/main.c ****       myLoRa.bandWidth             = BW_62_5KHz;       // default = BW_125KHz
 2659              		.loc 1 453 7 is_stmt 1 view .LVU783
 453:Core/Src/main.c ****       myLoRa.bandWidth             = BW_62_5KHz;       // default = BW_125KHz
 2660              		.loc 1 453 37 is_stmt 0 view .LVU784
 2661 06b4 0823     		movs	r3, #8
 2662 06b6 80F82430 		strb	r3, [r0, #36]
 454:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2663              		.loc 1 454 7 is_stmt 1 view .LVU785
 454:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2664              		.loc 1 454 36 is_stmt 0 view .LVU786
 2665 06ba 0622     		movs	r2, #6
 2666 06bc 80F82520 		strb	r2, [r0, #37]
 455:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2667              		.loc 1 455 7 is_stmt 1 view .LVU787
 455:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2668              		.loc 1 455 36 is_stmt 0 view .LVU788
 2669 06c0 0122     		movs	r2, #1
 2670 06c2 80F82620 		strb	r2, [r0, #38]
 456:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2671              		.loc 1 456 7 is_stmt 1 view .LVU789
 456:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2672              		.loc 1 456 36 is_stmt 0 view .LVU790
 2673 06c6 FF22     		movs	r2, #255
 2674 06c8 80F82A20 		strb	r2, [r0, #42]
 457:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2675              		.loc 1 457 7 is_stmt 1 view .LVU791
 457:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2676              		.loc 1 457 36 is_stmt 0 view .LVU792
 2677 06cc 6422     		movs	r2, #100
 2678 06ce 80F82B20 		strb	r2, [r0, #43]
 458:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2679              		.loc 1 458 7 is_stmt 1 view .LVU793
 458:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2680              		.loc 1 458 36 is_stmt 0 view .LVU794
 2681 06d2 0385     		strh	r3, [r0, #40]	@ movhi
 459:Core/Src/main.c ****       break;
 2682              		.loc 1 459 7 is_stmt 1 view .LVU795
 2683 06d4 FFF7FEFF 		bl	LoRa_init
 2684              	.LVL159:
 460:Core/Src/main.c **** 
 2685              		.loc 1 460 7 view .LVU796
 2686 06d8 EDE5     		b	.L89
 2687              	.L133:
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 89


 464:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_8;            // default = SF_7
 2688              		.loc 1 464 7 view .LVU797
 464:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_8;            // default = SF_7
 2689              		.loc 1 464 36 is_stmt 0 view .LVU798
 2690 06da 9848     		ldr	r0, .L162
 2691 06dc 40F2B113 		movw	r3, #433
 2692 06e0 0362     		str	r3, [r0, #32]
 465:Core/Src/main.c ****       myLoRa.bandWidth             = BW_125KHz;       // default = BW_125KHz
 2693              		.loc 1 465 7 is_stmt 1 view .LVU799
 465:Core/Src/main.c ****       myLoRa.bandWidth             = BW_125KHz;       // default = BW_125KHz
 2694              		.loc 1 465 37 is_stmt 0 view .LVU800
 2695 06e2 0823     		movs	r3, #8
 2696 06e4 80F82430 		strb	r3, [r0, #36]
 466:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2697              		.loc 1 466 7 is_stmt 1 view .LVU801
 466:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2698              		.loc 1 466 36 is_stmt 0 view .LVU802
 2699 06e8 0722     		movs	r2, #7
 2700 06ea 80F82520 		strb	r2, [r0, #37]
 467:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2701              		.loc 1 467 7 is_stmt 1 view .LVU803
 467:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2702              		.loc 1 467 36 is_stmt 0 view .LVU804
 2703 06ee 0122     		movs	r2, #1
 2704 06f0 80F82620 		strb	r2, [r0, #38]
 468:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2705              		.loc 1 468 7 is_stmt 1 view .LVU805
 468:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2706              		.loc 1 468 36 is_stmt 0 view .LVU806
 2707 06f4 FF22     		movs	r2, #255
 2708 06f6 80F82A20 		strb	r2, [r0, #42]
 469:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2709              		.loc 1 469 7 is_stmt 1 view .LVU807
 469:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2710              		.loc 1 469 36 is_stmt 0 view .LVU808
 2711 06fa 6422     		movs	r2, #100
 2712 06fc 80F82B20 		strb	r2, [r0, #43]
 470:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2713              		.loc 1 470 7 is_stmt 1 view .LVU809
 470:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2714              		.loc 1 470 36 is_stmt 0 view .LVU810
 2715 0700 0385     		strh	r3, [r0, #40]	@ movhi
 471:Core/Src/main.c ****       break;
 2716              		.loc 1 471 7 is_stmt 1 view .LVU811
 2717 0702 FFF7FEFF 		bl	LoRa_init
 2718              	.LVL160:
 472:Core/Src/main.c **** 
 2719              		.loc 1 472 7 view .LVU812
 2720 0706 D6E5     		b	.L89
 2721              	.L132:
 476:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_8;            // default = SF_7
 2722              		.loc 1 476 7 view .LVU813
 476:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_8;            // default = SF_7
 2723              		.loc 1 476 36 is_stmt 0 view .LVU814
 2724 0708 8C48     		ldr	r0, .L162
 2725 070a 40F2B113 		movw	r3, #433
 2726 070e 0362     		str	r3, [r0, #32]
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 90


 477:Core/Src/main.c ****       myLoRa.bandWidth             = BW_250KHz;       // default = BW_125KHz
 2727              		.loc 1 477 7 is_stmt 1 view .LVU815
 477:Core/Src/main.c ****       myLoRa.bandWidth             = BW_250KHz;       // default = BW_125KHz
 2728              		.loc 1 477 37 is_stmt 0 view .LVU816
 2729 0710 0823     		movs	r3, #8
 2730 0712 80F82430 		strb	r3, [r0, #36]
 478:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2731              		.loc 1 478 7 is_stmt 1 view .LVU817
 478:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2732              		.loc 1 478 36 is_stmt 0 view .LVU818
 2733 0716 80F82530 		strb	r3, [r0, #37]
 479:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2734              		.loc 1 479 7 is_stmt 1 view .LVU819
 479:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2735              		.loc 1 479 36 is_stmt 0 view .LVU820
 2736 071a 0122     		movs	r2, #1
 2737 071c 80F82620 		strb	r2, [r0, #38]
 480:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2738              		.loc 1 480 7 is_stmt 1 view .LVU821
 480:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2739              		.loc 1 480 36 is_stmt 0 view .LVU822
 2740 0720 FF22     		movs	r2, #255
 2741 0722 80F82A20 		strb	r2, [r0, #42]
 481:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2742              		.loc 1 481 7 is_stmt 1 view .LVU823
 481:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2743              		.loc 1 481 36 is_stmt 0 view .LVU824
 2744 0726 6422     		movs	r2, #100
 2745 0728 80F82B20 		strb	r2, [r0, #43]
 482:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2746              		.loc 1 482 7 is_stmt 1 view .LVU825
 482:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2747              		.loc 1 482 36 is_stmt 0 view .LVU826
 2748 072c 0385     		strh	r3, [r0, #40]	@ movhi
 483:Core/Src/main.c ****       break;
 2749              		.loc 1 483 7 is_stmt 1 view .LVU827
 2750 072e FFF7FEFF 		bl	LoRa_init
 2751              	.LVL161:
 484:Core/Src/main.c **** 
 2752              		.loc 1 484 7 view .LVU828
 2753 0732 C0E5     		b	.L89
 2754              	.L131:
 488:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_8;            // default = SF_7
 2755              		.loc 1 488 7 view .LVU829
 488:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_8;            // default = SF_7
 2756              		.loc 1 488 36 is_stmt 0 view .LVU830
 2757 0734 8148     		ldr	r0, .L162
 2758 0736 40F2B113 		movw	r3, #433
 2759 073a 0362     		str	r3, [r0, #32]
 489:Core/Src/main.c ****       myLoRa.bandWidth             = BW_500KHz;       // default = BW_125KHz
 2760              		.loc 1 489 7 is_stmt 1 view .LVU831
 489:Core/Src/main.c ****       myLoRa.bandWidth             = BW_500KHz;       // default = BW_125KHz
 2761              		.loc 1 489 37 is_stmt 0 view .LVU832
 2762 073c 0823     		movs	r3, #8
 2763 073e 80F82430 		strb	r3, [r0, #36]
 490:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2764              		.loc 1 490 7 is_stmt 1 view .LVU833
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 91


 490:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2765              		.loc 1 490 36 is_stmt 0 view .LVU834
 2766 0742 0922     		movs	r2, #9
 2767 0744 80F82520 		strb	r2, [r0, #37]
 491:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2768              		.loc 1 491 7 is_stmt 1 view .LVU835
 491:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2769              		.loc 1 491 36 is_stmt 0 view .LVU836
 2770 0748 0122     		movs	r2, #1
 2771 074a 80F82620 		strb	r2, [r0, #38]
 492:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2772              		.loc 1 492 7 is_stmt 1 view .LVU837
 492:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2773              		.loc 1 492 36 is_stmt 0 view .LVU838
 2774 074e FF22     		movs	r2, #255
 2775 0750 80F82A20 		strb	r2, [r0, #42]
 493:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2776              		.loc 1 493 7 is_stmt 1 view .LVU839
 493:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2777              		.loc 1 493 36 is_stmt 0 view .LVU840
 2778 0754 6422     		movs	r2, #100
 2779 0756 80F82B20 		strb	r2, [r0, #43]
 494:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2780              		.loc 1 494 7 is_stmt 1 view .LVU841
 494:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2781              		.loc 1 494 36 is_stmt 0 view .LVU842
 2782 075a 0385     		strh	r3, [r0, #40]	@ movhi
 495:Core/Src/main.c ****       break;
 2783              		.loc 1 495 7 is_stmt 1 view .LVU843
 2784 075c FFF7FEFF 		bl	LoRa_init
 2785              	.LVL162:
 496:Core/Src/main.c **** 
 2786              		.loc 1 496 7 view .LVU844
 2787 0760 A9E5     		b	.L89
 2788              	.L130:
 500:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_9;            // default = SF_7
 2789              		.loc 1 500 7 view .LVU845
 500:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_9;            // default = SF_7
 2790              		.loc 1 500 36 is_stmt 0 view .LVU846
 2791 0762 7648     		ldr	r0, .L162
 2792 0764 40F2B113 		movw	r3, #433
 2793 0768 0362     		str	r3, [r0, #32]
 501:Core/Src/main.c ****       myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 2794              		.loc 1 501 7 is_stmt 1 view .LVU847
 501:Core/Src/main.c ****       myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 2795              		.loc 1 501 37 is_stmt 0 view .LVU848
 2796 076a 0923     		movs	r3, #9
 2797 076c 80F82430 		strb	r3, [r0, #36]
 502:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2798              		.loc 1 502 7 is_stmt 1 view .LVU849
 502:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2799              		.loc 1 502 36 is_stmt 0 view .LVU850
 2800 0770 0023     		movs	r3, #0
 2801 0772 80F82530 		strb	r3, [r0, #37]
 503:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2802              		.loc 1 503 7 is_stmt 1 view .LVU851
 503:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 92


 2803              		.loc 1 503 36 is_stmt 0 view .LVU852
 2804 0776 0123     		movs	r3, #1
 2805 0778 80F82630 		strb	r3, [r0, #38]
 504:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2806              		.loc 1 504 7 is_stmt 1 view .LVU853
 504:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2807              		.loc 1 504 36 is_stmt 0 view .LVU854
 2808 077c FF23     		movs	r3, #255
 2809 077e 80F82A30 		strb	r3, [r0, #42]
 505:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2810              		.loc 1 505 7 is_stmt 1 view .LVU855
 505:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2811              		.loc 1 505 36 is_stmt 0 view .LVU856
 2812 0782 6423     		movs	r3, #100
 2813 0784 80F82B30 		strb	r3, [r0, #43]
 506:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2814              		.loc 1 506 7 is_stmt 1 view .LVU857
 506:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2815              		.loc 1 506 36 is_stmt 0 view .LVU858
 2816 0788 0823     		movs	r3, #8
 2817 078a 0385     		strh	r3, [r0, #40]	@ movhi
 507:Core/Src/main.c ****       break;
 2818              		.loc 1 507 7 is_stmt 1 view .LVU859
 2819 078c FFF7FEFF 		bl	LoRa_init
 2820              	.LVL163:
 508:Core/Src/main.c **** 
 2821              		.loc 1 508 7 view .LVU860
 2822 0790 91E5     		b	.L89
 2823              	.L129:
 512:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_9;            // default = SF_7
 2824              		.loc 1 512 7 view .LVU861
 512:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_9;            // default = SF_7
 2825              		.loc 1 512 36 is_stmt 0 view .LVU862
 2826 0792 6A48     		ldr	r0, .L162
 2827 0794 40F2B113 		movw	r3, #433
 2828 0798 0362     		str	r3, [r0, #32]
 513:Core/Src/main.c ****       myLoRa.bandWidth             = BW_10_4KHz;       // default = BW_125KHz
 2829              		.loc 1 513 7 is_stmt 1 view .LVU863
 513:Core/Src/main.c ****       myLoRa.bandWidth             = BW_10_4KHz;       // default = BW_125KHz
 2830              		.loc 1 513 37 is_stmt 0 view .LVU864
 2831 079a 0923     		movs	r3, #9
 2832 079c 80F82430 		strb	r3, [r0, #36]
 514:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2833              		.loc 1 514 7 is_stmt 1 view .LVU865
 514:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2834              		.loc 1 514 36 is_stmt 0 view .LVU866
 2835 07a0 0123     		movs	r3, #1
 2836 07a2 80F82530 		strb	r3, [r0, #37]
 515:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2837              		.loc 1 515 7 is_stmt 1 view .LVU867
 515:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2838              		.loc 1 515 36 is_stmt 0 view .LVU868
 2839 07a6 80F82630 		strb	r3, [r0, #38]
 516:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2840              		.loc 1 516 7 is_stmt 1 view .LVU869
 516:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2841              		.loc 1 516 36 is_stmt 0 view .LVU870
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 93


 2842 07aa FF23     		movs	r3, #255
 2843 07ac 80F82A30 		strb	r3, [r0, #42]
 517:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2844              		.loc 1 517 7 is_stmt 1 view .LVU871
 517:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2845              		.loc 1 517 36 is_stmt 0 view .LVU872
 2846 07b0 6423     		movs	r3, #100
 2847 07b2 80F82B30 		strb	r3, [r0, #43]
 518:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2848              		.loc 1 518 7 is_stmt 1 view .LVU873
 518:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2849              		.loc 1 518 36 is_stmt 0 view .LVU874
 2850 07b6 0823     		movs	r3, #8
 2851 07b8 0385     		strh	r3, [r0, #40]	@ movhi
 519:Core/Src/main.c ****       break;
 2852              		.loc 1 519 7 is_stmt 1 view .LVU875
 2853 07ba FFF7FEFF 		bl	LoRa_init
 2854              	.LVL164:
 520:Core/Src/main.c **** 
 2855              		.loc 1 520 7 view .LVU876
 2856 07be 7AE5     		b	.L89
 2857              	.L128:
 524:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_9;            // default = SF_7
 2858              		.loc 1 524 7 view .LVU877
 524:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_9;            // default = SF_7
 2859              		.loc 1 524 36 is_stmt 0 view .LVU878
 2860 07c0 5E48     		ldr	r0, .L162
 2861 07c2 40F2B113 		movw	r3, #433
 2862 07c6 0362     		str	r3, [r0, #32]
 525:Core/Src/main.c ****       myLoRa.bandWidth             = BW_15_6KHz;       // default = BW_125KHz
 2863              		.loc 1 525 7 is_stmt 1 view .LVU879
 525:Core/Src/main.c ****       myLoRa.bandWidth             = BW_15_6KHz;       // default = BW_125KHz
 2864              		.loc 1 525 37 is_stmt 0 view .LVU880
 2865 07c8 0923     		movs	r3, #9
 2866 07ca 80F82430 		strb	r3, [r0, #36]
 526:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2867              		.loc 1 526 7 is_stmt 1 view .LVU881
 526:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2868              		.loc 1 526 36 is_stmt 0 view .LVU882
 2869 07ce 0223     		movs	r3, #2
 2870 07d0 80F82530 		strb	r3, [r0, #37]
 527:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2871              		.loc 1 527 7 is_stmt 1 view .LVU883
 527:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2872              		.loc 1 527 36 is_stmt 0 view .LVU884
 2873 07d4 0123     		movs	r3, #1
 2874 07d6 80F82630 		strb	r3, [r0, #38]
 528:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2875              		.loc 1 528 7 is_stmt 1 view .LVU885
 528:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2876              		.loc 1 528 36 is_stmt 0 view .LVU886
 2877 07da FF23     		movs	r3, #255
 2878 07dc 80F82A30 		strb	r3, [r0, #42]
 529:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2879              		.loc 1 529 7 is_stmt 1 view .LVU887
 529:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2880              		.loc 1 529 36 is_stmt 0 view .LVU888
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 94


 2881 07e0 6423     		movs	r3, #100
 2882 07e2 80F82B30 		strb	r3, [r0, #43]
 530:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2883              		.loc 1 530 7 is_stmt 1 view .LVU889
 530:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2884              		.loc 1 530 36 is_stmt 0 view .LVU890
 2885 07e6 0823     		movs	r3, #8
 2886 07e8 0385     		strh	r3, [r0, #40]	@ movhi
 531:Core/Src/main.c ****       break;
 2887              		.loc 1 531 7 is_stmt 1 view .LVU891
 2888 07ea FFF7FEFF 		bl	LoRa_init
 2889              	.LVL165:
 532:Core/Src/main.c **** 
 2890              		.loc 1 532 7 view .LVU892
 2891 07ee 62E5     		b	.L89
 2892              	.L127:
 536:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_9;            // default = SF_7
 2893              		.loc 1 536 7 view .LVU893
 536:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_9;            // default = SF_7
 2894              		.loc 1 536 36 is_stmt 0 view .LVU894
 2895 07f0 5248     		ldr	r0, .L162
 2896 07f2 40F2B113 		movw	r3, #433
 2897 07f6 0362     		str	r3, [r0, #32]
 537:Core/Src/main.c ****       myLoRa.bandWidth             = BW_20_8KHz;       // default = BW_125KHz
 2898              		.loc 1 537 7 is_stmt 1 view .LVU895
 537:Core/Src/main.c ****       myLoRa.bandWidth             = BW_20_8KHz;       // default = BW_125KHz
 2899              		.loc 1 537 37 is_stmt 0 view .LVU896
 2900 07f8 0923     		movs	r3, #9
 2901 07fa 80F82430 		strb	r3, [r0, #36]
 538:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2902              		.loc 1 538 7 is_stmt 1 view .LVU897
 538:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2903              		.loc 1 538 36 is_stmt 0 view .LVU898
 2904 07fe 0323     		movs	r3, #3
 2905 0800 80F82530 		strb	r3, [r0, #37]
 539:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2906              		.loc 1 539 7 is_stmt 1 view .LVU899
 539:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2907              		.loc 1 539 36 is_stmt 0 view .LVU900
 2908 0804 0123     		movs	r3, #1
 2909 0806 80F82630 		strb	r3, [r0, #38]
 540:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2910              		.loc 1 540 7 is_stmt 1 view .LVU901
 540:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2911              		.loc 1 540 36 is_stmt 0 view .LVU902
 2912 080a FF23     		movs	r3, #255
 2913 080c 80F82A30 		strb	r3, [r0, #42]
 541:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2914              		.loc 1 541 7 is_stmt 1 view .LVU903
 541:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2915              		.loc 1 541 36 is_stmt 0 view .LVU904
 2916 0810 6423     		movs	r3, #100
 2917 0812 80F82B30 		strb	r3, [r0, #43]
 542:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2918              		.loc 1 542 7 is_stmt 1 view .LVU905
 542:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2919              		.loc 1 542 36 is_stmt 0 view .LVU906
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 95


 2920 0816 0823     		movs	r3, #8
 2921 0818 0385     		strh	r3, [r0, #40]	@ movhi
 543:Core/Src/main.c ****       break;
 2922              		.loc 1 543 7 is_stmt 1 view .LVU907
 2923 081a FFF7FEFF 		bl	LoRa_init
 2924              	.LVL166:
 544:Core/Src/main.c **** 
 2925              		.loc 1 544 7 view .LVU908
 2926 081e 4AE5     		b	.L89
 2927              	.L126:
 548:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_9;            // default = SF_7
 2928              		.loc 1 548 7 view .LVU909
 548:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_9;            // default = SF_7
 2929              		.loc 1 548 36 is_stmt 0 view .LVU910
 2930 0820 4648     		ldr	r0, .L162
 2931 0822 40F2B113 		movw	r3, #433
 2932 0826 0362     		str	r3, [r0, #32]
 549:Core/Src/main.c ****       myLoRa.bandWidth             = BW_31_25KHz;       // default = BW_125KHz
 2933              		.loc 1 549 7 is_stmt 1 view .LVU911
 549:Core/Src/main.c ****       myLoRa.bandWidth             = BW_31_25KHz;       // default = BW_125KHz
 2934              		.loc 1 549 37 is_stmt 0 view .LVU912
 2935 0828 0923     		movs	r3, #9
 2936 082a 80F82430 		strb	r3, [r0, #36]
 550:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2937              		.loc 1 550 7 is_stmt 1 view .LVU913
 550:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2938              		.loc 1 550 36 is_stmt 0 view .LVU914
 2939 082e 0423     		movs	r3, #4
 2940 0830 80F82530 		strb	r3, [r0, #37]
 551:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2941              		.loc 1 551 7 is_stmt 1 view .LVU915
 551:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2942              		.loc 1 551 36 is_stmt 0 view .LVU916
 2943 0834 0123     		movs	r3, #1
 2944 0836 80F82630 		strb	r3, [r0, #38]
 552:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2945              		.loc 1 552 7 is_stmt 1 view .LVU917
 552:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2946              		.loc 1 552 36 is_stmt 0 view .LVU918
 2947 083a FF23     		movs	r3, #255
 2948 083c 80F82A30 		strb	r3, [r0, #42]
 553:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2949              		.loc 1 553 7 is_stmt 1 view .LVU919
 553:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2950              		.loc 1 553 36 is_stmt 0 view .LVU920
 2951 0840 6423     		movs	r3, #100
 2952 0842 80F82B30 		strb	r3, [r0, #43]
 554:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2953              		.loc 1 554 7 is_stmt 1 view .LVU921
 554:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2954              		.loc 1 554 36 is_stmt 0 view .LVU922
 2955 0846 0823     		movs	r3, #8
 2956 0848 0385     		strh	r3, [r0, #40]	@ movhi
 555:Core/Src/main.c ****       break;
 2957              		.loc 1 555 7 is_stmt 1 view .LVU923
 2958 084a FFF7FEFF 		bl	LoRa_init
 2959              	.LVL167:
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 96


 556:Core/Src/main.c **** 
 2960              		.loc 1 556 7 view .LVU924
 2961 084e 32E5     		b	.L89
 2962              	.L125:
 560:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_9;            // default = SF_7
 2963              		.loc 1 560 7 view .LVU925
 560:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_9;            // default = SF_7
 2964              		.loc 1 560 36 is_stmt 0 view .LVU926
 2965 0850 3A48     		ldr	r0, .L162
 2966 0852 40F2B113 		movw	r3, #433
 2967 0856 0362     		str	r3, [r0, #32]
 561:Core/Src/main.c ****       myLoRa.bandWidth             = BW_41_7KHz;       // default = BW_125KHz
 2968              		.loc 1 561 7 is_stmt 1 view .LVU927
 561:Core/Src/main.c ****       myLoRa.bandWidth             = BW_41_7KHz;       // default = BW_125KHz
 2969              		.loc 1 561 37 is_stmt 0 view .LVU928
 2970 0858 0923     		movs	r3, #9
 2971 085a 80F82430 		strb	r3, [r0, #36]
 562:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2972              		.loc 1 562 7 is_stmt 1 view .LVU929
 562:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2973              		.loc 1 562 36 is_stmt 0 view .LVU930
 2974 085e 0523     		movs	r3, #5
 2975 0860 80F82530 		strb	r3, [r0, #37]
 563:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2976              		.loc 1 563 7 is_stmt 1 view .LVU931
 563:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2977              		.loc 1 563 36 is_stmt 0 view .LVU932
 2978 0864 0123     		movs	r3, #1
 2979 0866 80F82630 		strb	r3, [r0, #38]
 564:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2980              		.loc 1 564 7 is_stmt 1 view .LVU933
 564:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2981              		.loc 1 564 36 is_stmt 0 view .LVU934
 2982 086a FF23     		movs	r3, #255
 2983 086c 80F82A30 		strb	r3, [r0, #42]
 565:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2984              		.loc 1 565 7 is_stmt 1 view .LVU935
 565:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2985              		.loc 1 565 36 is_stmt 0 view .LVU936
 2986 0870 6423     		movs	r3, #100
 2987 0872 80F82B30 		strb	r3, [r0, #43]
 566:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2988              		.loc 1 566 7 is_stmt 1 view .LVU937
 566:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2989              		.loc 1 566 36 is_stmt 0 view .LVU938
 2990 0876 0823     		movs	r3, #8
 2991 0878 0385     		strh	r3, [r0, #40]	@ movhi
 567:Core/Src/main.c ****       break;
 2992              		.loc 1 567 7 is_stmt 1 view .LVU939
 2993 087a FFF7FEFF 		bl	LoRa_init
 2994              	.LVL168:
 568:Core/Src/main.c **** 
 2995              		.loc 1 568 7 view .LVU940
 2996 087e 1AE5     		b	.L89
 2997              	.L124:
 572:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_9;            // default = SF_7
 2998              		.loc 1 572 7 view .LVU941
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 97


 572:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_9;            // default = SF_7
 2999              		.loc 1 572 36 is_stmt 0 view .LVU942
 3000 0880 2E48     		ldr	r0, .L162
 3001 0882 40F2B113 		movw	r3, #433
 3002 0886 0362     		str	r3, [r0, #32]
 573:Core/Src/main.c ****       myLoRa.bandWidth             = BW_62_5KHz;       // default = BW_125KHz
 3003              		.loc 1 573 7 is_stmt 1 view .LVU943
 573:Core/Src/main.c ****       myLoRa.bandWidth             = BW_62_5KHz;       // default = BW_125KHz
 3004              		.loc 1 573 37 is_stmt 0 view .LVU944
 3005 0888 0923     		movs	r3, #9
 3006 088a 80F82430 		strb	r3, [r0, #36]
 574:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3007              		.loc 1 574 7 is_stmt 1 view .LVU945
 574:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3008              		.loc 1 574 36 is_stmt 0 view .LVU946
 3009 088e 0623     		movs	r3, #6
 3010 0890 80F82530 		strb	r3, [r0, #37]
 575:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3011              		.loc 1 575 7 is_stmt 1 view .LVU947
 575:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3012              		.loc 1 575 36 is_stmt 0 view .LVU948
 3013 0894 0123     		movs	r3, #1
 3014 0896 80F82630 		strb	r3, [r0, #38]
 576:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3015              		.loc 1 576 7 is_stmt 1 view .LVU949
 576:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3016              		.loc 1 576 36 is_stmt 0 view .LVU950
 3017 089a FF23     		movs	r3, #255
 3018 089c 80F82A30 		strb	r3, [r0, #42]
 577:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3019              		.loc 1 577 7 is_stmt 1 view .LVU951
 577:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3020              		.loc 1 577 36 is_stmt 0 view .LVU952
 3021 08a0 6423     		movs	r3, #100
 3022 08a2 80F82B30 		strb	r3, [r0, #43]
 578:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3023              		.loc 1 578 7 is_stmt 1 view .LVU953
 578:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3024              		.loc 1 578 36 is_stmt 0 view .LVU954
 3025 08a6 0823     		movs	r3, #8
 3026 08a8 0385     		strh	r3, [r0, #40]	@ movhi
 579:Core/Src/main.c ****       break;
 3027              		.loc 1 579 7 is_stmt 1 view .LVU955
 3028 08aa FFF7FEFF 		bl	LoRa_init
 3029              	.LVL169:
 580:Core/Src/main.c **** 
 3030              		.loc 1 580 7 view .LVU956
 3031 08ae 02E5     		b	.L89
 3032              	.L123:
 584:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_9;            // default = SF_7
 3033              		.loc 1 584 7 view .LVU957
 584:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_9;            // default = SF_7
 3034              		.loc 1 584 36 is_stmt 0 view .LVU958
 3035 08b0 2248     		ldr	r0, .L162
 3036 08b2 40F2B113 		movw	r3, #433
 3037 08b6 0362     		str	r3, [r0, #32]
 585:Core/Src/main.c ****       myLoRa.bandWidth             = BW_125KHz;       // default = BW_125KHz
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 98


 3038              		.loc 1 585 7 is_stmt 1 view .LVU959
 585:Core/Src/main.c ****       myLoRa.bandWidth             = BW_125KHz;       // default = BW_125KHz
 3039              		.loc 1 585 37 is_stmt 0 view .LVU960
 3040 08b8 0923     		movs	r3, #9
 3041 08ba 80F82430 		strb	r3, [r0, #36]
 586:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3042              		.loc 1 586 7 is_stmt 1 view .LVU961
 586:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3043              		.loc 1 586 36 is_stmt 0 view .LVU962
 3044 08be 0723     		movs	r3, #7
 3045 08c0 80F82530 		strb	r3, [r0, #37]
 587:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3046              		.loc 1 587 7 is_stmt 1 view .LVU963
 587:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3047              		.loc 1 587 36 is_stmt 0 view .LVU964
 3048 08c4 0123     		movs	r3, #1
 3049 08c6 80F82630 		strb	r3, [r0, #38]
 588:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3050              		.loc 1 588 7 is_stmt 1 view .LVU965
 588:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3051              		.loc 1 588 36 is_stmt 0 view .LVU966
 3052 08ca FF23     		movs	r3, #255
 3053 08cc 80F82A30 		strb	r3, [r0, #42]
 589:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3054              		.loc 1 589 7 is_stmt 1 view .LVU967
 589:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3055              		.loc 1 589 36 is_stmt 0 view .LVU968
 3056 08d0 6423     		movs	r3, #100
 3057 08d2 80F82B30 		strb	r3, [r0, #43]
 590:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3058              		.loc 1 590 7 is_stmt 1 view .LVU969
 590:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3059              		.loc 1 590 36 is_stmt 0 view .LVU970
 3060 08d6 0823     		movs	r3, #8
 3061 08d8 0385     		strh	r3, [r0, #40]	@ movhi
 591:Core/Src/main.c ****       break;
 3062              		.loc 1 591 7 is_stmt 1 view .LVU971
 3063 08da FFF7FEFF 		bl	LoRa_init
 3064              	.LVL170:
 592:Core/Src/main.c **** 
 3065              		.loc 1 592 7 view .LVU972
 3066 08de EAE4     		b	.L89
 3067              	.L122:
 596:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_9;            // default = SF_7
 3068              		.loc 1 596 7 view .LVU973
 596:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_9;            // default = SF_7
 3069              		.loc 1 596 36 is_stmt 0 view .LVU974
 3070 08e0 1648     		ldr	r0, .L162
 3071 08e2 40F2B113 		movw	r3, #433
 3072 08e6 0362     		str	r3, [r0, #32]
 597:Core/Src/main.c ****       myLoRa.bandWidth             = BW_250KHz;       // default = BW_125KHz
 3073              		.loc 1 597 7 is_stmt 1 view .LVU975
 597:Core/Src/main.c ****       myLoRa.bandWidth             = BW_250KHz;       // default = BW_125KHz
 3074              		.loc 1 597 37 is_stmt 0 view .LVU976
 3075 08e8 0923     		movs	r3, #9
 3076 08ea 80F82430 		strb	r3, [r0, #36]
 598:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 99


 3077              		.loc 1 598 7 is_stmt 1 view .LVU977
 598:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3078              		.loc 1 598 36 is_stmt 0 view .LVU978
 3079 08ee 0823     		movs	r3, #8
 3080 08f0 80F82530 		strb	r3, [r0, #37]
 599:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3081              		.loc 1 599 7 is_stmt 1 view .LVU979
 599:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3082              		.loc 1 599 36 is_stmt 0 view .LVU980
 3083 08f4 0122     		movs	r2, #1
 3084 08f6 80F82620 		strb	r2, [r0, #38]
 600:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3085              		.loc 1 600 7 is_stmt 1 view .LVU981
 600:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3086              		.loc 1 600 36 is_stmt 0 view .LVU982
 3087 08fa FF22     		movs	r2, #255
 3088 08fc 80F82A20 		strb	r2, [r0, #42]
 601:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3089              		.loc 1 601 7 is_stmt 1 view .LVU983
 601:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3090              		.loc 1 601 36 is_stmt 0 view .LVU984
 3091 0900 6422     		movs	r2, #100
 3092 0902 80F82B20 		strb	r2, [r0, #43]
 602:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3093              		.loc 1 602 7 is_stmt 1 view .LVU985
 602:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3094              		.loc 1 602 36 is_stmt 0 view .LVU986
 3095 0906 0385     		strh	r3, [r0, #40]	@ movhi
 603:Core/Src/main.c ****       break;
 3096              		.loc 1 603 7 is_stmt 1 view .LVU987
 3097 0908 FFF7FEFF 		bl	LoRa_init
 3098              	.LVL171:
 604:Core/Src/main.c **** 
 3099              		.loc 1 604 7 view .LVU988
 3100 090c D3E4     		b	.L89
 3101              	.L121:
 608:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_9;            // default = SF_7
 3102              		.loc 1 608 7 view .LVU989
 608:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_9;            // default = SF_7
 3103              		.loc 1 608 36 is_stmt 0 view .LVU990
 3104 090e 0B48     		ldr	r0, .L162
 3105 0910 40F2B113 		movw	r3, #433
 3106 0914 0362     		str	r3, [r0, #32]
 609:Core/Src/main.c ****       myLoRa.bandWidth             = BW_500KHz;       // default = BW_125KHz
 3107              		.loc 1 609 7 is_stmt 1 view .LVU991
 609:Core/Src/main.c ****       myLoRa.bandWidth             = BW_500KHz;       // default = BW_125KHz
 3108              		.loc 1 609 37 is_stmt 0 view .LVU992
 3109 0916 0923     		movs	r3, #9
 3110 0918 80F82430 		strb	r3, [r0, #36]
 610:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3111              		.loc 1 610 7 is_stmt 1 view .LVU993
 610:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3112              		.loc 1 610 36 is_stmt 0 view .LVU994
 3113 091c 80F82530 		strb	r3, [r0, #37]
 611:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3114              		.loc 1 611 7 is_stmt 1 view .LVU995
 611:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 100


 3115              		.loc 1 611 36 is_stmt 0 view .LVU996
 3116 0920 0123     		movs	r3, #1
 3117 0922 80F82630 		strb	r3, [r0, #38]
 612:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3118              		.loc 1 612 7 is_stmt 1 view .LVU997
 612:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3119              		.loc 1 612 36 is_stmt 0 view .LVU998
 3120 0926 FF23     		movs	r3, #255
 3121 0928 80F82A30 		strb	r3, [r0, #42]
 613:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3122              		.loc 1 613 7 is_stmt 1 view .LVU999
 613:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3123              		.loc 1 613 36 is_stmt 0 view .LVU1000
 3124 092c 6423     		movs	r3, #100
 3125 092e 80F82B30 		strb	r3, [r0, #43]
 614:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3126              		.loc 1 614 7 is_stmt 1 view .LVU1001
 614:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3127              		.loc 1 614 36 is_stmt 0 view .LVU1002
 3128 0932 0823     		movs	r3, #8
 3129 0934 0385     		strh	r3, [r0, #40]	@ movhi
 615:Core/Src/main.c ****       break;
 3130              		.loc 1 615 7 is_stmt 1 view .LVU1003
 3131 0936 FFF7FEFF 		bl	LoRa_init
 3132              	.LVL172:
 616:Core/Src/main.c **** 
 3133              		.loc 1 616 7 view .LVU1004
 3134 093a BCE4     		b	.L89
 3135              	.L163:
 3136              		.align	2
 3137              	.L162:
 3138 093c 00000000 		.word	myLoRa
 3139              	.L120:
 620:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_10;            // default = SF_7
 3140              		.loc 1 620 7 view .LVU1005
 620:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_10;            // default = SF_7
 3141              		.loc 1 620 36 is_stmt 0 view .LVU1006
 3142 0940 DB48     		ldr	r0, .L164
 3143 0942 40F2B113 		movw	r3, #433
 3144 0946 0362     		str	r3, [r0, #32]
 621:Core/Src/main.c ****       myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 3145              		.loc 1 621 7 is_stmt 1 view .LVU1007
 621:Core/Src/main.c ****       myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 3146              		.loc 1 621 37 is_stmt 0 view .LVU1008
 3147 0948 0A23     		movs	r3, #10
 3148 094a 80F82430 		strb	r3, [r0, #36]
 622:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3149              		.loc 1 622 7 is_stmt 1 view .LVU1009
 622:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3150              		.loc 1 622 36 is_stmt 0 view .LVU1010
 3151 094e 0023     		movs	r3, #0
 3152 0950 80F82530 		strb	r3, [r0, #37]
 623:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3153              		.loc 1 623 7 is_stmt 1 view .LVU1011
 623:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3154              		.loc 1 623 36 is_stmt 0 view .LVU1012
 3155 0954 0123     		movs	r3, #1
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 101


 3156 0956 80F82630 		strb	r3, [r0, #38]
 624:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3157              		.loc 1 624 7 is_stmt 1 view .LVU1013
 624:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3158              		.loc 1 624 36 is_stmt 0 view .LVU1014
 3159 095a FF23     		movs	r3, #255
 3160 095c 80F82A30 		strb	r3, [r0, #42]
 625:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3161              		.loc 1 625 7 is_stmt 1 view .LVU1015
 625:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3162              		.loc 1 625 36 is_stmt 0 view .LVU1016
 3163 0960 6423     		movs	r3, #100
 3164 0962 80F82B30 		strb	r3, [r0, #43]
 626:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3165              		.loc 1 626 7 is_stmt 1 view .LVU1017
 626:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3166              		.loc 1 626 36 is_stmt 0 view .LVU1018
 3167 0966 0823     		movs	r3, #8
 3168 0968 0385     		strh	r3, [r0, #40]	@ movhi
 627:Core/Src/main.c ****       break;
 3169              		.loc 1 627 7 is_stmt 1 view .LVU1019
 3170 096a FFF7FEFF 		bl	LoRa_init
 3171              	.LVL173:
 628:Core/Src/main.c **** 
 3172              		.loc 1 628 7 view .LVU1020
 3173 096e A2E4     		b	.L89
 3174              	.L119:
 632:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_10;            // default = SF_7
 3175              		.loc 1 632 7 view .LVU1021
 632:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_10;            // default = SF_7
 3176              		.loc 1 632 36 is_stmt 0 view .LVU1022
 3177 0970 CF48     		ldr	r0, .L164
 3178 0972 40F2B113 		movw	r3, #433
 3179 0976 0362     		str	r3, [r0, #32]
 633:Core/Src/main.c ****       myLoRa.bandWidth             = BW_10_4KHz;       // default = BW_125KHz
 3180              		.loc 1 633 7 is_stmt 1 view .LVU1023
 633:Core/Src/main.c ****       myLoRa.bandWidth             = BW_10_4KHz;       // default = BW_125KHz
 3181              		.loc 1 633 37 is_stmt 0 view .LVU1024
 3182 0978 0A23     		movs	r3, #10
 3183 097a 80F82430 		strb	r3, [r0, #36]
 634:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3184              		.loc 1 634 7 is_stmt 1 view .LVU1025
 634:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3185              		.loc 1 634 36 is_stmt 0 view .LVU1026
 3186 097e 0123     		movs	r3, #1
 3187 0980 80F82530 		strb	r3, [r0, #37]
 635:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3188              		.loc 1 635 7 is_stmt 1 view .LVU1027
 635:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3189              		.loc 1 635 36 is_stmt 0 view .LVU1028
 3190 0984 80F82630 		strb	r3, [r0, #38]
 636:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3191              		.loc 1 636 7 is_stmt 1 view .LVU1029
 636:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3192              		.loc 1 636 36 is_stmt 0 view .LVU1030
 3193 0988 FF23     		movs	r3, #255
 3194 098a 80F82A30 		strb	r3, [r0, #42]
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 102


 637:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3195              		.loc 1 637 7 is_stmt 1 view .LVU1031
 637:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3196              		.loc 1 637 36 is_stmt 0 view .LVU1032
 3197 098e 6423     		movs	r3, #100
 3198 0990 80F82B30 		strb	r3, [r0, #43]
 638:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3199              		.loc 1 638 7 is_stmt 1 view .LVU1033
 638:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3200              		.loc 1 638 36 is_stmt 0 view .LVU1034
 3201 0994 0823     		movs	r3, #8
 3202 0996 0385     		strh	r3, [r0, #40]	@ movhi
 639:Core/Src/main.c ****       break;
 3203              		.loc 1 639 7 is_stmt 1 view .LVU1035
 3204 0998 FFF7FEFF 		bl	LoRa_init
 3205              	.LVL174:
 640:Core/Src/main.c **** 
 3206              		.loc 1 640 7 view .LVU1036
 3207 099c 8BE4     		b	.L89
 3208              	.L118:
 644:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_10;            // default = SF_7
 3209              		.loc 1 644 7 view .LVU1037
 644:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_10;            // default = SF_7
 3210              		.loc 1 644 36 is_stmt 0 view .LVU1038
 3211 099e C448     		ldr	r0, .L164
 3212 09a0 40F2B113 		movw	r3, #433
 3213 09a4 0362     		str	r3, [r0, #32]
 645:Core/Src/main.c ****       myLoRa.bandWidth             = BW_15_6KHz;       // default = BW_125KHz
 3214              		.loc 1 645 7 is_stmt 1 view .LVU1039
 645:Core/Src/main.c ****       myLoRa.bandWidth             = BW_15_6KHz;       // default = BW_125KHz
 3215              		.loc 1 645 37 is_stmt 0 view .LVU1040
 3216 09a6 0A23     		movs	r3, #10
 3217 09a8 80F82430 		strb	r3, [r0, #36]
 646:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3218              		.loc 1 646 7 is_stmt 1 view .LVU1041
 646:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3219              		.loc 1 646 36 is_stmt 0 view .LVU1042
 3220 09ac 0223     		movs	r3, #2
 3221 09ae 80F82530 		strb	r3, [r0, #37]
 647:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3222              		.loc 1 647 7 is_stmt 1 view .LVU1043
 647:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3223              		.loc 1 647 36 is_stmt 0 view .LVU1044
 3224 09b2 0123     		movs	r3, #1
 3225 09b4 80F82630 		strb	r3, [r0, #38]
 648:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3226              		.loc 1 648 7 is_stmt 1 view .LVU1045
 648:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3227              		.loc 1 648 36 is_stmt 0 view .LVU1046
 3228 09b8 FF23     		movs	r3, #255
 3229 09ba 80F82A30 		strb	r3, [r0, #42]
 649:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3230              		.loc 1 649 7 is_stmt 1 view .LVU1047
 649:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3231              		.loc 1 649 36 is_stmt 0 view .LVU1048
 3232 09be 6423     		movs	r3, #100
 3233 09c0 80F82B30 		strb	r3, [r0, #43]
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 103


 650:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3234              		.loc 1 650 7 is_stmt 1 view .LVU1049
 650:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3235              		.loc 1 650 36 is_stmt 0 view .LVU1050
 3236 09c4 0823     		movs	r3, #8
 3237 09c6 0385     		strh	r3, [r0, #40]	@ movhi
 651:Core/Src/main.c ****       break;
 3238              		.loc 1 651 7 is_stmt 1 view .LVU1051
 3239 09c8 FFF7FEFF 		bl	LoRa_init
 3240              	.LVL175:
 652:Core/Src/main.c **** 
 3241              		.loc 1 652 7 view .LVU1052
 3242 09cc 73E4     		b	.L89
 3243              	.L117:
 656:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_10;            // default = SF_7
 3244              		.loc 1 656 7 view .LVU1053
 656:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_10;            // default = SF_7
 3245              		.loc 1 656 36 is_stmt 0 view .LVU1054
 3246 09ce B848     		ldr	r0, .L164
 3247 09d0 40F2B113 		movw	r3, #433
 3248 09d4 0362     		str	r3, [r0, #32]
 657:Core/Src/main.c ****       myLoRa.bandWidth             = BW_20_8KHz;       // default = BW_125KHz
 3249              		.loc 1 657 7 is_stmt 1 view .LVU1055
 657:Core/Src/main.c ****       myLoRa.bandWidth             = BW_20_8KHz;       // default = BW_125KHz
 3250              		.loc 1 657 37 is_stmt 0 view .LVU1056
 3251 09d6 0A23     		movs	r3, #10
 3252 09d8 80F82430 		strb	r3, [r0, #36]
 658:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3253              		.loc 1 658 7 is_stmt 1 view .LVU1057
 658:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3254              		.loc 1 658 36 is_stmt 0 view .LVU1058
 3255 09dc 0323     		movs	r3, #3
 3256 09de 80F82530 		strb	r3, [r0, #37]
 659:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3257              		.loc 1 659 7 is_stmt 1 view .LVU1059
 659:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3258              		.loc 1 659 36 is_stmt 0 view .LVU1060
 3259 09e2 0123     		movs	r3, #1
 3260 09e4 80F82630 		strb	r3, [r0, #38]
 660:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3261              		.loc 1 660 7 is_stmt 1 view .LVU1061
 660:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3262              		.loc 1 660 36 is_stmt 0 view .LVU1062
 3263 09e8 FF23     		movs	r3, #255
 3264 09ea 80F82A30 		strb	r3, [r0, #42]
 661:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3265              		.loc 1 661 7 is_stmt 1 view .LVU1063
 661:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3266              		.loc 1 661 36 is_stmt 0 view .LVU1064
 3267 09ee 6423     		movs	r3, #100
 3268 09f0 80F82B30 		strb	r3, [r0, #43]
 662:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3269              		.loc 1 662 7 is_stmt 1 view .LVU1065
 662:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3270              		.loc 1 662 36 is_stmt 0 view .LVU1066
 3271 09f4 0823     		movs	r3, #8
 3272 09f6 0385     		strh	r3, [r0, #40]	@ movhi
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 104


 663:Core/Src/main.c ****       break;
 3273              		.loc 1 663 7 is_stmt 1 view .LVU1067
 3274 09f8 FFF7FEFF 		bl	LoRa_init
 3275              	.LVL176:
 664:Core/Src/main.c **** 
 3276              		.loc 1 664 7 view .LVU1068
 3277 09fc 5BE4     		b	.L89
 3278              	.L116:
 668:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_10;            // default = SF_7
 3279              		.loc 1 668 7 view .LVU1069
 668:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_10;            // default = SF_7
 3280              		.loc 1 668 36 is_stmt 0 view .LVU1070
 3281 09fe AC48     		ldr	r0, .L164
 3282 0a00 40F2B113 		movw	r3, #433
 3283 0a04 0362     		str	r3, [r0, #32]
 669:Core/Src/main.c ****       myLoRa.bandWidth             = BW_31_25KHz;       // default = BW_125KHz
 3284              		.loc 1 669 7 is_stmt 1 view .LVU1071
 669:Core/Src/main.c ****       myLoRa.bandWidth             = BW_31_25KHz;       // default = BW_125KHz
 3285              		.loc 1 669 37 is_stmt 0 view .LVU1072
 3286 0a06 0A23     		movs	r3, #10
 3287 0a08 80F82430 		strb	r3, [r0, #36]
 670:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3288              		.loc 1 670 7 is_stmt 1 view .LVU1073
 670:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3289              		.loc 1 670 36 is_stmt 0 view .LVU1074
 3290 0a0c 0423     		movs	r3, #4
 3291 0a0e 80F82530 		strb	r3, [r0, #37]
 671:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3292              		.loc 1 671 7 is_stmt 1 view .LVU1075
 671:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3293              		.loc 1 671 36 is_stmt 0 view .LVU1076
 3294 0a12 0123     		movs	r3, #1
 3295 0a14 80F82630 		strb	r3, [r0, #38]
 672:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3296              		.loc 1 672 7 is_stmt 1 view .LVU1077
 672:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3297              		.loc 1 672 36 is_stmt 0 view .LVU1078
 3298 0a18 FF23     		movs	r3, #255
 3299 0a1a 80F82A30 		strb	r3, [r0, #42]
 673:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3300              		.loc 1 673 7 is_stmt 1 view .LVU1079
 673:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3301              		.loc 1 673 36 is_stmt 0 view .LVU1080
 3302 0a1e 6423     		movs	r3, #100
 3303 0a20 80F82B30 		strb	r3, [r0, #43]
 674:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3304              		.loc 1 674 7 is_stmt 1 view .LVU1081
 674:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3305              		.loc 1 674 36 is_stmt 0 view .LVU1082
 3306 0a24 0823     		movs	r3, #8
 3307 0a26 0385     		strh	r3, [r0, #40]	@ movhi
 675:Core/Src/main.c ****       break;
 3308              		.loc 1 675 7 is_stmt 1 view .LVU1083
 3309 0a28 FFF7FEFF 		bl	LoRa_init
 3310              	.LVL177:
 676:Core/Src/main.c **** 
 3311              		.loc 1 676 7 view .LVU1084
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 105


 3312 0a2c 43E4     		b	.L89
 3313              	.L115:
 680:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_10;            // default = SF_7
 3314              		.loc 1 680 7 view .LVU1085
 680:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_10;            // default = SF_7
 3315              		.loc 1 680 36 is_stmt 0 view .LVU1086
 3316 0a2e A048     		ldr	r0, .L164
 3317 0a30 40F2B113 		movw	r3, #433
 3318 0a34 0362     		str	r3, [r0, #32]
 681:Core/Src/main.c ****       myLoRa.bandWidth             = BW_41_7KHz;       // default = BW_125KHz
 3319              		.loc 1 681 7 is_stmt 1 view .LVU1087
 681:Core/Src/main.c ****       myLoRa.bandWidth             = BW_41_7KHz;       // default = BW_125KHz
 3320              		.loc 1 681 37 is_stmt 0 view .LVU1088
 3321 0a36 0A23     		movs	r3, #10
 3322 0a38 80F82430 		strb	r3, [r0, #36]
 682:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3323              		.loc 1 682 7 is_stmt 1 view .LVU1089
 682:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3324              		.loc 1 682 36 is_stmt 0 view .LVU1090
 3325 0a3c 0523     		movs	r3, #5
 3326 0a3e 80F82530 		strb	r3, [r0, #37]
 683:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3327              		.loc 1 683 7 is_stmt 1 view .LVU1091
 683:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3328              		.loc 1 683 36 is_stmt 0 view .LVU1092
 3329 0a42 0123     		movs	r3, #1
 3330 0a44 80F82630 		strb	r3, [r0, #38]
 684:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3331              		.loc 1 684 7 is_stmt 1 view .LVU1093
 684:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3332              		.loc 1 684 36 is_stmt 0 view .LVU1094
 3333 0a48 FF23     		movs	r3, #255
 3334 0a4a 80F82A30 		strb	r3, [r0, #42]
 685:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3335              		.loc 1 685 7 is_stmt 1 view .LVU1095
 685:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3336              		.loc 1 685 36 is_stmt 0 view .LVU1096
 3337 0a4e 6423     		movs	r3, #100
 3338 0a50 80F82B30 		strb	r3, [r0, #43]
 686:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3339              		.loc 1 686 7 is_stmt 1 view .LVU1097
 686:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3340              		.loc 1 686 36 is_stmt 0 view .LVU1098
 3341 0a54 0823     		movs	r3, #8
 3342 0a56 0385     		strh	r3, [r0, #40]	@ movhi
 687:Core/Src/main.c ****       break;
 3343              		.loc 1 687 7 is_stmt 1 view .LVU1099
 3344 0a58 FFF7FEFF 		bl	LoRa_init
 3345              	.LVL178:
 688:Core/Src/main.c **** 
 3346              		.loc 1 688 7 view .LVU1100
 3347 0a5c 2BE4     		b	.L89
 3348              	.L114:
 692:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_10;            // default = SF_7
 3349              		.loc 1 692 7 view .LVU1101
 692:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_10;            // default = SF_7
 3350              		.loc 1 692 36 is_stmt 0 view .LVU1102
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 106


 3351 0a5e 9448     		ldr	r0, .L164
 3352 0a60 40F2B113 		movw	r3, #433
 3353 0a64 0362     		str	r3, [r0, #32]
 693:Core/Src/main.c ****       myLoRa.bandWidth             = BW_62_5KHz;       // default = BW_125KHz
 3354              		.loc 1 693 7 is_stmt 1 view .LVU1103
 693:Core/Src/main.c ****       myLoRa.bandWidth             = BW_62_5KHz;       // default = BW_125KHz
 3355              		.loc 1 693 37 is_stmt 0 view .LVU1104
 3356 0a66 0A23     		movs	r3, #10
 3357 0a68 80F82430 		strb	r3, [r0, #36]
 694:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3358              		.loc 1 694 7 is_stmt 1 view .LVU1105
 694:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3359              		.loc 1 694 36 is_stmt 0 view .LVU1106
 3360 0a6c 0623     		movs	r3, #6
 3361 0a6e 80F82530 		strb	r3, [r0, #37]
 695:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3362              		.loc 1 695 7 is_stmt 1 view .LVU1107
 695:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3363              		.loc 1 695 36 is_stmt 0 view .LVU1108
 3364 0a72 0123     		movs	r3, #1
 3365 0a74 80F82630 		strb	r3, [r0, #38]
 696:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3366              		.loc 1 696 7 is_stmt 1 view .LVU1109
 696:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3367              		.loc 1 696 36 is_stmt 0 view .LVU1110
 3368 0a78 FF23     		movs	r3, #255
 3369 0a7a 80F82A30 		strb	r3, [r0, #42]
 697:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3370              		.loc 1 697 7 is_stmt 1 view .LVU1111
 697:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3371              		.loc 1 697 36 is_stmt 0 view .LVU1112
 3372 0a7e 6423     		movs	r3, #100
 3373 0a80 80F82B30 		strb	r3, [r0, #43]
 698:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3374              		.loc 1 698 7 is_stmt 1 view .LVU1113
 698:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3375              		.loc 1 698 36 is_stmt 0 view .LVU1114
 3376 0a84 0823     		movs	r3, #8
 3377 0a86 0385     		strh	r3, [r0, #40]	@ movhi
 699:Core/Src/main.c ****       break;
 3378              		.loc 1 699 7 is_stmt 1 view .LVU1115
 3379 0a88 FFF7FEFF 		bl	LoRa_init
 3380              	.LVL179:
 700:Core/Src/main.c **** 
 3381              		.loc 1 700 7 view .LVU1116
 3382 0a8c 13E4     		b	.L89
 3383              	.L113:
 704:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_10;            // default = SF_7
 3384              		.loc 1 704 7 view .LVU1117
 704:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_10;            // default = SF_7
 3385              		.loc 1 704 36 is_stmt 0 view .LVU1118
 3386 0a8e 8848     		ldr	r0, .L164
 3387 0a90 40F2B113 		movw	r3, #433
 3388 0a94 0362     		str	r3, [r0, #32]
 705:Core/Src/main.c ****       myLoRa.bandWidth             = BW_125KHz;       // default = BW_125KHz
 3389              		.loc 1 705 7 is_stmt 1 view .LVU1119
 705:Core/Src/main.c ****       myLoRa.bandWidth             = BW_125KHz;       // default = BW_125KHz
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 107


 3390              		.loc 1 705 37 is_stmt 0 view .LVU1120
 3391 0a96 0A23     		movs	r3, #10
 3392 0a98 80F82430 		strb	r3, [r0, #36]
 706:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3393              		.loc 1 706 7 is_stmt 1 view .LVU1121
 706:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3394              		.loc 1 706 36 is_stmt 0 view .LVU1122
 3395 0a9c 0723     		movs	r3, #7
 3396 0a9e 80F82530 		strb	r3, [r0, #37]
 707:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3397              		.loc 1 707 7 is_stmt 1 view .LVU1123
 707:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3398              		.loc 1 707 36 is_stmt 0 view .LVU1124
 3399 0aa2 0123     		movs	r3, #1
 3400 0aa4 80F82630 		strb	r3, [r0, #38]
 708:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3401              		.loc 1 708 7 is_stmt 1 view .LVU1125
 708:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3402              		.loc 1 708 36 is_stmt 0 view .LVU1126
 3403 0aa8 FF23     		movs	r3, #255
 3404 0aaa 80F82A30 		strb	r3, [r0, #42]
 709:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3405              		.loc 1 709 7 is_stmt 1 view .LVU1127
 709:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3406              		.loc 1 709 36 is_stmt 0 view .LVU1128
 3407 0aae 6423     		movs	r3, #100
 3408 0ab0 80F82B30 		strb	r3, [r0, #43]
 710:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3409              		.loc 1 710 7 is_stmt 1 view .LVU1129
 710:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3410              		.loc 1 710 36 is_stmt 0 view .LVU1130
 3411 0ab4 0823     		movs	r3, #8
 3412 0ab6 0385     		strh	r3, [r0, #40]	@ movhi
 711:Core/Src/main.c ****       break;
 3413              		.loc 1 711 7 is_stmt 1 view .LVU1131
 3414 0ab8 FFF7FEFF 		bl	LoRa_init
 3415              	.LVL180:
 712:Core/Src/main.c **** 
 3416              		.loc 1 712 7 view .LVU1132
 3417 0abc FFF7FBBB 		b	.L89
 3418              	.L112:
 716:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_10;            // default = SF_7
 3419              		.loc 1 716 7 view .LVU1133
 716:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_10;            // default = SF_7
 3420              		.loc 1 716 36 is_stmt 0 view .LVU1134
 3421 0ac0 7B48     		ldr	r0, .L164
 3422 0ac2 40F2B113 		movw	r3, #433
 3423 0ac6 0362     		str	r3, [r0, #32]
 717:Core/Src/main.c ****       myLoRa.bandWidth             = BW_250KHz;       // default = BW_125KHz
 3424              		.loc 1 717 7 is_stmt 1 view .LVU1135
 717:Core/Src/main.c ****       myLoRa.bandWidth             = BW_250KHz;       // default = BW_125KHz
 3425              		.loc 1 717 37 is_stmt 0 view .LVU1136
 3426 0ac8 0A23     		movs	r3, #10
 3427 0aca 80F82430 		strb	r3, [r0, #36]
 718:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3428              		.loc 1 718 7 is_stmt 1 view .LVU1137
 718:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 108


 3429              		.loc 1 718 36 is_stmt 0 view .LVU1138
 3430 0ace 0823     		movs	r3, #8
 3431 0ad0 80F82530 		strb	r3, [r0, #37]
 719:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3432              		.loc 1 719 7 is_stmt 1 view .LVU1139
 719:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3433              		.loc 1 719 36 is_stmt 0 view .LVU1140
 3434 0ad4 0122     		movs	r2, #1
 3435 0ad6 80F82620 		strb	r2, [r0, #38]
 720:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3436              		.loc 1 720 7 is_stmt 1 view .LVU1141
 720:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3437              		.loc 1 720 36 is_stmt 0 view .LVU1142
 3438 0ada FF22     		movs	r2, #255
 3439 0adc 80F82A20 		strb	r2, [r0, #42]
 721:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3440              		.loc 1 721 7 is_stmt 1 view .LVU1143
 721:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3441              		.loc 1 721 36 is_stmt 0 view .LVU1144
 3442 0ae0 6422     		movs	r2, #100
 3443 0ae2 80F82B20 		strb	r2, [r0, #43]
 722:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3444              		.loc 1 722 7 is_stmt 1 view .LVU1145
 722:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3445              		.loc 1 722 36 is_stmt 0 view .LVU1146
 3446 0ae6 0385     		strh	r3, [r0, #40]	@ movhi
 723:Core/Src/main.c ****       break;
 3447              		.loc 1 723 7 is_stmt 1 view .LVU1147
 3448 0ae8 FFF7FEFF 		bl	LoRa_init
 3449              	.LVL181:
 724:Core/Src/main.c **** 
 3450              		.loc 1 724 7 view .LVU1148
 3451 0aec FFF7E3BB 		b	.L89
 3452              	.L111:
 728:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_10;            // default = SF_7
 3453              		.loc 1 728 7 view .LVU1149
 728:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_10;            // default = SF_7
 3454              		.loc 1 728 36 is_stmt 0 view .LVU1150
 3455 0af0 6F48     		ldr	r0, .L164
 3456 0af2 40F2B113 		movw	r3, #433
 3457 0af6 0362     		str	r3, [r0, #32]
 729:Core/Src/main.c ****       myLoRa.bandWidth             = BW_500KHz;       // default = BW_125KHz
 3458              		.loc 1 729 7 is_stmt 1 view .LVU1151
 729:Core/Src/main.c ****       myLoRa.bandWidth             = BW_500KHz;       // default = BW_125KHz
 3459              		.loc 1 729 37 is_stmt 0 view .LVU1152
 3460 0af8 0A23     		movs	r3, #10
 3461 0afa 80F82430 		strb	r3, [r0, #36]
 730:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3462              		.loc 1 730 7 is_stmt 1 view .LVU1153
 730:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3463              		.loc 1 730 36 is_stmt 0 view .LVU1154
 3464 0afe 0923     		movs	r3, #9
 3465 0b00 80F82530 		strb	r3, [r0, #37]
 731:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3466              		.loc 1 731 7 is_stmt 1 view .LVU1155
 731:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3467              		.loc 1 731 36 is_stmt 0 view .LVU1156
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 109


 3468 0b04 0123     		movs	r3, #1
 3469 0b06 80F82630 		strb	r3, [r0, #38]
 732:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3470              		.loc 1 732 7 is_stmt 1 view .LVU1157
 732:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3471              		.loc 1 732 36 is_stmt 0 view .LVU1158
 3472 0b0a FF23     		movs	r3, #255
 3473 0b0c 80F82A30 		strb	r3, [r0, #42]
 733:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3474              		.loc 1 733 7 is_stmt 1 view .LVU1159
 733:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3475              		.loc 1 733 36 is_stmt 0 view .LVU1160
 3476 0b10 6423     		movs	r3, #100
 3477 0b12 80F82B30 		strb	r3, [r0, #43]
 734:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3478              		.loc 1 734 7 is_stmt 1 view .LVU1161
 734:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3479              		.loc 1 734 36 is_stmt 0 view .LVU1162
 3480 0b16 0823     		movs	r3, #8
 3481 0b18 0385     		strh	r3, [r0, #40]	@ movhi
 735:Core/Src/main.c ****       break;
 3482              		.loc 1 735 7 is_stmt 1 view .LVU1163
 3483 0b1a FFF7FEFF 		bl	LoRa_init
 3484              	.LVL182:
 736:Core/Src/main.c **** 
 3485              		.loc 1 736 7 view .LVU1164
 3486 0b1e FFF7CABB 		b	.L89
 3487              	.L110:
 740:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_11;            // default = SF_7
 3488              		.loc 1 740 7 view .LVU1165
 740:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_11;            // default = SF_7
 3489              		.loc 1 740 36 is_stmt 0 view .LVU1166
 3490 0b22 6348     		ldr	r0, .L164
 3491 0b24 40F2B113 		movw	r3, #433
 3492 0b28 0362     		str	r3, [r0, #32]
 741:Core/Src/main.c ****       myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 3493              		.loc 1 741 7 is_stmt 1 view .LVU1167
 741:Core/Src/main.c ****       myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 3494              		.loc 1 741 37 is_stmt 0 view .LVU1168
 3495 0b2a 0B23     		movs	r3, #11
 3496 0b2c 80F82430 		strb	r3, [r0, #36]
 742:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3497              		.loc 1 742 7 is_stmt 1 view .LVU1169
 742:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3498              		.loc 1 742 36 is_stmt 0 view .LVU1170
 3499 0b30 0023     		movs	r3, #0
 3500 0b32 80F82530 		strb	r3, [r0, #37]
 743:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3501              		.loc 1 743 7 is_stmt 1 view .LVU1171
 743:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3502              		.loc 1 743 36 is_stmt 0 view .LVU1172
 3503 0b36 0123     		movs	r3, #1
 3504 0b38 80F82630 		strb	r3, [r0, #38]
 744:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3505              		.loc 1 744 7 is_stmt 1 view .LVU1173
 744:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3506              		.loc 1 744 36 is_stmt 0 view .LVU1174
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 110


 3507 0b3c FF23     		movs	r3, #255
 3508 0b3e 80F82A30 		strb	r3, [r0, #42]
 745:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3509              		.loc 1 745 7 is_stmt 1 view .LVU1175
 745:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3510              		.loc 1 745 36 is_stmt 0 view .LVU1176
 3511 0b42 6423     		movs	r3, #100
 3512 0b44 80F82B30 		strb	r3, [r0, #43]
 746:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3513              		.loc 1 746 7 is_stmt 1 view .LVU1177
 746:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3514              		.loc 1 746 36 is_stmt 0 view .LVU1178
 3515 0b48 0823     		movs	r3, #8
 3516 0b4a 0385     		strh	r3, [r0, #40]	@ movhi
 747:Core/Src/main.c ****       break;
 3517              		.loc 1 747 7 is_stmt 1 view .LVU1179
 3518 0b4c FFF7FEFF 		bl	LoRa_init
 3519              	.LVL183:
 748:Core/Src/main.c **** 
 3520              		.loc 1 748 7 view .LVU1180
 3521 0b50 FFF7B1BB 		b	.L89
 3522              	.L109:
 752:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_11;            // default = SF_7
 3523              		.loc 1 752 7 view .LVU1181
 752:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_11;            // default = SF_7
 3524              		.loc 1 752 36 is_stmt 0 view .LVU1182
 3525 0b54 5648     		ldr	r0, .L164
 3526 0b56 40F2B113 		movw	r3, #433
 3527 0b5a 0362     		str	r3, [r0, #32]
 753:Core/Src/main.c ****       myLoRa.bandWidth             = BW_10_4KHz;       // default = BW_125KHz
 3528              		.loc 1 753 7 is_stmt 1 view .LVU1183
 753:Core/Src/main.c ****       myLoRa.bandWidth             = BW_10_4KHz;       // default = BW_125KHz
 3529              		.loc 1 753 37 is_stmt 0 view .LVU1184
 3530 0b5c 0B23     		movs	r3, #11
 3531 0b5e 80F82430 		strb	r3, [r0, #36]
 754:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3532              		.loc 1 754 7 is_stmt 1 view .LVU1185
 754:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3533              		.loc 1 754 36 is_stmt 0 view .LVU1186
 3534 0b62 0123     		movs	r3, #1
 3535 0b64 80F82530 		strb	r3, [r0, #37]
 755:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3536              		.loc 1 755 7 is_stmt 1 view .LVU1187
 755:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3537              		.loc 1 755 36 is_stmt 0 view .LVU1188
 3538 0b68 80F82630 		strb	r3, [r0, #38]
 756:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3539              		.loc 1 756 7 is_stmt 1 view .LVU1189
 756:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3540              		.loc 1 756 36 is_stmt 0 view .LVU1190
 3541 0b6c FF23     		movs	r3, #255
 3542 0b6e 80F82A30 		strb	r3, [r0, #42]
 757:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3543              		.loc 1 757 7 is_stmt 1 view .LVU1191
 757:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3544              		.loc 1 757 36 is_stmt 0 view .LVU1192
 3545 0b72 6423     		movs	r3, #100
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 111


 3546 0b74 80F82B30 		strb	r3, [r0, #43]
 758:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3547              		.loc 1 758 7 is_stmt 1 view .LVU1193
 758:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3548              		.loc 1 758 36 is_stmt 0 view .LVU1194
 3549 0b78 0823     		movs	r3, #8
 3550 0b7a 0385     		strh	r3, [r0, #40]	@ movhi
 759:Core/Src/main.c ****       break;
 3551              		.loc 1 759 7 is_stmt 1 view .LVU1195
 3552 0b7c FFF7FEFF 		bl	LoRa_init
 3553              	.LVL184:
 760:Core/Src/main.c **** 
 3554              		.loc 1 760 7 view .LVU1196
 3555 0b80 FFF799BB 		b	.L89
 3556              	.L108:
 764:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_11;            // default = SF_7
 3557              		.loc 1 764 7 view .LVU1197
 764:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_11;            // default = SF_7
 3558              		.loc 1 764 36 is_stmt 0 view .LVU1198
 3559 0b84 4A48     		ldr	r0, .L164
 3560 0b86 40F2B113 		movw	r3, #433
 3561 0b8a 0362     		str	r3, [r0, #32]
 765:Core/Src/main.c ****       myLoRa.bandWidth             = BW_15_6KHz;       // default = BW_125KHz
 3562              		.loc 1 765 7 is_stmt 1 view .LVU1199
 765:Core/Src/main.c ****       myLoRa.bandWidth             = BW_15_6KHz;       // default = BW_125KHz
 3563              		.loc 1 765 37 is_stmt 0 view .LVU1200
 3564 0b8c 0B23     		movs	r3, #11
 3565 0b8e 80F82430 		strb	r3, [r0, #36]
 766:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3566              		.loc 1 766 7 is_stmt 1 view .LVU1201
 766:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3567              		.loc 1 766 36 is_stmt 0 view .LVU1202
 3568 0b92 0223     		movs	r3, #2
 3569 0b94 80F82530 		strb	r3, [r0, #37]
 767:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3570              		.loc 1 767 7 is_stmt 1 view .LVU1203
 767:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3571              		.loc 1 767 36 is_stmt 0 view .LVU1204
 3572 0b98 0123     		movs	r3, #1
 3573 0b9a 80F82630 		strb	r3, [r0, #38]
 768:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3574              		.loc 1 768 7 is_stmt 1 view .LVU1205
 768:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3575              		.loc 1 768 36 is_stmt 0 view .LVU1206
 3576 0b9e FF23     		movs	r3, #255
 3577 0ba0 80F82A30 		strb	r3, [r0, #42]
 769:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3578              		.loc 1 769 7 is_stmt 1 view .LVU1207
 769:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3579              		.loc 1 769 36 is_stmt 0 view .LVU1208
 3580 0ba4 6423     		movs	r3, #100
 3581 0ba6 80F82B30 		strb	r3, [r0, #43]
 770:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3582              		.loc 1 770 7 is_stmt 1 view .LVU1209
 770:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3583              		.loc 1 770 36 is_stmt 0 view .LVU1210
 3584 0baa 0823     		movs	r3, #8
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 112


 3585 0bac 0385     		strh	r3, [r0, #40]	@ movhi
 771:Core/Src/main.c ****       break;
 3586              		.loc 1 771 7 is_stmt 1 view .LVU1211
 3587 0bae FFF7FEFF 		bl	LoRa_init
 3588              	.LVL185:
 772:Core/Src/main.c **** 
 3589              		.loc 1 772 7 view .LVU1212
 3590 0bb2 FFF780BB 		b	.L89
 3591              	.L107:
 776:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_11;            // default = SF_7
 3592              		.loc 1 776 7 view .LVU1213
 776:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_11;            // default = SF_7
 3593              		.loc 1 776 36 is_stmt 0 view .LVU1214
 3594 0bb6 3E48     		ldr	r0, .L164
 3595 0bb8 40F2B113 		movw	r3, #433
 3596 0bbc 0362     		str	r3, [r0, #32]
 777:Core/Src/main.c ****       myLoRa.bandWidth             = BW_20_8KHz;       // default = BW_125KHz
 3597              		.loc 1 777 7 is_stmt 1 view .LVU1215
 777:Core/Src/main.c ****       myLoRa.bandWidth             = BW_20_8KHz;       // default = BW_125KHz
 3598              		.loc 1 777 37 is_stmt 0 view .LVU1216
 3599 0bbe 0B23     		movs	r3, #11
 3600 0bc0 80F82430 		strb	r3, [r0, #36]
 778:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3601              		.loc 1 778 7 is_stmt 1 view .LVU1217
 778:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3602              		.loc 1 778 36 is_stmt 0 view .LVU1218
 3603 0bc4 0323     		movs	r3, #3
 3604 0bc6 80F82530 		strb	r3, [r0, #37]
 779:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3605              		.loc 1 779 7 is_stmt 1 view .LVU1219
 779:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3606              		.loc 1 779 36 is_stmt 0 view .LVU1220
 3607 0bca 0123     		movs	r3, #1
 3608 0bcc 80F82630 		strb	r3, [r0, #38]
 780:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3609              		.loc 1 780 7 is_stmt 1 view .LVU1221
 780:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3610              		.loc 1 780 36 is_stmt 0 view .LVU1222
 3611 0bd0 FF23     		movs	r3, #255
 3612 0bd2 80F82A30 		strb	r3, [r0, #42]
 781:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3613              		.loc 1 781 7 is_stmt 1 view .LVU1223
 781:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3614              		.loc 1 781 36 is_stmt 0 view .LVU1224
 3615 0bd6 6423     		movs	r3, #100
 3616 0bd8 80F82B30 		strb	r3, [r0, #43]
 782:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3617              		.loc 1 782 7 is_stmt 1 view .LVU1225
 782:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3618              		.loc 1 782 36 is_stmt 0 view .LVU1226
 3619 0bdc 0823     		movs	r3, #8
 3620 0bde 0385     		strh	r3, [r0, #40]	@ movhi
 783:Core/Src/main.c ****       break;
 3621              		.loc 1 783 7 is_stmt 1 view .LVU1227
 3622 0be0 FFF7FEFF 		bl	LoRa_init
 3623              	.LVL186:
 784:Core/Src/main.c **** 
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 113


 3624              		.loc 1 784 7 view .LVU1228
 3625 0be4 FFF767BB 		b	.L89
 3626              	.L106:
 788:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_11;            // default = SF_7
 3627              		.loc 1 788 7 view .LVU1229
 788:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_11;            // default = SF_7
 3628              		.loc 1 788 36 is_stmt 0 view .LVU1230
 3629 0be8 3148     		ldr	r0, .L164
 3630 0bea 40F2B113 		movw	r3, #433
 3631 0bee 0362     		str	r3, [r0, #32]
 789:Core/Src/main.c ****       myLoRa.bandWidth             = BW_31_25KHz;       // default = BW_125KHz
 3632              		.loc 1 789 7 is_stmt 1 view .LVU1231
 789:Core/Src/main.c ****       myLoRa.bandWidth             = BW_31_25KHz;       // default = BW_125KHz
 3633              		.loc 1 789 37 is_stmt 0 view .LVU1232
 3634 0bf0 0B23     		movs	r3, #11
 3635 0bf2 80F82430 		strb	r3, [r0, #36]
 790:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3636              		.loc 1 790 7 is_stmt 1 view .LVU1233
 790:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3637              		.loc 1 790 36 is_stmt 0 view .LVU1234
 3638 0bf6 0423     		movs	r3, #4
 3639 0bf8 80F82530 		strb	r3, [r0, #37]
 791:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3640              		.loc 1 791 7 is_stmt 1 view .LVU1235
 791:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3641              		.loc 1 791 36 is_stmt 0 view .LVU1236
 3642 0bfc 0123     		movs	r3, #1
 3643 0bfe 80F82630 		strb	r3, [r0, #38]
 792:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3644              		.loc 1 792 7 is_stmt 1 view .LVU1237
 792:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3645              		.loc 1 792 36 is_stmt 0 view .LVU1238
 3646 0c02 FF23     		movs	r3, #255
 3647 0c04 80F82A30 		strb	r3, [r0, #42]
 793:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3648              		.loc 1 793 7 is_stmt 1 view .LVU1239
 793:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3649              		.loc 1 793 36 is_stmt 0 view .LVU1240
 3650 0c08 6423     		movs	r3, #100
 3651 0c0a 80F82B30 		strb	r3, [r0, #43]
 794:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3652              		.loc 1 794 7 is_stmt 1 view .LVU1241
 794:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3653              		.loc 1 794 36 is_stmt 0 view .LVU1242
 3654 0c0e 0823     		movs	r3, #8
 3655 0c10 0385     		strh	r3, [r0, #40]	@ movhi
 795:Core/Src/main.c ****       break;
 3656              		.loc 1 795 7 is_stmt 1 view .LVU1243
 3657 0c12 FFF7FEFF 		bl	LoRa_init
 3658              	.LVL187:
 796:Core/Src/main.c **** 
 3659              		.loc 1 796 7 view .LVU1244
 3660 0c16 FFF74EBB 		b	.L89
 3661              	.L105:
 800:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_11;            // default = SF_7
 3662              		.loc 1 800 7 view .LVU1245
 800:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_11;            // default = SF_7
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 114


 3663              		.loc 1 800 36 is_stmt 0 view .LVU1246
 3664 0c1a 2548     		ldr	r0, .L164
 3665 0c1c 40F2B113 		movw	r3, #433
 3666 0c20 0362     		str	r3, [r0, #32]
 801:Core/Src/main.c ****       myLoRa.bandWidth             = BW_41_7KHz;       // default = BW_125KHz
 3667              		.loc 1 801 7 is_stmt 1 view .LVU1247
 801:Core/Src/main.c ****       myLoRa.bandWidth             = BW_41_7KHz;       // default = BW_125KHz
 3668              		.loc 1 801 37 is_stmt 0 view .LVU1248
 3669 0c22 0B23     		movs	r3, #11
 3670 0c24 80F82430 		strb	r3, [r0, #36]
 802:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3671              		.loc 1 802 7 is_stmt 1 view .LVU1249
 802:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3672              		.loc 1 802 36 is_stmt 0 view .LVU1250
 3673 0c28 0523     		movs	r3, #5
 3674 0c2a 80F82530 		strb	r3, [r0, #37]
 803:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3675              		.loc 1 803 7 is_stmt 1 view .LVU1251
 803:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3676              		.loc 1 803 36 is_stmt 0 view .LVU1252
 3677 0c2e 0123     		movs	r3, #1
 3678 0c30 80F82630 		strb	r3, [r0, #38]
 804:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3679              		.loc 1 804 7 is_stmt 1 view .LVU1253
 804:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3680              		.loc 1 804 36 is_stmt 0 view .LVU1254
 3681 0c34 FF23     		movs	r3, #255
 3682 0c36 80F82A30 		strb	r3, [r0, #42]
 805:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3683              		.loc 1 805 7 is_stmt 1 view .LVU1255
 805:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3684              		.loc 1 805 36 is_stmt 0 view .LVU1256
 3685 0c3a 6423     		movs	r3, #100
 3686 0c3c 80F82B30 		strb	r3, [r0, #43]
 806:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3687              		.loc 1 806 7 is_stmt 1 view .LVU1257
 806:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3688              		.loc 1 806 36 is_stmt 0 view .LVU1258
 3689 0c40 0823     		movs	r3, #8
 3690 0c42 0385     		strh	r3, [r0, #40]	@ movhi
 807:Core/Src/main.c ****       break;
 3691              		.loc 1 807 7 is_stmt 1 view .LVU1259
 3692 0c44 FFF7FEFF 		bl	LoRa_init
 3693              	.LVL188:
 808:Core/Src/main.c **** 
 3694              		.loc 1 808 7 view .LVU1260
 3695 0c48 FFF735BB 		b	.L89
 3696              	.L104:
 812:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_11;            // default = SF_7
 3697              		.loc 1 812 7 view .LVU1261
 812:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_11;            // default = SF_7
 3698              		.loc 1 812 36 is_stmt 0 view .LVU1262
 3699 0c4c 1848     		ldr	r0, .L164
 3700 0c4e 40F2B113 		movw	r3, #433
 3701 0c52 0362     		str	r3, [r0, #32]
 813:Core/Src/main.c ****       myLoRa.bandWidth             = BW_62_5KHz;       // default = BW_125KHz
 3702              		.loc 1 813 7 is_stmt 1 view .LVU1263
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 115


 813:Core/Src/main.c ****       myLoRa.bandWidth             = BW_62_5KHz;       // default = BW_125KHz
 3703              		.loc 1 813 37 is_stmt 0 view .LVU1264
 3704 0c54 0B23     		movs	r3, #11
 3705 0c56 80F82430 		strb	r3, [r0, #36]
 814:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3706              		.loc 1 814 7 is_stmt 1 view .LVU1265
 814:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3707              		.loc 1 814 36 is_stmt 0 view .LVU1266
 3708 0c5a 0623     		movs	r3, #6
 3709 0c5c 80F82530 		strb	r3, [r0, #37]
 815:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3710              		.loc 1 815 7 is_stmt 1 view .LVU1267
 815:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3711              		.loc 1 815 36 is_stmt 0 view .LVU1268
 3712 0c60 0123     		movs	r3, #1
 3713 0c62 80F82630 		strb	r3, [r0, #38]
 816:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3714              		.loc 1 816 7 is_stmt 1 view .LVU1269
 816:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3715              		.loc 1 816 36 is_stmt 0 view .LVU1270
 3716 0c66 FF23     		movs	r3, #255
 3717 0c68 80F82A30 		strb	r3, [r0, #42]
 817:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3718              		.loc 1 817 7 is_stmt 1 view .LVU1271
 817:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3719              		.loc 1 817 36 is_stmt 0 view .LVU1272
 3720 0c6c 6423     		movs	r3, #100
 3721 0c6e 80F82B30 		strb	r3, [r0, #43]
 818:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3722              		.loc 1 818 7 is_stmt 1 view .LVU1273
 818:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3723              		.loc 1 818 36 is_stmt 0 view .LVU1274
 3724 0c72 0823     		movs	r3, #8
 3725 0c74 0385     		strh	r3, [r0, #40]	@ movhi
 819:Core/Src/main.c ****       break;
 3726              		.loc 1 819 7 is_stmt 1 view .LVU1275
 3727 0c76 FFF7FEFF 		bl	LoRa_init
 3728              	.LVL189:
 820:Core/Src/main.c **** 
 3729              		.loc 1 820 7 view .LVU1276
 3730 0c7a FFF71CBB 		b	.L89
 3731              	.L103:
 824:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_11;            // default = SF_7
 3732              		.loc 1 824 7 view .LVU1277
 824:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_11;            // default = SF_7
 3733              		.loc 1 824 36 is_stmt 0 view .LVU1278
 3734 0c7e 0C48     		ldr	r0, .L164
 3735 0c80 40F2B113 		movw	r3, #433
 3736 0c84 0362     		str	r3, [r0, #32]
 825:Core/Src/main.c ****       myLoRa.bandWidth             = BW_125KHz;       // default = BW_125KHz
 3737              		.loc 1 825 7 is_stmt 1 view .LVU1279
 825:Core/Src/main.c ****       myLoRa.bandWidth             = BW_125KHz;       // default = BW_125KHz
 3738              		.loc 1 825 37 is_stmt 0 view .LVU1280
 3739 0c86 0B23     		movs	r3, #11
 3740 0c88 80F82430 		strb	r3, [r0, #36]
 826:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3741              		.loc 1 826 7 is_stmt 1 view .LVU1281
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 116


 826:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3742              		.loc 1 826 36 is_stmt 0 view .LVU1282
 3743 0c8c 0723     		movs	r3, #7
 3744 0c8e 80F82530 		strb	r3, [r0, #37]
 827:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3745              		.loc 1 827 7 is_stmt 1 view .LVU1283
 827:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3746              		.loc 1 827 36 is_stmt 0 view .LVU1284
 3747 0c92 0123     		movs	r3, #1
 3748 0c94 80F82630 		strb	r3, [r0, #38]
 828:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3749              		.loc 1 828 7 is_stmt 1 view .LVU1285
 828:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3750              		.loc 1 828 36 is_stmt 0 view .LVU1286
 3751 0c98 FF23     		movs	r3, #255
 3752 0c9a 80F82A30 		strb	r3, [r0, #42]
 829:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3753              		.loc 1 829 7 is_stmt 1 view .LVU1287
 829:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3754              		.loc 1 829 36 is_stmt 0 view .LVU1288
 3755 0c9e 6423     		movs	r3, #100
 3756 0ca0 80F82B30 		strb	r3, [r0, #43]
 830:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3757              		.loc 1 830 7 is_stmt 1 view .LVU1289
 830:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3758              		.loc 1 830 36 is_stmt 0 view .LVU1290
 3759 0ca4 0823     		movs	r3, #8
 3760 0ca6 0385     		strh	r3, [r0, #40]	@ movhi
 831:Core/Src/main.c ****       break;
 3761              		.loc 1 831 7 is_stmt 1 view .LVU1291
 3762 0ca8 FFF7FEFF 		bl	LoRa_init
 3763              	.LVL190:
 832:Core/Src/main.c **** 
 3764              		.loc 1 832 7 view .LVU1292
 3765 0cac FFF703BB 		b	.L89
 3766              	.L165:
 3767              		.align	2
 3768              	.L164:
 3769 0cb0 00000000 		.word	myLoRa
 3770              	.L102:
 836:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_11;            // default = SF_7
 3771              		.loc 1 836 7 view .LVU1293
 836:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_11;            // default = SF_7
 3772              		.loc 1 836 36 is_stmt 0 view .LVU1294
 3773 0cb4 9448     		ldr	r0, .L166
 3774 0cb6 40F2B113 		movw	r3, #433
 3775 0cba 0362     		str	r3, [r0, #32]
 837:Core/Src/main.c ****       myLoRa.bandWidth             = BW_250KHz;       // default = BW_125KHz
 3776              		.loc 1 837 7 is_stmt 1 view .LVU1295
 837:Core/Src/main.c ****       myLoRa.bandWidth             = BW_250KHz;       // default = BW_125KHz
 3777              		.loc 1 837 37 is_stmt 0 view .LVU1296
 3778 0cbc 0B23     		movs	r3, #11
 3779 0cbe 80F82430 		strb	r3, [r0, #36]
 838:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3780              		.loc 1 838 7 is_stmt 1 view .LVU1297
 838:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3781              		.loc 1 838 36 is_stmt 0 view .LVU1298
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 117


 3782 0cc2 0823     		movs	r3, #8
 3783 0cc4 80F82530 		strb	r3, [r0, #37]
 839:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3784              		.loc 1 839 7 is_stmt 1 view .LVU1299
 839:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3785              		.loc 1 839 36 is_stmt 0 view .LVU1300
 3786 0cc8 0122     		movs	r2, #1
 3787 0cca 80F82620 		strb	r2, [r0, #38]
 840:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3788              		.loc 1 840 7 is_stmt 1 view .LVU1301
 840:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3789              		.loc 1 840 36 is_stmt 0 view .LVU1302
 3790 0cce FF22     		movs	r2, #255
 3791 0cd0 80F82A20 		strb	r2, [r0, #42]
 841:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3792              		.loc 1 841 7 is_stmt 1 view .LVU1303
 841:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3793              		.loc 1 841 36 is_stmt 0 view .LVU1304
 3794 0cd4 6422     		movs	r2, #100
 3795 0cd6 80F82B20 		strb	r2, [r0, #43]
 842:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3796              		.loc 1 842 7 is_stmt 1 view .LVU1305
 842:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3797              		.loc 1 842 36 is_stmt 0 view .LVU1306
 3798 0cda 0385     		strh	r3, [r0, #40]	@ movhi
 843:Core/Src/main.c ****       break;
 3799              		.loc 1 843 7 is_stmt 1 view .LVU1307
 3800 0cdc FFF7FEFF 		bl	LoRa_init
 3801              	.LVL191:
 844:Core/Src/main.c **** 
 3802              		.loc 1 844 7 view .LVU1308
 3803 0ce0 FFF7E9BA 		b	.L89
 3804              	.L101:
 848:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_11;            // default = SF_7
 3805              		.loc 1 848 7 view .LVU1309
 848:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_11;            // default = SF_7
 3806              		.loc 1 848 36 is_stmt 0 view .LVU1310
 3807 0ce4 8848     		ldr	r0, .L166
 3808 0ce6 40F2B113 		movw	r3, #433
 3809 0cea 0362     		str	r3, [r0, #32]
 849:Core/Src/main.c ****       myLoRa.bandWidth             = BW_500KHz;       // default = BW_125KHz
 3810              		.loc 1 849 7 is_stmt 1 view .LVU1311
 849:Core/Src/main.c ****       myLoRa.bandWidth             = BW_500KHz;       // default = BW_125KHz
 3811              		.loc 1 849 37 is_stmt 0 view .LVU1312
 3812 0cec 0B23     		movs	r3, #11
 3813 0cee 80F82430 		strb	r3, [r0, #36]
 850:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3814              		.loc 1 850 7 is_stmt 1 view .LVU1313
 850:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3815              		.loc 1 850 36 is_stmt 0 view .LVU1314
 3816 0cf2 0923     		movs	r3, #9
 3817 0cf4 80F82530 		strb	r3, [r0, #37]
 851:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3818              		.loc 1 851 7 is_stmt 1 view .LVU1315
 851:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3819              		.loc 1 851 36 is_stmt 0 view .LVU1316
 3820 0cf8 0123     		movs	r3, #1
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 118


 3821 0cfa 80F82630 		strb	r3, [r0, #38]
 852:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3822              		.loc 1 852 7 is_stmt 1 view .LVU1317
 852:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3823              		.loc 1 852 36 is_stmt 0 view .LVU1318
 3824 0cfe FF23     		movs	r3, #255
 3825 0d00 80F82A30 		strb	r3, [r0, #42]
 853:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3826              		.loc 1 853 7 is_stmt 1 view .LVU1319
 853:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3827              		.loc 1 853 36 is_stmt 0 view .LVU1320
 3828 0d04 6423     		movs	r3, #100
 3829 0d06 80F82B30 		strb	r3, [r0, #43]
 854:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3830              		.loc 1 854 7 is_stmt 1 view .LVU1321
 854:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3831              		.loc 1 854 36 is_stmt 0 view .LVU1322
 3832 0d0a 0823     		movs	r3, #8
 3833 0d0c 0385     		strh	r3, [r0, #40]	@ movhi
 855:Core/Src/main.c ****       break;
 3834              		.loc 1 855 7 is_stmt 1 view .LVU1323
 3835 0d0e FFF7FEFF 		bl	LoRa_init
 3836              	.LVL192:
 856:Core/Src/main.c **** 
 3837              		.loc 1 856 7 view .LVU1324
 3838 0d12 FFF7D0BA 		b	.L89
 3839              	.L100:
 860:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_12;            // default = SF_7
 3840              		.loc 1 860 7 view .LVU1325
 860:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_12;            // default = SF_7
 3841              		.loc 1 860 36 is_stmt 0 view .LVU1326
 3842 0d16 7C48     		ldr	r0, .L166
 3843 0d18 40F2B113 		movw	r3, #433
 3844 0d1c 0362     		str	r3, [r0, #32]
 861:Core/Src/main.c ****       myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 3845              		.loc 1 861 7 is_stmt 1 view .LVU1327
 861:Core/Src/main.c ****       myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 3846              		.loc 1 861 37 is_stmt 0 view .LVU1328
 3847 0d1e 0C23     		movs	r3, #12
 3848 0d20 80F82430 		strb	r3, [r0, #36]
 862:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3849              		.loc 1 862 7 is_stmt 1 view .LVU1329
 862:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3850              		.loc 1 862 36 is_stmt 0 view .LVU1330
 3851 0d24 0023     		movs	r3, #0
 3852 0d26 80F82530 		strb	r3, [r0, #37]
 863:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3853              		.loc 1 863 7 is_stmt 1 view .LVU1331
 863:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3854              		.loc 1 863 36 is_stmt 0 view .LVU1332
 3855 0d2a 0123     		movs	r3, #1
 3856 0d2c 80F82630 		strb	r3, [r0, #38]
 864:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3857              		.loc 1 864 7 is_stmt 1 view .LVU1333
 864:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3858              		.loc 1 864 36 is_stmt 0 view .LVU1334
 3859 0d30 FF23     		movs	r3, #255
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 119


 3860 0d32 80F82A30 		strb	r3, [r0, #42]
 865:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3861              		.loc 1 865 7 is_stmt 1 view .LVU1335
 865:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3862              		.loc 1 865 36 is_stmt 0 view .LVU1336
 3863 0d36 6423     		movs	r3, #100
 3864 0d38 80F82B30 		strb	r3, [r0, #43]
 866:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3865              		.loc 1 866 7 is_stmt 1 view .LVU1337
 866:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3866              		.loc 1 866 36 is_stmt 0 view .LVU1338
 3867 0d3c 0823     		movs	r3, #8
 3868 0d3e 0385     		strh	r3, [r0, #40]	@ movhi
 867:Core/Src/main.c ****       break;
 3869              		.loc 1 867 7 is_stmt 1 view .LVU1339
 3870 0d40 FFF7FEFF 		bl	LoRa_init
 3871              	.LVL193:
 868:Core/Src/main.c **** 
 3872              		.loc 1 868 7 view .LVU1340
 3873 0d44 FFF7B7BA 		b	.L89
 3874              	.L99:
 872:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_12;            // default = SF_7
 3875              		.loc 1 872 7 view .LVU1341
 872:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_12;            // default = SF_7
 3876              		.loc 1 872 36 is_stmt 0 view .LVU1342
 3877 0d48 6F48     		ldr	r0, .L166
 3878 0d4a 40F2B113 		movw	r3, #433
 3879 0d4e 0362     		str	r3, [r0, #32]
 873:Core/Src/main.c ****       myLoRa.bandWidth             = BW_10_4KHz;       // default = BW_125KHz
 3880              		.loc 1 873 7 is_stmt 1 view .LVU1343
 873:Core/Src/main.c ****       myLoRa.bandWidth             = BW_10_4KHz;       // default = BW_125KHz
 3881              		.loc 1 873 37 is_stmt 0 view .LVU1344
 3882 0d50 0C23     		movs	r3, #12
 3883 0d52 80F82430 		strb	r3, [r0, #36]
 874:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3884              		.loc 1 874 7 is_stmt 1 view .LVU1345
 874:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3885              		.loc 1 874 36 is_stmt 0 view .LVU1346
 3886 0d56 0123     		movs	r3, #1
 3887 0d58 80F82530 		strb	r3, [r0, #37]
 875:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3888              		.loc 1 875 7 is_stmt 1 view .LVU1347
 875:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3889              		.loc 1 875 36 is_stmt 0 view .LVU1348
 3890 0d5c 80F82630 		strb	r3, [r0, #38]
 876:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3891              		.loc 1 876 7 is_stmt 1 view .LVU1349
 876:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3892              		.loc 1 876 36 is_stmt 0 view .LVU1350
 3893 0d60 FF23     		movs	r3, #255
 3894 0d62 80F82A30 		strb	r3, [r0, #42]
 877:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3895              		.loc 1 877 7 is_stmt 1 view .LVU1351
 877:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3896              		.loc 1 877 36 is_stmt 0 view .LVU1352
 3897 0d66 6423     		movs	r3, #100
 3898 0d68 80F82B30 		strb	r3, [r0, #43]
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 120


 878:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3899              		.loc 1 878 7 is_stmt 1 view .LVU1353
 878:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3900              		.loc 1 878 36 is_stmt 0 view .LVU1354
 3901 0d6c 0823     		movs	r3, #8
 3902 0d6e 0385     		strh	r3, [r0, #40]	@ movhi
 879:Core/Src/main.c ****       break;
 3903              		.loc 1 879 7 is_stmt 1 view .LVU1355
 3904 0d70 FFF7FEFF 		bl	LoRa_init
 3905              	.LVL194:
 880:Core/Src/main.c **** 
 3906              		.loc 1 880 7 view .LVU1356
 3907 0d74 FFF79FBA 		b	.L89
 3908              	.L98:
 884:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_12;            // default = SF_7
 3909              		.loc 1 884 7 view .LVU1357
 884:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_12;            // default = SF_7
 3910              		.loc 1 884 36 is_stmt 0 view .LVU1358
 3911 0d78 6348     		ldr	r0, .L166
 3912 0d7a 40F2B113 		movw	r3, #433
 3913 0d7e 0362     		str	r3, [r0, #32]
 885:Core/Src/main.c ****       myLoRa.bandWidth             = BW_15_6KHz;       // default = BW_125KHz
 3914              		.loc 1 885 7 is_stmt 1 view .LVU1359
 885:Core/Src/main.c ****       myLoRa.bandWidth             = BW_15_6KHz;       // default = BW_125KHz
 3915              		.loc 1 885 37 is_stmt 0 view .LVU1360
 3916 0d80 0C23     		movs	r3, #12
 3917 0d82 80F82430 		strb	r3, [r0, #36]
 886:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3918              		.loc 1 886 7 is_stmt 1 view .LVU1361
 886:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3919              		.loc 1 886 36 is_stmt 0 view .LVU1362
 3920 0d86 0223     		movs	r3, #2
 3921 0d88 80F82530 		strb	r3, [r0, #37]
 887:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3922              		.loc 1 887 7 is_stmt 1 view .LVU1363
 887:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3923              		.loc 1 887 36 is_stmt 0 view .LVU1364
 3924 0d8c 0123     		movs	r3, #1
 3925 0d8e 80F82630 		strb	r3, [r0, #38]
 888:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3926              		.loc 1 888 7 is_stmt 1 view .LVU1365
 888:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3927              		.loc 1 888 36 is_stmt 0 view .LVU1366
 3928 0d92 FF23     		movs	r3, #255
 3929 0d94 80F82A30 		strb	r3, [r0, #42]
 889:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3930              		.loc 1 889 7 is_stmt 1 view .LVU1367
 889:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3931              		.loc 1 889 36 is_stmt 0 view .LVU1368
 3932 0d98 6423     		movs	r3, #100
 3933 0d9a 80F82B30 		strb	r3, [r0, #43]
 890:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3934              		.loc 1 890 7 is_stmt 1 view .LVU1369
 890:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3935              		.loc 1 890 36 is_stmt 0 view .LVU1370
 3936 0d9e 0823     		movs	r3, #8
 3937 0da0 0385     		strh	r3, [r0, #40]	@ movhi
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 121


 891:Core/Src/main.c ****       break;
 3938              		.loc 1 891 7 is_stmt 1 view .LVU1371
 3939 0da2 FFF7FEFF 		bl	LoRa_init
 3940              	.LVL195:
 892:Core/Src/main.c **** 
 3941              		.loc 1 892 7 view .LVU1372
 3942 0da6 FFF786BA 		b	.L89
 3943              	.L97:
 896:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_12;            // default = SF_7
 3944              		.loc 1 896 7 view .LVU1373
 896:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_12;            // default = SF_7
 3945              		.loc 1 896 36 is_stmt 0 view .LVU1374
 3946 0daa 5748     		ldr	r0, .L166
 3947 0dac 40F2B113 		movw	r3, #433
 3948 0db0 0362     		str	r3, [r0, #32]
 897:Core/Src/main.c ****       myLoRa.bandWidth             = BW_20_8KHz;       // default = BW_125KHz
 3949              		.loc 1 897 7 is_stmt 1 view .LVU1375
 897:Core/Src/main.c ****       myLoRa.bandWidth             = BW_20_8KHz;       // default = BW_125KHz
 3950              		.loc 1 897 37 is_stmt 0 view .LVU1376
 3951 0db2 0C23     		movs	r3, #12
 3952 0db4 80F82430 		strb	r3, [r0, #36]
 898:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3953              		.loc 1 898 7 is_stmt 1 view .LVU1377
 898:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3954              		.loc 1 898 36 is_stmt 0 view .LVU1378
 3955 0db8 0323     		movs	r3, #3
 3956 0dba 80F82530 		strb	r3, [r0, #37]
 899:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3957              		.loc 1 899 7 is_stmt 1 view .LVU1379
 899:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3958              		.loc 1 899 36 is_stmt 0 view .LVU1380
 3959 0dbe 0123     		movs	r3, #1
 3960 0dc0 80F82630 		strb	r3, [r0, #38]
 900:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3961              		.loc 1 900 7 is_stmt 1 view .LVU1381
 900:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3962              		.loc 1 900 36 is_stmt 0 view .LVU1382
 3963 0dc4 FF23     		movs	r3, #255
 3964 0dc6 80F82A30 		strb	r3, [r0, #42]
 901:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3965              		.loc 1 901 7 is_stmt 1 view .LVU1383
 901:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3966              		.loc 1 901 36 is_stmt 0 view .LVU1384
 3967 0dca 6423     		movs	r3, #100
 3968 0dcc 80F82B30 		strb	r3, [r0, #43]
 902:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3969              		.loc 1 902 7 is_stmt 1 view .LVU1385
 902:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3970              		.loc 1 902 36 is_stmt 0 view .LVU1386
 3971 0dd0 0823     		movs	r3, #8
 3972 0dd2 0385     		strh	r3, [r0, #40]	@ movhi
 903:Core/Src/main.c ****       break;
 3973              		.loc 1 903 7 is_stmt 1 view .LVU1387
 3974 0dd4 FFF7FEFF 		bl	LoRa_init
 3975              	.LVL196:
 904:Core/Src/main.c **** 
 3976              		.loc 1 904 7 view .LVU1388
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 122


 3977 0dd8 FFF76DBA 		b	.L89
 3978              	.L96:
 908:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_12;            // default = SF_7
 3979              		.loc 1 908 7 view .LVU1389
 908:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_12;            // default = SF_7
 3980              		.loc 1 908 36 is_stmt 0 view .LVU1390
 3981 0ddc 4A48     		ldr	r0, .L166
 3982 0dde 40F2B113 		movw	r3, #433
 3983 0de2 0362     		str	r3, [r0, #32]
 909:Core/Src/main.c ****       myLoRa.bandWidth             = BW_31_25KHz;       // default = BW_125KHz
 3984              		.loc 1 909 7 is_stmt 1 view .LVU1391
 909:Core/Src/main.c ****       myLoRa.bandWidth             = BW_31_25KHz;       // default = BW_125KHz
 3985              		.loc 1 909 37 is_stmt 0 view .LVU1392
 3986 0de4 0C23     		movs	r3, #12
 3987 0de6 80F82430 		strb	r3, [r0, #36]
 910:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3988              		.loc 1 910 7 is_stmt 1 view .LVU1393
 910:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3989              		.loc 1 910 36 is_stmt 0 view .LVU1394
 3990 0dea 0423     		movs	r3, #4
 3991 0dec 80F82530 		strb	r3, [r0, #37]
 911:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3992              		.loc 1 911 7 is_stmt 1 view .LVU1395
 911:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3993              		.loc 1 911 36 is_stmt 0 view .LVU1396
 3994 0df0 0123     		movs	r3, #1
 3995 0df2 80F82630 		strb	r3, [r0, #38]
 912:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3996              		.loc 1 912 7 is_stmt 1 view .LVU1397
 912:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3997              		.loc 1 912 36 is_stmt 0 view .LVU1398
 3998 0df6 FF23     		movs	r3, #255
 3999 0df8 80F82A30 		strb	r3, [r0, #42]
 913:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 4000              		.loc 1 913 7 is_stmt 1 view .LVU1399
 913:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 4001              		.loc 1 913 36 is_stmt 0 view .LVU1400
 4002 0dfc 6423     		movs	r3, #100
 4003 0dfe 80F82B30 		strb	r3, [r0, #43]
 914:Core/Src/main.c ****       LoRa_init(&myLoRa);
 4004              		.loc 1 914 7 is_stmt 1 view .LVU1401
 914:Core/Src/main.c ****       LoRa_init(&myLoRa);
 4005              		.loc 1 914 36 is_stmt 0 view .LVU1402
 4006 0e02 0823     		movs	r3, #8
 4007 0e04 0385     		strh	r3, [r0, #40]	@ movhi
 915:Core/Src/main.c ****       break;
 4008              		.loc 1 915 7 is_stmt 1 view .LVU1403
 4009 0e06 FFF7FEFF 		bl	LoRa_init
 4010              	.LVL197:
 916:Core/Src/main.c **** 
 4011              		.loc 1 916 7 view .LVU1404
 4012 0e0a FFF754BA 		b	.L89
 4013              	.L95:
 920:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_12;            // default = SF_7
 4014              		.loc 1 920 7 view .LVU1405
 920:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_12;            // default = SF_7
 4015              		.loc 1 920 36 is_stmt 0 view .LVU1406
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 123


 4016 0e0e 3E48     		ldr	r0, .L166
 4017 0e10 40F2B113 		movw	r3, #433
 4018 0e14 0362     		str	r3, [r0, #32]
 921:Core/Src/main.c ****       myLoRa.bandWidth             = BW_41_7KHz;       // default = BW_125KHz
 4019              		.loc 1 921 7 is_stmt 1 view .LVU1407
 921:Core/Src/main.c ****       myLoRa.bandWidth             = BW_41_7KHz;       // default = BW_125KHz
 4020              		.loc 1 921 37 is_stmt 0 view .LVU1408
 4021 0e16 0C23     		movs	r3, #12
 4022 0e18 80F82430 		strb	r3, [r0, #36]
 922:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 4023              		.loc 1 922 7 is_stmt 1 view .LVU1409
 922:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 4024              		.loc 1 922 36 is_stmt 0 view .LVU1410
 4025 0e1c 0523     		movs	r3, #5
 4026 0e1e 80F82530 		strb	r3, [r0, #37]
 923:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 4027              		.loc 1 923 7 is_stmt 1 view .LVU1411
 923:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 4028              		.loc 1 923 36 is_stmt 0 view .LVU1412
 4029 0e22 0123     		movs	r3, #1
 4030 0e24 80F82630 		strb	r3, [r0, #38]
 924:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 4031              		.loc 1 924 7 is_stmt 1 view .LVU1413
 924:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 4032              		.loc 1 924 36 is_stmt 0 view .LVU1414
 4033 0e28 FF23     		movs	r3, #255
 4034 0e2a 80F82A30 		strb	r3, [r0, #42]
 925:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 4035              		.loc 1 925 7 is_stmt 1 view .LVU1415
 925:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 4036              		.loc 1 925 36 is_stmt 0 view .LVU1416
 4037 0e2e 6423     		movs	r3, #100
 4038 0e30 80F82B30 		strb	r3, [r0, #43]
 926:Core/Src/main.c ****       LoRa_init(&myLoRa);
 4039              		.loc 1 926 7 is_stmt 1 view .LVU1417
 926:Core/Src/main.c ****       LoRa_init(&myLoRa);
 4040              		.loc 1 926 36 is_stmt 0 view .LVU1418
 4041 0e34 0823     		movs	r3, #8
 4042 0e36 0385     		strh	r3, [r0, #40]	@ movhi
 927:Core/Src/main.c ****       break;
 4043              		.loc 1 927 7 is_stmt 1 view .LVU1419
 4044 0e38 FFF7FEFF 		bl	LoRa_init
 4045              	.LVL198:
 928:Core/Src/main.c **** 
 4046              		.loc 1 928 7 view .LVU1420
 4047 0e3c FFF73BBA 		b	.L89
 4048              	.L94:
 932:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_12;            // default = SF_7
 4049              		.loc 1 932 7 view .LVU1421
 932:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_12;            // default = SF_7
 4050              		.loc 1 932 36 is_stmt 0 view .LVU1422
 4051 0e40 3148     		ldr	r0, .L166
 4052 0e42 40F2B113 		movw	r3, #433
 4053 0e46 0362     		str	r3, [r0, #32]
 933:Core/Src/main.c ****       myLoRa.bandWidth             = BW_62_5KHz;       // default = BW_125KHz
 4054              		.loc 1 933 7 is_stmt 1 view .LVU1423
 933:Core/Src/main.c ****       myLoRa.bandWidth             = BW_62_5KHz;       // default = BW_125KHz
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 124


 4055              		.loc 1 933 37 is_stmt 0 view .LVU1424
 4056 0e48 0C23     		movs	r3, #12
 4057 0e4a 80F82430 		strb	r3, [r0, #36]
 934:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 4058              		.loc 1 934 7 is_stmt 1 view .LVU1425
 934:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 4059              		.loc 1 934 36 is_stmt 0 view .LVU1426
 4060 0e4e 0623     		movs	r3, #6
 4061 0e50 80F82530 		strb	r3, [r0, #37]
 935:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 4062              		.loc 1 935 7 is_stmt 1 view .LVU1427
 935:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 4063              		.loc 1 935 36 is_stmt 0 view .LVU1428
 4064 0e54 0123     		movs	r3, #1
 4065 0e56 80F82630 		strb	r3, [r0, #38]
 936:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 4066              		.loc 1 936 7 is_stmt 1 view .LVU1429
 936:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 4067              		.loc 1 936 36 is_stmt 0 view .LVU1430
 4068 0e5a FF23     		movs	r3, #255
 4069 0e5c 80F82A30 		strb	r3, [r0, #42]
 937:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 4070              		.loc 1 937 7 is_stmt 1 view .LVU1431
 937:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 4071              		.loc 1 937 36 is_stmt 0 view .LVU1432
 4072 0e60 6423     		movs	r3, #100
 4073 0e62 80F82B30 		strb	r3, [r0, #43]
 938:Core/Src/main.c ****       LoRa_init(&myLoRa);
 4074              		.loc 1 938 7 is_stmt 1 view .LVU1433
 938:Core/Src/main.c ****       LoRa_init(&myLoRa);
 4075              		.loc 1 938 36 is_stmt 0 view .LVU1434
 4076 0e66 0823     		movs	r3, #8
 4077 0e68 0385     		strh	r3, [r0, #40]	@ movhi
 939:Core/Src/main.c ****       break;
 4078              		.loc 1 939 7 is_stmt 1 view .LVU1435
 4079 0e6a FFF7FEFF 		bl	LoRa_init
 4080              	.LVL199:
 940:Core/Src/main.c **** 
 4081              		.loc 1 940 7 view .LVU1436
 4082 0e6e FFF722BA 		b	.L89
 4083              	.L93:
 944:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_12;            // default = SF_7
 4084              		.loc 1 944 7 view .LVU1437
 944:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_12;            // default = SF_7
 4085              		.loc 1 944 36 is_stmt 0 view .LVU1438
 4086 0e72 2548     		ldr	r0, .L166
 4087 0e74 40F2B113 		movw	r3, #433
 4088 0e78 0362     		str	r3, [r0, #32]
 945:Core/Src/main.c ****       myLoRa.bandWidth             = BW_125KHz;       // default = BW_125KHz
 4089              		.loc 1 945 7 is_stmt 1 view .LVU1439
 945:Core/Src/main.c ****       myLoRa.bandWidth             = BW_125KHz;       // default = BW_125KHz
 4090              		.loc 1 945 37 is_stmt 0 view .LVU1440
 4091 0e7a 0C23     		movs	r3, #12
 4092 0e7c 80F82430 		strb	r3, [r0, #36]
 946:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 4093              		.loc 1 946 7 is_stmt 1 view .LVU1441
 946:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 125


 4094              		.loc 1 946 36 is_stmt 0 view .LVU1442
 4095 0e80 0723     		movs	r3, #7
 4096 0e82 80F82530 		strb	r3, [r0, #37]
 947:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 4097              		.loc 1 947 7 is_stmt 1 view .LVU1443
 947:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 4098              		.loc 1 947 36 is_stmt 0 view .LVU1444
 4099 0e86 0123     		movs	r3, #1
 4100 0e88 80F82630 		strb	r3, [r0, #38]
 948:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 4101              		.loc 1 948 7 is_stmt 1 view .LVU1445
 948:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 4102              		.loc 1 948 36 is_stmt 0 view .LVU1446
 4103 0e8c FF23     		movs	r3, #255
 4104 0e8e 80F82A30 		strb	r3, [r0, #42]
 949:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 4105              		.loc 1 949 7 is_stmt 1 view .LVU1447
 949:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 4106              		.loc 1 949 36 is_stmt 0 view .LVU1448
 4107 0e92 6423     		movs	r3, #100
 4108 0e94 80F82B30 		strb	r3, [r0, #43]
 950:Core/Src/main.c ****       LoRa_init(&myLoRa);
 4109              		.loc 1 950 7 is_stmt 1 view .LVU1449
 950:Core/Src/main.c ****       LoRa_init(&myLoRa);
 4110              		.loc 1 950 36 is_stmt 0 view .LVU1450
 4111 0e98 0823     		movs	r3, #8
 4112 0e9a 0385     		strh	r3, [r0, #40]	@ movhi
 951:Core/Src/main.c ****       break;
 4113              		.loc 1 951 7 is_stmt 1 view .LVU1451
 4114 0e9c FFF7FEFF 		bl	LoRa_init
 4115              	.LVL200:
 952:Core/Src/main.c **** 
 4116              		.loc 1 952 7 view .LVU1452
 4117 0ea0 FFF709BA 		b	.L89
 4118              	.L92:
 956:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_12;            // default = SF_7
 4119              		.loc 1 956 7 view .LVU1453
 956:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_12;            // default = SF_7
 4120              		.loc 1 956 36 is_stmt 0 view .LVU1454
 4121 0ea4 1848     		ldr	r0, .L166
 4122 0ea6 40F2B113 		movw	r3, #433
 4123 0eaa 0362     		str	r3, [r0, #32]
 957:Core/Src/main.c ****       myLoRa.bandWidth             = BW_250KHz;       // default = BW_125KHz
 4124              		.loc 1 957 7 is_stmt 1 view .LVU1455
 957:Core/Src/main.c ****       myLoRa.bandWidth             = BW_250KHz;       // default = BW_125KHz
 4125              		.loc 1 957 37 is_stmt 0 view .LVU1456
 4126 0eac 0C23     		movs	r3, #12
 4127 0eae 80F82430 		strb	r3, [r0, #36]
 958:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 4128              		.loc 1 958 7 is_stmt 1 view .LVU1457
 958:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 4129              		.loc 1 958 36 is_stmt 0 view .LVU1458
 4130 0eb2 0823     		movs	r3, #8
 4131 0eb4 80F82530 		strb	r3, [r0, #37]
 959:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 4132              		.loc 1 959 7 is_stmt 1 view .LVU1459
 959:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 126


 4133              		.loc 1 959 36 is_stmt 0 view .LVU1460
 4134 0eb8 0122     		movs	r2, #1
 4135 0eba 80F82620 		strb	r2, [r0, #38]
 960:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 4136              		.loc 1 960 7 is_stmt 1 view .LVU1461
 960:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 4137              		.loc 1 960 36 is_stmt 0 view .LVU1462
 4138 0ebe FF22     		movs	r2, #255
 4139 0ec0 80F82A20 		strb	r2, [r0, #42]
 961:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 4140              		.loc 1 961 7 is_stmt 1 view .LVU1463
 961:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 4141              		.loc 1 961 36 is_stmt 0 view .LVU1464
 4142 0ec4 6422     		movs	r2, #100
 4143 0ec6 80F82B20 		strb	r2, [r0, #43]
 962:Core/Src/main.c ****       LoRa_init(&myLoRa);
 4144              		.loc 1 962 7 is_stmt 1 view .LVU1465
 962:Core/Src/main.c ****       LoRa_init(&myLoRa);
 4145              		.loc 1 962 36 is_stmt 0 view .LVU1466
 4146 0eca 0385     		strh	r3, [r0, #40]	@ movhi
 963:Core/Src/main.c ****       break;
 4147              		.loc 1 963 7 is_stmt 1 view .LVU1467
 4148 0ecc FFF7FEFF 		bl	LoRa_init
 4149              	.LVL201:
 964:Core/Src/main.c **** 
 4150              		.loc 1 964 7 view .LVU1468
 4151 0ed0 FFF7F1B9 		b	.L89
 4152              	.L90:
 968:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_12;            // default = SF_7
 4153              		.loc 1 968 7 view .LVU1469
 968:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_12;            // default = SF_7
 4154              		.loc 1 968 36 is_stmt 0 view .LVU1470
 4155 0ed4 0C48     		ldr	r0, .L166
 4156 0ed6 40F2B113 		movw	r3, #433
 4157 0eda 0362     		str	r3, [r0, #32]
 969:Core/Src/main.c ****       myLoRa.bandWidth             = BW_500KHz;       // default = BW_125KHz
 4158              		.loc 1 969 7 is_stmt 1 view .LVU1471
 969:Core/Src/main.c ****       myLoRa.bandWidth             = BW_500KHz;       // default = BW_125KHz
 4159              		.loc 1 969 37 is_stmt 0 view .LVU1472
 4160 0edc 0C23     		movs	r3, #12
 4161 0ede 80F82430 		strb	r3, [r0, #36]
 970:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 4162              		.loc 1 970 7 is_stmt 1 view .LVU1473
 970:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 4163              		.loc 1 970 36 is_stmt 0 view .LVU1474
 4164 0ee2 0923     		movs	r3, #9
 4165 0ee4 80F82530 		strb	r3, [r0, #37]
 971:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 4166              		.loc 1 971 7 is_stmt 1 view .LVU1475
 971:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 4167              		.loc 1 971 36 is_stmt 0 view .LVU1476
 4168 0ee8 0123     		movs	r3, #1
 4169 0eea 80F82630 		strb	r3, [r0, #38]
 972:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 4170              		.loc 1 972 7 is_stmt 1 view .LVU1477
 972:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 4171              		.loc 1 972 36 is_stmt 0 view .LVU1478
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 127


 4172 0eee FF23     		movs	r3, #255
 4173 0ef0 80F82A30 		strb	r3, [r0, #42]
 973:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 4174              		.loc 1 973 7 is_stmt 1 view .LVU1479
 973:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 4175              		.loc 1 973 36 is_stmt 0 view .LVU1480
 4176 0ef4 6423     		movs	r3, #100
 4177 0ef6 80F82B30 		strb	r3, [r0, #43]
 974:Core/Src/main.c ****       LoRa_init(&myLoRa);
 4178              		.loc 1 974 7 is_stmt 1 view .LVU1481
 974:Core/Src/main.c ****       LoRa_init(&myLoRa);
 4179              		.loc 1 974 36 is_stmt 0 view .LVU1482
 4180 0efa 0823     		movs	r3, #8
 4181 0efc 0385     		strh	r3, [r0, #40]	@ movhi
 975:Core/Src/main.c ****       break;
 4182              		.loc 1 975 7 is_stmt 1 view .LVU1483
 4183 0efe FFF7FEFF 		bl	LoRa_init
 4184              	.LVL202:
 976:Core/Src/main.c **** 
 4185              		.loc 1 976 7 view .LVU1484
 4186 0f02 FFF7D8B9 		b	.L89
 4187              	.L167:
 4188 0f06 00BF     		.align	2
 4189              	.L166:
 4190 0f08 00000000 		.word	myLoRa
 4191              		.cfi_endproc
 4192              	.LFE138:
 4194              		.global	Data
 4195              		.section	.bss.Data,"aw",%nobits
 4196              		.align	2
 4199              	Data:
 4200 0000 00000000 		.space	256
 4200      00000000 
 4200      00000000 
 4200      00000000 
 4200      00000000 
 4201              		.global	size
 4202              		.section	.bss.size,"aw",%nobits
 4203              		.align	2
 4206              	size:
 4207 0000 00000000 		.space	4
 4208              		.global	sAltitude
 4209              		.section	.bss.sAltitude,"aw",%nobits
 4210              		.align	2
 4213              	sAltitude:
 4214 0000 00000000 		.space	128
 4214      00000000 
 4214      00000000 
 4214      00000000 
 4214      00000000 
 4215              		.global	sHumidity
 4216              		.section	.bss.sHumidity,"aw",%nobits
 4217              		.align	2
 4220              	sHumidity:
 4221 0000 00000000 		.space	128
 4221      00000000 
 4221      00000000 
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 128


 4221      00000000 
 4221      00000000 
 4222              		.global	sTemperature
 4223              		.section	.bss.sTemperature,"aw",%nobits
 4224              		.align	2
 4227              	sTemperature:
 4228 0000 00000000 		.space	128
 4228      00000000 
 4228      00000000 
 4228      00000000 
 4228      00000000 
 4229              		.global	sPressure
 4230              		.section	.bss.sPressure,"aw",%nobits
 4231              		.align	2
 4234              	sPressure:
 4235 0000 00000000 		.space	128
 4235      00000000 
 4235      00000000 
 4235      00000000 
 4235      00000000 
 4236              		.global	humidity
 4237              		.section	.bss.humidity,"aw",%nobits
 4238              		.align	2
 4241              	humidity:
 4242 0000 00000000 		.space	4
 4243              		.global	temperature
 4244              		.section	.bss.temperature,"aw",%nobits
 4245              		.align	2
 4248              	temperature:
 4249 0000 00000000 		.space	4
 4250              		.global	pressure
 4251              		.section	.bss.pressure,"aw",%nobits
 4252              		.align	2
 4255              	pressure:
 4256 0000 00000000 		.space	4
 4257              		.global	bmp280
 4258              		.section	.bss.bmp280,"aw",%nobits
 4259              		.align	2
 4262              	bmp280:
 4263 0000 00000000 		.space	52
 4263      00000000 
 4263      00000000 
 4263      00000000 
 4263      00000000 
 4264              		.global	altitude
 4265              		.section	.bss.altitude,"aw",%nobits
 4266              		.align	2
 4269              	altitude:
 4270 0000 00000000 		.space	4
 4271              		.global	P_b
 4272              		.section	.data.P_b,"aw"
 4273              		.align	2
 4276              	P_b:
 4277 0000 80E6C547 		.word	1204151936
 4278              		.global	packetSize
 4279              		.section	.bss.packetSize,"aw",%nobits
 4280              		.align	1
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 129


 4283              	packetSize:
 4284 0000 0000     		.space	2
 4285              		.global	beginTransmit
 4286              		.section	.bss.beginTransmit,"aw",%nobits
 4289              	beginTransmit:
 4290 0000 00       		.space	1
 4291              		.global	sendData
 4292              		.section	.bss.sendData,"aw",%nobits
 4295              	sendData:
 4296 0000 00       		.space	1
 4297              		.global	bModeChanged
 4298              		.section	.data.bModeChanged,"aw"
 4301              	bModeChanged:
 4302 0000 01       		.byte	1
 4303              		.global	sMode
 4304              		.section	.bss.sMode,"aw",%nobits
 4305              		.align	2
 4308              	sMode:
 4309 0000 00000000 		.space	10
 4309      00000000 
 4309      0000
 4310              		.global	iMode
 4311              		.section	.data.iMode,"aw"
 4312              		.align	2
 4315              	iMode:
 4316 0000 01000000 		.word	1
 4317              		.global	currentTicks
 4318              		.section	.bss.currentTicks,"aw",%nobits
 4319              		.align	2
 4322              	currentTicks:
 4323 0000 00000000 		.space	4
 4324              		.global	preTicks
 4325              		.section	.bss.preTicks,"aw",%nobits
 4326              		.align	2
 4329              	preTicks:
 4330 0000 00000000 		.space	4
 4331              		.global	isLoraReady
 4332              		.section	.data.isLoraReady,"aw"
 4335              	isLoraReady:
 4336 0000 01       		.byte	1
 4337              		.global	myLoRa
 4338              		.section	.bss.myLoRa,"aw",%nobits
 4339              		.align	2
 4342              	myLoRa:
 4343 0000 00000000 		.space	48
 4343      00000000 
 4343      00000000 
 4343      00000000 
 4343      00000000 
 4344              		.global	transmit_data
 4345              		.section	.bss.transmit_data,"aw",%nobits
 4346              		.align	2
 4349              	transmit_data:
 4350 0000 00000000 		.space	256
 4350      00000000 
 4350      00000000 
 4350      00000000 
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 130


 4350      00000000 
 4351              		.global	bme280p
 4352              		.section	.bss.bme280p,"aw",%nobits
 4355              	bme280p:
 4356 0000 00       		.space	1
 4357              		.global	line
 4358              		.section	.bss.line,"aw",%nobits
 4359              		.align	2
 4362              	line:
 4363 0000 00000000 		.space	64
 4363      00000000 
 4363      00000000 
 4363      00000000 
 4363      00000000 
 4364              		.global	flag
 4365              		.section	.bss.flag,"aw",%nobits
 4368              	flag:
 4369 0000 00       		.space	1
 4370              		.global	gps_raw
 4371              		.section	.bss.gps_raw,"aw",%nobits
 4372              		.align	2
 4375              	gps_raw:
 4376 0000 00000000 		.space	512
 4376      00000000 
 4376      00000000 
 4376      00000000 
 4376      00000000 
 4377              		.global	huart2
 4378              		.section	.bss.huart2,"aw",%nobits
 4379              		.align	2
 4382              	huart2:
 4383 0000 00000000 		.space	68
 4383      00000000 
 4383      00000000 
 4383      00000000 
 4383      00000000 
 4384              		.global	huart1
 4385              		.section	.bss.huart1,"aw",%nobits
 4386              		.align	2
 4389              	huart1:
 4390 0000 00000000 		.space	68
 4390      00000000 
 4390      00000000 
 4390      00000000 
 4390      00000000 
 4391              		.global	htim3
 4392              		.section	.bss.htim3,"aw",%nobits
 4393              		.align	2
 4396              	htim3:
 4397 0000 00000000 		.space	72
 4397      00000000 
 4397      00000000 
 4397      00000000 
 4397      00000000 
 4398              		.global	hspi3
 4399              		.section	.bss.hspi3,"aw",%nobits
 4400              		.align	2
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 131


 4403              	hspi3:
 4404 0000 00000000 		.space	88
 4404      00000000 
 4404      00000000 
 4404      00000000 
 4404      00000000 
 4405              		.global	hi2c2
 4406              		.section	.bss.hi2c2,"aw",%nobits
 4407              		.align	2
 4410              	hi2c2:
 4411 0000 00000000 		.space	84
 4411      00000000 
 4411      00000000 
 4411      00000000 
 4411      00000000 
 4412              		.global	hi2c1
 4413              		.section	.bss.hi2c1,"aw",%nobits
 4414              		.align	2
 4417              	hi2c1:
 4418 0000 00000000 		.space	84
 4418      00000000 
 4418      00000000 
 4418      00000000 
 4418      00000000 
 4419              		.text
 4420              	.Letext0:
 4421              		.file 3 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 4422              		.file 4 "/Users/roryschram/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscod
 4423              		.file 5 "/Users/roryschram/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscod
 4424              		.file 6 "/Users/roryschram/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscod
 4425              		.file 7 "/Users/roryschram/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscod
 4426              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 4427              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 4428              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 4429              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 4430              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 4431              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 4432              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 4433              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 4434              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 4435              		.file 17 "Core/Inc/minmea.h"
 4436              		.file 18 "Core/Inc/bmp280.h"
 4437              		.file 19 "Core/Inc/LoRa.h"
 4438              		.file 20 "Core/Inc/fonts.h"
 4439              		.file 21 "Core/Inc/ssd1306.h"
 4440              		.file 22 "/Users/roryschram/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vsco
 4441              		.file 23 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 4442              		.file 24 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 4443              		.file 25 "/Users/roryschram/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vsco
 4444              		.file 26 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 4445              		.file 27 "/Users/roryschram/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vsco
 4446              		.file 28 "<built-in>"
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 132


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:21     .text.MX_GPIO_Init:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:26     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:250    .text.MX_GPIO_Init:0000011c $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:258    .rodata.buildDataPacket.str1.4:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:278    .text.buildDataPacket:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:284    .text.buildDataPacket:00000000 buildDataPacket
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:513    .text.buildDataPacket:00000180 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:4349   .bss.transmit_data:00000000 transmit_data
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:4375   .bss.gps_raw:00000000 gps_raw
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:4362   .bss.line:00000000 line
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:4206   .bss.size:00000000 size
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:4241   .bss.humidity:00000000 humidity
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:4255   .bss.pressure:00000000 pressure
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:4248   .bss.temperature:00000000 temperature
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:4262   .bss.bmp280:00000000 bmp280
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:4276   .data.P_b:00000000 P_b
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:4269   .bss.altitude:00000000 altitude
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:4234   .bss.sPressure:00000000 sPressure
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:4227   .bss.sTemperature:00000000 sTemperature
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:4220   .bss.sHumidity:00000000 sHumidity
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:4213   .bss.sAltitude:00000000 sAltitude
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:541    .rodata.HAL_GPIO_EXTI_Callback.str1.4:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:554    .text.HAL_GPIO_EXTI_Callback:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:560    .text.HAL_GPIO_EXTI_Callback:00000000 HAL_GPIO_EXTI_Callback
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:879    .text.HAL_GPIO_EXTI_Callback:000001dc $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:4322   .bss.currentTicks:00000000 currentTicks
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:4329   .bss.preTicks:00000000 preTicks
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:4382   .bss.huart2:00000000 huart2
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:4301   .data.bModeChanged:00000000 bModeChanged
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:4315   .data.iMode:00000000 iMode
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:4308   .bss.sMode:00000000 sMode
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:4410   .bss.hi2c2:00000000 hi2c2
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:896    .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:902    .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:929    .text.HAL_TIM_PeriodElapsedCallback:00000010 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:4396   .bss.htim3:00000000 htim3
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:4289   .bss.beginTransmit:00000000 beginTransmit
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:935    .text.Error_Handler:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:941    .text.Error_Handler:00000000 Error_Handler
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:973    .text.MX_USART1_UART_Init:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:978    .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:1032   .text.MX_USART1_UART_Init:0000002c $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:4389   .bss.huart1:00000000 huart1
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:1038   .text.MX_USART2_UART_Init:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:1043   .text.MX_USART2_UART_Init:00000000 MX_USART2_UART_Init
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:1097   .text.MX_USART2_UART_Init:0000002c $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:1103   .text.MX_I2C1_Init:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:1108   .text.MX_I2C1_Init:00000000 MX_I2C1_Init
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:1165   .text.MX_I2C1_Init:0000002c $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:4417   .bss.hi2c1:00000000 hi2c1
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:1172   .text.MX_SPI3_Init:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:1177   .text.MX_SPI3_Init:00000000 MX_SPI3_Init
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:1244   .text.MX_SPI3_Init:00000038 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:4403   .bss.hspi3:00000000 hspi3
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:1250   .text.MX_I2C2_Init:00000000 $t
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 133


/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:1255   .text.MX_I2C2_Init:00000000 MX_I2C2_Init
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:1312   .text.MX_I2C2_Init:0000002c $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:1319   .text.MX_TIM3_Init:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:1324   .text.MX_TIM3_Init:00000000 MX_TIM3_Init
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:1423   .text.MX_TIM3_Init:00000064 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:1429   .text.SystemClock_Config:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:1435   .text.SystemClock_Config:00000000 SystemClock_Config
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:1559   .text.SystemClock_Config:00000080 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:1565   .rodata.main.str1.4:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:1588   .text.main:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:1594   .text.main:00000000 main
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:1965   .text.main:00000218 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:4199   .bss.Data:00000000 Data
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:4342   .bss.myLoRa:00000000 myLoRa
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:4283   .bss.packetSize:00000000 packetSize
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:1996   .text.main:00000288 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:2068   .text.main:000002e8 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:2128   .text.main:000003d8 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:2511   .text.main:000005dc $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:2520   .text.main:000005f4 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:3138   .text.main:0000093c $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:3142   .text.main:00000940 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:3769   .text.main:00000cb0 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:3773   .text.main:00000cb4 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:4190   .text.main:00000f08 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:4196   .bss.Data:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:4203   .bss.size:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:4210   .bss.sAltitude:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:4217   .bss.sHumidity:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:4224   .bss.sTemperature:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:4231   .bss.sPressure:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:4238   .bss.humidity:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:4245   .bss.temperature:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:4252   .bss.pressure:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:4259   .bss.bmp280:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:4266   .bss.altitude:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:4273   .data.P_b:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:4280   .bss.packetSize:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:4290   .bss.beginTransmit:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:4295   .bss.sendData:00000000 sendData
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:4296   .bss.sendData:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:4305   .bss.sMode:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:4312   .data.iMode:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:4319   .bss.currentTicks:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:4326   .bss.preTicks:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:4335   .data.isLoraReady:00000000 isLoraReady
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:4339   .bss.myLoRa:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:4346   .bss.transmit_data:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:4355   .bss.bme280p:00000000 bme280p
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:4356   .bss.bme280p:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:4359   .bss.line:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:4368   .bss.flag:00000000 flag
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:4369   .bss.flag:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:4372   .bss.gps_raw:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:4379   .bss.huart2:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:4386   .bss.huart1:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:4393   .bss.htim3:00000000 $d
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s 			page 134


/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:4400   .bss.hspi3:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:4407   .bss.hi2c2:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccNfUHLU.s:4414   .bss.hi2c1:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
__aeabi_f2d
__aeabi_dsub
__aeabi_dmul
__aeabi_d2f
memset
strtok
strcpy
minmea_parse_rmc
strlen
sprintf
bmp280_read_float
pow
gcvt
HAL_GetTick
HAL_UART_Transmit
ssd1306_SetCursor
ssd1306_WriteString
ssd1306_UpdateScreen
Font_16x26
HAL_UART_Init
HAL_I2C_Init
HAL_SPI_Init
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_TIM_Base_Start_IT
bmp280_init_default_params
HAL_Delay
bmp280_init
newLoRa
LoRa_init
snprintf
HAL_UART_Transmit_IT
ssd1306_Init
HAL_UARTEx_ReceiveToIdle
LoRa_transmit
HAL_UARTEx_ReceiveToIdle_IT
