ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.minmea_rescale,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	minmea_rescale:
  27              	.LVL0:
  28              	.LFB134:
  29              		.file 2 "Core/Inc/minmea.h"
   1:Core/Inc/minmea.h **** /*
   2:Core/Inc/minmea.h ****  * Copyright Â© 2014 Kosma Moczek <kosma@cloudyourcar.com>
   3:Core/Inc/minmea.h ****  * This program is free software. It comes without any warranty, to the extent
   4:Core/Inc/minmea.h ****  * permitted by applicable law. You can redistribute it and/or modify it under
   5:Core/Inc/minmea.h ****  * the terms of the Do What The Fuck You Want To Public License, Version 2, as
   6:Core/Inc/minmea.h ****  * published by Sam Hocevar. See the COPYING file for more details.
   7:Core/Inc/minmea.h ****  */
   8:Core/Inc/minmea.h **** 
   9:Core/Inc/minmea.h **** #ifndef MINMEA_H
  10:Core/Inc/minmea.h **** #define MINMEA_H
  11:Core/Inc/minmea.h **** 
  12:Core/Inc/minmea.h **** #ifdef __cplusplus
  13:Core/Inc/minmea.h **** extern "C" {
  14:Core/Inc/minmea.h **** #endif
  15:Core/Inc/minmea.h **** 
  16:Core/Inc/minmea.h **** #include <ctype.h>
  17:Core/Inc/minmea.h **** #include <stdint.h>
  18:Core/Inc/minmea.h **** #include <stdbool.h>
  19:Core/Inc/minmea.h **** #include <time.h>
  20:Core/Inc/minmea.h **** #include <math.h>
  21:Core/Inc/minmea.h **** #ifdef MINMEA_INCLUDE_COMPAT
  22:Core/Inc/minmea.h **** #include <minmea_compat.h>
  23:Core/Inc/minmea.h **** #endif
  24:Core/Inc/minmea.h **** 
  25:Core/Inc/minmea.h **** #ifndef MINMEA_MAX_SENTENCE_LENGTH
  26:Core/Inc/minmea.h **** #define MINMEA_MAX_SENTENCE_LENGTH 80
  27:Core/Inc/minmea.h **** #endif
  28:Core/Inc/minmea.h **** 
  29:Core/Inc/minmea.h **** enum minmea_sentence_id {
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s 			page 2


  30:Core/Inc/minmea.h ****     MINMEA_INVALID = -1,
  31:Core/Inc/minmea.h ****     MINMEA_UNKNOWN = 0,
  32:Core/Inc/minmea.h ****     MINMEA_SENTENCE_GBS,
  33:Core/Inc/minmea.h ****     MINMEA_SENTENCE_GGA,
  34:Core/Inc/minmea.h ****     MINMEA_SENTENCE_GLL,
  35:Core/Inc/minmea.h ****     MINMEA_SENTENCE_GSA,
  36:Core/Inc/minmea.h ****     MINMEA_SENTENCE_GST,
  37:Core/Inc/minmea.h ****     MINMEA_SENTENCE_GSV,
  38:Core/Inc/minmea.h ****     MINMEA_SENTENCE_RMC,
  39:Core/Inc/minmea.h ****     MINMEA_SENTENCE_VTG,
  40:Core/Inc/minmea.h ****     MINMEA_SENTENCE_ZDA,
  41:Core/Inc/minmea.h **** };
  42:Core/Inc/minmea.h **** 
  43:Core/Inc/minmea.h **** struct minmea_float {
  44:Core/Inc/minmea.h ****     int_least32_t value;
  45:Core/Inc/minmea.h ****     int_least32_t scale;
  46:Core/Inc/minmea.h **** };
  47:Core/Inc/minmea.h **** 
  48:Core/Inc/minmea.h **** struct minmea_date {
  49:Core/Inc/minmea.h ****     int day;
  50:Core/Inc/minmea.h ****     int month;
  51:Core/Inc/minmea.h ****     int year;
  52:Core/Inc/minmea.h **** };
  53:Core/Inc/minmea.h **** 
  54:Core/Inc/minmea.h **** struct minmea_time {
  55:Core/Inc/minmea.h ****     int hours;
  56:Core/Inc/minmea.h ****     int minutes;
  57:Core/Inc/minmea.h ****     int seconds;
  58:Core/Inc/minmea.h ****     int microseconds;
  59:Core/Inc/minmea.h **** };
  60:Core/Inc/minmea.h **** 
  61:Core/Inc/minmea.h **** struct minmea_sentence_gbs {
  62:Core/Inc/minmea.h ****     struct minmea_time time;
  63:Core/Inc/minmea.h ****     struct minmea_float err_latitude;
  64:Core/Inc/minmea.h ****     struct minmea_float err_longitude;
  65:Core/Inc/minmea.h ****     struct minmea_float err_altitude;
  66:Core/Inc/minmea.h ****     int svid;
  67:Core/Inc/minmea.h ****     struct minmea_float prob;
  68:Core/Inc/minmea.h ****     struct minmea_float bias;
  69:Core/Inc/minmea.h ****     struct minmea_float stddev;
  70:Core/Inc/minmea.h **** };
  71:Core/Inc/minmea.h **** 
  72:Core/Inc/minmea.h **** struct minmea_sentence_rmc {
  73:Core/Inc/minmea.h ****     struct minmea_time time;
  74:Core/Inc/minmea.h ****     bool valid;
  75:Core/Inc/minmea.h ****     struct minmea_float latitude;
  76:Core/Inc/minmea.h ****     struct minmea_float longitude;
  77:Core/Inc/minmea.h ****     struct minmea_float speed;
  78:Core/Inc/minmea.h ****     struct minmea_float course;
  79:Core/Inc/minmea.h ****     struct minmea_date date;
  80:Core/Inc/minmea.h ****     struct minmea_float variation;
  81:Core/Inc/minmea.h **** };
  82:Core/Inc/minmea.h **** 
  83:Core/Inc/minmea.h **** struct minmea_sentence_gga {
  84:Core/Inc/minmea.h ****     struct minmea_time time;
  85:Core/Inc/minmea.h ****     struct minmea_float latitude;
  86:Core/Inc/minmea.h ****     struct minmea_float longitude;
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s 			page 3


  87:Core/Inc/minmea.h ****     int fix_quality;
  88:Core/Inc/minmea.h ****     int satellites_tracked;
  89:Core/Inc/minmea.h ****     struct minmea_float hdop;
  90:Core/Inc/minmea.h ****     struct minmea_float altitude; char altitude_units;
  91:Core/Inc/minmea.h ****     struct minmea_float height; char height_units;
  92:Core/Inc/minmea.h ****     struct minmea_float dgps_age;
  93:Core/Inc/minmea.h **** };
  94:Core/Inc/minmea.h **** 
  95:Core/Inc/minmea.h **** enum minmea_gll_status {
  96:Core/Inc/minmea.h ****     MINMEA_GLL_STATUS_DATA_VALID = 'A',
  97:Core/Inc/minmea.h ****     MINMEA_GLL_STATUS_DATA_NOT_VALID = 'V',
  98:Core/Inc/minmea.h **** };
  99:Core/Inc/minmea.h **** 
 100:Core/Inc/minmea.h **** // FAA mode added to some fields in NMEA 2.3.
 101:Core/Inc/minmea.h **** enum minmea_faa_mode {
 102:Core/Inc/minmea.h ****     MINMEA_FAA_MODE_AUTONOMOUS = 'A',
 103:Core/Inc/minmea.h ****     MINMEA_FAA_MODE_DIFFERENTIAL = 'D',
 104:Core/Inc/minmea.h ****     MINMEA_FAA_MODE_ESTIMATED = 'E',
 105:Core/Inc/minmea.h ****     MINMEA_FAA_MODE_MANUAL = 'M',
 106:Core/Inc/minmea.h ****     MINMEA_FAA_MODE_SIMULATED = 'S',
 107:Core/Inc/minmea.h ****     MINMEA_FAA_MODE_NOT_VALID = 'N',
 108:Core/Inc/minmea.h ****     MINMEA_FAA_MODE_PRECISE = 'P',
 109:Core/Inc/minmea.h **** };
 110:Core/Inc/minmea.h **** 
 111:Core/Inc/minmea.h **** struct minmea_sentence_gll {
 112:Core/Inc/minmea.h ****     struct minmea_float latitude;
 113:Core/Inc/minmea.h ****     struct minmea_float longitude;
 114:Core/Inc/minmea.h ****     struct minmea_time time;
 115:Core/Inc/minmea.h ****     char status;
 116:Core/Inc/minmea.h ****     char mode;
 117:Core/Inc/minmea.h **** };
 118:Core/Inc/minmea.h **** 
 119:Core/Inc/minmea.h **** struct minmea_sentence_gst {
 120:Core/Inc/minmea.h ****     struct minmea_time time;
 121:Core/Inc/minmea.h ****     struct minmea_float rms_deviation;
 122:Core/Inc/minmea.h ****     struct minmea_float semi_major_deviation;
 123:Core/Inc/minmea.h ****     struct minmea_float semi_minor_deviation;
 124:Core/Inc/minmea.h ****     struct minmea_float semi_major_orientation;
 125:Core/Inc/minmea.h ****     struct minmea_float latitude_error_deviation;
 126:Core/Inc/minmea.h ****     struct minmea_float longitude_error_deviation;
 127:Core/Inc/minmea.h ****     struct minmea_float altitude_error_deviation;
 128:Core/Inc/minmea.h **** };
 129:Core/Inc/minmea.h **** 
 130:Core/Inc/minmea.h **** enum minmea_gsa_mode {
 131:Core/Inc/minmea.h ****     MINMEA_GPGSA_MODE_AUTO = 'A',
 132:Core/Inc/minmea.h ****     MINMEA_GPGSA_MODE_FORCED = 'M',
 133:Core/Inc/minmea.h **** };
 134:Core/Inc/minmea.h **** 
 135:Core/Inc/minmea.h **** enum minmea_gsa_fix_type {
 136:Core/Inc/minmea.h ****     MINMEA_GPGSA_FIX_NONE = 1,
 137:Core/Inc/minmea.h ****     MINMEA_GPGSA_FIX_2D = 2,
 138:Core/Inc/minmea.h ****     MINMEA_GPGSA_FIX_3D = 3,
 139:Core/Inc/minmea.h **** };
 140:Core/Inc/minmea.h **** 
 141:Core/Inc/minmea.h **** struct minmea_sentence_gsa {
 142:Core/Inc/minmea.h ****     char mode;
 143:Core/Inc/minmea.h ****     int fix_type;
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s 			page 4


 144:Core/Inc/minmea.h ****     int sats[12];
 145:Core/Inc/minmea.h ****     struct minmea_float pdop;
 146:Core/Inc/minmea.h ****     struct minmea_float hdop;
 147:Core/Inc/minmea.h ****     struct minmea_float vdop;
 148:Core/Inc/minmea.h **** };
 149:Core/Inc/minmea.h **** 
 150:Core/Inc/minmea.h **** struct minmea_sat_info {
 151:Core/Inc/minmea.h ****     int nr;
 152:Core/Inc/minmea.h ****     int elevation;
 153:Core/Inc/minmea.h ****     int azimuth;
 154:Core/Inc/minmea.h ****     int snr;
 155:Core/Inc/minmea.h **** };
 156:Core/Inc/minmea.h **** 
 157:Core/Inc/minmea.h **** struct minmea_sentence_gsv {
 158:Core/Inc/minmea.h ****     int total_msgs;
 159:Core/Inc/minmea.h ****     int msg_nr;
 160:Core/Inc/minmea.h ****     int total_sats;
 161:Core/Inc/minmea.h ****     struct minmea_sat_info sats[4];
 162:Core/Inc/minmea.h **** };
 163:Core/Inc/minmea.h **** 
 164:Core/Inc/minmea.h **** struct minmea_sentence_vtg {
 165:Core/Inc/minmea.h ****     struct minmea_float true_track_degrees;
 166:Core/Inc/minmea.h ****     struct minmea_float magnetic_track_degrees;
 167:Core/Inc/minmea.h ****     struct minmea_float speed_knots;
 168:Core/Inc/minmea.h ****     struct minmea_float speed_kph;
 169:Core/Inc/minmea.h ****     enum minmea_faa_mode faa_mode;
 170:Core/Inc/minmea.h **** };
 171:Core/Inc/minmea.h **** 
 172:Core/Inc/minmea.h **** struct minmea_sentence_zda {
 173:Core/Inc/minmea.h ****     struct minmea_time time;
 174:Core/Inc/minmea.h ****     struct minmea_date date;
 175:Core/Inc/minmea.h ****     int hour_offset;
 176:Core/Inc/minmea.h ****     int minute_offset;
 177:Core/Inc/minmea.h **** };
 178:Core/Inc/minmea.h **** 
 179:Core/Inc/minmea.h **** /**
 180:Core/Inc/minmea.h ****  * Calculate raw sentence checksum. Does not check sentence integrity.
 181:Core/Inc/minmea.h ****  */
 182:Core/Inc/minmea.h **** uint8_t minmea_checksum(const char *sentence);
 183:Core/Inc/minmea.h **** 
 184:Core/Inc/minmea.h **** /**
 185:Core/Inc/minmea.h ****  * Check sentence validity and checksum. Returns true for valid sentences.
 186:Core/Inc/minmea.h ****  */
 187:Core/Inc/minmea.h **** bool minmea_check(const char *sentence, bool strict);
 188:Core/Inc/minmea.h **** 
 189:Core/Inc/minmea.h **** /**
 190:Core/Inc/minmea.h ****  * Determine talker identifier.
 191:Core/Inc/minmea.h ****  */
 192:Core/Inc/minmea.h **** bool minmea_talker_id(char talker[3], const char *sentence);
 193:Core/Inc/minmea.h **** 
 194:Core/Inc/minmea.h **** /**
 195:Core/Inc/minmea.h ****  * Determine sentence identifier.
 196:Core/Inc/minmea.h ****  */
 197:Core/Inc/minmea.h **** enum minmea_sentence_id minmea_sentence_id(const char *sentence, bool strict);
 198:Core/Inc/minmea.h **** 
 199:Core/Inc/minmea.h **** /**
 200:Core/Inc/minmea.h ****  * Scanf-like processor for NMEA sentences. Supports the following formats:
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s 			page 5


 201:Core/Inc/minmea.h ****  * c - single character (char *)
 202:Core/Inc/minmea.h ****  * d - direction, returned as 1/-1, default 0 (int *)
 203:Core/Inc/minmea.h ****  * f - fractional, returned as value + scale (struct minmea_float *)
 204:Core/Inc/minmea.h ****  * i - decimal, default zero (int *)
 205:Core/Inc/minmea.h ****  * s - string (char *)
 206:Core/Inc/minmea.h ****  * t - talker identifier and type (char *)
 207:Core/Inc/minmea.h ****  * D - date (struct minmea_date *)
 208:Core/Inc/minmea.h ****  * T - time stamp (struct minmea_time *)
 209:Core/Inc/minmea.h ****  * _ - ignore this field
 210:Core/Inc/minmea.h ****  * ; - following fields are optional
 211:Core/Inc/minmea.h ****  * Returns true on success. See library source code for details.
 212:Core/Inc/minmea.h ****  */
 213:Core/Inc/minmea.h **** bool minmea_scan(const char *sentence, const char *format, ...);
 214:Core/Inc/minmea.h **** 
 215:Core/Inc/minmea.h **** /*
 216:Core/Inc/minmea.h ****  * Parse a specific type of sentence. Return true on success.
 217:Core/Inc/minmea.h ****  */
 218:Core/Inc/minmea.h **** bool minmea_parse_gbs(struct minmea_sentence_gbs *frame, const char *sentence);
 219:Core/Inc/minmea.h **** bool minmea_parse_rmc(struct minmea_sentence_rmc *frame, const char *sentence);
 220:Core/Inc/minmea.h **** bool minmea_parse_gga(struct minmea_sentence_gga *frame, const char *sentence);
 221:Core/Inc/minmea.h **** bool minmea_parse_gsa(struct minmea_sentence_gsa *frame, const char *sentence);
 222:Core/Inc/minmea.h **** bool minmea_parse_gll(struct minmea_sentence_gll *frame, const char *sentence);
 223:Core/Inc/minmea.h **** bool minmea_parse_gst(struct minmea_sentence_gst *frame, const char *sentence);
 224:Core/Inc/minmea.h **** bool minmea_parse_gsv(struct minmea_sentence_gsv *frame, const char *sentence);
 225:Core/Inc/minmea.h **** bool minmea_parse_vtg(struct minmea_sentence_vtg *frame, const char *sentence);
 226:Core/Inc/minmea.h **** bool minmea_parse_zda(struct minmea_sentence_zda *frame, const char *sentence);
 227:Core/Inc/minmea.h **** 
 228:Core/Inc/minmea.h **** /**
 229:Core/Inc/minmea.h ****  * Convert GPS UTC date/time representation to a UNIX calendar time.
 230:Core/Inc/minmea.h ****  */
 231:Core/Inc/minmea.h **** int minmea_getdatetime(struct tm *tm, const struct minmea_date *date, const struct minmea_time *tim
 232:Core/Inc/minmea.h **** 
 233:Core/Inc/minmea.h **** /**
 234:Core/Inc/minmea.h ****  * Convert GPS UTC date/time representation to a UNIX timestamp.
 235:Core/Inc/minmea.h ****  */
 236:Core/Inc/minmea.h **** int minmea_gettime(struct timespec *ts, const struct minmea_date *date, const struct minmea_time *t
 237:Core/Inc/minmea.h **** 
 238:Core/Inc/minmea.h **** /**
 239:Core/Inc/minmea.h ****  * Rescale a fixed-point value to a different scale. Rounds towards zero.
 240:Core/Inc/minmea.h ****  */
 241:Core/Inc/minmea.h **** static inline int_least32_t minmea_rescale(const struct minmea_float *f, int_least32_t new_scale)
 242:Core/Inc/minmea.h **** {
  30              		.loc 2 242 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              		.loc 2 242 1 is_stmt 0 view .LVU1
  36 0000 0346     		mov	r3, r0
 243:Core/Inc/minmea.h ****     if (f->scale == 0)
  37              		.loc 2 243 5 is_stmt 1 view .LVU2
  38              		.loc 2 243 10 is_stmt 0 view .LVU3
  39 0002 4068     		ldr	r0, [r0, #4]
  40              	.LVL1:
  41              		.loc 2 243 8 view .LVU4
  42 0004 F0B1     		cbz	r0, .L1
 244:Core/Inc/minmea.h ****         return 0;
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s 			page 6


 245:Core/Inc/minmea.h ****     if (f->scale == new_scale)
  43              		.loc 2 245 5 is_stmt 1 view .LVU5
  44              		.loc 2 245 8 is_stmt 0 view .LVU6
  45 0006 8842     		cmp	r0, r1
  46 0008 15D0     		beq	.L5
 246:Core/Inc/minmea.h ****         return f->value;
 247:Core/Inc/minmea.h ****     if (f->scale > new_scale)
  47              		.loc 2 247 5 is_stmt 1 view .LVU7
  48              		.loc 2 247 8 is_stmt 0 view .LVU8
  49 000a 8842     		cmp	r0, r1
  50 000c 15DD     		ble	.L4
 248:Core/Inc/minmea.h ****         return (f->value + ((f->value > 0) - (f->value < 0)) * f->scale/new_scale/2) / (f->scale/ne
  51              		.loc 2 248 9 is_stmt 1 view .LVU9
  52              		.loc 2 248 18 is_stmt 0 view .LVU10
  53 000e 1A68     		ldr	r2, [r3]
  54              		.loc 2 248 56 view .LVU11
  55 0010 D30F     		lsrs	r3, r2, #31
  56              	.LVL2:
  57              		.loc 2 248 44 view .LVU12
  58 0012 002A     		cmp	r2, #0
  59 0014 D4BF     		ite	le
  60 0016 5B42     		rsble	r3, r3, #0
  61 0018 C3F10103 		rsbgt	r3, r3, #1
  62              		.loc 2 248 62 view .LVU13
  63 001c 00FB03F3 		mul	r3, r0, r3
  64              		.loc 2 248 72 view .LVU14
  65 0020 93FBF1F3 		sdiv	r3, r3, r1
  66              		.loc 2 248 82 view .LVU15
  67 0024 03EBD373 		add	r3, r3, r3, lsr #31
  68              		.loc 2 248 26 view .LVU16
  69 0028 02EB6302 		add	r2, r2, r3, asr #1
  70              		.loc 2 248 97 view .LVU17
  71 002c 90FBF1F0 		sdiv	r0, r0, r1
  72              		.loc 2 248 86 view .LVU18
  73 0030 92FBF0F0 		sdiv	r0, r2, r0
  74 0034 7047     		bx	lr
  75              	.LVL3:
  76              	.L5:
 246:Core/Inc/minmea.h ****         return f->value;
  77              		.loc 2 246 9 is_stmt 1 view .LVU19
 246:Core/Inc/minmea.h ****         return f->value;
  78              		.loc 2 246 17 is_stmt 0 view .LVU20
  79 0036 1868     		ldr	r0, [r3]
  80 0038 7047     		bx	lr
  81              	.L4:
 249:Core/Inc/minmea.h ****     else
 250:Core/Inc/minmea.h ****         return f->value * (new_scale/f->scale);
  82              		.loc 2 250 9 is_stmt 1 view .LVU21
  83              		.loc 2 250 17 is_stmt 0 view .LVU22
  84 003a 1B68     		ldr	r3, [r3]
  85              	.LVL4:
  86              		.loc 2 250 37 view .LVU23
  87 003c 91FBF0F0 		sdiv	r0, r1, r0
  88              		.loc 2 250 25 view .LVU24
  89 0040 03FB00F0 		mul	r0, r3, r0
  90              	.L1:
 251:Core/Inc/minmea.h **** }
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s 			page 7


  91              		.loc 2 251 1 view .LVU25
  92 0044 7047     		bx	lr
  93              		.cfi_endproc
  94              	.LFE134:
  96              		.section	.text.MX_GPIO_Init,"ax",%progbits
  97              		.align	1
  98              		.syntax unified
  99              		.thumb
 100              		.thumb_func
 102              	MX_GPIO_Init:
 103              	.LFB145:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include <stdio.h>
  25:Core/Src/main.c **** #include "minmea.h"
  26:Core/Src/main.c **** #include <stdlib.h>
  27:Core/Src/main.c **** #include <string.h>
  28:Core/Src/main.c **** #include <stdint.h>
  29:Core/Src/main.c **** #include "bmp280.h"
  30:Core/Src/main.c **** #include <float.h>
  31:Core/Src/main.c **** #include <math.h>
  32:Core/Src/main.c **** #include <LoRa.h>
  33:Core/Src/main.c **** #include "ssd1306.h"
  34:Core/Src/main.c **** #include "fonts.h"
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* USER CODE END Includes */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* USER CODE END PTD */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  45:Core/Src/main.c **** /* USER CODE BEGIN PD */
  46:Core/Src/main.c **** #define INDENT_SPACES "  "
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s 			page 8


  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* USER CODE END PD */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  51:Core/Src/main.c **** /* USER CODE BEGIN PM */
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* USER CODE END PM */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  56:Core/Src/main.c **** I2C_HandleTypeDef hi2c1;
  57:Core/Src/main.c **** I2C_HandleTypeDef hi2c2;
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** SPI_HandleTypeDef hspi3;
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** UART_HandleTypeDef huart1;
  62:Core/Src/main.c **** UART_HandleTypeDef huart2;
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** /* USER CODE BEGIN PV */
  65:Core/Src/main.c **** uint8_t gps_raw[512] = {"\0"};
  66:Core/Src/main.c **** uint8_t flag = 0;
  67:Core/Src/main.c **** char line_out[512] = {"\0"};
  68:Core/Src/main.c **** char line[512] = {"\0"};
  69:Core/Src/main.c **** bool bme280p;
  70:Core/Src/main.c **** uint8_t transmit_data[256] = {"\0"};
  71:Core/Src/main.c **** LoRa myLoRa;
  72:Core/Src/main.c **** bool isLoraReady = true;
  73:Core/Src/main.c **** int preTicks = 0;
  74:Core/Src/main.c **** int currentTicks = 0;
  75:Core/Src/main.c **** int iMode = 1;
  76:Core/Src/main.c **** char sMode[10];
  77:Core/Src/main.c **** bool bModeChanged = false;
  78:Core/Src/main.c **** 
  79:Core/Src/main.c **** //Variables to work out altitude
  80:Core/Src/main.c **** 
  81:Core/Src/main.c **** //Pressure at sea level
  82:Core/Src/main.c **** float P_b = 101325;
  83:Core/Src/main.c **** 
  84:Core/Src/main.c **** //Height that we are calculating
  85:Core/Src/main.c **** float altitude = 0;
  86:Core/Src/main.c **** 
  87:Core/Src/main.c **** 
  88:Core/Src/main.c **** BMP280_HandleTypedef bmp280;
  89:Core/Src/main.c **** 
  90:Core/Src/main.c **** float pressure, temperature, humidity;
  91:Core/Src/main.c **** char sPressure[128] = {"\0"};
  92:Core/Src/main.c **** char sTemperature[128] = {"\0"};
  93:Core/Src/main.c **** char sHumidity[128] = {"\0"};
  94:Core/Src/main.c **** char sAltitude[128] = {"\0"};
  95:Core/Src/main.c **** 
  96:Core/Src/main.c **** uint16_t size;
  97:Core/Src/main.c **** uint8_t Data[256] = {"\0"};
  98:Core/Src/main.c **** 
  99:Core/Src/main.c **** 
 100:Core/Src/main.c **** /* USER CODE END PV */
 101:Core/Src/main.c **** 
 102:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
 103:Core/Src/main.c **** void SystemClock_Config(void);
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s 			page 9


 104:Core/Src/main.c **** static void MX_GPIO_Init(void);
 105:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
 106:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
 107:Core/Src/main.c **** static void MX_I2C1_Init(void);
 108:Core/Src/main.c **** static void MX_SPI3_Init(void);
 109:Core/Src/main.c **** static void MX_I2C2_Init(void);
 110:Core/Src/main.c **** /* USER CODE BEGIN PFP */
 111:Core/Src/main.c **** 
 112:Core/Src/main.c **** 
 113:Core/Src/main.c **** /* USER CODE END PFP */
 114:Core/Src/main.c **** 
 115:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 116:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 117:Core/Src/main.c **** 
 118:Core/Src/main.c **** /* USER CODE END 0 */
 119:Core/Src/main.c **** 
 120:Core/Src/main.c **** /**
 121:Core/Src/main.c ****   * @brief  The application entry point.
 122:Core/Src/main.c ****   * @retval int
 123:Core/Src/main.c ****   */
 124:Core/Src/main.c **** int main(void)
 125:Core/Src/main.c **** {
 126:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 127:Core/Src/main.c **** 
 128:Core/Src/main.c ****   /* USER CODE END 1 */
 129:Core/Src/main.c **** 
 130:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 131:Core/Src/main.c **** 
 132:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 133:Core/Src/main.c ****   HAL_Init();
 134:Core/Src/main.c **** 
 135:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 136:Core/Src/main.c **** 
 137:Core/Src/main.c ****   /* USER CODE END Init */
 138:Core/Src/main.c **** 
 139:Core/Src/main.c ****   /* Configure the system clock */
 140:Core/Src/main.c ****   SystemClock_Config();
 141:Core/Src/main.c **** 
 142:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 143:Core/Src/main.c **** 
 144:Core/Src/main.c ****   /* USER CODE END SysInit */
 145:Core/Src/main.c **** 
 146:Core/Src/main.c ****   /* Initialize all configured peripherals */
 147:Core/Src/main.c ****   MX_GPIO_Init();
 148:Core/Src/main.c ****   MX_USART1_UART_Init();
 149:Core/Src/main.c ****   MX_USART2_UART_Init();
 150:Core/Src/main.c ****   MX_I2C1_Init();
 151:Core/Src/main.c ****   MX_SPI3_Init();
 152:Core/Src/main.c ****   MX_I2C2_Init();
 153:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 154:Core/Src/main.c **** 
 155:Core/Src/main.c ****   bmp280_init_default_params(&bmp280.params);
 156:Core/Src/main.c **** 	bmp280.addr = 0x77;
 157:Core/Src/main.c **** 	bmp280.i2c = &hi2c1;
 158:Core/Src/main.c **** 
 159:Core/Src/main.c **** 	while (!bmp280_init(&bmp280, &bmp280.params)) {
 160:Core/Src/main.c **** 		size = sprintf((char *)Data, "BMP280 initialization failed\n");
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s 			page 10


 161:Core/Src/main.c **** 		HAL_UART_Transmit(&huart2, Data, size, 1000);
 162:Core/Src/main.c **** 		HAL_Delay(2000);
 163:Core/Src/main.c **** 	}
 164:Core/Src/main.c **** 	bool bme280p = bmp280.id == BME280_CHIP_ID;
 165:Core/Src/main.c **** 	size = sprintf((char *)Data, "\nBMP280: found %s\n", bme280p ? "BME280" : "BMP280");
 166:Core/Src/main.c **** 	HAL_UART_Transmit(&huart2, Data, size, 1000);
 167:Core/Src/main.c **** 
 168:Core/Src/main.c ****   myLoRa = newLoRa();
 169:Core/Src/main.c ****   myLoRa.CS_port         = GPIOA;
 170:Core/Src/main.c ****   myLoRa.CS_pin          = GPIO_PIN_4;
 171:Core/Src/main.c ****   myLoRa.reset_port      = GPIOB;
 172:Core/Src/main.c ****   myLoRa.reset_pin       = GPIO_PIN_8;
 173:Core/Src/main.c ****   myLoRa.DIO0_port       = GPIOB;
 174:Core/Src/main.c ****   myLoRa.DIO0_pin        = GPIO_PIN_9;
 175:Core/Src/main.c ****   myLoRa.hSPIx           = &hspi3;
 176:Core/Src/main.c **** 
 177:Core/Src/main.c ****   myLoRa.frequency             = 433;             // default = 433 MHz
 178:Core/Src/main.c ****   myLoRa.spredingFactor        = SF_7;            // default = SF_7
 179:Core/Src/main.c ****   myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 180:Core/Src/main.c ****   myLoRa.crcRate               = CR_4_8;          // default = CR_4_5
 181:Core/Src/main.c ****   myLoRa.power                 = POWER_20db;      // default = 20db
 182:Core/Src/main.c ****   myLoRa.overCurrentProtection = 100;             // default = 100 mA
 183:Core/Src/main.c ****   myLoRa.preamble              = 8;              // default = 8;
 184:Core/Src/main.c **** 
 185:Core/Src/main.c ****   uint16_t ret = LoRa_init(&myLoRa);
 186:Core/Src/main.c ****   uint8_t buff[128] = {"\0"};
 187:Core/Src/main.c ****   
 188:Core/Src/main.c **** 
 189:Core/Src/main.c **** if (ret==LORA_OK){
 190:Core/Src/main.c ****   snprintf(buff,sizeof(buff),"LoRa is running... :) \n\r");
 191:Core/Src/main.c ****   LoRa_transmit(&myLoRa, (uint8_t*)buff, 120, 100);
 192:Core/Src/main.c ****   HAL_UART_Transmit(&huart2, buff, sizeof(buff)/sizeof(buff[0]), 1000);
 193:Core/Src/main.c **** }
 194:Core/Src/main.c **** else{
 195:Core/Src/main.c ****   snprintf(buff,sizeof(buff),"\n\r LoRa failed :( \n\r Error code: %d \n\r", ret);
 196:Core/Src/main.c ****   HAL_UART_Transmit(&huart2, buff, sizeof(buff)/sizeof(buff[0]), 1000);
 197:Core/Src/main.c **** }
 198:Core/Src/main.c **** 
 199:Core/Src/main.c **** 
 200:Core/Src/main.c **** ssd1306_Init(&hi2c2);
 201:Core/Src/main.c **** 
 202:Core/Src/main.c **** // Set cursors and write the word "mode"
 203:Core/Src/main.c **** ssd1306_SetCursor(0, 0);
 204:Core/Src/main.c **** ssd1306_WriteString("Mode:", Font_16x26, White);
 205:Core/Src/main.c **** 
 206:Core/Src/main.c **** ssd1306_SetCursor(0, 35);
 207:Core/Src/main.c **** sprintf(sMode, "%d", iMode);
 208:Core/Src/main.c **** ssd1306_WriteString(sMode, Font_16x26, White);
 209:Core/Src/main.c **** 
 210:Core/Src/main.c **** // Copy all data from local screenbuffer to the screen
 211:Core/Src/main.c **** ssd1306_UpdateScreen(&hi2c2);
 212:Core/Src/main.c **** 
 213:Core/Src/main.c ****   /* USER CODE END 2 */
 214:Core/Src/main.c **** 
 215:Core/Src/main.c ****   /* Infinite loop */
 216:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 217:Core/Src/main.c ****   while (1)
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s 			page 11


 218:Core/Src/main.c ****   {
 219:Core/Src/main.c ****     //HAL_UARTEx_ReceiveToIdle_DMA(&huart1,(uint8_t*)gps_raw,512);
 220:Core/Src/main.c ****     if (isLoraReady){
 221:Core/Src/main.c ****       HAL_UARTEx_ReceiveToIdle_IT(&huart1,(uint8_t*)gps_raw,512);
 222:Core/Src/main.c ****       if (flag == 1) {
 223:Core/Src/main.c ****       LoRa_transmit(&myLoRa, (uint8_t*)transmit_data, 113, 100);
 224:Core/Src/main.c ****       flag = 0;
 225:Core/Src/main.c ****       memset(transmit_data, '\0', sizeof(transmit_data));
 226:Core/Src/main.c ****     }
 227:Core/Src/main.c **** 
 228:Core/Src/main.c ****     if (bModeChanged) {
 229:Core/Src/main.c **** switch (iMode) {
 230:Core/Src/main.c ****     case 1:
 231:Core/Src/main.c ****       // statements
 232:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 233:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_7;            // default = SF_7
 234:Core/Src/main.c ****       myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 235:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_8;          // default = CR_4_5
 236:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 237:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 238:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 239:Core/Src/main.c ****       LoRa_init(&myLoRa);
 240:Core/Src/main.c ****       break;
 241:Core/Src/main.c **** 
 242:Core/Src/main.c ****     case 2:
 243:Core/Src/main.c ****       // statements
 244:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 245:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_7;            // default = SF_7
 246:Core/Src/main.c ****       myLoRa.bandWidth             = BW_250KHz;       // default = BW_125KHz
 247:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_8;          // default = CR_4_5
 248:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 249:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 250:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 251:Core/Src/main.c ****       LoRa_init(&myLoRa);
 252:Core/Src/main.c ****       break;
 253:Core/Src/main.c **** 
 254:Core/Src/main.c ****     default:
 255:Core/Src/main.c ****       // default statements
 256:Core/Src/main.c **** }
 257:Core/Src/main.c ****       bModeChanged = false;
 258:Core/Src/main.c ****     }
 259:Core/Src/main.c ****     }
 260:Core/Src/main.c ****     
 261:Core/Src/main.c ****     
 262:Core/Src/main.c ****     
 263:Core/Src/main.c ****     /* USER CODE END WHILE */
 264:Core/Src/main.c **** 
 265:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 266:Core/Src/main.c ****     //HAL_UART_Transmit_IT(&huart2, (uint8_t *)Gpsdata, sizeof(Gpsdata));
 267:Core/Src/main.c ****     //HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13);
 268:Core/Src/main.c **** 
 269:Core/Src/main.c ****     //HAL_Delay(1000); 
 270:Core/Src/main.c **** 
 271:Core/Src/main.c ****   }
 272:Core/Src/main.c ****   /* USER CODE END 3 */
 273:Core/Src/main.c **** }
 274:Core/Src/main.c **** 
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s 			page 12


 275:Core/Src/main.c **** /**
 276:Core/Src/main.c ****   * @brief System Clock Configuration
 277:Core/Src/main.c ****   * @retval None
 278:Core/Src/main.c ****   */
 279:Core/Src/main.c **** void SystemClock_Config(void)
 280:Core/Src/main.c **** {
 281:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 282:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 283:Core/Src/main.c **** 
 284:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 285:Core/Src/main.c ****   */
 286:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 287:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 288:Core/Src/main.c **** 
 289:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 290:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 291:Core/Src/main.c ****   */
 292:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 293:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 294:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 295:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 296:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 297:Core/Src/main.c ****   {
 298:Core/Src/main.c ****     Error_Handler();
 299:Core/Src/main.c ****   }
 300:Core/Src/main.c **** 
 301:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 302:Core/Src/main.c ****   */
 303:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 304:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 305:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 306:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 307:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 308:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 309:Core/Src/main.c **** 
 310:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 311:Core/Src/main.c ****   {
 312:Core/Src/main.c ****     Error_Handler();
 313:Core/Src/main.c ****   }
 314:Core/Src/main.c **** }
 315:Core/Src/main.c **** 
 316:Core/Src/main.c **** /**
 317:Core/Src/main.c ****   * @brief I2C1 Initialization Function
 318:Core/Src/main.c ****   * @param None
 319:Core/Src/main.c ****   * @retval None
 320:Core/Src/main.c ****   */
 321:Core/Src/main.c **** static void MX_I2C1_Init(void)
 322:Core/Src/main.c **** {
 323:Core/Src/main.c **** 
 324:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 0 */
 325:Core/Src/main.c **** 
 326:Core/Src/main.c ****   /* USER CODE END I2C1_Init 0 */
 327:Core/Src/main.c **** 
 328:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 1 */
 329:Core/Src/main.c **** 
 330:Core/Src/main.c ****   /* USER CODE END I2C1_Init 1 */
 331:Core/Src/main.c ****   hi2c1.Instance = I2C1;
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s 			page 13


 332:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 333:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 334:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 335:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 336:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 337:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 338:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 339:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 340:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 341:Core/Src/main.c ****   {
 342:Core/Src/main.c ****     Error_Handler();
 343:Core/Src/main.c ****   }
 344:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 2 */
 345:Core/Src/main.c **** 
 346:Core/Src/main.c ****   /* USER CODE END I2C1_Init 2 */
 347:Core/Src/main.c **** 
 348:Core/Src/main.c **** }
 349:Core/Src/main.c **** 
 350:Core/Src/main.c **** /**
 351:Core/Src/main.c ****   * @brief I2C2 Initialization Function
 352:Core/Src/main.c ****   * @param None
 353:Core/Src/main.c ****   * @retval None
 354:Core/Src/main.c ****   */
 355:Core/Src/main.c **** static void MX_I2C2_Init(void)
 356:Core/Src/main.c **** {
 357:Core/Src/main.c **** 
 358:Core/Src/main.c ****   /* USER CODE BEGIN I2C2_Init 0 */
 359:Core/Src/main.c **** 
 360:Core/Src/main.c ****   /* USER CODE END I2C2_Init 0 */
 361:Core/Src/main.c **** 
 362:Core/Src/main.c ****   /* USER CODE BEGIN I2C2_Init 1 */
 363:Core/Src/main.c **** 
 364:Core/Src/main.c ****   /* USER CODE END I2C2_Init 1 */
 365:Core/Src/main.c ****   hi2c2.Instance = I2C2;
 366:Core/Src/main.c ****   hi2c2.Init.ClockSpeed = 100000;
 367:Core/Src/main.c ****   hi2c2.Init.DutyCycle = I2C_DUTYCYCLE_2;
 368:Core/Src/main.c ****   hi2c2.Init.OwnAddress1 = 0;
 369:Core/Src/main.c ****   hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 370:Core/Src/main.c ****   hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 371:Core/Src/main.c ****   hi2c2.Init.OwnAddress2 = 0;
 372:Core/Src/main.c ****   hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 373:Core/Src/main.c ****   hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 374:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 375:Core/Src/main.c ****   {
 376:Core/Src/main.c ****     Error_Handler();
 377:Core/Src/main.c ****   }
 378:Core/Src/main.c ****   /* USER CODE BEGIN I2C2_Init 2 */
 379:Core/Src/main.c **** 
 380:Core/Src/main.c ****   /* USER CODE END I2C2_Init 2 */
 381:Core/Src/main.c **** 
 382:Core/Src/main.c **** }
 383:Core/Src/main.c **** 
 384:Core/Src/main.c **** /**
 385:Core/Src/main.c ****   * @brief SPI3 Initialization Function
 386:Core/Src/main.c ****   * @param None
 387:Core/Src/main.c ****   * @retval None
 388:Core/Src/main.c ****   */
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s 			page 14


 389:Core/Src/main.c **** static void MX_SPI3_Init(void)
 390:Core/Src/main.c **** {
 391:Core/Src/main.c **** 
 392:Core/Src/main.c ****   /* USER CODE BEGIN SPI3_Init 0 */
 393:Core/Src/main.c **** 
 394:Core/Src/main.c ****   /* USER CODE END SPI3_Init 0 */
 395:Core/Src/main.c **** 
 396:Core/Src/main.c ****   /* USER CODE BEGIN SPI3_Init 1 */
 397:Core/Src/main.c **** 
 398:Core/Src/main.c ****   /* USER CODE END SPI3_Init 1 */
 399:Core/Src/main.c ****   /* SPI3 parameter configuration*/
 400:Core/Src/main.c ****   hspi3.Instance = SPI3;
 401:Core/Src/main.c ****   hspi3.Init.Mode = SPI_MODE_MASTER;
 402:Core/Src/main.c ****   hspi3.Init.Direction = SPI_DIRECTION_2LINES;
 403:Core/Src/main.c ****   hspi3.Init.DataSize = SPI_DATASIZE_8BIT;
 404:Core/Src/main.c ****   hspi3.Init.CLKPolarity = SPI_POLARITY_LOW;
 405:Core/Src/main.c ****   hspi3.Init.CLKPhase = SPI_PHASE_1EDGE;
 406:Core/Src/main.c ****   hspi3.Init.NSS = SPI_NSS_SOFT;
 407:Core/Src/main.c ****   hspi3.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 408:Core/Src/main.c ****   hspi3.Init.FirstBit = SPI_FIRSTBIT_MSB;
 409:Core/Src/main.c ****   hspi3.Init.TIMode = SPI_TIMODE_DISABLE;
 410:Core/Src/main.c ****   hspi3.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 411:Core/Src/main.c ****   hspi3.Init.CRCPolynomial = 10;
 412:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi3) != HAL_OK)
 413:Core/Src/main.c ****   {
 414:Core/Src/main.c ****     Error_Handler();
 415:Core/Src/main.c ****   }
 416:Core/Src/main.c ****   /* USER CODE BEGIN SPI3_Init 2 */
 417:Core/Src/main.c **** 
 418:Core/Src/main.c ****   /* USER CODE END SPI3_Init 2 */
 419:Core/Src/main.c **** 
 420:Core/Src/main.c **** }
 421:Core/Src/main.c **** 
 422:Core/Src/main.c **** /**
 423:Core/Src/main.c ****   * @brief USART1 Initialization Function
 424:Core/Src/main.c ****   * @param None
 425:Core/Src/main.c ****   * @retval None
 426:Core/Src/main.c ****   */
 427:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
 428:Core/Src/main.c **** {
 429:Core/Src/main.c **** 
 430:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
 431:Core/Src/main.c **** 
 432:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
 433:Core/Src/main.c **** 
 434:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
 435:Core/Src/main.c **** 
 436:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
 437:Core/Src/main.c ****   huart1.Instance = USART1;
 438:Core/Src/main.c ****   huart1.Init.BaudRate = 9600;
 439:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 440:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 441:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 442:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 443:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 444:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 445:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s 			page 15


 446:Core/Src/main.c ****   {
 447:Core/Src/main.c ****     Error_Handler();
 448:Core/Src/main.c ****   }
 449:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
 450:Core/Src/main.c **** 
 451:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
 452:Core/Src/main.c **** 
 453:Core/Src/main.c **** }
 454:Core/Src/main.c **** 
 455:Core/Src/main.c **** /**
 456:Core/Src/main.c ****   * @brief USART2 Initialization Function
 457:Core/Src/main.c ****   * @param None
 458:Core/Src/main.c ****   * @retval None
 459:Core/Src/main.c ****   */
 460:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 461:Core/Src/main.c **** {
 462:Core/Src/main.c **** 
 463:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 464:Core/Src/main.c **** 
 465:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 466:Core/Src/main.c **** 
 467:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 468:Core/Src/main.c **** 
 469:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 470:Core/Src/main.c ****   huart2.Instance = USART2;
 471:Core/Src/main.c ****   huart2.Init.BaudRate = 230400;
 472:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 473:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 474:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 475:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 476:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 477:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 478:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 479:Core/Src/main.c ****   {
 480:Core/Src/main.c ****     Error_Handler();
 481:Core/Src/main.c ****   }
 482:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 483:Core/Src/main.c **** 
 484:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 485:Core/Src/main.c **** 
 486:Core/Src/main.c **** }
 487:Core/Src/main.c **** 
 488:Core/Src/main.c **** /**
 489:Core/Src/main.c ****   * @brief GPIO Initialization Function
 490:Core/Src/main.c ****   * @param None
 491:Core/Src/main.c ****   * @retval None
 492:Core/Src/main.c ****   */
 493:Core/Src/main.c **** static void MX_GPIO_Init(void)
 494:Core/Src/main.c **** {
 104              		.loc 1 494 1 is_stmt 1 view -0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 32
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 109              		.cfi_def_cfa_offset 28
 110              		.cfi_offset 4, -28
 111              		.cfi_offset 5, -24
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s 			page 16


 112              		.cfi_offset 6, -20
 113              		.cfi_offset 7, -16
 114              		.cfi_offset 8, -12
 115              		.cfi_offset 9, -8
 116              		.cfi_offset 14, -4
 117 0004 89B0     		sub	sp, sp, #36
 118              		.cfi_def_cfa_offset 64
 495:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 119              		.loc 1 495 3 view .LVU27
 120              		.loc 1 495 20 is_stmt 0 view .LVU28
 121 0006 0024     		movs	r4, #0
 122 0008 0394     		str	r4, [sp, #12]
 123 000a 0494     		str	r4, [sp, #16]
 124 000c 0594     		str	r4, [sp, #20]
 125 000e 0694     		str	r4, [sp, #24]
 126 0010 0794     		str	r4, [sp, #28]
 496:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 497:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 498:Core/Src/main.c **** 
 499:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 500:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 127              		.loc 1 500 3 is_stmt 1 view .LVU29
 128              	.LBB4:
 129              		.loc 1 500 3 view .LVU30
 130 0012 0094     		str	r4, [sp]
 131              		.loc 1 500 3 view .LVU31
 132 0014 414B     		ldr	r3, .L8
 133 0016 1A6B     		ldr	r2, [r3, #48]
 134 0018 42F00402 		orr	r2, r2, #4
 135 001c 1A63     		str	r2, [r3, #48]
 136              		.loc 1 500 3 view .LVU32
 137 001e 1A6B     		ldr	r2, [r3, #48]
 138 0020 02F00402 		and	r2, r2, #4
 139 0024 0092     		str	r2, [sp]
 140              		.loc 1 500 3 view .LVU33
 141 0026 009A     		ldr	r2, [sp]
 142              	.LBE4:
 143              		.loc 1 500 3 view .LVU34
 501:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 144              		.loc 1 501 3 view .LVU35
 145              	.LBB5:
 146              		.loc 1 501 3 view .LVU36
 147 0028 0194     		str	r4, [sp, #4]
 148              		.loc 1 501 3 view .LVU37
 149 002a 1A6B     		ldr	r2, [r3, #48]
 150 002c 42F00102 		orr	r2, r2, #1
 151 0030 1A63     		str	r2, [r3, #48]
 152              		.loc 1 501 3 view .LVU38
 153 0032 1A6B     		ldr	r2, [r3, #48]
 154 0034 02F00102 		and	r2, r2, #1
 155 0038 0192     		str	r2, [sp, #4]
 156              		.loc 1 501 3 view .LVU39
 157 003a 019A     		ldr	r2, [sp, #4]
 158              	.LBE5:
 159              		.loc 1 501 3 view .LVU40
 502:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 160              		.loc 1 502 3 view .LVU41
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s 			page 17


 161              	.LBB6:
 162              		.loc 1 502 3 view .LVU42
 163 003c 0294     		str	r4, [sp, #8]
 164              		.loc 1 502 3 view .LVU43
 165 003e 1A6B     		ldr	r2, [r3, #48]
 166 0040 42F00202 		orr	r2, r2, #2
 167 0044 1A63     		str	r2, [r3, #48]
 168              		.loc 1 502 3 view .LVU44
 169 0046 1B6B     		ldr	r3, [r3, #48]
 170 0048 03F00203 		and	r3, r3, #2
 171 004c 0293     		str	r3, [sp, #8]
 172              		.loc 1 502 3 view .LVU45
 173 004e 029B     		ldr	r3, [sp, #8]
 174              	.LBE6:
 175              		.loc 1 502 3 view .LVU46
 503:Core/Src/main.c **** 
 504:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 505:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
 176              		.loc 1 505 3 view .LVU47
 177 0050 DFF8D480 		ldr	r8, .L8+12
 178 0054 2246     		mov	r2, r4
 179 0056 4FF40051 		mov	r1, #8192
 180 005a 4046     		mov	r0, r8
 181 005c FFF7FEFF 		bl	HAL_GPIO_WritePin
 182              	.LVL5:
 506:Core/Src/main.c **** 
 507:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 508:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_4, GPIO_PIN_SET);
 183              		.loc 1 508 3 view .LVU48
 184 0060 2F4F     		ldr	r7, .L8+4
 185 0062 0122     		movs	r2, #1
 186 0064 1021     		movs	r1, #16
 187 0066 3846     		mov	r0, r7
 188 0068 FFF7FEFF 		bl	HAL_GPIO_WritePin
 189              	.LVL6:
 509:Core/Src/main.c **** 
 510:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 511:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_8, GPIO_PIN_SET);
 190              		.loc 1 511 3 view .LVU49
 191 006c 2D4E     		ldr	r6, .L8+8
 192 006e 0122     		movs	r2, #1
 193 0070 4FF48071 		mov	r1, #256
 194 0074 3046     		mov	r0, r6
 195 0076 FFF7FEFF 		bl	HAL_GPIO_WritePin
 196              	.LVL7:
 512:Core/Src/main.c **** 
 513:Core/Src/main.c ****   /*Configure GPIO pin : PC13 */
 514:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_13;
 197              		.loc 1 514 3 view .LVU50
 198              		.loc 1 514 23 is_stmt 0 view .LVU51
 199 007a 4FF40059 		mov	r9, #8192
 200 007e CDF80C90 		str	r9, [sp, #12]
 515:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 201              		.loc 1 515 3 is_stmt 1 view .LVU52
 202              		.loc 1 515 24 is_stmt 0 view .LVU53
 203 0082 0125     		movs	r5, #1
 204 0084 0495     		str	r5, [sp, #16]
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s 			page 18


 516:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 205              		.loc 1 516 3 is_stmt 1 view .LVU54
 206              		.loc 1 516 24 is_stmt 0 view .LVU55
 207 0086 0594     		str	r4, [sp, #20]
 517:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 208              		.loc 1 517 3 is_stmt 1 view .LVU56
 209              		.loc 1 517 25 is_stmt 0 view .LVU57
 210 0088 0694     		str	r4, [sp, #24]
 518:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 211              		.loc 1 518 3 is_stmt 1 view .LVU58
 212 008a 03A9     		add	r1, sp, #12
 213 008c 4046     		mov	r0, r8
 214 008e FFF7FEFF 		bl	HAL_GPIO_Init
 215              	.LVL8:
 519:Core/Src/main.c **** 
 520:Core/Src/main.c ****   /*Configure GPIO pin : PA4 */
 521:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_4;
 216              		.loc 1 521 3 view .LVU59
 217              		.loc 1 521 23 is_stmt 0 view .LVU60
 218 0092 1023     		movs	r3, #16
 219 0094 0393     		str	r3, [sp, #12]
 522:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 220              		.loc 1 522 3 is_stmt 1 view .LVU61
 221              		.loc 1 522 24 is_stmt 0 view .LVU62
 222 0096 0495     		str	r5, [sp, #16]
 523:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 223              		.loc 1 523 3 is_stmt 1 view .LVU63
 224              		.loc 1 523 24 is_stmt 0 view .LVU64
 225 0098 0594     		str	r4, [sp, #20]
 524:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 226              		.loc 1 524 3 is_stmt 1 view .LVU65
 227              		.loc 1 524 25 is_stmt 0 view .LVU66
 228 009a 0694     		str	r4, [sp, #24]
 525:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 229              		.loc 1 525 3 is_stmt 1 view .LVU67
 230 009c 03A9     		add	r1, sp, #12
 231 009e 3846     		mov	r0, r7
 232 00a0 FFF7FEFF 		bl	HAL_GPIO_Init
 233              	.LVL9:
 526:Core/Src/main.c **** 
 527:Core/Src/main.c ****   /*Configure GPIO pin : rightButton_Pin */
 528:Core/Src/main.c ****   GPIO_InitStruct.Pin = rightButton_Pin;
 234              		.loc 1 528 3 view .LVU68
 235              		.loc 1 528 23 is_stmt 0 view .LVU69
 236 00a4 2023     		movs	r3, #32
 237 00a6 0393     		str	r3, [sp, #12]
 529:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 238              		.loc 1 529 3 is_stmt 1 view .LVU70
 239              		.loc 1 529 24 is_stmt 0 view .LVU71
 240 00a8 4FF40418 		mov	r8, #2162688
 241 00ac CDF81080 		str	r8, [sp, #16]
 530:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 242              		.loc 1 530 3 is_stmt 1 view .LVU72
 243              		.loc 1 530 24 is_stmt 0 view .LVU73
 244 00b0 0595     		str	r5, [sp, #20]
 531:Core/Src/main.c ****   HAL_GPIO_Init(rightButton_GPIO_Port, &GPIO_InitStruct);
 245              		.loc 1 531 3 is_stmt 1 view .LVU74
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s 			page 19


 246 00b2 03A9     		add	r1, sp, #12
 247 00b4 3846     		mov	r0, r7
 248 00b6 FFF7FEFF 		bl	HAL_GPIO_Init
 249              	.LVL10:
 532:Core/Src/main.c **** 
 533:Core/Src/main.c ****   /*Configure GPIO pin : leftButton_Pin */
 534:Core/Src/main.c ****   GPIO_InitStruct.Pin = leftButton_Pin;
 250              		.loc 1 534 3 view .LVU75
 251              		.loc 1 534 23 is_stmt 0 view .LVU76
 252 00ba CDF80C90 		str	r9, [sp, #12]
 535:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 253              		.loc 1 535 3 is_stmt 1 view .LVU77
 254              		.loc 1 535 24 is_stmt 0 view .LVU78
 255 00be CDF81080 		str	r8, [sp, #16]
 536:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 256              		.loc 1 536 3 is_stmt 1 view .LVU79
 257              		.loc 1 536 24 is_stmt 0 view .LVU80
 258 00c2 0595     		str	r5, [sp, #20]
 537:Core/Src/main.c ****   HAL_GPIO_Init(leftButton_GPIO_Port, &GPIO_InitStruct);
 259              		.loc 1 537 3 is_stmt 1 view .LVU81
 260 00c4 03A9     		add	r1, sp, #12
 261 00c6 3046     		mov	r0, r6
 262 00c8 FFF7FEFF 		bl	HAL_GPIO_Init
 263              	.LVL11:
 538:Core/Src/main.c **** 
 539:Core/Src/main.c ****   /*Configure GPIO pin : PB8 */
 540:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_8;
 264              		.loc 1 540 3 view .LVU82
 265              		.loc 1 540 23 is_stmt 0 view .LVU83
 266 00cc 4FF48073 		mov	r3, #256
 267 00d0 0393     		str	r3, [sp, #12]
 541:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 268              		.loc 1 541 3 is_stmt 1 view .LVU84
 269              		.loc 1 541 24 is_stmt 0 view .LVU85
 270 00d2 0495     		str	r5, [sp, #16]
 542:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 271              		.loc 1 542 3 is_stmt 1 view .LVU86
 272              		.loc 1 542 24 is_stmt 0 view .LVU87
 273 00d4 0594     		str	r4, [sp, #20]
 543:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 274              		.loc 1 543 3 is_stmt 1 view .LVU88
 275              		.loc 1 543 25 is_stmt 0 view .LVU89
 276 00d6 0694     		str	r4, [sp, #24]
 544:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 277              		.loc 1 544 3 is_stmt 1 view .LVU90
 278 00d8 03A9     		add	r1, sp, #12
 279 00da 3046     		mov	r0, r6
 280 00dc FFF7FEFF 		bl	HAL_GPIO_Init
 281              	.LVL12:
 545:Core/Src/main.c **** 
 546:Core/Src/main.c ****   /*Configure GPIO pin : PB9 */
 547:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_9;
 282              		.loc 1 547 3 view .LVU91
 283              		.loc 1 547 23 is_stmt 0 view .LVU92
 284 00e0 4FF40073 		mov	r3, #512
 285 00e4 0393     		str	r3, [sp, #12]
 548:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s 			page 20


 286              		.loc 1 548 3 is_stmt 1 view .LVU93
 287              		.loc 1 548 24 is_stmt 0 view .LVU94
 288 00e6 4FF48813 		mov	r3, #1114112
 289 00ea 0493     		str	r3, [sp, #16]
 549:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 290              		.loc 1 549 3 is_stmt 1 view .LVU95
 291              		.loc 1 549 24 is_stmt 0 view .LVU96
 292 00ec 0594     		str	r4, [sp, #20]
 550:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 293              		.loc 1 550 3 is_stmt 1 view .LVU97
 294 00ee 03A9     		add	r1, sp, #12
 295 00f0 3046     		mov	r0, r6
 296 00f2 FFF7FEFF 		bl	HAL_GPIO_Init
 297              	.LVL13:
 551:Core/Src/main.c **** 
 552:Core/Src/main.c ****   /* EXTI interrupt init*/
 553:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI9_5_IRQn, 2, 0);
 298              		.loc 1 553 3 view .LVU98
 299 00f6 2246     		mov	r2, r4
 300 00f8 0221     		movs	r1, #2
 301 00fa 1720     		movs	r0, #23
 302 00fc FFF7FEFF 		bl	HAL_NVIC_SetPriority
 303              	.LVL14:
 554:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 304              		.loc 1 554 3 view .LVU99
 305 0100 1720     		movs	r0, #23
 306 0102 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 307              	.LVL15:
 555:Core/Src/main.c **** 
 556:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI15_10_IRQn, 2, 0);
 308              		.loc 1 556 3 view .LVU100
 309 0106 2246     		mov	r2, r4
 310 0108 0221     		movs	r1, #2
 311 010a 2820     		movs	r0, #40
 312 010c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 313              	.LVL16:
 557:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 314              		.loc 1 557 3 view .LVU101
 315 0110 2820     		movs	r0, #40
 316 0112 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 317              	.LVL17:
 558:Core/Src/main.c **** 
 559:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 560:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 561:Core/Src/main.c **** }
 318              		.loc 1 561 1 is_stmt 0 view .LVU102
 319 0116 09B0     		add	sp, sp, #36
 320              		.cfi_def_cfa_offset 28
 321              		@ sp needed
 322 0118 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 323              	.L9:
 324              		.align	2
 325              	.L8:
 326 011c 00380240 		.word	1073887232
 327 0120 00000240 		.word	1073872896
 328 0124 00040240 		.word	1073873920
 329 0128 00080240 		.word	1073874944
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s 			page 21


 330              		.cfi_endproc
 331              	.LFE145:
 333              		.section	.rodata.HAL_UARTEx_RxEventCallback.str1.4,"aMS",%progbits,1
 334              		.align	2
 335              	.LC0:
 336 0000 0A00     		.ascii	"\012\000"
 337 0002 0000     		.align	2
 338              	.LC1:
 339 0004 25643A25 		.ascii	"%d:%d:%d,\000"
 339      643A2564 
 339      2C00
 340 000e 0000     		.align	2
 341              	.LC2:
 342 0010 2825642C 		.ascii	"(%d,%d),\000"
 342      2564292C 
 342      00
 343 0019 000000   		.align	2
 344              	.LC3:
 345 001c 54656D70 		.ascii	"Temperature/pressure reading failed\012\000"
 345      65726174 
 345      7572652F 
 345      70726573 
 345      73757265 
 346              		.global	__aeabi_f2d
 347              		.global	__aeabi_dsub
 348              		.global	__aeabi_dmul
 349              		.global	__aeabi_d2f
 350 0041 000000   		.align	2
 351              	.LC4:
 352 0044 25732C25 		.ascii	"%s,%s,%s,%s\000"
 352      732C2573 
 352      2C257300 
 353              		.section	.text.HAL_UARTEx_RxEventCallback,"ax",%progbits
 354              		.align	1
 355              		.global	HAL_UARTEx_RxEventCallback
 356              		.syntax unified
 357              		.thumb
 358              		.thumb_func
 360              	HAL_UARTEx_RxEventCallback:
 361              	.LVL18:
 362              	.LFB146:
 562:Core/Src/main.c **** 
 563:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 564:Core/Src/main.c **** void HAL_UARTEx_RxEventCallback(UART_HandleTypeDef *huart, uint16_t Size) {
 363              		.loc 1 564 75 is_stmt 1 view -0
 364              		.cfi_startproc
 365              		@ args = 0, pretend = 0, frame = 72
 366              		@ frame_needed = 0, uses_anonymous_args = 0
 367              		.loc 1 564 75 is_stmt 0 view .LVU104
 368 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 369              		.cfi_def_cfa_offset 24
 370              		.cfi_offset 4, -24
 371              		.cfi_offset 5, -20
 372              		.cfi_offset 6, -16
 373              		.cfi_offset 7, -12
 374              		.cfi_offset 8, -8
 375              		.cfi_offset 14, -4
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s 			page 22


 376 0004 94B0     		sub	sp, sp, #80
 377              		.cfi_def_cfa_offset 104
 565:Core/Src/main.c ****   //Set a flag high when the GPS sends data
 566:Core/Src/main.c ****   flag = 1;
 378              		.loc 1 566 3 is_stmt 1 view .LVU105
 379              		.loc 1 566 8 is_stmt 0 view .LVU106
 380 0006 6C4B     		ldr	r3, .L18+16
 381 0008 0122     		movs	r2, #1
 382 000a 1A70     		strb	r2, [r3]
 567:Core/Src/main.c **** 
 568:Core/Src/main.c ****   //Set memory of line_out to emtpy
 569:Core/Src/main.c ****   //memset(line_out, '\0', sizeof(line_out));
 570:Core/Src/main.c ****   memset(transmit_data, '\0', sizeof(transmit_data));
 383              		.loc 1 570 3 is_stmt 1 view .LVU107
 384 000c 4FF48072 		mov	r2, #256
 385 0010 0021     		movs	r1, #0
 386              	.LVL19:
 387              		.loc 1 570 3 is_stmt 0 view .LVU108
 388 0012 6A48     		ldr	r0, .L18+20
 389              	.LVL20:
 390              		.loc 1 570 3 view .LVU109
 391 0014 FFF7FEFF 		bl	memset
 392              	.LVL21:
 571:Core/Src/main.c **** 
 572:Core/Src/main.c ****   //Copy a new line character to line_out
 573:Core/Src/main.c ****   //memcpy(line_out, "\r\n\n", sizeof("\r\n\n"));
 574:Core/Src/main.c ****   //memcpy(transmit_data, "\r\n\n", sizeof("\r\n\n"));
 575:Core/Src/main.c **** 
 576:Core/Src/main.c ****   //Transmit the data over uart2
 577:Core/Src/main.c ****   //HAL_UART_Transmit(&huart2, (uint8_t*)line_out, sizeof(line_out)/sizeof(line_out[0]), 1000);
 578:Core/Src/main.c **** 
 579:Core/Src/main.c **** 
 580:Core/Src/main.c ****   
 581:Core/Src/main.c ****   //Search for the \n character
 582:Core/Src/main.c ****   uint8_t *token = strtok(gps_raw, "\n");
 393              		.loc 1 582 3 is_stmt 1 view .LVU110
 394              		.loc 1 582 20 is_stmt 0 view .LVU111
 395 0018 6949     		ldr	r1, .L18+24
 396 001a 6A48     		ldr	r0, .L18+28
 397 001c FFF7FEFF 		bl	strtok
 398              	.LVL22:
 583:Core/Src/main.c **** 
 584:Core/Src/main.c ****   if (token == NULL) {
 399              		.loc 1 584 3 is_stmt 1 view .LVU112
 400              		.loc 1 584 6 is_stmt 0 view .LVU113
 401 0020 48B1     		cbz	r0, .L11
 402 0022 0146     		mov	r1, r0
 403              	.LBB7:
 585:Core/Src/main.c ****     //break
 586:Core/Src/main.c ****   } else {
 587:Core/Src/main.c ****     //memset(line, '\0', sizeof(line));
 588:Core/Src/main.c ****     strcpy(line, token);
 404              		.loc 1 588 5 is_stmt 1 view .LVU114
 405 0024 684C     		ldr	r4, .L18+32
 406 0026 2046     		mov	r0, r4
 407              	.LVL23:
 408              		.loc 1 588 5 is_stmt 0 view .LVU115
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s 			page 23


 409 0028 FFF7FEFF 		bl	strcpy
 410              	.LVL24:
 589:Core/Src/main.c ****     struct minmea_sentence_rmc frame;
 411              		.loc 1 589 5 is_stmt 1 view .LVU116
 590:Core/Src/main.c ****     if (minmea_parse_rmc(&frame, line)) {
 412              		.loc 1 590 5 view .LVU117
 413              		.loc 1 590 9 is_stmt 0 view .LVU118
 414 002c 2146     		mov	r1, r4
 415 002e 02A8     		add	r0, sp, #8
 416 0030 FFF7FEFF 		bl	minmea_parse_rmc
 417              	.LVL25:
 418              		.loc 1 590 8 view .LVU119
 419 0034 30B9     		cbnz	r0, .L17
 420              	.L11:
 421              	.LBE7:
 591:Core/Src/main.c ****       //memset(line_out, '\0', sizeof(line_out));
 592:Core/Src/main.c ****       sprintf(transmit_data + strlen(transmit_data),"%d:%d:%d,",frame.time.hours, frame.time.minute
 593:Core/Src/main.c ****       //HAL_UART_Transmit(&huart2, (uint8_t*)line_out, sizeof(line_out)/sizeof(line_out[0]), 1000);
 594:Core/Src/main.c **** 
 595:Core/Src/main.c ****       //memset(line_out, '\0', sizeof(line_out));
 596:Core/Src/main.c ****       sprintf(transmit_data + strlen(transmit_data), "(%d,%d),",minmea_rescale(&frame.latitude, 100
 597:Core/Src/main.c ****       //HAL_UART_Transmit(&huart2, (uint8_t*)line_out, sizeof(line_out)/sizeof(line_out[0]), 1000);
 598:Core/Src/main.c ****       
 599:Core/Src/main.c ****     }
 600:Core/Src/main.c ****   }
 601:Core/Src/main.c **** 
 602:Core/Src/main.c ****   //Set gps_raw data register to empty
 603:Core/Src/main.c ****   memset(gps_raw, '\0', sizeof(gps_raw));
 422              		.loc 1 603 3 is_stmt 1 view .LVU120
 423 0036 4FF40072 		mov	r2, #512
 424 003a 0021     		movs	r1, #0
 425 003c 6148     		ldr	r0, .L18+28
 426 003e FFF7FEFF 		bl	memset
 427              	.LVL26:
 604:Core/Src/main.c **** 
 605:Core/Src/main.c **** 
 606:Core/Src/main.c **** 
 607:Core/Src/main.c ****   	//HAL_Delay(100);
 608:Core/Src/main.c **** 	while (!bmp280_read_float(&bmp280, &temperature, &pressure, &humidity)) {
 428              		.loc 1 608 2 view .LVU121
 429              		.loc 1 608 8 is_stmt 0 view .LVU122
 430 0042 42E0     		b	.L13
 431              	.L17:
 432              	.LBB8:
 592:Core/Src/main.c ****       //HAL_UART_Transmit(&huart2, (uint8_t*)line_out, sizeof(line_out)/sizeof(line_out[0]), 1000);
 433              		.loc 1 592 7 is_stmt 1 view .LVU123
 592:Core/Src/main.c ****       //HAL_UART_Transmit(&huart2, (uint8_t*)line_out, sizeof(line_out)/sizeof(line_out[0]), 1000);
 434              		.loc 1 592 31 is_stmt 0 view .LVU124
 435 0044 5D4C     		ldr	r4, .L18+20
 436 0046 2046     		mov	r0, r4
 437 0048 FFF7FEFF 		bl	strlen
 438              	.LVL27:
 592:Core/Src/main.c ****       //HAL_UART_Transmit(&huart2, (uint8_t*)line_out, sizeof(line_out)/sizeof(line_out[0]), 1000);
 439              		.loc 1 592 7 view .LVU125
 440 004c 049B     		ldr	r3, [sp, #16]
 441 004e 0093     		str	r3, [sp]
 442 0050 039B     		ldr	r3, [sp, #12]
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s 			page 24


 443 0052 029A     		ldr	r2, [sp, #8]
 444 0054 5D49     		ldr	r1, .L18+36
 445 0056 2044     		add	r0, r0, r4
 446 0058 FFF7FEFF 		bl	sprintf
 447              	.LVL28:
 596:Core/Src/main.c ****       //HAL_UART_Transmit(&huart2, (uint8_t*)line_out, sizeof(line_out)/sizeof(line_out[0]), 1000);
 448              		.loc 1 596 7 is_stmt 1 view .LVU126
 596:Core/Src/main.c ****       //HAL_UART_Transmit(&huart2, (uint8_t*)line_out, sizeof(line_out)/sizeof(line_out[0]), 1000);
 449              		.loc 1 596 31 is_stmt 0 view .LVU127
 450 005c 2046     		mov	r0, r4
 451 005e FFF7FEFF 		bl	strlen
 452              	.LVL29:
 453 0062 0546     		mov	r5, r0
 596:Core/Src/main.c ****       //HAL_UART_Transmit(&huart2, (uint8_t*)line_out, sizeof(line_out)/sizeof(line_out[0]), 1000);
 454              		.loc 1 596 7 view .LVU128
 455 0064 4FF47A71 		mov	r1, #1000
 456 0068 07A8     		add	r0, sp, #28
 457 006a FFF7FEFF 		bl	minmea_rescale
 458              	.LVL30:
 459 006e 0646     		mov	r6, r0
 460 0070 4FF47A71 		mov	r1, #1000
 461 0074 09A8     		add	r0, sp, #36
 462 0076 FFF7FEFF 		bl	minmea_rescale
 463              	.LVL31:
 464 007a 0346     		mov	r3, r0
 465 007c 3246     		mov	r2, r6
 466 007e 5449     		ldr	r1, .L18+40
 467 0080 6019     		adds	r0, r4, r5
 468 0082 FFF7FEFF 		bl	sprintf
 469              	.LVL32:
 470 0086 D6E7     		b	.L11
 471              	.L15:
 472              	.LBE8:
 609:Core/Src/main.c **** 	  size = sprintf(transmit_data + strlen(transmit_data),"Temperature/pressure reading failed\n");
 473              		.loc 1 609 4 is_stmt 1 view .LVU129
 474              		.loc 1 609 35 is_stmt 0 view .LVU130
 475 0088 4C4C     		ldr	r4, .L18+20
 476 008a 2046     		mov	r0, r4
 477 008c FFF7FEFF 		bl	strlen
 478              	.LVL33:
 479              		.loc 1 609 11 view .LVU131
 480 0090 504D     		ldr	r5, .L18+44
 481 0092 04EB000C 		add	ip, r4, r0
 482 0096 05F1200E 		add	lr, r5, #32
 483              	.L14:
 484 009a 2C46     		mov	r4, r5
 485 009c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 486 009e CCF80000 		str	r0, [ip]	@ unaligned
 487 00a2 CCF80410 		str	r1, [ip, #4]	@ unaligned
 488 00a6 CCF80820 		str	r2, [ip, #8]	@ unaligned
 489 00aa CCF80C30 		str	r3, [ip, #12]	@ unaligned
 490 00ae 2546     		mov	r5, r4
 491 00b0 0CF1100C 		add	ip, ip, #16
 492 00b4 7445     		cmp	r4, lr
 493 00b6 F0D1     		bne	.L14
 494 00b8 2068     		ldr	r0, [r4]
 495 00ba CCF80000 		str	r0, [ip]	@ unaligned
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s 			page 25


 496 00be 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 497 00c0 8CF80430 		strb	r3, [ip, #4]
 498              		.loc 1 609 9 view .LVU132
 499 00c4 444B     		ldr	r3, .L18+48
 500 00c6 2422     		movs	r2, #36
 501 00c8 1A80     		strh	r2, [r3]	@ movhi
 502              	.L13:
 608:Core/Src/main.c **** 	  size = sprintf(transmit_data + strlen(transmit_data),"Temperature/pressure reading failed\n");
 503              		.loc 1 608 9 is_stmt 1 view .LVU133
 608:Core/Src/main.c **** 	  size = sprintf(transmit_data + strlen(transmit_data),"Temperature/pressure reading failed\n");
 504              		.loc 1 608 10 is_stmt 0 view .LVU134
 505 00ca 444B     		ldr	r3, .L18+52
 506 00cc 444A     		ldr	r2, .L18+56
 507 00ce 4549     		ldr	r1, .L18+60
 508 00d0 4548     		ldr	r0, .L18+64
 509 00d2 FFF7FEFF 		bl	bmp280_read_float
 510              	.LVL34:
 608:Core/Src/main.c **** 	  size = sprintf(transmit_data + strlen(transmit_data),"Temperature/pressure reading failed\n");
 511              		.loc 1 608 9 view .LVU135
 512 00d6 0028     		cmp	r0, #0
 513 00d8 D6D0     		beq	.L15
 610:Core/Src/main.c **** 	  //HAL_UART_Transmit(&huart2, Data, size, 1000);
 611:Core/Src/main.c **** 	}
 612:Core/Src/main.c **** 
 613:Core/Src/main.c **** 
 614:Core/Src/main.c **** 
 615:Core/Src/main.c **** 
 616:Core/Src/main.c ****   //altitude = H_b + (T_b/L_b)*(pow((pressure/P_b),(-1*R*L_b)/(G_0*M))-1);
 617:Core/Src/main.c **** 
 618:Core/Src/main.c ****   altitude = 44330*(1-pow((pressure/P_b),(1/5.255)));
 514              		.loc 1 618 3 is_stmt 1 view .LVU136
 515              		.loc 1 618 36 is_stmt 0 view .LVU137
 516 00da 414C     		ldr	r4, .L18+56
 517 00dc 94ED007A 		vldr.32	s14, [r4]
 518 00e0 424B     		ldr	r3, .L18+68
 519 00e2 D3ED007A 		vldr.32	s15, [r3]
 520              		.loc 1 618 23 view .LVU138
 521 00e6 C7EE277A 		vdiv.f32	s15, s14, s15
 522 00ea 17EE900A 		vmov	r0, s15
 523 00ee FFF7FEFF 		bl	__aeabi_f2d
 524              	.LVL35:
 525 00f2 9FED2D1B 		vldr.64	d1, .L18
 526 00f6 41EC100B 		vmov	d0, r0, r1
 527 00fa FFF7FEFF 		bl	pow
 528              	.LVL36:
 529 00fe 53EC102B 		vmov	r2, r3, d0
 530              		.loc 1 618 22 view .LVU139
 531 0102 0020     		movs	r0, #0
 532 0104 3A49     		ldr	r1, .L18+72
 533 0106 FFF7FEFF 		bl	__aeabi_dsub
 534              	.LVL37:
 535              		.loc 1 618 19 view .LVU140
 536 010a 29A3     		adr	r3, .L18+8
 537 010c D3E90023 		ldrd	r2, [r3]
 538 0110 FFF7FEFF 		bl	__aeabi_dmul
 539              	.LVL38:
 540 0114 FFF7FEFF 		bl	__aeabi_d2f
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s 			page 26


 541              	.LVL39:
 542              		.loc 1 618 12 view .LVU141
 543 0118 364B     		ldr	r3, .L18+76
 544 011a 1860     		str	r0, [r3]	@ float
 619:Core/Src/main.c **** 
 620:Core/Src/main.c ****   gcvt(altitude, 6, sAltitude);
 545              		.loc 1 620 3 is_stmt 1 view .LVU142
 546 011c DFF8EC80 		ldr	r8, .L18+100
 547 0120 FFF7FEFF 		bl	__aeabi_f2d
 548              	.LVL40:
 549 0124 41EC100B 		vmov	d0, r0, r1
 550 0128 4146     		mov	r1, r8
 551 012a 0620     		movs	r0, #6
 552 012c FFF7FEFF 		bl	gcvt
 553              	.LVL41:
 621:Core/Src/main.c ****   gcvt(pressure, 8, sPressure);
 554              		.loc 1 621 3 view .LVU143
 555 0130 314D     		ldr	r5, .L18+80
 556 0132 2068     		ldr	r0, [r4]	@ float
 557 0134 FFF7FEFF 		bl	__aeabi_f2d
 558              	.LVL42:
 559 0138 41EC100B 		vmov	d0, r0, r1
 560 013c 2946     		mov	r1, r5
 561 013e 0820     		movs	r0, #8
 562 0140 FFF7FEFF 		bl	gcvt
 563              	.LVL43:
 622:Core/Src/main.c ****   gcvt(temperature, 4, sTemperature);
 564              		.loc 1 622 3 view .LVU144
 565 0144 2D4E     		ldr	r6, .L18+84
 566 0146 274B     		ldr	r3, .L18+60
 567 0148 1868     		ldr	r0, [r3]	@ float
 568 014a FFF7FEFF 		bl	__aeabi_f2d
 569              	.LVL44:
 570 014e 41EC100B 		vmov	d0, r0, r1
 571 0152 3146     		mov	r1, r6
 572 0154 0420     		movs	r0, #4
 573 0156 FFF7FEFF 		bl	gcvt
 574              	.LVL45:
 623:Core/Src/main.c ****   gcvt(humidity, 4, sHumidity);
 575              		.loc 1 623 3 view .LVU145
 576 015a 294F     		ldr	r7, .L18+88
 577 015c 1F4B     		ldr	r3, .L18+52
 578 015e 1868     		ldr	r0, [r3]	@ float
 579 0160 FFF7FEFF 		bl	__aeabi_f2d
 580              	.LVL46:
 581 0164 41EC100B 		vmov	d0, r0, r1
 582 0168 3946     		mov	r1, r7
 583 016a 0420     		movs	r0, #4
 584 016c FFF7FEFF 		bl	gcvt
 585              	.LVL47:
 624:Core/Src/main.c **** 
 625:Core/Src/main.c **** 	size = sprintf(transmit_data + strlen(transmit_data),"%s,%s,%s,%s",sPressure, sTemperature, sHumid
 586              		.loc 1 625 2 view .LVU146
 587              		.loc 1 625 33 is_stmt 0 view .LVU147
 588 0170 124C     		ldr	r4, .L18+20
 589 0172 2046     		mov	r0, r4
 590 0174 FFF7FEFF 		bl	strlen
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s 			page 27


 591              	.LVL48:
 592              		.loc 1 625 9 view .LVU148
 593 0178 CDF80480 		str	r8, [sp, #4]
 594 017c 0097     		str	r7, [sp]
 595 017e 3346     		mov	r3, r6
 596 0180 2A46     		mov	r2, r5
 597 0182 2049     		ldr	r1, .L18+92
 598 0184 2044     		add	r0, r0, r4
 599 0186 FFF7FEFF 		bl	sprintf
 600              	.LVL49:
 601              		.loc 1 625 7 view .LVU149
 602 018a 134B     		ldr	r3, .L18+48
 603 018c 1880     		strh	r0, [r3]	@ movhi
 626:Core/Src/main.c **** 	HAL_UART_Transmit(&huart2, transmit_data, sizeof(transmit_data)/sizeof(transmit_data[0]), 1000);
 604              		.loc 1 626 2 is_stmt 1 view .LVU150
 605 018e 4FF47A73 		mov	r3, #1000
 606 0192 4FF48072 		mov	r2, #256
 607 0196 2146     		mov	r1, r4
 608 0198 1B48     		ldr	r0, .L18+96
 609 019a FFF7FEFF 		bl	HAL_UART_Transmit
 610              	.LVL50:
 627:Core/Src/main.c **** 
 628:Core/Src/main.c **** 
 629:Core/Src/main.c **** 
 630:Core/Src/main.c ****   //Set flag low to indicate that data transfer is done
 631:Core/Src/main.c ****   
 632:Core/Src/main.c ****   //Send interrupt when data from GPS is sent again
 633:Core/Src/main.c ****   //HAL_UARTEx_ReceiveToIdle_IT(&huart1,(uint8_t*)gps_raw, 512);
 634:Core/Src/main.c **** 
 635:Core/Src/main.c **** }
 611              		.loc 1 635 1 is_stmt 0 view .LVU151
 612 019e 14B0     		add	sp, sp, #80
 613              		.cfi_def_cfa_offset 24
 614              		@ sp needed
 615 01a0 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 616              	.L19:
 617 01a4 AFF30080 		.align	3
 618              	.L18:
 619 01a8 6C45D9CC 		.word	-858176148
 620 01ac 955BC83F 		.word	1070095253
 621 01b0 00000000 		.word	0
 622 01b4 40A5E540 		.word	1088791872
 623 01b8 00000000 		.word	flag
 624 01bc 00000000 		.word	transmit_data
 625 01c0 00000000 		.word	.LC0
 626 01c4 00000000 		.word	gps_raw
 627 01c8 00000000 		.word	line
 628 01cc 04000000 		.word	.LC1
 629 01d0 10000000 		.word	.LC2
 630 01d4 1C000000 		.word	.LC3
 631 01d8 00000000 		.word	size
 632 01dc 00000000 		.word	humidity
 633 01e0 00000000 		.word	pressure
 634 01e4 00000000 		.word	temperature
 635 01e8 00000000 		.word	bmp280
 636 01ec 00000000 		.word	P_b
 637 01f0 0000F03F 		.word	1072693248
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s 			page 28


 638 01f4 00000000 		.word	altitude
 639 01f8 00000000 		.word	sPressure
 640 01fc 00000000 		.word	sTemperature
 641 0200 00000000 		.word	sHumidity
 642 0204 44000000 		.word	.LC4
 643 0208 00000000 		.word	huart2
 644 020c 00000000 		.word	sAltitude
 645              		.cfi_endproc
 646              	.LFE146:
 648              		.section	.rodata.HAL_GPIO_EXTI_Callback.str1.4,"aMS",%progbits,1
 649              		.align	2
 650              	.LC5:
 651 0000 0A4C6566 		.ascii	"\012Left Button Pushed\000"
 651      74204275 
 651      74746F6E 
 651      20507573 
 651      68656400 
 652              		.align	2
 653              	.LC6:
 654 0014 4D6F6465 		.ascii	"Mode:\000"
 654      3A00
 655 001a 0000     		.align	2
 656              	.LC7:
 657 001c 256400   		.ascii	"%d\000"
 658 001f 00       		.align	2
 659              	.LC8:
 660 0020 0A526967 		.ascii	"\012Right Button Pushed\000"
 660      68742042 
 660      7574746F 
 660      6E205075 
 660      73686564 
 661 0035 000000   		.align	2
 662              	.LC9:
 663 0038 25642020 		.ascii	"%d        \000"
 663      20202020 
 663      202000
 664              		.section	.text.HAL_GPIO_EXTI_Callback,"ax",%progbits
 665              		.align	1
 666              		.global	HAL_GPIO_EXTI_Callback
 667              		.syntax unified
 668              		.thumb
 669              		.thumb_func
 671              	HAL_GPIO_EXTI_Callback:
 672              	.LVL51:
 673              	.LFB147:
 636:Core/Src/main.c **** 
 637:Core/Src/main.c **** 
 638:Core/Src/main.c **** void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
 639:Core/Src/main.c **** {
 674              		.loc 1 639 1 is_stmt 1 view -0
 675              		.cfi_startproc
 676              		@ args = 0, pretend = 0, frame = 0
 677              		@ frame_needed = 0, uses_anonymous_args = 0
 678              		.loc 1 639 1 is_stmt 0 view .LVU153
 679 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 680              		.cfi_def_cfa_offset 24
 681              		.cfi_offset 4, -24
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s 			page 29


 682              		.cfi_offset 5, -20
 683              		.cfi_offset 6, -16
 684              		.cfi_offset 7, -12
 685              		.cfi_offset 8, -8
 686              		.cfi_offset 14, -4
 687 0004 0446     		mov	r4, r0
 640:Core/Src/main.c ****   if(GPIO_Pin == GPIO_PIN_13) // Left button pushed
 688              		.loc 1 640 3 is_stmt 1 view .LVU154
 689              		.loc 1 640 5 is_stmt 0 view .LVU155
 690 0006 B0F5005F 		cmp	r0, #8192
 691 000a 07D0     		beq	.L26
 692              	.LVL52:
 693              	.L21:
 641:Core/Src/main.c ****     {
 642:Core/Src/main.c ****       //get the current time
 643:Core/Src/main.c ****       currentTicks = HAL_GetTick();
 644:Core/Src/main.c ****       if ((currentTicks-preTicks)>250) {
 645:Core/Src/main.c ****         memset(transmit_data, '\0', sizeof(transmit_data));
 646:Core/Src/main.c ****         sprintf(transmit_data,"%s","\nLeft Button Pushed");
 647:Core/Src/main.c **** 	      HAL_UART_Transmit(&huart2, transmit_data, sizeof(transmit_data)/sizeof(transmit_data[0]),100
 648:Core/Src/main.c ****         memset(transmit_data, '\0', sizeof(transmit_data));
 649:Core/Src/main.c ****         bModeChanged = true;
 650:Core/Src/main.c **** 
 651:Core/Src/main.c ****         if (iMode == 1) {
 652:Core/Src/main.c ****           iMode = 60;
 653:Core/Src/main.c ****           // Set cursors and write the word "mode"
 654:Core/Src/main.c ****           ssd1306_SetCursor(0, 0);
 655:Core/Src/main.c ****           ssd1306_WriteString("Mode:", Font_16x26, White);
 656:Core/Src/main.c **** 
 657:Core/Src/main.c ****           ssd1306_SetCursor(0, 35);
 658:Core/Src/main.c ****           sprintf(sMode, "%d", iMode);
 659:Core/Src/main.c ****           ssd1306_WriteString(sMode, Font_16x26, White);
 660:Core/Src/main.c **** 
 661:Core/Src/main.c ****           // Copy all data from local screenbuffer to the screen
 662:Core/Src/main.c ****           ssd1306_UpdateScreen(&hi2c2);
 663:Core/Src/main.c ****         } else {
 664:Core/Src/main.c ****           iMode = iMode - 1;
 665:Core/Src/main.c ****           // Set cursors and write the word "mode"
 666:Core/Src/main.c ****           ssd1306_SetCursor(0, 0);
 667:Core/Src/main.c ****           ssd1306_WriteString("Mode:", Font_16x26, White);
 668:Core/Src/main.c **** 
 669:Core/Src/main.c ****           ssd1306_SetCursor(0, 35);
 670:Core/Src/main.c ****           sprintf(sMode, "%d", iMode);
 671:Core/Src/main.c ****           ssd1306_WriteString(sMode, Font_16x26, White);
 672:Core/Src/main.c **** 
 673:Core/Src/main.c ****           // Copy all data from local screenbuffer to the screen
 674:Core/Src/main.c ****           ssd1306_UpdateScreen(&hi2c2);
 675:Core/Src/main.c **** 
 676:Core/Src/main.c ****         }
 677:Core/Src/main.c **** 
 678:Core/Src/main.c **** 
 679:Core/Src/main.c **** 
 680:Core/Src/main.c ****       } else {
 681:Core/Src/main.c ****         //break
 682:Core/Src/main.c ****       }
 694              		.loc 1 682 7 is_stmt 1 view .LVU156
 683:Core/Src/main.c ****     }
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s 			page 30


 684:Core/Src/main.c **** 
 685:Core/Src/main.c ****   if(GPIO_Pin == GPIO_PIN_5) // Right button pushed
 695              		.loc 1 685 3 view .LVU157
 696              		.loc 1 685 5 is_stmt 0 view .LVU158
 697 000c 202C     		cmp	r4, #32
 698 000e 73D0     		beq	.L27
 699              	.L23:
 686:Core/Src/main.c ****     {
 687:Core/Src/main.c ****       //get the current time
 688:Core/Src/main.c ****       currentTicks = HAL_GetTick();
 689:Core/Src/main.c ****       if ((currentTicks-preTicks)>250) {
 690:Core/Src/main.c ****         memset(transmit_data, '\0', sizeof(transmit_data));
 691:Core/Src/main.c ****         sprintf(transmit_data,"%s","\nRight Button Pushed");
 692:Core/Src/main.c **** 	      HAL_UART_Transmit(&huart2, transmit_data, sizeof(transmit_data)/sizeof(transmit_data[0]),100
 693:Core/Src/main.c ****         memset(transmit_data, '\0', sizeof(transmit_data));
 694:Core/Src/main.c ****         bModeChanged = true;
 695:Core/Src/main.c ****         
 696:Core/Src/main.c ****         if (iMode == 60) {
 697:Core/Src/main.c ****           iMode = 1;
 698:Core/Src/main.c ****           // Set cursors and write the word "mode"
 699:Core/Src/main.c ****           ssd1306_SetCursor(0, 0);
 700:Core/Src/main.c ****           ssd1306_WriteString("Mode:", Font_16x26, White);
 701:Core/Src/main.c **** 
 702:Core/Src/main.c ****           ssd1306_SetCursor(0, 35);
 703:Core/Src/main.c ****           sprintf(sMode, "%d        ", iMode);
 704:Core/Src/main.c ****           ssd1306_WriteString(sMode, Font_16x26, White);
 705:Core/Src/main.c **** 
 706:Core/Src/main.c ****           // Copy all data from local screenbuffer to the screen
 707:Core/Src/main.c ****           ssd1306_UpdateScreen(&hi2c2);
 708:Core/Src/main.c ****         } else {
 709:Core/Src/main.c ****           iMode = iMode + 1;
 710:Core/Src/main.c ****           // Set cursors and write the word "mode"
 711:Core/Src/main.c ****           ssd1306_SetCursor(0, 0);
 712:Core/Src/main.c ****           ssd1306_WriteString("Mode:", Font_16x26, White);
 713:Core/Src/main.c **** 
 714:Core/Src/main.c ****           ssd1306_SetCursor(0, 35);
 715:Core/Src/main.c ****           sprintf(sMode, "%d        ", iMode);
 716:Core/Src/main.c ****           ssd1306_WriteString(sMode, Font_16x26, White);
 717:Core/Src/main.c **** 
 718:Core/Src/main.c ****           // Copy all data from local screenbuffer to the screen
 719:Core/Src/main.c ****           ssd1306_UpdateScreen(&hi2c2);
 720:Core/Src/main.c **** 
 721:Core/Src/main.c ****         }
 722:Core/Src/main.c **** 
 723:Core/Src/main.c **** 
 724:Core/Src/main.c ****       } else {
 725:Core/Src/main.c ****         //break
 726:Core/Src/main.c ****       }
 700              		.loc 1 726 7 is_stmt 1 view .LVU159
 727:Core/Src/main.c ****     }  
 728:Core/Src/main.c ****   preTicks = currentTicks;
 701              		.loc 1 728 3 view .LVU160
 702              		.loc 1 728 12 is_stmt 0 view .LVU161
 703 0010 724B     		ldr	r3, .L30
 704 0012 1A68     		ldr	r2, [r3]
 705 0014 724B     		ldr	r3, .L30+4
 706 0016 1A60     		str	r2, [r3]
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s 			page 31


 729:Core/Src/main.c **** }
 707              		.loc 1 729 1 view .LVU162
 708 0018 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 709              	.LVL53:
 710              	.L26:
 643:Core/Src/main.c ****       if ((currentTicks-preTicks)>250) {
 711              		.loc 1 643 7 is_stmt 1 view .LVU163
 643:Core/Src/main.c ****       if ((currentTicks-preTicks)>250) {
 712              		.loc 1 643 22 is_stmt 0 view .LVU164
 713 001c FFF7FEFF 		bl	HAL_GetTick
 714              	.LVL54:
 643:Core/Src/main.c ****       if ((currentTicks-preTicks)>250) {
 715              		.loc 1 643 20 view .LVU165
 716 0020 6E4B     		ldr	r3, .L30
 717 0022 1860     		str	r0, [r3]
 644:Core/Src/main.c ****         memset(transmit_data, '\0', sizeof(transmit_data));
 718              		.loc 1 644 7 is_stmt 1 view .LVU166
 644:Core/Src/main.c ****         memset(transmit_data, '\0', sizeof(transmit_data));
 719              		.loc 1 644 24 is_stmt 0 view .LVU167
 720 0024 6E4B     		ldr	r3, .L30+4
 721 0026 1B68     		ldr	r3, [r3]
 722 0028 C01A     		subs	r0, r0, r3
 644:Core/Src/main.c ****         memset(transmit_data, '\0', sizeof(transmit_data));
 723              		.loc 1 644 10 view .LVU168
 724 002a FA28     		cmp	r0, #250
 725 002c EEDD     		ble	.L21
 645:Core/Src/main.c ****         sprintf(transmit_data,"%s","\nLeft Button Pushed");
 726              		.loc 1 645 9 is_stmt 1 view .LVU169
 727 002e 6D4F     		ldr	r7, .L30+8
 728 0030 4FF48078 		mov	r8, #256
 729 0034 4246     		mov	r2, r8
 730 0036 0021     		movs	r1, #0
 731 0038 3846     		mov	r0, r7
 732 003a FFF7FEFF 		bl	memset
 733              	.LVL55:
 646:Core/Src/main.c **** 	      HAL_UART_Transmit(&huart2, transmit_data, sizeof(transmit_data)/sizeof(transmit_data[0]),100
 734              		.loc 1 646 9 view .LVU170
 735 003e 3D46     		mov	r5, r7
 736 0040 694E     		ldr	r6, .L30+12
 737 0042 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 738 0044 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 739 0046 3368     		ldr	r3, [r6]
 740 0048 2B60     		str	r3, [r5]
 647:Core/Src/main.c ****         memset(transmit_data, '\0', sizeof(transmit_data));
 741              		.loc 1 647 8 view .LVU171
 742 004a 4FF47A73 		mov	r3, #1000
 743 004e 4246     		mov	r2, r8
 744 0050 3946     		mov	r1, r7
 745 0052 6648     		ldr	r0, .L30+16
 746 0054 FFF7FEFF 		bl	HAL_UART_Transmit
 747              	.LVL56:
 648:Core/Src/main.c ****         bModeChanged = true;
 748              		.loc 1 648 9 view .LVU172
 749 0058 4246     		mov	r2, r8
 750 005a 0021     		movs	r1, #0
 751 005c 3846     		mov	r0, r7
 752 005e FFF7FEFF 		bl	memset
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s 			page 32


 753              	.LVL57:
 649:Core/Src/main.c **** 
 754              		.loc 1 649 9 view .LVU173
 649:Core/Src/main.c **** 
 755              		.loc 1 649 22 is_stmt 0 view .LVU174
 756 0062 634B     		ldr	r3, .L30+20
 757 0064 0122     		movs	r2, #1
 758 0066 1A70     		strb	r2, [r3]
 651:Core/Src/main.c ****           iMode = 60;
 759              		.loc 1 651 9 is_stmt 1 view .LVU175
 651:Core/Src/main.c ****           iMode = 60;
 760              		.loc 1 651 19 is_stmt 0 view .LVU176
 761 0068 624B     		ldr	r3, .L30+24
 762 006a 1B68     		ldr	r3, [r3]
 651:Core/Src/main.c ****           iMode = 60;
 763              		.loc 1 651 12 view .LVU177
 764 006c 9342     		cmp	r3, r2
 765 006e 21D0     		beq	.L28
 664:Core/Src/main.c ****           // Set cursors and write the word "mode"
 766              		.loc 1 664 11 is_stmt 1 view .LVU178
 664:Core/Src/main.c ****           // Set cursors and write the word "mode"
 767              		.loc 1 664 25 is_stmt 0 view .LVU179
 768 0070 013B     		subs	r3, r3, #1
 664:Core/Src/main.c ****           // Set cursors and write the word "mode"
 769              		.loc 1 664 17 view .LVU180
 770 0072 604F     		ldr	r7, .L30+24
 771 0074 3B60     		str	r3, [r7]
 666:Core/Src/main.c ****           ssd1306_WriteString("Mode:", Font_16x26, White);
 772              		.loc 1 666 11 is_stmt 1 view .LVU181
 773 0076 0021     		movs	r1, #0
 774 0078 0846     		mov	r0, r1
 775 007a FFF7FEFF 		bl	ssd1306_SetCursor
 776              	.LVL58:
 667:Core/Src/main.c **** 
 777              		.loc 1 667 11 view .LVU182
 778 007e 5E4D     		ldr	r5, .L30+28
 779 0080 0123     		movs	r3, #1
 780 0082 95E80600 		ldm	r5, {r1, r2}
 781 0086 5D48     		ldr	r0, .L30+32
 782 0088 FFF7FEFF 		bl	ssd1306_WriteString
 783              	.LVL59:
 669:Core/Src/main.c ****           sprintf(sMode, "%d", iMode);
 784              		.loc 1 669 11 view .LVU183
 785 008c 2321     		movs	r1, #35
 786 008e 0020     		movs	r0, #0
 787 0090 FFF7FEFF 		bl	ssd1306_SetCursor
 788              	.LVL60:
 670:Core/Src/main.c ****           ssd1306_WriteString(sMode, Font_16x26, White);
 789              		.loc 1 670 11 view .LVU184
 790 0094 5A4E     		ldr	r6, .L30+36
 791 0096 3A68     		ldr	r2, [r7]
 792 0098 5A49     		ldr	r1, .L30+40
 793 009a 3046     		mov	r0, r6
 794 009c FFF7FEFF 		bl	sprintf
 795              	.LVL61:
 671:Core/Src/main.c **** 
 796              		.loc 1 671 11 view .LVU185
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s 			page 33


 797 00a0 0123     		movs	r3, #1
 798 00a2 95E80600 		ldm	r5, {r1, r2}
 799 00a6 3046     		mov	r0, r6
 800 00a8 FFF7FEFF 		bl	ssd1306_WriteString
 801              	.LVL62:
 674:Core/Src/main.c **** 
 802              		.loc 1 674 11 view .LVU186
 803 00ac 5648     		ldr	r0, .L30+44
 804 00ae FFF7FEFF 		bl	ssd1306_UpdateScreen
 805              	.LVL63:
 806 00b2 ABE7     		b	.L21
 807              	.L28:
 652:Core/Src/main.c ****           // Set cursors and write the word "mode"
 808              		.loc 1 652 11 view .LVU187
 652:Core/Src/main.c ****           // Set cursors and write the word "mode"
 809              		.loc 1 652 17 is_stmt 0 view .LVU188
 810 00b4 4F4F     		ldr	r7, .L30+24
 811 00b6 3C23     		movs	r3, #60
 812 00b8 3B60     		str	r3, [r7]
 654:Core/Src/main.c ****           ssd1306_WriteString("Mode:", Font_16x26, White);
 813              		.loc 1 654 11 is_stmt 1 view .LVU189
 814 00ba 0021     		movs	r1, #0
 815 00bc 0846     		mov	r0, r1
 816 00be FFF7FEFF 		bl	ssd1306_SetCursor
 817              	.LVL64:
 655:Core/Src/main.c **** 
 818              		.loc 1 655 11 view .LVU190
 819 00c2 4D4D     		ldr	r5, .L30+28
 820 00c4 0123     		movs	r3, #1
 821 00c6 95E80600 		ldm	r5, {r1, r2}
 822 00ca 4C48     		ldr	r0, .L30+32
 823 00cc FFF7FEFF 		bl	ssd1306_WriteString
 824              	.LVL65:
 657:Core/Src/main.c ****           sprintf(sMode, "%d", iMode);
 825              		.loc 1 657 11 view .LVU191
 826 00d0 2321     		movs	r1, #35
 827 00d2 0020     		movs	r0, #0
 828 00d4 FFF7FEFF 		bl	ssd1306_SetCursor
 829              	.LVL66:
 658:Core/Src/main.c ****           ssd1306_WriteString(sMode, Font_16x26, White);
 830              		.loc 1 658 11 view .LVU192
 831 00d8 494E     		ldr	r6, .L30+36
 832 00da 3A68     		ldr	r2, [r7]
 833 00dc 4949     		ldr	r1, .L30+40
 834 00de 3046     		mov	r0, r6
 835 00e0 FFF7FEFF 		bl	sprintf
 836              	.LVL67:
 659:Core/Src/main.c **** 
 837              		.loc 1 659 11 view .LVU193
 838 00e4 0123     		movs	r3, #1
 839 00e6 95E80600 		ldm	r5, {r1, r2}
 840 00ea 3046     		mov	r0, r6
 841 00ec FFF7FEFF 		bl	ssd1306_WriteString
 842              	.LVL68:
 662:Core/Src/main.c ****         } else {
 843              		.loc 1 662 11 view .LVU194
 844 00f0 4548     		ldr	r0, .L30+44
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s 			page 34


 845 00f2 FFF7FEFF 		bl	ssd1306_UpdateScreen
 846              	.LVL69:
 847 00f6 89E7     		b	.L21
 848              	.L27:
 688:Core/Src/main.c ****       if ((currentTicks-preTicks)>250) {
 849              		.loc 1 688 7 view .LVU195
 688:Core/Src/main.c ****       if ((currentTicks-preTicks)>250) {
 850              		.loc 1 688 22 is_stmt 0 view .LVU196
 851 00f8 FFF7FEFF 		bl	HAL_GetTick
 852              	.LVL70:
 688:Core/Src/main.c ****       if ((currentTicks-preTicks)>250) {
 853              		.loc 1 688 20 view .LVU197
 854 00fc 374B     		ldr	r3, .L30
 855 00fe 1860     		str	r0, [r3]
 689:Core/Src/main.c ****         memset(transmit_data, '\0', sizeof(transmit_data));
 856              		.loc 1 689 7 is_stmt 1 view .LVU198
 689:Core/Src/main.c ****         memset(transmit_data, '\0', sizeof(transmit_data));
 857              		.loc 1 689 24 is_stmt 0 view .LVU199
 858 0100 374B     		ldr	r3, .L30+4
 859 0102 1B68     		ldr	r3, [r3]
 860 0104 C01A     		subs	r0, r0, r3
 689:Core/Src/main.c ****         memset(transmit_data, '\0', sizeof(transmit_data));
 861              		.loc 1 689 10 view .LVU200
 862 0106 FA28     		cmp	r0, #250
 863 0108 82DD     		ble	.L23
 690:Core/Src/main.c ****         sprintf(transmit_data,"%s","\nRight Button Pushed");
 864              		.loc 1 690 9 is_stmt 1 view .LVU201
 865 010a 364E     		ldr	r6, .L30+8
 866 010c 4FF48077 		mov	r7, #256
 867 0110 3A46     		mov	r2, r7
 868 0112 0021     		movs	r1, #0
 869 0114 3046     		mov	r0, r6
 870 0116 FFF7FEFF 		bl	memset
 871              	.LVL71:
 691:Core/Src/main.c **** 	      HAL_UART_Transmit(&huart2, transmit_data, sizeof(transmit_data)/sizeof(transmit_data[0]),100
 872              		.loc 1 691 9 view .LVU202
 873 011a 3446     		mov	r4, r6
 874 011c 3B4D     		ldr	r5, .L30+48
 875 011e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 876 0120 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 877 0122 95E80300 		ldm	r5, {r0, r1}
 878 0126 44F8040B 		str	r0, [r4], #4
 879 012a 2170     		strb	r1, [r4]
 692:Core/Src/main.c ****         memset(transmit_data, '\0', sizeof(transmit_data));
 880              		.loc 1 692 8 view .LVU203
 881 012c 4FF47A73 		mov	r3, #1000
 882 0130 3A46     		mov	r2, r7
 883 0132 3146     		mov	r1, r6
 884 0134 2D48     		ldr	r0, .L30+16
 885 0136 FFF7FEFF 		bl	HAL_UART_Transmit
 886              	.LVL72:
 693:Core/Src/main.c ****         bModeChanged = true;
 887              		.loc 1 693 9 view .LVU204
 888 013a 3A46     		mov	r2, r7
 889 013c 0021     		movs	r1, #0
 890 013e 3046     		mov	r0, r6
 891 0140 FFF7FEFF 		bl	memset
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s 			page 35


 892              	.LVL73:
 694:Core/Src/main.c ****         
 893              		.loc 1 694 9 view .LVU205
 694:Core/Src/main.c ****         
 894              		.loc 1 694 22 is_stmt 0 view .LVU206
 895 0144 2A4B     		ldr	r3, .L30+20
 896 0146 0122     		movs	r2, #1
 897 0148 1A70     		strb	r2, [r3]
 696:Core/Src/main.c ****           iMode = 1;
 898              		.loc 1 696 9 is_stmt 1 view .LVU207
 696:Core/Src/main.c ****           iMode = 1;
 899              		.loc 1 696 19 is_stmt 0 view .LVU208
 900 014a 2A4B     		ldr	r3, .L30+24
 901 014c 1B68     		ldr	r3, [r3]
 696:Core/Src/main.c ****           iMode = 1;
 902              		.loc 1 696 12 view .LVU209
 903 014e 3C2B     		cmp	r3, #60
 904 0150 21D0     		beq	.L29
 709:Core/Src/main.c ****           // Set cursors and write the word "mode"
 905              		.loc 1 709 11 is_stmt 1 view .LVU210
 709:Core/Src/main.c ****           // Set cursors and write the word "mode"
 906              		.loc 1 709 25 is_stmt 0 view .LVU211
 907 0152 0133     		adds	r3, r3, #1
 709:Core/Src/main.c ****           // Set cursors and write the word "mode"
 908              		.loc 1 709 17 view .LVU212
 909 0154 274E     		ldr	r6, .L30+24
 910 0156 3360     		str	r3, [r6]
 711:Core/Src/main.c ****           ssd1306_WriteString("Mode:", Font_16x26, White);
 911              		.loc 1 711 11 is_stmt 1 view .LVU213
 912 0158 0021     		movs	r1, #0
 913 015a 0846     		mov	r0, r1
 914 015c FFF7FEFF 		bl	ssd1306_SetCursor
 915              	.LVL74:
 712:Core/Src/main.c **** 
 916              		.loc 1 712 11 view .LVU214
 917 0160 254C     		ldr	r4, .L30+28
 918 0162 0123     		movs	r3, #1
 919 0164 94E80600 		ldm	r4, {r1, r2}
 920 0168 2448     		ldr	r0, .L30+32
 921 016a FFF7FEFF 		bl	ssd1306_WriteString
 922              	.LVL75:
 714:Core/Src/main.c ****           sprintf(sMode, "%d        ", iMode);
 923              		.loc 1 714 11 view .LVU215
 924 016e 2321     		movs	r1, #35
 925 0170 0020     		movs	r0, #0
 926 0172 FFF7FEFF 		bl	ssd1306_SetCursor
 927              	.LVL76:
 715:Core/Src/main.c ****           ssd1306_WriteString(sMode, Font_16x26, White);
 928              		.loc 1 715 11 view .LVU216
 929 0176 224D     		ldr	r5, .L30+36
 930 0178 3268     		ldr	r2, [r6]
 931 017a 2549     		ldr	r1, .L30+52
 932 017c 2846     		mov	r0, r5
 933 017e FFF7FEFF 		bl	sprintf
 934              	.LVL77:
 716:Core/Src/main.c **** 
 935              		.loc 1 716 11 view .LVU217
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s 			page 36


 936 0182 0123     		movs	r3, #1
 937 0184 94E80600 		ldm	r4, {r1, r2}
 938 0188 2846     		mov	r0, r5
 939 018a FFF7FEFF 		bl	ssd1306_WriteString
 940              	.LVL78:
 719:Core/Src/main.c **** 
 941              		.loc 1 719 11 view .LVU218
 942 018e 1E48     		ldr	r0, .L30+44
 943 0190 FFF7FEFF 		bl	ssd1306_UpdateScreen
 944              	.LVL79:
 945 0194 3CE7     		b	.L23
 946              	.L29:
 697:Core/Src/main.c ****           // Set cursors and write the word "mode"
 947              		.loc 1 697 11 view .LVU219
 697:Core/Src/main.c ****           // Set cursors and write the word "mode"
 948              		.loc 1 697 17 is_stmt 0 view .LVU220
 949 0196 174F     		ldr	r7, .L30+24
 950 0198 1546     		mov	r5, r2
 951 019a 3A60     		str	r2, [r7]
 699:Core/Src/main.c ****           ssd1306_WriteString("Mode:", Font_16x26, White);
 952              		.loc 1 699 11 is_stmt 1 view .LVU221
 953 019c 0021     		movs	r1, #0
 954 019e 0846     		mov	r0, r1
 955 01a0 FFF7FEFF 		bl	ssd1306_SetCursor
 956              	.LVL80:
 700:Core/Src/main.c **** 
 957              		.loc 1 700 11 view .LVU222
 958 01a4 144C     		ldr	r4, .L30+28
 959 01a6 2B46     		mov	r3, r5
 960 01a8 94E80600 		ldm	r4, {r1, r2}
 961 01ac 1348     		ldr	r0, .L30+32
 962 01ae FFF7FEFF 		bl	ssd1306_WriteString
 963              	.LVL81:
 702:Core/Src/main.c ****           sprintf(sMode, "%d        ", iMode);
 964              		.loc 1 702 11 view .LVU223
 965 01b2 2321     		movs	r1, #35
 966 01b4 0020     		movs	r0, #0
 967 01b6 FFF7FEFF 		bl	ssd1306_SetCursor
 968              	.LVL82:
 703:Core/Src/main.c ****           ssd1306_WriteString(sMode, Font_16x26, White);
 969              		.loc 1 703 11 view .LVU224
 970 01ba 114E     		ldr	r6, .L30+36
 971 01bc 3A68     		ldr	r2, [r7]
 972 01be 1449     		ldr	r1, .L30+52
 973 01c0 3046     		mov	r0, r6
 974 01c2 FFF7FEFF 		bl	sprintf
 975              	.LVL83:
 704:Core/Src/main.c **** 
 976              		.loc 1 704 11 view .LVU225
 977 01c6 2B46     		mov	r3, r5
 978 01c8 94E80600 		ldm	r4, {r1, r2}
 979 01cc 3046     		mov	r0, r6
 980 01ce FFF7FEFF 		bl	ssd1306_WriteString
 981              	.LVL84:
 707:Core/Src/main.c ****         } else {
 982              		.loc 1 707 11 view .LVU226
 983 01d2 0D48     		ldr	r0, .L30+44
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s 			page 37


 984 01d4 FFF7FEFF 		bl	ssd1306_UpdateScreen
 985              	.LVL85:
 986 01d8 1AE7     		b	.L23
 987              	.L31:
 988 01da 00BF     		.align	2
 989              	.L30:
 990 01dc 00000000 		.word	currentTicks
 991 01e0 00000000 		.word	preTicks
 992 01e4 00000000 		.word	transmit_data
 993 01e8 00000000 		.word	.LC5
 994 01ec 00000000 		.word	huart2
 995 01f0 00000000 		.word	bModeChanged
 996 01f4 00000000 		.word	iMode
 997 01f8 00000000 		.word	Font_16x26
 998 01fc 14000000 		.word	.LC6
 999 0200 00000000 		.word	sMode
 1000 0204 1C000000 		.word	.LC7
 1001 0208 00000000 		.word	hi2c2
 1002 020c 20000000 		.word	.LC8
 1003 0210 38000000 		.word	.LC9
 1004              		.cfi_endproc
 1005              	.LFE147:
 1007              		.section	.text.Error_Handler,"ax",%progbits
 1008              		.align	1
 1009              		.global	Error_Handler
 1010              		.syntax unified
 1011              		.thumb
 1012              		.thumb_func
 1014              	Error_Handler:
 1015              	.LFB148:
 730:Core/Src/main.c **** 
 731:Core/Src/main.c **** /* USER CODE END 4 */
 732:Core/Src/main.c **** 
 733:Core/Src/main.c **** /**
 734:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 735:Core/Src/main.c ****   * @retval None
 736:Core/Src/main.c ****   */
 737:Core/Src/main.c **** void Error_Handler(void)
 738:Core/Src/main.c **** {
 1016              		.loc 1 738 1 view -0
 1017              		.cfi_startproc
 1018              		@ Volatile: function does not return.
 1019              		@ args = 0, pretend = 0, frame = 0
 1020              		@ frame_needed = 0, uses_anonymous_args = 0
 1021              		@ link register save eliminated.
 739:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 740:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 741:Core/Src/main.c ****   __disable_irq();
 1022              		.loc 1 741 3 view .LVU228
 1023              	.LBB9:
 1024              	.LBI9:
 1025              		.file 3 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s 			page 38


   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s 			page 39


  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s 			page 40


 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 1026              		.loc 3 140 27 view .LVU229
 1027              	.LBB10:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 1028              		.loc 3 142 3 view .LVU230
 1029              		.syntax unified
 1030              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1031 0000 72B6     		cpsid i
 1032              	@ 0 "" 2
 1033              		.thumb
 1034              		.syntax unified
 1035              	.L33:
 1036              	.LBE10:
 1037              	.LBE9:
 742:Core/Src/main.c ****   while (1)
 1038              		.loc 1 742 3 discriminator 1 view .LVU231
 743:Core/Src/main.c ****   {
 744:Core/Src/main.c ****   }
 1039              		.loc 1 744 3 discriminator 1 view .LVU232
 742:Core/Src/main.c ****   while (1)
 1040              		.loc 1 742 9 discriminator 1 view .LVU233
 1041 0002 FEE7     		b	.L33
 1042              		.cfi_endproc
 1043              	.LFE148:
 1045              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 1046              		.align	1
 1047              		.syntax unified
 1048              		.thumb
 1049              		.thumb_func
 1051              	MX_USART1_UART_Init:
 1052              	.LFB143:
 428:Core/Src/main.c **** 
 1053              		.loc 1 428 1 view -0
 1054              		.cfi_startproc
 1055              		@ args = 0, pretend = 0, frame = 0
 1056              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s 			page 41


 1057 0000 08B5     		push	{r3, lr}
 1058              		.cfi_def_cfa_offset 8
 1059              		.cfi_offset 3, -8
 1060              		.cfi_offset 14, -4
 437:Core/Src/main.c ****   huart1.Init.BaudRate = 9600;
 1061              		.loc 1 437 3 view .LVU235
 437:Core/Src/main.c ****   huart1.Init.BaudRate = 9600;
 1062              		.loc 1 437 19 is_stmt 0 view .LVU236
 1063 0002 0A48     		ldr	r0, .L38
 1064 0004 0A4B     		ldr	r3, .L38+4
 1065 0006 0360     		str	r3, [r0]
 438:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 1066              		.loc 1 438 3 is_stmt 1 view .LVU237
 438:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 1067              		.loc 1 438 24 is_stmt 0 view .LVU238
 1068 0008 4FF41653 		mov	r3, #9600
 1069 000c 4360     		str	r3, [r0, #4]
 439:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 1070              		.loc 1 439 3 is_stmt 1 view .LVU239
 439:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 1071              		.loc 1 439 26 is_stmt 0 view .LVU240
 1072 000e 0023     		movs	r3, #0
 1073 0010 8360     		str	r3, [r0, #8]
 440:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 1074              		.loc 1 440 3 is_stmt 1 view .LVU241
 440:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 1075              		.loc 1 440 24 is_stmt 0 view .LVU242
 1076 0012 C360     		str	r3, [r0, #12]
 441:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 1077              		.loc 1 441 3 is_stmt 1 view .LVU243
 441:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 1078              		.loc 1 441 22 is_stmt 0 view .LVU244
 1079 0014 0361     		str	r3, [r0, #16]
 442:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1080              		.loc 1 442 3 is_stmt 1 view .LVU245
 442:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1081              		.loc 1 442 20 is_stmt 0 view .LVU246
 1082 0016 0C22     		movs	r2, #12
 1083 0018 4261     		str	r2, [r0, #20]
 443:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 1084              		.loc 1 443 3 is_stmt 1 view .LVU247
 443:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 1085              		.loc 1 443 25 is_stmt 0 view .LVU248
 1086 001a 8361     		str	r3, [r0, #24]
 444:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 1087              		.loc 1 444 3 is_stmt 1 view .LVU249
 444:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 1088              		.loc 1 444 28 is_stmt 0 view .LVU250
 1089 001c C361     		str	r3, [r0, #28]
 445:Core/Src/main.c ****   {
 1090              		.loc 1 445 3 is_stmt 1 view .LVU251
 445:Core/Src/main.c ****   {
 1091              		.loc 1 445 7 is_stmt 0 view .LVU252
 1092 001e FFF7FEFF 		bl	HAL_UART_Init
 1093              	.LVL86:
 445:Core/Src/main.c ****   {
 1094              		.loc 1 445 6 view .LVU253
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s 			page 42


 1095 0022 00B9     		cbnz	r0, .L37
 453:Core/Src/main.c **** 
 1096              		.loc 1 453 1 view .LVU254
 1097 0024 08BD     		pop	{r3, pc}
 1098              	.L37:
 447:Core/Src/main.c ****   }
 1099              		.loc 1 447 5 is_stmt 1 view .LVU255
 1100 0026 FFF7FEFF 		bl	Error_Handler
 1101              	.LVL87:
 1102              	.L39:
 1103 002a 00BF     		.align	2
 1104              	.L38:
 1105 002c 00000000 		.word	huart1
 1106 0030 00100140 		.word	1073811456
 1107              		.cfi_endproc
 1108              	.LFE143:
 1110              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 1111              		.align	1
 1112              		.syntax unified
 1113              		.thumb
 1114              		.thumb_func
 1116              	MX_USART2_UART_Init:
 1117              	.LFB144:
 461:Core/Src/main.c **** 
 1118              		.loc 1 461 1 view -0
 1119              		.cfi_startproc
 1120              		@ args = 0, pretend = 0, frame = 0
 1121              		@ frame_needed = 0, uses_anonymous_args = 0
 1122 0000 08B5     		push	{r3, lr}
 1123              		.cfi_def_cfa_offset 8
 1124              		.cfi_offset 3, -8
 1125              		.cfi_offset 14, -4
 470:Core/Src/main.c ****   huart2.Init.BaudRate = 230400;
 1126              		.loc 1 470 3 view .LVU257
 470:Core/Src/main.c ****   huart2.Init.BaudRate = 230400;
 1127              		.loc 1 470 19 is_stmt 0 view .LVU258
 1128 0002 0A48     		ldr	r0, .L44
 1129 0004 0A4B     		ldr	r3, .L44+4
 1130 0006 0360     		str	r3, [r0]
 471:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 1131              		.loc 1 471 3 is_stmt 1 view .LVU259
 471:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 1132              		.loc 1 471 24 is_stmt 0 view .LVU260
 1133 0008 4FF46133 		mov	r3, #230400
 1134 000c 4360     		str	r3, [r0, #4]
 472:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 1135              		.loc 1 472 3 is_stmt 1 view .LVU261
 472:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 1136              		.loc 1 472 26 is_stmt 0 view .LVU262
 1137 000e 0023     		movs	r3, #0
 1138 0010 8360     		str	r3, [r0, #8]
 473:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 1139              		.loc 1 473 3 is_stmt 1 view .LVU263
 473:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 1140              		.loc 1 473 24 is_stmt 0 view .LVU264
 1141 0012 C360     		str	r3, [r0, #12]
 474:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s 			page 43


 1142              		.loc 1 474 3 is_stmt 1 view .LVU265
 474:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 1143              		.loc 1 474 22 is_stmt 0 view .LVU266
 1144 0014 0361     		str	r3, [r0, #16]
 475:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1145              		.loc 1 475 3 is_stmt 1 view .LVU267
 475:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1146              		.loc 1 475 20 is_stmt 0 view .LVU268
 1147 0016 0C22     		movs	r2, #12
 1148 0018 4261     		str	r2, [r0, #20]
 476:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 1149              		.loc 1 476 3 is_stmt 1 view .LVU269
 476:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 1150              		.loc 1 476 25 is_stmt 0 view .LVU270
 1151 001a 8361     		str	r3, [r0, #24]
 477:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 1152              		.loc 1 477 3 is_stmt 1 view .LVU271
 477:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 1153              		.loc 1 477 28 is_stmt 0 view .LVU272
 1154 001c C361     		str	r3, [r0, #28]
 478:Core/Src/main.c ****   {
 1155              		.loc 1 478 3 is_stmt 1 view .LVU273
 478:Core/Src/main.c ****   {
 1156              		.loc 1 478 7 is_stmt 0 view .LVU274
 1157 001e FFF7FEFF 		bl	HAL_UART_Init
 1158              	.LVL88:
 478:Core/Src/main.c ****   {
 1159              		.loc 1 478 6 view .LVU275
 1160 0022 00B9     		cbnz	r0, .L43
 486:Core/Src/main.c **** 
 1161              		.loc 1 486 1 view .LVU276
 1162 0024 08BD     		pop	{r3, pc}
 1163              	.L43:
 480:Core/Src/main.c ****   }
 1164              		.loc 1 480 5 is_stmt 1 view .LVU277
 1165 0026 FFF7FEFF 		bl	Error_Handler
 1166              	.LVL89:
 1167              	.L45:
 1168 002a 00BF     		.align	2
 1169              	.L44:
 1170 002c 00000000 		.word	huart2
 1171 0030 00440040 		.word	1073759232
 1172              		.cfi_endproc
 1173              	.LFE144:
 1175              		.section	.text.MX_I2C1_Init,"ax",%progbits
 1176              		.align	1
 1177              		.syntax unified
 1178              		.thumb
 1179              		.thumb_func
 1181              	MX_I2C1_Init:
 1182              	.LFB140:
 322:Core/Src/main.c **** 
 1183              		.loc 1 322 1 view -0
 1184              		.cfi_startproc
 1185              		@ args = 0, pretend = 0, frame = 0
 1186              		@ frame_needed = 0, uses_anonymous_args = 0
 1187 0000 08B5     		push	{r3, lr}
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s 			page 44


 1188              		.cfi_def_cfa_offset 8
 1189              		.cfi_offset 3, -8
 1190              		.cfi_offset 14, -4
 331:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 1191              		.loc 1 331 3 view .LVU279
 331:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 1192              		.loc 1 331 18 is_stmt 0 view .LVU280
 1193 0002 0A48     		ldr	r0, .L50
 1194 0004 0A4B     		ldr	r3, .L50+4
 1195 0006 0360     		str	r3, [r0]
 332:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 1196              		.loc 1 332 3 is_stmt 1 view .LVU281
 332:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 1197              		.loc 1 332 25 is_stmt 0 view .LVU282
 1198 0008 0A4B     		ldr	r3, .L50+8
 1199 000a 4360     		str	r3, [r0, #4]
 333:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 1200              		.loc 1 333 3 is_stmt 1 view .LVU283
 333:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 1201              		.loc 1 333 24 is_stmt 0 view .LVU284
 1202 000c 0023     		movs	r3, #0
 1203 000e 8360     		str	r3, [r0, #8]
 334:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 1204              		.loc 1 334 3 is_stmt 1 view .LVU285
 334:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 1205              		.loc 1 334 26 is_stmt 0 view .LVU286
 1206 0010 C360     		str	r3, [r0, #12]
 335:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 1207              		.loc 1 335 3 is_stmt 1 view .LVU287
 335:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 1208              		.loc 1 335 29 is_stmt 0 view .LVU288
 1209 0012 4FF48042 		mov	r2, #16384
 1210 0016 0261     		str	r2, [r0, #16]
 336:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 1211              		.loc 1 336 3 is_stmt 1 view .LVU289
 336:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 1212              		.loc 1 336 30 is_stmt 0 view .LVU290
 1213 0018 4361     		str	r3, [r0, #20]
 337:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 1214              		.loc 1 337 3 is_stmt 1 view .LVU291
 337:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 1215              		.loc 1 337 26 is_stmt 0 view .LVU292
 1216 001a 8361     		str	r3, [r0, #24]
 338:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 1217              		.loc 1 338 3 is_stmt 1 view .LVU293
 338:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 1218              		.loc 1 338 30 is_stmt 0 view .LVU294
 1219 001c C361     		str	r3, [r0, #28]
 339:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 1220              		.loc 1 339 3 is_stmt 1 view .LVU295
 339:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 1221              		.loc 1 339 28 is_stmt 0 view .LVU296
 1222 001e 0362     		str	r3, [r0, #32]
 340:Core/Src/main.c ****   {
 1223              		.loc 1 340 3 is_stmt 1 view .LVU297
 340:Core/Src/main.c ****   {
 1224              		.loc 1 340 7 is_stmt 0 view .LVU298
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s 			page 45


 1225 0020 FFF7FEFF 		bl	HAL_I2C_Init
 1226              	.LVL90:
 340:Core/Src/main.c ****   {
 1227              		.loc 1 340 6 view .LVU299
 1228 0024 00B9     		cbnz	r0, .L49
 348:Core/Src/main.c **** 
 1229              		.loc 1 348 1 view .LVU300
 1230 0026 08BD     		pop	{r3, pc}
 1231              	.L49:
 342:Core/Src/main.c ****   }
 1232              		.loc 1 342 5 is_stmt 1 view .LVU301
 1233 0028 FFF7FEFF 		bl	Error_Handler
 1234              	.LVL91:
 1235              	.L51:
 1236              		.align	2
 1237              	.L50:
 1238 002c 00000000 		.word	hi2c1
 1239 0030 00540040 		.word	1073763328
 1240 0034 A0860100 		.word	100000
 1241              		.cfi_endproc
 1242              	.LFE140:
 1244              		.section	.text.MX_SPI3_Init,"ax",%progbits
 1245              		.align	1
 1246              		.syntax unified
 1247              		.thumb
 1248              		.thumb_func
 1250              	MX_SPI3_Init:
 1251              	.LFB142:
 390:Core/Src/main.c **** 
 1252              		.loc 1 390 1 view -0
 1253              		.cfi_startproc
 1254              		@ args = 0, pretend = 0, frame = 0
 1255              		@ frame_needed = 0, uses_anonymous_args = 0
 1256 0000 08B5     		push	{r3, lr}
 1257              		.cfi_def_cfa_offset 8
 1258              		.cfi_offset 3, -8
 1259              		.cfi_offset 14, -4
 400:Core/Src/main.c ****   hspi3.Init.Mode = SPI_MODE_MASTER;
 1260              		.loc 1 400 3 view .LVU303
 400:Core/Src/main.c ****   hspi3.Init.Mode = SPI_MODE_MASTER;
 1261              		.loc 1 400 18 is_stmt 0 view .LVU304
 1262 0002 0D48     		ldr	r0, .L56
 1263 0004 0D4B     		ldr	r3, .L56+4
 1264 0006 0360     		str	r3, [r0]
 401:Core/Src/main.c ****   hspi3.Init.Direction = SPI_DIRECTION_2LINES;
 1265              		.loc 1 401 3 is_stmt 1 view .LVU305
 401:Core/Src/main.c ****   hspi3.Init.Direction = SPI_DIRECTION_2LINES;
 1266              		.loc 1 401 19 is_stmt 0 view .LVU306
 1267 0008 4FF48273 		mov	r3, #260
 1268 000c 4360     		str	r3, [r0, #4]
 402:Core/Src/main.c ****   hspi3.Init.DataSize = SPI_DATASIZE_8BIT;
 1269              		.loc 1 402 3 is_stmt 1 view .LVU307
 402:Core/Src/main.c ****   hspi3.Init.DataSize = SPI_DATASIZE_8BIT;
 1270              		.loc 1 402 24 is_stmt 0 view .LVU308
 1271 000e 0023     		movs	r3, #0
 1272 0010 8360     		str	r3, [r0, #8]
 403:Core/Src/main.c ****   hspi3.Init.CLKPolarity = SPI_POLARITY_LOW;
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s 			page 46


 1273              		.loc 1 403 3 is_stmt 1 view .LVU309
 403:Core/Src/main.c ****   hspi3.Init.CLKPolarity = SPI_POLARITY_LOW;
 1274              		.loc 1 403 23 is_stmt 0 view .LVU310
 1275 0012 C360     		str	r3, [r0, #12]
 404:Core/Src/main.c ****   hspi3.Init.CLKPhase = SPI_PHASE_1EDGE;
 1276              		.loc 1 404 3 is_stmt 1 view .LVU311
 404:Core/Src/main.c ****   hspi3.Init.CLKPhase = SPI_PHASE_1EDGE;
 1277              		.loc 1 404 26 is_stmt 0 view .LVU312
 1278 0014 0361     		str	r3, [r0, #16]
 405:Core/Src/main.c ****   hspi3.Init.NSS = SPI_NSS_SOFT;
 1279              		.loc 1 405 3 is_stmt 1 view .LVU313
 405:Core/Src/main.c ****   hspi3.Init.NSS = SPI_NSS_SOFT;
 1280              		.loc 1 405 23 is_stmt 0 view .LVU314
 1281 0016 4361     		str	r3, [r0, #20]
 406:Core/Src/main.c ****   hspi3.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 1282              		.loc 1 406 3 is_stmt 1 view .LVU315
 406:Core/Src/main.c ****   hspi3.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 1283              		.loc 1 406 18 is_stmt 0 view .LVU316
 1284 0018 4FF40072 		mov	r2, #512
 1285 001c 8261     		str	r2, [r0, #24]
 407:Core/Src/main.c ****   hspi3.Init.FirstBit = SPI_FIRSTBIT_MSB;
 1286              		.loc 1 407 3 is_stmt 1 view .LVU317
 407:Core/Src/main.c ****   hspi3.Init.FirstBit = SPI_FIRSTBIT_MSB;
 1287              		.loc 1 407 32 is_stmt 0 view .LVU318
 1288 001e C361     		str	r3, [r0, #28]
 408:Core/Src/main.c ****   hspi3.Init.TIMode = SPI_TIMODE_DISABLE;
 1289              		.loc 1 408 3 is_stmt 1 view .LVU319
 408:Core/Src/main.c ****   hspi3.Init.TIMode = SPI_TIMODE_DISABLE;
 1290              		.loc 1 408 23 is_stmt 0 view .LVU320
 1291 0020 0362     		str	r3, [r0, #32]
 409:Core/Src/main.c ****   hspi3.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 1292              		.loc 1 409 3 is_stmt 1 view .LVU321
 409:Core/Src/main.c ****   hspi3.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 1293              		.loc 1 409 21 is_stmt 0 view .LVU322
 1294 0022 4362     		str	r3, [r0, #36]
 410:Core/Src/main.c ****   hspi3.Init.CRCPolynomial = 10;
 1295              		.loc 1 410 3 is_stmt 1 view .LVU323
 410:Core/Src/main.c ****   hspi3.Init.CRCPolynomial = 10;
 1296              		.loc 1 410 29 is_stmt 0 view .LVU324
 1297 0024 8362     		str	r3, [r0, #40]
 411:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi3) != HAL_OK)
 1298              		.loc 1 411 3 is_stmt 1 view .LVU325
 411:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi3) != HAL_OK)
 1299              		.loc 1 411 28 is_stmt 0 view .LVU326
 1300 0026 0A23     		movs	r3, #10
 1301 0028 C362     		str	r3, [r0, #44]
 412:Core/Src/main.c ****   {
 1302              		.loc 1 412 3 is_stmt 1 view .LVU327
 412:Core/Src/main.c ****   {
 1303              		.loc 1 412 7 is_stmt 0 view .LVU328
 1304 002a FFF7FEFF 		bl	HAL_SPI_Init
 1305              	.LVL92:
 412:Core/Src/main.c ****   {
 1306              		.loc 1 412 6 view .LVU329
 1307 002e 00B9     		cbnz	r0, .L55
 420:Core/Src/main.c **** 
 1308              		.loc 1 420 1 view .LVU330
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s 			page 47


 1309 0030 08BD     		pop	{r3, pc}
 1310              	.L55:
 414:Core/Src/main.c ****   }
 1311              		.loc 1 414 5 is_stmt 1 view .LVU331
 1312 0032 FFF7FEFF 		bl	Error_Handler
 1313              	.LVL93:
 1314              	.L57:
 1315 0036 00BF     		.align	2
 1316              	.L56:
 1317 0038 00000000 		.word	hspi3
 1318 003c 003C0040 		.word	1073757184
 1319              		.cfi_endproc
 1320              	.LFE142:
 1322              		.section	.text.MX_I2C2_Init,"ax",%progbits
 1323              		.align	1
 1324              		.syntax unified
 1325              		.thumb
 1326              		.thumb_func
 1328              	MX_I2C2_Init:
 1329              	.LFB141:
 356:Core/Src/main.c **** 
 1330              		.loc 1 356 1 view -0
 1331              		.cfi_startproc
 1332              		@ args = 0, pretend = 0, frame = 0
 1333              		@ frame_needed = 0, uses_anonymous_args = 0
 1334 0000 08B5     		push	{r3, lr}
 1335              		.cfi_def_cfa_offset 8
 1336              		.cfi_offset 3, -8
 1337              		.cfi_offset 14, -4
 365:Core/Src/main.c ****   hi2c2.Init.ClockSpeed = 100000;
 1338              		.loc 1 365 3 view .LVU333
 365:Core/Src/main.c ****   hi2c2.Init.ClockSpeed = 100000;
 1339              		.loc 1 365 18 is_stmt 0 view .LVU334
 1340 0002 0A48     		ldr	r0, .L62
 1341 0004 0A4B     		ldr	r3, .L62+4
 1342 0006 0360     		str	r3, [r0]
 366:Core/Src/main.c ****   hi2c2.Init.DutyCycle = I2C_DUTYCYCLE_2;
 1343              		.loc 1 366 3 is_stmt 1 view .LVU335
 366:Core/Src/main.c ****   hi2c2.Init.DutyCycle = I2C_DUTYCYCLE_2;
 1344              		.loc 1 366 25 is_stmt 0 view .LVU336
 1345 0008 0A4B     		ldr	r3, .L62+8
 1346 000a 4360     		str	r3, [r0, #4]
 367:Core/Src/main.c ****   hi2c2.Init.OwnAddress1 = 0;
 1347              		.loc 1 367 3 is_stmt 1 view .LVU337
 367:Core/Src/main.c ****   hi2c2.Init.OwnAddress1 = 0;
 1348              		.loc 1 367 24 is_stmt 0 view .LVU338
 1349 000c 0023     		movs	r3, #0
 1350 000e 8360     		str	r3, [r0, #8]
 368:Core/Src/main.c ****   hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 1351              		.loc 1 368 3 is_stmt 1 view .LVU339
 368:Core/Src/main.c ****   hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 1352              		.loc 1 368 26 is_stmt 0 view .LVU340
 1353 0010 C360     		str	r3, [r0, #12]
 369:Core/Src/main.c ****   hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 1354              		.loc 1 369 3 is_stmt 1 view .LVU341
 369:Core/Src/main.c ****   hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 1355              		.loc 1 369 29 is_stmt 0 view .LVU342
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s 			page 48


 1356 0012 4FF48042 		mov	r2, #16384
 1357 0016 0261     		str	r2, [r0, #16]
 370:Core/Src/main.c ****   hi2c2.Init.OwnAddress2 = 0;
 1358              		.loc 1 370 3 is_stmt 1 view .LVU343
 370:Core/Src/main.c ****   hi2c2.Init.OwnAddress2 = 0;
 1359              		.loc 1 370 30 is_stmt 0 view .LVU344
 1360 0018 4361     		str	r3, [r0, #20]
 371:Core/Src/main.c ****   hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 1361              		.loc 1 371 3 is_stmt 1 view .LVU345
 371:Core/Src/main.c ****   hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 1362              		.loc 1 371 26 is_stmt 0 view .LVU346
 1363 001a 8361     		str	r3, [r0, #24]
 372:Core/Src/main.c ****   hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 1364              		.loc 1 372 3 is_stmt 1 view .LVU347
 372:Core/Src/main.c ****   hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 1365              		.loc 1 372 30 is_stmt 0 view .LVU348
 1366 001c C361     		str	r3, [r0, #28]
 373:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 1367              		.loc 1 373 3 is_stmt 1 view .LVU349
 373:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 1368              		.loc 1 373 28 is_stmt 0 view .LVU350
 1369 001e 0362     		str	r3, [r0, #32]
 374:Core/Src/main.c ****   {
 1370              		.loc 1 374 3 is_stmt 1 view .LVU351
 374:Core/Src/main.c ****   {
 1371              		.loc 1 374 7 is_stmt 0 view .LVU352
 1372 0020 FFF7FEFF 		bl	HAL_I2C_Init
 1373              	.LVL94:
 374:Core/Src/main.c ****   {
 1374              		.loc 1 374 6 view .LVU353
 1375 0024 00B9     		cbnz	r0, .L61
 382:Core/Src/main.c **** 
 1376              		.loc 1 382 1 view .LVU354
 1377 0026 08BD     		pop	{r3, pc}
 1378              	.L61:
 376:Core/Src/main.c ****   }
 1379              		.loc 1 376 5 is_stmt 1 view .LVU355
 1380 0028 FFF7FEFF 		bl	Error_Handler
 1381              	.LVL95:
 1382              	.L63:
 1383              		.align	2
 1384              	.L62:
 1385 002c 00000000 		.word	hi2c2
 1386 0030 00580040 		.word	1073764352
 1387 0034 A0860100 		.word	100000
 1388              		.cfi_endproc
 1389              	.LFE141:
 1391              		.section	.text.SystemClock_Config,"ax",%progbits
 1392              		.align	1
 1393              		.global	SystemClock_Config
 1394              		.syntax unified
 1395              		.thumb
 1396              		.thumb_func
 1398              	SystemClock_Config:
 1399              	.LFB139:
 280:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1400              		.loc 1 280 1 view -0
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s 			page 49


 1401              		.cfi_startproc
 1402              		@ args = 0, pretend = 0, frame = 80
 1403              		@ frame_needed = 0, uses_anonymous_args = 0
 1404 0000 00B5     		push	{lr}
 1405              		.cfi_def_cfa_offset 4
 1406              		.cfi_offset 14, -4
 1407 0002 95B0     		sub	sp, sp, #84
 1408              		.cfi_def_cfa_offset 88
 281:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1409              		.loc 1 281 3 view .LVU357
 281:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1410              		.loc 1 281 22 is_stmt 0 view .LVU358
 1411 0004 3022     		movs	r2, #48
 1412 0006 0021     		movs	r1, #0
 1413 0008 08A8     		add	r0, sp, #32
 1414 000a FFF7FEFF 		bl	memset
 1415              	.LVL96:
 282:Core/Src/main.c **** 
 1416              		.loc 1 282 3 is_stmt 1 view .LVU359
 282:Core/Src/main.c **** 
 1417              		.loc 1 282 22 is_stmt 0 view .LVU360
 1418 000e 0023     		movs	r3, #0
 1419 0010 0393     		str	r3, [sp, #12]
 1420 0012 0493     		str	r3, [sp, #16]
 1421 0014 0593     		str	r3, [sp, #20]
 1422 0016 0693     		str	r3, [sp, #24]
 1423 0018 0793     		str	r3, [sp, #28]
 286:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1424              		.loc 1 286 3 is_stmt 1 view .LVU361
 1425              	.LBB11:
 286:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1426              		.loc 1 286 3 view .LVU362
 1427 001a 0193     		str	r3, [sp, #4]
 286:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1428              		.loc 1 286 3 view .LVU363
 1429 001c 184A     		ldr	r2, .L70
 1430 001e 116C     		ldr	r1, [r2, #64]
 1431 0020 41F08051 		orr	r1, r1, #268435456
 1432 0024 1164     		str	r1, [r2, #64]
 286:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1433              		.loc 1 286 3 view .LVU364
 1434 0026 126C     		ldr	r2, [r2, #64]
 1435 0028 02F08052 		and	r2, r2, #268435456
 1436 002c 0192     		str	r2, [sp, #4]
 286:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1437              		.loc 1 286 3 view .LVU365
 1438 002e 019A     		ldr	r2, [sp, #4]
 1439              	.LBE11:
 286:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1440              		.loc 1 286 3 view .LVU366
 287:Core/Src/main.c **** 
 1441              		.loc 1 287 3 view .LVU367
 1442              	.LBB12:
 287:Core/Src/main.c **** 
 1443              		.loc 1 287 3 view .LVU368
 1444 0030 0293     		str	r3, [sp, #8]
 287:Core/Src/main.c **** 
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s 			page 50


 1445              		.loc 1 287 3 view .LVU369
 1446 0032 144A     		ldr	r2, .L70+4
 1447 0034 1168     		ldr	r1, [r2]
 1448 0036 41F44041 		orr	r1, r1, #49152
 1449 003a 1160     		str	r1, [r2]
 287:Core/Src/main.c **** 
 1450              		.loc 1 287 3 view .LVU370
 1451 003c 1268     		ldr	r2, [r2]
 1452 003e 02F44042 		and	r2, r2, #49152
 1453 0042 0292     		str	r2, [sp, #8]
 287:Core/Src/main.c **** 
 1454              		.loc 1 287 3 view .LVU371
 1455 0044 029A     		ldr	r2, [sp, #8]
 1456              	.LBE12:
 287:Core/Src/main.c **** 
 1457              		.loc 1 287 3 view .LVU372
 292:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1458              		.loc 1 292 3 view .LVU373
 292:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1459              		.loc 1 292 36 is_stmt 0 view .LVU374
 1460 0046 0222     		movs	r2, #2
 1461 0048 0892     		str	r2, [sp, #32]
 293:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1462              		.loc 1 293 3 is_stmt 1 view .LVU375
 293:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1463              		.loc 1 293 30 is_stmt 0 view .LVU376
 1464 004a 0122     		movs	r2, #1
 1465 004c 0B92     		str	r2, [sp, #44]
 294:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 1466              		.loc 1 294 3 is_stmt 1 view .LVU377
 294:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 1467              		.loc 1 294 41 is_stmt 0 view .LVU378
 1468 004e 1022     		movs	r2, #16
 1469 0050 0C92     		str	r2, [sp, #48]
 295:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1470              		.loc 1 295 3 is_stmt 1 view .LVU379
 295:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1471              		.loc 1 295 34 is_stmt 0 view .LVU380
 1472 0052 0E93     		str	r3, [sp, #56]
 296:Core/Src/main.c ****   {
 1473              		.loc 1 296 3 is_stmt 1 view .LVU381
 296:Core/Src/main.c ****   {
 1474              		.loc 1 296 7 is_stmt 0 view .LVU382
 1475 0054 08A8     		add	r0, sp, #32
 1476 0056 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1477              	.LVL97:
 296:Core/Src/main.c ****   {
 1478              		.loc 1 296 6 view .LVU383
 1479 005a 68B9     		cbnz	r0, .L68
 303:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1480              		.loc 1 303 3 is_stmt 1 view .LVU384
 303:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1481              		.loc 1 303 31 is_stmt 0 view .LVU385
 1482 005c 0F23     		movs	r3, #15
 1483 005e 0393     		str	r3, [sp, #12]
 305:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1484              		.loc 1 305 3 is_stmt 1 view .LVU386
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s 			page 51


 305:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1485              		.loc 1 305 34 is_stmt 0 view .LVU387
 1486 0060 0021     		movs	r1, #0
 1487 0062 0491     		str	r1, [sp, #16]
 306:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1488              		.loc 1 306 3 is_stmt 1 view .LVU388
 306:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1489              		.loc 1 306 35 is_stmt 0 view .LVU389
 1490 0064 0591     		str	r1, [sp, #20]
 307:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1491              		.loc 1 307 3 is_stmt 1 view .LVU390
 307:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1492              		.loc 1 307 36 is_stmt 0 view .LVU391
 1493 0066 0691     		str	r1, [sp, #24]
 308:Core/Src/main.c **** 
 1494              		.loc 1 308 3 is_stmt 1 view .LVU392
 308:Core/Src/main.c **** 
 1495              		.loc 1 308 36 is_stmt 0 view .LVU393
 1496 0068 0791     		str	r1, [sp, #28]
 310:Core/Src/main.c ****   {
 1497              		.loc 1 310 3 is_stmt 1 view .LVU394
 310:Core/Src/main.c ****   {
 1498              		.loc 1 310 7 is_stmt 0 view .LVU395
 1499 006a 03A8     		add	r0, sp, #12
 1500 006c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1501              	.LVL98:
 310:Core/Src/main.c ****   {
 1502              		.loc 1 310 6 view .LVU396
 1503 0070 20B9     		cbnz	r0, .L69
 314:Core/Src/main.c **** 
 1504              		.loc 1 314 1 view .LVU397
 1505 0072 15B0     		add	sp, sp, #84
 1506              		.cfi_remember_state
 1507              		.cfi_def_cfa_offset 4
 1508              		@ sp needed
 1509 0074 5DF804FB 		ldr	pc, [sp], #4
 1510              	.L68:
 1511              		.cfi_restore_state
 298:Core/Src/main.c ****   }
 1512              		.loc 1 298 5 is_stmt 1 view .LVU398
 1513 0078 FFF7FEFF 		bl	Error_Handler
 1514              	.LVL99:
 1515              	.L69:
 312:Core/Src/main.c ****   }
 1516              		.loc 1 312 5 view .LVU399
 1517 007c FFF7FEFF 		bl	Error_Handler
 1518              	.LVL100:
 1519              	.L71:
 1520              		.align	2
 1521              	.L70:
 1522 0080 00380240 		.word	1073887232
 1523 0084 00700040 		.word	1073770496
 1524              		.cfi_endproc
 1525              	.LFE139:
 1527              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 1528              		.align	2
 1529              	.LC10:
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s 			page 52


 1530 0000 424D4532 		.ascii	"BME280\000"
 1530      383000
 1531 0007 00       		.align	2
 1532              	.LC11:
 1533 0008 424D5032 		.ascii	"BMP280\000"
 1533      383000
 1534 000f 00       		.align	2
 1535              	.LC12:
 1536 0010 424D5032 		.ascii	"BMP280 initialization failed\012\000"
 1536      38302069 
 1536      6E697469 
 1536      616C697A 
 1536      6174696F 
 1537 002e 0000     		.align	2
 1538              	.LC13:
 1539 0030 0A424D50 		.ascii	"\012BMP280: found %s\012\000"
 1539      3238303A 
 1539      20666F75 
 1539      6E642025 
 1539      730A00
 1540 0043 00       		.align	2
 1541              	.LC14:
 1542 0044 4C6F5261 		.ascii	"LoRa is running... :) \012\015\000"
 1542      20697320 
 1542      72756E6E 
 1542      696E672E 
 1542      2E2E203A 
 1543 005d 000000   		.align	2
 1544              	.LC15:
 1545 0060 0A0D204C 		.ascii	"\012\015 LoRa failed :( \012\015 Error code: %d \012"
 1545      6F526120 
 1545      6661696C 
 1545      6564203A 
 1545      28200A0D 
 1546 0085 0D00     		.ascii	"\015\000"
 1547              		.section	.text.main,"ax",%progbits
 1548              		.align	1
 1549              		.global	main
 1550              		.syntax unified
 1551              		.thumb
 1552              		.thumb_func
 1554              	main:
 1555              	.LFB138:
 125:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 1556              		.loc 1 125 1 view -0
 1557              		.cfi_startproc
 1558              		@ args = 0, pretend = 0, frame = 176
 1559              		@ frame_needed = 0, uses_anonymous_args = 0
 1560 0000 70B5     		push	{r4, r5, r6, lr}
 1561              		.cfi_def_cfa_offset 16
 1562              		.cfi_offset 4, -16
 1563              		.cfi_offset 5, -12
 1564              		.cfi_offset 6, -8
 1565              		.cfi_offset 14, -4
 1566 0002 ACB0     		sub	sp, sp, #176
 1567              		.cfi_def_cfa_offset 192
 133:Core/Src/main.c **** 
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s 			page 53


 1568              		.loc 1 133 3 view .LVU401
 1569 0004 FFF7FEFF 		bl	HAL_Init
 1570              	.LVL101:
 140:Core/Src/main.c **** 
 1571              		.loc 1 140 3 view .LVU402
 1572 0008 FFF7FEFF 		bl	SystemClock_Config
 1573              	.LVL102:
 147:Core/Src/main.c ****   MX_USART1_UART_Init();
 1574              		.loc 1 147 3 view .LVU403
 1575 000c FFF7FEFF 		bl	MX_GPIO_Init
 1576              	.LVL103:
 148:Core/Src/main.c ****   MX_USART2_UART_Init();
 1577              		.loc 1 148 3 view .LVU404
 1578 0010 FFF7FEFF 		bl	MX_USART1_UART_Init
 1579              	.LVL104:
 149:Core/Src/main.c ****   MX_I2C1_Init();
 1580              		.loc 1 149 3 view .LVU405
 1581 0014 FFF7FEFF 		bl	MX_USART2_UART_Init
 1582              	.LVL105:
 150:Core/Src/main.c ****   MX_SPI3_Init();
 1583              		.loc 1 150 3 view .LVU406
 1584 0018 FFF7FEFF 		bl	MX_I2C1_Init
 1585              	.LVL106:
 151:Core/Src/main.c ****   MX_I2C2_Init();
 1586              		.loc 1 151 3 view .LVU407
 1587 001c FFF7FEFF 		bl	MX_SPI3_Init
 1588              	.LVL107:
 152:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1589              		.loc 1 152 3 view .LVU408
 1590 0020 FFF7FEFF 		bl	MX_I2C2_Init
 1591              	.LVL108:
 155:Core/Src/main.c **** 	bmp280.addr = 0x77;
 1592              		.loc 1 155 3 view .LVU409
 1593 0024 8E4C     		ldr	r4, .L91
 1594 0026 2046     		mov	r0, r4
 1595 0028 FFF7FEFF 		bl	bmp280_init_default_params
 1596              	.LVL109:
 156:Core/Src/main.c **** 	bmp280.i2c = &hi2c1;
 1597              		.loc 1 156 2 view .LVU410
 156:Core/Src/main.c **** 	bmp280.i2c = &hi2c1;
 1598              		.loc 1 156 14 is_stmt 0 view .LVU411
 1599 002c 7723     		movs	r3, #119
 1600 002e 24F8083C 		strh	r3, [r4, #-8]	@ movhi
 157:Core/Src/main.c **** 
 1601              		.loc 1 157 2 is_stmt 1 view .LVU412
 157:Core/Src/main.c **** 
 1602              		.loc 1 157 13 is_stmt 0 view .LVU413
 1603 0032 8C4B     		ldr	r3, .L91+4
 1604 0034 44F8043C 		str	r3, [r4, #-4]
 159:Core/Src/main.c **** 		size = sprintf((char *)Data, "BMP280 initialization failed\n");
 1605              		.loc 1 159 2 is_stmt 1 view .LVU414
 1606              	.L73:
 159:Core/Src/main.c **** 		size = sprintf((char *)Data, "BMP280 initialization failed\n");
 1607              		.loc 1 159 9 view .LVU415
 159:Core/Src/main.c **** 		size = sprintf((char *)Data, "BMP280 initialization failed\n");
 1608              		.loc 1 159 10 is_stmt 0 view .LVU416
 1609 0038 8949     		ldr	r1, .L91
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s 			page 54


 1610 003a A1F12C00 		sub	r0, r1, #44
 1611 003e FFF7FEFF 		bl	bmp280_init
 1612              	.LVL110:
 159:Core/Src/main.c **** 		size = sprintf((char *)Data, "BMP280 initialization failed\n");
 1613              		.loc 1 159 9 view .LVU417
 1614 0042 B0B9     		cbnz	r0, .L87
 160:Core/Src/main.c **** 		HAL_UART_Transmit(&huart2, Data, size, 1000);
 1615              		.loc 1 160 3 is_stmt 1 view .LVU418
 160:Core/Src/main.c **** 		HAL_UART_Transmit(&huart2, Data, size, 1000);
 1616              		.loc 1 160 10 is_stmt 0 view .LVU419
 1617 0044 884E     		ldr	r6, .L91+8
 1618 0046 3446     		mov	r4, r6
 1619 0048 884D     		ldr	r5, .L91+12
 1620 004a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1621 004c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1622 004e 95E80F00 		ldm	r5, {r0, r1, r2, r3}
 1623 0052 07C4     		stmia	r4!, {r0, r1, r2}
 1624 0054 2380     		strh	r3, [r4]	@ movhi
 160:Core/Src/main.c **** 		HAL_UART_Transmit(&huart2, Data, size, 1000);
 1625              		.loc 1 160 8 view .LVU420
 1626 0056 1D22     		movs	r2, #29
 1627 0058 854B     		ldr	r3, .L91+16
 1628 005a 1A80     		strh	r2, [r3]	@ movhi
 161:Core/Src/main.c **** 		HAL_Delay(2000);
 1629              		.loc 1 161 3 is_stmt 1 view .LVU421
 1630 005c 4FF47A73 		mov	r3, #1000
 1631 0060 3146     		mov	r1, r6
 1632 0062 8448     		ldr	r0, .L91+20
 1633 0064 FFF7FEFF 		bl	HAL_UART_Transmit
 1634              	.LVL111:
 162:Core/Src/main.c **** 	}
 1635              		.loc 1 162 3 view .LVU422
 1636 0068 4FF4FA60 		mov	r0, #2000
 1637 006c FFF7FEFF 		bl	HAL_Delay
 1638              	.LVL112:
 1639 0070 E2E7     		b	.L73
 1640              	.L87:
 164:Core/Src/main.c **** 	size = sprintf((char *)Data, "\nBMP280: found %s\n", bme280p ? "BME280" : "BMP280");
 1641              		.loc 1 164 2 view .LVU423
 164:Core/Src/main.c **** 	size = sprintf((char *)Data, "\nBMP280: found %s\n", bme280p ? "BME280" : "BMP280");
 1642              		.loc 1 164 23 is_stmt 0 view .LVU424
 1643 0072 814B     		ldr	r3, .L91+24
 1644 0074 93F83230 		ldrb	r3, [r3, #50]	@ zero_extendqisi2
 1645              	.LVL113:
 165:Core/Src/main.c **** 	HAL_UART_Transmit(&huart2, Data, size, 1000);
 1646              		.loc 1 165 2 is_stmt 1 view .LVU425
 165:Core/Src/main.c **** 	HAL_UART_Transmit(&huart2, Data, size, 1000);
 1647              		.loc 1 165 9 is_stmt 0 view .LVU426
 1648 0078 602B     		cmp	r3, #96
 1649 007a 7ED0     		beq	.L88
 1650 007c 7F4A     		ldr	r2, .L91+28
 1651              	.L75:
 165:Core/Src/main.c **** 	HAL_UART_Transmit(&huart2, Data, size, 1000);
 1652              		.loc 1 165 9 discriminator 4 view .LVU427
 1653 007e 7A4C     		ldr	r4, .L91+8
 1654 0080 7F49     		ldr	r1, .L91+32
 1655 0082 2046     		mov	r0, r4
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s 			page 55


 1656 0084 FFF7FEFF 		bl	sprintf
 1657              	.LVL114:
 165:Core/Src/main.c **** 	HAL_UART_Transmit(&huart2, Data, size, 1000);
 1658              		.loc 1 165 7 discriminator 4 view .LVU428
 1659 0088 1622     		movs	r2, #22
 1660 008a 794B     		ldr	r3, .L91+16
 1661 008c 1A80     		strh	r2, [r3]	@ movhi
 166:Core/Src/main.c **** 
 1662              		.loc 1 166 2 is_stmt 1 discriminator 4 view .LVU429
 1663 008e 4FF47A73 		mov	r3, #1000
 1664 0092 2146     		mov	r1, r4
 1665 0094 7748     		ldr	r0, .L91+20
 1666 0096 FFF7FEFF 		bl	HAL_UART_Transmit
 1667              	.LVL115:
 168:Core/Src/main.c ****   myLoRa.CS_port         = GPIOA;
 1668              		.loc 1 168 3 discriminator 4 view .LVU430
 168:Core/Src/main.c ****   myLoRa.CS_port         = GPIOA;
 1669              		.loc 1 168 12 is_stmt 0 discriminator 4 view .LVU431
 1670 009a 7A4D     		ldr	r5, .L91+36
 1671 009c 6846     		mov	r0, sp
 1672 009e FFF7FEFF 		bl	newLoRa
 1673              	.LVL116:
 1674 00a2 AC46     		mov	ip, r5
 1675 00a4 6C46     		mov	r4, sp
 1676 00a6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1677 00a8 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 1678 00ac 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1679 00ae ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 1680 00b2 94E80700 		ldm	r4, {r0, r1, r2}
 1681 00b6 8CE80700 		stm	ip, {r0, r1, r2}
 169:Core/Src/main.c ****   myLoRa.CS_pin          = GPIO_PIN_4;
 1682              		.loc 1 169 3 is_stmt 1 discriminator 4 view .LVU432
 169:Core/Src/main.c ****   myLoRa.CS_pin          = GPIO_PIN_4;
 1683              		.loc 1 169 26 is_stmt 0 discriminator 4 view .LVU433
 1684 00ba 734B     		ldr	r3, .L91+40
 1685 00bc 2B60     		str	r3, [r5]
 170:Core/Src/main.c ****   myLoRa.reset_port      = GPIOB;
 1686              		.loc 1 170 3 is_stmt 1 discriminator 4 view .LVU434
 170:Core/Src/main.c ****   myLoRa.reset_port      = GPIOB;
 1687              		.loc 1 170 26 is_stmt 0 discriminator 4 view .LVU435
 1688 00be 1023     		movs	r3, #16
 1689 00c0 AB80     		strh	r3, [r5, #4]	@ movhi
 171:Core/Src/main.c ****   myLoRa.reset_pin       = GPIO_PIN_8;
 1690              		.loc 1 171 3 is_stmt 1 discriminator 4 view .LVU436
 171:Core/Src/main.c ****   myLoRa.reset_pin       = GPIO_PIN_8;
 1691              		.loc 1 171 26 is_stmt 0 discriminator 4 view .LVU437
 1692 00c2 724B     		ldr	r3, .L91+44
 1693 00c4 AB60     		str	r3, [r5, #8]
 172:Core/Src/main.c ****   myLoRa.DIO0_port       = GPIOB;
 1694              		.loc 1 172 3 is_stmt 1 discriminator 4 view .LVU438
 172:Core/Src/main.c ****   myLoRa.DIO0_port       = GPIOB;
 1695              		.loc 1 172 26 is_stmt 0 discriminator 4 view .LVU439
 1696 00c6 4FF48072 		mov	r2, #256
 1697 00ca AA81     		strh	r2, [r5, #12]	@ movhi
 173:Core/Src/main.c ****   myLoRa.DIO0_pin        = GPIO_PIN_9;
 1698              		.loc 1 173 3 is_stmt 1 discriminator 4 view .LVU440
 173:Core/Src/main.c ****   myLoRa.DIO0_pin        = GPIO_PIN_9;
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s 			page 56


 1699              		.loc 1 173 26 is_stmt 0 discriminator 4 view .LVU441
 1700 00cc 2B61     		str	r3, [r5, #16]
 174:Core/Src/main.c ****   myLoRa.hSPIx           = &hspi3;
 1701              		.loc 1 174 3 is_stmt 1 discriminator 4 view .LVU442
 174:Core/Src/main.c ****   myLoRa.hSPIx           = &hspi3;
 1702              		.loc 1 174 26 is_stmt 0 discriminator 4 view .LVU443
 1703 00ce 4FF40073 		mov	r3, #512
 1704 00d2 AB82     		strh	r3, [r5, #20]	@ movhi
 175:Core/Src/main.c **** 
 1705              		.loc 1 175 3 is_stmt 1 discriminator 4 view .LVU444
 175:Core/Src/main.c **** 
 1706              		.loc 1 175 26 is_stmt 0 discriminator 4 view .LVU445
 1707 00d4 6E4B     		ldr	r3, .L91+48
 1708 00d6 AB61     		str	r3, [r5, #24]
 177:Core/Src/main.c ****   myLoRa.spredingFactor        = SF_7;            // default = SF_7
 1709              		.loc 1 177 3 is_stmt 1 discriminator 4 view .LVU446
 177:Core/Src/main.c ****   myLoRa.spredingFactor        = SF_7;            // default = SF_7
 1710              		.loc 1 177 32 is_stmt 0 discriminator 4 view .LVU447
 1711 00d8 40F2B113 		movw	r3, #433
 1712 00dc 2B62     		str	r3, [r5, #32]
 178:Core/Src/main.c ****   myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 1713              		.loc 1 178 3 is_stmt 1 discriminator 4 view .LVU448
 178:Core/Src/main.c ****   myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 1714              		.loc 1 178 32 is_stmt 0 discriminator 4 view .LVU449
 1715 00de 0723     		movs	r3, #7
 1716 00e0 85F82430 		strb	r3, [r5, #36]
 179:Core/Src/main.c ****   myLoRa.crcRate               = CR_4_8;          // default = CR_4_5
 1717              		.loc 1 179 3 is_stmt 1 discriminator 4 view .LVU450
 179:Core/Src/main.c ****   myLoRa.crcRate               = CR_4_8;          // default = CR_4_5
 1718              		.loc 1 179 32 is_stmt 0 discriminator 4 view .LVU451
 1719 00e4 0026     		movs	r6, #0
 1720 00e6 85F82560 		strb	r6, [r5, #37]
 180:Core/Src/main.c ****   myLoRa.power                 = POWER_20db;      // default = 20db
 1721              		.loc 1 180 3 is_stmt 1 discriminator 4 view .LVU452
 180:Core/Src/main.c ****   myLoRa.power                 = POWER_20db;      // default = 20db
 1722              		.loc 1 180 32 is_stmt 0 discriminator 4 view .LVU453
 1723 00ea 0423     		movs	r3, #4
 1724 00ec 85F82630 		strb	r3, [r5, #38]
 181:Core/Src/main.c ****   myLoRa.overCurrentProtection = 100;             // default = 100 mA
 1725              		.loc 1 181 3 is_stmt 1 discriminator 4 view .LVU454
 181:Core/Src/main.c ****   myLoRa.overCurrentProtection = 100;             // default = 100 mA
 1726              		.loc 1 181 32 is_stmt 0 discriminator 4 view .LVU455
 1727 00f0 FF23     		movs	r3, #255
 1728 00f2 85F82A30 		strb	r3, [r5, #42]
 182:Core/Src/main.c ****   myLoRa.preamble              = 8;              // default = 8;
 1729              		.loc 1 182 3 is_stmt 1 discriminator 4 view .LVU456
 182:Core/Src/main.c ****   myLoRa.preamble              = 8;              // default = 8;
 1730              		.loc 1 182 32 is_stmt 0 discriminator 4 view .LVU457
 1731 00f6 6423     		movs	r3, #100
 1732 00f8 85F82B30 		strb	r3, [r5, #43]
 183:Core/Src/main.c **** 
 1733              		.loc 1 183 3 is_stmt 1 discriminator 4 view .LVU458
 183:Core/Src/main.c **** 
 1734              		.loc 1 183 32 is_stmt 0 discriminator 4 view .LVU459
 1735 00fc 0823     		movs	r3, #8
 1736 00fe 2B85     		strh	r3, [r5, #40]	@ movhi
 185:Core/Src/main.c ****   uint8_t buff[128] = {"\0"};
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s 			page 57


 1737              		.loc 1 185 3 is_stmt 1 discriminator 4 view .LVU460
 185:Core/Src/main.c ****   uint8_t buff[128] = {"\0"};
 1738              		.loc 1 185 18 is_stmt 0 discriminator 4 view .LVU461
 1739 0100 2846     		mov	r0, r5
 1740 0102 FFF7FEFF 		bl	LoRa_init
 1741              	.LVL117:
 1742 0106 0446     		mov	r4, r0
 1743              	.LVL118:
 186:Core/Src/main.c ****   
 1744              		.loc 1 186 3 is_stmt 1 discriminator 4 view .LVU462
 186:Core/Src/main.c ****   
 1745              		.loc 1 186 11 is_stmt 0 discriminator 4 view .LVU463
 1746 0108 0C96     		str	r6, [sp, #48]
 1747 010a 7C22     		movs	r2, #124
 1748 010c 3146     		mov	r1, r6
 1749 010e 0DA8     		add	r0, sp, #52
 1750 0110 FFF7FEFF 		bl	memset
 1751              	.LVL119:
 189:Core/Src/main.c ****   snprintf(buff,sizeof(buff),"LoRa is running... :) \n\r");
 1752              		.loc 1 189 1 is_stmt 1 discriminator 4 view .LVU464
 189:Core/Src/main.c ****   snprintf(buff,sizeof(buff),"LoRa is running... :) \n\r");
 1753              		.loc 1 189 4 is_stmt 0 discriminator 4 view .LVU465
 1754 0114 C82C     		cmp	r4, #200
 1755 0116 32D0     		beq	.L89
 195:Core/Src/main.c ****   HAL_UART_Transmit(&huart2, buff, sizeof(buff)/sizeof(buff[0]), 1000);
 1756              		.loc 1 195 3 is_stmt 1 view .LVU466
 1757 0118 2346     		mov	r3, r4
 1758 011a 5E4A     		ldr	r2, .L91+52
 1759 011c 8021     		movs	r1, #128
 1760 011e 0CA8     		add	r0, sp, #48
 1761 0120 FFF7FEFF 		bl	snprintf
 1762              	.LVL120:
 196:Core/Src/main.c **** }
 1763              		.loc 1 196 3 view .LVU467
 1764 0124 4FF47A73 		mov	r3, #1000
 1765 0128 8022     		movs	r2, #128
 1766 012a 0CA9     		add	r1, sp, #48
 1767 012c 5148     		ldr	r0, .L91+20
 1768 012e FFF7FEFF 		bl	HAL_UART_Transmit
 1769              	.LVL121:
 1770              	.L77:
 200:Core/Src/main.c **** 
 1771              		.loc 1 200 1 view .LVU468
 1772 0132 594D     		ldr	r5, .L91+56
 1773 0134 2846     		mov	r0, r5
 1774 0136 FFF7FEFF 		bl	ssd1306_Init
 1775              	.LVL122:
 203:Core/Src/main.c **** ssd1306_WriteString("Mode:", Font_16x26, White);
 1776              		.loc 1 203 1 view .LVU469
 1777 013a 0021     		movs	r1, #0
 1778 013c 0846     		mov	r0, r1
 1779 013e FFF7FEFF 		bl	ssd1306_SetCursor
 1780              	.LVL123:
 204:Core/Src/main.c **** 
 1781              		.loc 1 204 1 view .LVU470
 1782 0142 564C     		ldr	r4, .L91+60
 1783 0144 0123     		movs	r3, #1
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s 			page 58


 1784 0146 94E80600 		ldm	r4, {r1, r2}
 1785 014a 5548     		ldr	r0, .L91+64
 1786 014c FFF7FEFF 		bl	ssd1306_WriteString
 1787              	.LVL124:
 206:Core/Src/main.c **** sprintf(sMode, "%d", iMode);
 1788              		.loc 1 206 1 view .LVU471
 1789 0150 2321     		movs	r1, #35
 1790 0152 0020     		movs	r0, #0
 1791 0154 FFF7FEFF 		bl	ssd1306_SetCursor
 1792              	.LVL125:
 207:Core/Src/main.c **** ssd1306_WriteString(sMode, Font_16x26, White);
 1793              		.loc 1 207 1 view .LVU472
 1794 0158 524E     		ldr	r6, .L91+68
 1795 015a 534B     		ldr	r3, .L91+72
 1796 015c 1A68     		ldr	r2, [r3]
 1797 015e 5349     		ldr	r1, .L91+76
 1798 0160 3046     		mov	r0, r6
 1799 0162 FFF7FEFF 		bl	sprintf
 1800              	.LVL126:
 208:Core/Src/main.c **** 
 1801              		.loc 1 208 1 view .LVU473
 1802 0166 0123     		movs	r3, #1
 1803 0168 94E80600 		ldm	r4, {r1, r2}
 1804 016c 3046     		mov	r0, r6
 1805 016e FFF7FEFF 		bl	ssd1306_WriteString
 1806              	.LVL127:
 211:Core/Src/main.c **** 
 1807              		.loc 1 211 1 view .LVU474
 1808 0172 2846     		mov	r0, r5
 1809 0174 FFF7FEFF 		bl	ssd1306_UpdateScreen
 1810              	.LVL128:
 1811 0178 1AE0     		b	.L78
 1812              	.LVL129:
 1813              	.L88:
 165:Core/Src/main.c **** 	HAL_UART_Transmit(&huart2, Data, size, 1000);
 1814              		.loc 1 165 9 is_stmt 0 view .LVU475
 1815 017a 4D4A     		ldr	r2, .L91+80
 1816 017c 7FE7     		b	.L75
 1817              	.LVL130:
 1818              	.L89:
 190:Core/Src/main.c ****   LoRa_transmit(&myLoRa, (uint8_t*)buff, 120, 100);
 1819              		.loc 1 190 3 is_stmt 1 view .LVU476
 1820 017e 0CAC     		add	r4, sp, #48
 1821              	.LVL131:
 190:Core/Src/main.c ****   LoRa_transmit(&myLoRa, (uint8_t*)buff, 120, 100);
 1822              		.loc 1 190 3 is_stmt 0 view .LVU477
 1823 0180 4C4D     		ldr	r5, .L91+84
 1824 0182 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1825 0184 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1826 0186 95E80700 		ldm	r5, {r0, r1, r2}
 1827 018a 03C4     		stmia	r4!, {r0, r1}
 1828 018c 2270     		strb	r2, [r4]
 191:Core/Src/main.c ****   HAL_UART_Transmit(&huart2, buff, sizeof(buff)/sizeof(buff[0]), 1000);
 1829              		.loc 1 191 3 is_stmt 1 view .LVU478
 1830 018e 6423     		movs	r3, #100
 1831 0190 7822     		movs	r2, #120
 1832 0192 0CA9     		add	r1, sp, #48
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s 			page 59


 1833 0194 3B48     		ldr	r0, .L91+36
 1834 0196 FFF7FEFF 		bl	LoRa_transmit
 1835              	.LVL132:
 192:Core/Src/main.c **** }
 1836              		.loc 1 192 3 view .LVU479
 1837 019a 4FF47A73 		mov	r3, #1000
 1838 019e 8022     		movs	r2, #128
 1839 01a0 0CA9     		add	r1, sp, #48
 1840 01a2 3448     		ldr	r0, .L91+20
 1841 01a4 FFF7FEFF 		bl	HAL_UART_Transmit
 1842              	.LVL133:
 1843 01a8 C3E7     		b	.L77
 1844              	.L79:
 228:Core/Src/main.c **** switch (iMode) {
 1845              		.loc 1 228 5 view .LVU480
 228:Core/Src/main.c **** switch (iMode) {
 1846              		.loc 1 228 9 is_stmt 0 view .LVU481
 1847 01aa 434B     		ldr	r3, .L91+88
 1848 01ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 228:Core/Src/main.c **** switch (iMode) {
 1849              		.loc 1 228 8 view .LVU482
 1850 01ae EBB9     		cbnz	r3, .L90
 1851              	.L78:
 217:Core/Src/main.c ****   {
 1852              		.loc 1 217 3 is_stmt 1 view .LVU483
 220:Core/Src/main.c ****       HAL_UARTEx_ReceiveToIdle_IT(&huart1,(uint8_t*)gps_raw,512);
 1853              		.loc 1 220 5 view .LVU484
 220:Core/Src/main.c ****       HAL_UARTEx_ReceiveToIdle_IT(&huart1,(uint8_t*)gps_raw,512);
 1854              		.loc 1 220 9 is_stmt 0 view .LVU485
 1855 01b0 424B     		ldr	r3, .L91+92
 1856 01b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 220:Core/Src/main.c ****       HAL_UARTEx_ReceiveToIdle_IT(&huart1,(uint8_t*)gps_raw,512);
 1857              		.loc 1 220 8 view .LVU486
 1858 01b4 002B     		cmp	r3, #0
 1859 01b6 FBD0     		beq	.L78
 221:Core/Src/main.c ****       if (flag == 1) {
 1860              		.loc 1 221 7 is_stmt 1 view .LVU487
 1861 01b8 4FF40072 		mov	r2, #512
 1862 01bc 4049     		ldr	r1, .L91+96
 1863 01be 4148     		ldr	r0, .L91+100
 1864 01c0 FFF7FEFF 		bl	HAL_UARTEx_ReceiveToIdle_IT
 1865              	.LVL134:
 222:Core/Src/main.c ****       LoRa_transmit(&myLoRa, (uint8_t*)transmit_data, 113, 100);
 1866              		.loc 1 222 7 view .LVU488
 222:Core/Src/main.c ****       LoRa_transmit(&myLoRa, (uint8_t*)transmit_data, 113, 100);
 1867              		.loc 1 222 16 is_stmt 0 view .LVU489
 1868 01c4 404B     		ldr	r3, .L91+104
 1869 01c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 222:Core/Src/main.c ****       LoRa_transmit(&myLoRa, (uint8_t*)transmit_data, 113, 100);
 1870              		.loc 1 222 10 view .LVU490
 1871 01c8 012B     		cmp	r3, #1
 1872 01ca EED1     		bne	.L79
 223:Core/Src/main.c ****       flag = 0;
 1873              		.loc 1 223 7 is_stmt 1 view .LVU491
 1874 01cc 3F4C     		ldr	r4, .L91+108
 1875 01ce 6423     		movs	r3, #100
 1876 01d0 7122     		movs	r2, #113
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s 			page 60


 1877 01d2 2146     		mov	r1, r4
 1878 01d4 2B48     		ldr	r0, .L91+36
 1879 01d6 FFF7FEFF 		bl	LoRa_transmit
 1880              	.LVL135:
 224:Core/Src/main.c ****       memset(transmit_data, '\0', sizeof(transmit_data));
 1881              		.loc 1 224 7 view .LVU492
 224:Core/Src/main.c ****       memset(transmit_data, '\0', sizeof(transmit_data));
 1882              		.loc 1 224 12 is_stmt 0 view .LVU493
 1883 01da 0021     		movs	r1, #0
 1884 01dc 3A4B     		ldr	r3, .L91+104
 1885 01de 1970     		strb	r1, [r3]
 225:Core/Src/main.c ****     }
 1886              		.loc 1 225 7 is_stmt 1 view .LVU494
 1887 01e0 4FF48072 		mov	r2, #256
 1888 01e4 2046     		mov	r0, r4
 1889 01e6 FFF7FEFF 		bl	memset
 1890              	.LVL136:
 1891 01ea DEE7     		b	.L79
 1892              	.L90:
 229:Core/Src/main.c ****     case 1:
 1893              		.loc 1 229 1 view .LVU495
 1894 01ec 2E4B     		ldr	r3, .L91+72
 1895 01ee 1B68     		ldr	r3, [r3]
 1896 01f0 012B     		cmp	r3, #1
 1897 01f2 05D0     		beq	.L81
 1898 01f4 022B     		cmp	r3, #2
 1899 01f6 1BD0     		beq	.L82
 1900              	.L83:
 257:Core/Src/main.c ****     }
 1901              		.loc 1 257 7 view .LVU496
 257:Core/Src/main.c ****     }
 1902              		.loc 1 257 20 is_stmt 0 view .LVU497
 1903 01f8 2F4B     		ldr	r3, .L91+88
 1904 01fa 0022     		movs	r2, #0
 1905 01fc 1A70     		strb	r2, [r3]
 1906 01fe D7E7     		b	.L78
 1907              	.L81:
 232:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_7;            // default = SF_7
 1908              		.loc 1 232 7 is_stmt 1 view .LVU498
 232:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_7;            // default = SF_7
 1909              		.loc 1 232 36 is_stmt 0 view .LVU499
 1910 0200 2048     		ldr	r0, .L91+36
 1911 0202 40F2B113 		movw	r3, #433
 1912 0206 0362     		str	r3, [r0, #32]
 233:Core/Src/main.c ****       myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 1913              		.loc 1 233 7 is_stmt 1 view .LVU500
 233:Core/Src/main.c ****       myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 1914              		.loc 1 233 36 is_stmt 0 view .LVU501
 1915 0208 0723     		movs	r3, #7
 1916 020a 80F82430 		strb	r3, [r0, #36]
 234:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_8;          // default = CR_4_5
 1917              		.loc 1 234 7 is_stmt 1 view .LVU502
 234:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_8;          // default = CR_4_5
 1918              		.loc 1 234 36 is_stmt 0 view .LVU503
 1919 020e 0023     		movs	r3, #0
 1920 0210 80F82530 		strb	r3, [r0, #37]
 235:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s 			page 61


 1921              		.loc 1 235 7 is_stmt 1 view .LVU504
 235:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 1922              		.loc 1 235 36 is_stmt 0 view .LVU505
 1923 0214 0423     		movs	r3, #4
 1924 0216 80F82630 		strb	r3, [r0, #38]
 236:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 1925              		.loc 1 236 7 is_stmt 1 view .LVU506
 236:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 1926              		.loc 1 236 36 is_stmt 0 view .LVU507
 1927 021a FF23     		movs	r3, #255
 1928 021c 80F82A30 		strb	r3, [r0, #42]
 237:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 1929              		.loc 1 237 7 is_stmt 1 view .LVU508
 237:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 1930              		.loc 1 237 36 is_stmt 0 view .LVU509
 1931 0220 6423     		movs	r3, #100
 1932 0222 80F82B30 		strb	r3, [r0, #43]
 238:Core/Src/main.c ****       LoRa_init(&myLoRa);
 1933              		.loc 1 238 7 is_stmt 1 view .LVU510
 238:Core/Src/main.c ****       LoRa_init(&myLoRa);
 1934              		.loc 1 238 36 is_stmt 0 view .LVU511
 1935 0226 0823     		movs	r3, #8
 1936 0228 0385     		strh	r3, [r0, #40]	@ movhi
 239:Core/Src/main.c ****       break;
 1937              		.loc 1 239 7 is_stmt 1 view .LVU512
 1938 022a FFF7FEFF 		bl	LoRa_init
 1939              	.LVL137:
 240:Core/Src/main.c **** 
 1940              		.loc 1 240 7 view .LVU513
 1941 022e E3E7     		b	.L83
 1942              	.L82:
 244:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_7;            // default = SF_7
 1943              		.loc 1 244 7 view .LVU514
 244:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_7;            // default = SF_7
 1944              		.loc 1 244 36 is_stmt 0 view .LVU515
 1945 0230 1448     		ldr	r0, .L91+36
 1946 0232 40F2B113 		movw	r3, #433
 1947 0236 0362     		str	r3, [r0, #32]
 245:Core/Src/main.c ****       myLoRa.bandWidth             = BW_250KHz;       // default = BW_125KHz
 1948              		.loc 1 245 7 is_stmt 1 view .LVU516
 245:Core/Src/main.c ****       myLoRa.bandWidth             = BW_250KHz;       // default = BW_125KHz
 1949              		.loc 1 245 36 is_stmt 0 view .LVU517
 1950 0238 0723     		movs	r3, #7
 1951 023a 80F82430 		strb	r3, [r0, #36]
 246:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_8;          // default = CR_4_5
 1952              		.loc 1 246 7 is_stmt 1 view .LVU518
 246:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_8;          // default = CR_4_5
 1953              		.loc 1 246 36 is_stmt 0 view .LVU519
 1954 023e 0823     		movs	r3, #8
 1955 0240 80F82530 		strb	r3, [r0, #37]
 247:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 1956              		.loc 1 247 7 is_stmt 1 view .LVU520
 247:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 1957              		.loc 1 247 36 is_stmt 0 view .LVU521
 1958 0244 0422     		movs	r2, #4
 1959 0246 80F82620 		strb	r2, [r0, #38]
 248:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s 			page 62


 1960              		.loc 1 248 7 is_stmt 1 view .LVU522
 248:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 1961              		.loc 1 248 36 is_stmt 0 view .LVU523
 1962 024a FF22     		movs	r2, #255
 1963 024c 80F82A20 		strb	r2, [r0, #42]
 249:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 1964              		.loc 1 249 7 is_stmt 1 view .LVU524
 249:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 1965              		.loc 1 249 36 is_stmt 0 view .LVU525
 1966 0250 6422     		movs	r2, #100
 1967 0252 80F82B20 		strb	r2, [r0, #43]
 250:Core/Src/main.c ****       LoRa_init(&myLoRa);
 1968              		.loc 1 250 7 is_stmt 1 view .LVU526
 250:Core/Src/main.c ****       LoRa_init(&myLoRa);
 1969              		.loc 1 250 36 is_stmt 0 view .LVU527
 1970 0256 0385     		strh	r3, [r0, #40]	@ movhi
 251:Core/Src/main.c ****       break;
 1971              		.loc 1 251 7 is_stmt 1 view .LVU528
 1972 0258 FFF7FEFF 		bl	LoRa_init
 1973              	.LVL138:
 252:Core/Src/main.c **** 
 1974              		.loc 1 252 7 view .LVU529
 1975 025c CCE7     		b	.L83
 1976              	.L92:
 1977 025e 00BF     		.align	2
 1978              	.L91:
 1979 0260 2C000000 		.word	bmp280+44
 1980 0264 00000000 		.word	hi2c1
 1981 0268 00000000 		.word	Data
 1982 026c 10000000 		.word	.LC12
 1983 0270 00000000 		.word	size
 1984 0274 00000000 		.word	huart2
 1985 0278 00000000 		.word	bmp280
 1986 027c 08000000 		.word	.LC11
 1987 0280 30000000 		.word	.LC13
 1988 0284 00000000 		.word	myLoRa
 1989 0288 00000240 		.word	1073872896
 1990 028c 00040240 		.word	1073873920
 1991 0290 00000000 		.word	hspi3
 1992 0294 60000000 		.word	.LC15
 1993 0298 00000000 		.word	hi2c2
 1994 029c 00000000 		.word	Font_16x26
 1995 02a0 14000000 		.word	.LC6
 1996 02a4 00000000 		.word	sMode
 1997 02a8 00000000 		.word	iMode
 1998 02ac 1C000000 		.word	.LC7
 1999 02b0 00000000 		.word	.LC10
 2000 02b4 44000000 		.word	.LC14
 2001 02b8 00000000 		.word	bModeChanged
 2002 02bc 00000000 		.word	isLoraReady
 2003 02c0 00000000 		.word	gps_raw
 2004 02c4 00000000 		.word	huart1
 2005 02c8 00000000 		.word	flag
 2006 02cc 00000000 		.word	transmit_data
 2007              		.cfi_endproc
 2008              	.LFE138:
 2010              		.global	Data
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s 			page 63


 2011              		.section	.bss.Data,"aw",%nobits
 2012              		.align	2
 2015              	Data:
 2016 0000 00000000 		.space	256
 2016      00000000 
 2016      00000000 
 2016      00000000 
 2016      00000000 
 2017              		.global	size
 2018              		.section	.bss.size,"aw",%nobits
 2019              		.align	1
 2022              	size:
 2023 0000 0000     		.space	2
 2024              		.global	sAltitude
 2025              		.section	.bss.sAltitude,"aw",%nobits
 2026              		.align	2
 2029              	sAltitude:
 2030 0000 00000000 		.space	128
 2030      00000000 
 2030      00000000 
 2030      00000000 
 2030      00000000 
 2031              		.global	sHumidity
 2032              		.section	.bss.sHumidity,"aw",%nobits
 2033              		.align	2
 2036              	sHumidity:
 2037 0000 00000000 		.space	128
 2037      00000000 
 2037      00000000 
 2037      00000000 
 2037      00000000 
 2038              		.global	sTemperature
 2039              		.section	.bss.sTemperature,"aw",%nobits
 2040              		.align	2
 2043              	sTemperature:
 2044 0000 00000000 		.space	128
 2044      00000000 
 2044      00000000 
 2044      00000000 
 2044      00000000 
 2045              		.global	sPressure
 2046              		.section	.bss.sPressure,"aw",%nobits
 2047              		.align	2
 2050              	sPressure:
 2051 0000 00000000 		.space	128
 2051      00000000 
 2051      00000000 
 2051      00000000 
 2051      00000000 
 2052              		.global	humidity
 2053              		.section	.bss.humidity,"aw",%nobits
 2054              		.align	2
 2057              	humidity:
 2058 0000 00000000 		.space	4
 2059              		.global	temperature
 2060              		.section	.bss.temperature,"aw",%nobits
 2061              		.align	2
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s 			page 64


 2064              	temperature:
 2065 0000 00000000 		.space	4
 2066              		.global	pressure
 2067              		.section	.bss.pressure,"aw",%nobits
 2068              		.align	2
 2071              	pressure:
 2072 0000 00000000 		.space	4
 2073              		.global	bmp280
 2074              		.section	.bss.bmp280,"aw",%nobits
 2075              		.align	2
 2078              	bmp280:
 2079 0000 00000000 		.space	52
 2079      00000000 
 2079      00000000 
 2079      00000000 
 2079      00000000 
 2080              		.global	altitude
 2081              		.section	.bss.altitude,"aw",%nobits
 2082              		.align	2
 2085              	altitude:
 2086 0000 00000000 		.space	4
 2087              		.global	P_b
 2088              		.section	.data.P_b,"aw"
 2089              		.align	2
 2092              	P_b:
 2093 0000 80E6C547 		.word	1204151936
 2094              		.global	bModeChanged
 2095              		.section	.bss.bModeChanged,"aw",%nobits
 2098              	bModeChanged:
 2099 0000 00       		.space	1
 2100              		.global	sMode
 2101              		.section	.bss.sMode,"aw",%nobits
 2102              		.align	2
 2105              	sMode:
 2106 0000 00000000 		.space	10
 2106      00000000 
 2106      0000
 2107              		.global	iMode
 2108              		.section	.data.iMode,"aw"
 2109              		.align	2
 2112              	iMode:
 2113 0000 01000000 		.word	1
 2114              		.global	currentTicks
 2115              		.section	.bss.currentTicks,"aw",%nobits
 2116              		.align	2
 2119              	currentTicks:
 2120 0000 00000000 		.space	4
 2121              		.global	preTicks
 2122              		.section	.bss.preTicks,"aw",%nobits
 2123              		.align	2
 2126              	preTicks:
 2127 0000 00000000 		.space	4
 2128              		.global	isLoraReady
 2129              		.section	.data.isLoraReady,"aw"
 2132              	isLoraReady:
 2133 0000 01       		.byte	1
 2134              		.global	myLoRa
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s 			page 65


 2135              		.section	.bss.myLoRa,"aw",%nobits
 2136              		.align	2
 2139              	myLoRa:
 2140 0000 00000000 		.space	44
 2140      00000000 
 2140      00000000 
 2140      00000000 
 2140      00000000 
 2141              		.global	transmit_data
 2142              		.section	.bss.transmit_data,"aw",%nobits
 2143              		.align	2
 2146              	transmit_data:
 2147 0000 00000000 		.space	256
 2147      00000000 
 2147      00000000 
 2147      00000000 
 2147      00000000 
 2148              		.global	bme280p
 2149              		.section	.bss.bme280p,"aw",%nobits
 2152              	bme280p:
 2153 0000 00       		.space	1
 2154              		.global	line
 2155              		.section	.bss.line,"aw",%nobits
 2156              		.align	2
 2159              	line:
 2160 0000 00000000 		.space	512
 2160      00000000 
 2160      00000000 
 2160      00000000 
 2160      00000000 
 2161              		.global	line_out
 2162              		.section	.bss.line_out,"aw",%nobits
 2163              		.align	2
 2166              	line_out:
 2167 0000 00000000 		.space	512
 2167      00000000 
 2167      00000000 
 2167      00000000 
 2167      00000000 
 2168              		.global	flag
 2169              		.section	.bss.flag,"aw",%nobits
 2172              	flag:
 2173 0000 00       		.space	1
 2174              		.global	gps_raw
 2175              		.section	.bss.gps_raw,"aw",%nobits
 2176              		.align	2
 2179              	gps_raw:
 2180 0000 00000000 		.space	512
 2180      00000000 
 2180      00000000 
 2180      00000000 
 2180      00000000 
 2181              		.global	huart2
 2182              		.section	.bss.huart2,"aw",%nobits
 2183              		.align	2
 2186              	huart2:
 2187 0000 00000000 		.space	68
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s 			page 66


 2187      00000000 
 2187      00000000 
 2187      00000000 
 2187      00000000 
 2188              		.global	huart1
 2189              		.section	.bss.huart1,"aw",%nobits
 2190              		.align	2
 2193              	huart1:
 2194 0000 00000000 		.space	68
 2194      00000000 
 2194      00000000 
 2194      00000000 
 2194      00000000 
 2195              		.global	hspi3
 2196              		.section	.bss.hspi3,"aw",%nobits
 2197              		.align	2
 2200              	hspi3:
 2201 0000 00000000 		.space	88
 2201      00000000 
 2201      00000000 
 2201      00000000 
 2201      00000000 
 2202              		.global	hi2c2
 2203              		.section	.bss.hi2c2,"aw",%nobits
 2204              		.align	2
 2207              	hi2c2:
 2208 0000 00000000 		.space	84
 2208      00000000 
 2208      00000000 
 2208      00000000 
 2208      00000000 
 2209              		.global	hi2c1
 2210              		.section	.bss.hi2c1,"aw",%nobits
 2211              		.align	2
 2214              	hi2c1:
 2215 0000 00000000 		.space	84
 2215      00000000 
 2215      00000000 
 2215      00000000 
 2215      00000000 
 2216              		.text
 2217              	.Letext0:
 2218              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 2219              		.file 5 "/Users/roryschram/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscod
 2220              		.file 6 "/Users/roryschram/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscod
 2221              		.file 7 "/Users/roryschram/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscod
 2222              		.file 8 "/Users/roryschram/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscod
 2223              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 2224              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 2225              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 2226              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 2227              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 2228              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 2229              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 2230              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 2231              		.file 17 "Core/Inc/bmp280.h"
 2232              		.file 18 "Core/Inc/LoRa.h"
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s 			page 67


 2233              		.file 19 "Core/Inc/fonts.h"
 2234              		.file 20 "Core/Inc/ssd1306.h"
 2235              		.file 21 "/Users/roryschram/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vsco
 2236              		.file 22 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 2237              		.file 23 "/Users/roryschram/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vsco
 2238              		.file 24 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 2239              		.file 25 "/Users/roryschram/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vsco
 2240              		.file 26 "<built-in>"
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s 			page 68


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:21     .text.minmea_rescale:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:26     .text.minmea_rescale:00000000 minmea_rescale
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:97     .text.MX_GPIO_Init:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:102    .text.MX_GPIO_Init:00000000 MX_GPIO_Init
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:326    .text.MX_GPIO_Init:0000011c $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:334    .rodata.HAL_UARTEx_RxEventCallback.str1.4:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:354    .text.HAL_UARTEx_RxEventCallback:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:360    .text.HAL_UARTEx_RxEventCallback:00000000 HAL_UARTEx_RxEventCallback
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:619    .text.HAL_UARTEx_RxEventCallback:000001a8 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:2172   .bss.flag:00000000 flag
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:2146   .bss.transmit_data:00000000 transmit_data
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:2179   .bss.gps_raw:00000000 gps_raw
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:2159   .bss.line:00000000 line
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:2022   .bss.size:00000000 size
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:2057   .bss.humidity:00000000 humidity
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:2071   .bss.pressure:00000000 pressure
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:2064   .bss.temperature:00000000 temperature
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:2078   .bss.bmp280:00000000 bmp280
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:2092   .data.P_b:00000000 P_b
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:2085   .bss.altitude:00000000 altitude
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:2050   .bss.sPressure:00000000 sPressure
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:2043   .bss.sTemperature:00000000 sTemperature
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:2036   .bss.sHumidity:00000000 sHumidity
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:2186   .bss.huart2:00000000 huart2
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:2029   .bss.sAltitude:00000000 sAltitude
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:649    .rodata.HAL_GPIO_EXTI_Callback.str1.4:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:665    .text.HAL_GPIO_EXTI_Callback:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:671    .text.HAL_GPIO_EXTI_Callback:00000000 HAL_GPIO_EXTI_Callback
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:990    .text.HAL_GPIO_EXTI_Callback:000001dc $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:2119   .bss.currentTicks:00000000 currentTicks
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:2126   .bss.preTicks:00000000 preTicks
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:2098   .bss.bModeChanged:00000000 bModeChanged
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:2112   .data.iMode:00000000 iMode
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:2105   .bss.sMode:00000000 sMode
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:2207   .bss.hi2c2:00000000 hi2c2
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:1008   .text.Error_Handler:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:1014   .text.Error_Handler:00000000 Error_Handler
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:1046   .text.MX_USART1_UART_Init:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:1051   .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:1105   .text.MX_USART1_UART_Init:0000002c $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:2193   .bss.huart1:00000000 huart1
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:1111   .text.MX_USART2_UART_Init:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:1116   .text.MX_USART2_UART_Init:00000000 MX_USART2_UART_Init
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:1170   .text.MX_USART2_UART_Init:0000002c $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:1176   .text.MX_I2C1_Init:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:1181   .text.MX_I2C1_Init:00000000 MX_I2C1_Init
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:1238   .text.MX_I2C1_Init:0000002c $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:2214   .bss.hi2c1:00000000 hi2c1
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:1245   .text.MX_SPI3_Init:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:1250   .text.MX_SPI3_Init:00000000 MX_SPI3_Init
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:1317   .text.MX_SPI3_Init:00000038 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:2200   .bss.hspi3:00000000 hspi3
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:1323   .text.MX_I2C2_Init:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:1328   .text.MX_I2C2_Init:00000000 MX_I2C2_Init
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:1385   .text.MX_I2C2_Init:0000002c $d
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s 			page 69


/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:1392   .text.SystemClock_Config:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:1398   .text.SystemClock_Config:00000000 SystemClock_Config
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:1522   .text.SystemClock_Config:00000080 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:1528   .rodata.main.str1.4:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:1548   .text.main:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:1554   .text.main:00000000 main
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:1979   .text.main:00000260 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:2015   .bss.Data:00000000 Data
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:2139   .bss.myLoRa:00000000 myLoRa
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:2132   .data.isLoraReady:00000000 isLoraReady
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:2012   .bss.Data:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:2019   .bss.size:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:2026   .bss.sAltitude:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:2033   .bss.sHumidity:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:2040   .bss.sTemperature:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:2047   .bss.sPressure:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:2054   .bss.humidity:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:2061   .bss.temperature:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:2068   .bss.pressure:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:2075   .bss.bmp280:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:2082   .bss.altitude:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:2089   .data.P_b:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:2099   .bss.bModeChanged:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:2102   .bss.sMode:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:2109   .data.iMode:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:2116   .bss.currentTicks:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:2123   .bss.preTicks:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:2136   .bss.myLoRa:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:2143   .bss.transmit_data:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:2152   .bss.bme280p:00000000 bme280p
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:2153   .bss.bme280p:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:2156   .bss.line:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:2166   .bss.line_out:00000000 line_out
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:2163   .bss.line_out:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:2173   .bss.flag:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:2176   .bss.gps_raw:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:2183   .bss.huart2:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:2190   .bss.huart1:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:2197   .bss.hspi3:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:2204   .bss.hi2c2:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s:2211   .bss.hi2c1:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
__aeabi_f2d
__aeabi_dsub
__aeabi_dmul
__aeabi_d2f
memset
strtok
strcpy
minmea_parse_rmc
strlen
sprintf
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccFoB5Fr.s 			page 70


bmp280_read_float
pow
gcvt
HAL_UART_Transmit
HAL_GetTick
ssd1306_SetCursor
ssd1306_WriteString
ssd1306_UpdateScreen
Font_16x26
HAL_UART_Init
HAL_I2C_Init
HAL_SPI_Init
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
bmp280_init_default_params
bmp280_init
HAL_Delay
newLoRa
LoRa_init
snprintf
ssd1306_Init
LoRa_transmit
HAL_UARTEx_ReceiveToIdle_IT
