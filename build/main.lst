ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.minmea_rescale,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	minmea_rescale:
  27              	.LVL0:
  28              	.LFB134:
  29              		.file 2 "Core/Inc/minmea.h"
   1:Core/Inc/minmea.h **** /*
   2:Core/Inc/minmea.h ****  * Copyright Â© 2014 Kosma Moczek <kosma@cloudyourcar.com>
   3:Core/Inc/minmea.h ****  * This program is free software. It comes without any warranty, to the extent
   4:Core/Inc/minmea.h ****  * permitted by applicable law. You can redistribute it and/or modify it under
   5:Core/Inc/minmea.h ****  * the terms of the Do What The Fuck You Want To Public License, Version 2, as
   6:Core/Inc/minmea.h ****  * published by Sam Hocevar. See the COPYING file for more details.
   7:Core/Inc/minmea.h ****  */
   8:Core/Inc/minmea.h **** 
   9:Core/Inc/minmea.h **** #ifndef MINMEA_H
  10:Core/Inc/minmea.h **** #define MINMEA_H
  11:Core/Inc/minmea.h **** 
  12:Core/Inc/minmea.h **** #ifdef __cplusplus
  13:Core/Inc/minmea.h **** extern "C" {
  14:Core/Inc/minmea.h **** #endif
  15:Core/Inc/minmea.h **** 
  16:Core/Inc/minmea.h **** #include <ctype.h>
  17:Core/Inc/minmea.h **** #include <stdint.h>
  18:Core/Inc/minmea.h **** #include <stdbool.h>
  19:Core/Inc/minmea.h **** #include <time.h>
  20:Core/Inc/minmea.h **** #include <math.h>
  21:Core/Inc/minmea.h **** #ifdef MINMEA_INCLUDE_COMPAT
  22:Core/Inc/minmea.h **** #include <minmea_compat.h>
  23:Core/Inc/minmea.h **** #endif
  24:Core/Inc/minmea.h **** 
  25:Core/Inc/minmea.h **** #ifndef MINMEA_MAX_SENTENCE_LENGTH
  26:Core/Inc/minmea.h **** #define MINMEA_MAX_SENTENCE_LENGTH 80
  27:Core/Inc/minmea.h **** #endif
  28:Core/Inc/minmea.h **** 
  29:Core/Inc/minmea.h **** enum minmea_sentence_id {
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s 			page 2


  30:Core/Inc/minmea.h ****     MINMEA_INVALID = -1,
  31:Core/Inc/minmea.h ****     MINMEA_UNKNOWN = 0,
  32:Core/Inc/minmea.h ****     MINMEA_SENTENCE_GBS,
  33:Core/Inc/minmea.h ****     MINMEA_SENTENCE_GGA,
  34:Core/Inc/minmea.h ****     MINMEA_SENTENCE_GLL,
  35:Core/Inc/minmea.h ****     MINMEA_SENTENCE_GSA,
  36:Core/Inc/minmea.h ****     MINMEA_SENTENCE_GST,
  37:Core/Inc/minmea.h ****     MINMEA_SENTENCE_GSV,
  38:Core/Inc/minmea.h ****     MINMEA_SENTENCE_RMC,
  39:Core/Inc/minmea.h ****     MINMEA_SENTENCE_VTG,
  40:Core/Inc/minmea.h ****     MINMEA_SENTENCE_ZDA,
  41:Core/Inc/minmea.h **** };
  42:Core/Inc/minmea.h **** 
  43:Core/Inc/minmea.h **** struct minmea_float {
  44:Core/Inc/minmea.h ****     int_least32_t value;
  45:Core/Inc/minmea.h ****     int_least32_t scale;
  46:Core/Inc/minmea.h **** };
  47:Core/Inc/minmea.h **** 
  48:Core/Inc/minmea.h **** struct minmea_date {
  49:Core/Inc/minmea.h ****     int day;
  50:Core/Inc/minmea.h ****     int month;
  51:Core/Inc/minmea.h ****     int year;
  52:Core/Inc/minmea.h **** };
  53:Core/Inc/minmea.h **** 
  54:Core/Inc/minmea.h **** struct minmea_time {
  55:Core/Inc/minmea.h ****     int hours;
  56:Core/Inc/minmea.h ****     int minutes;
  57:Core/Inc/minmea.h ****     int seconds;
  58:Core/Inc/minmea.h ****     int microseconds;
  59:Core/Inc/minmea.h **** };
  60:Core/Inc/minmea.h **** 
  61:Core/Inc/minmea.h **** struct minmea_sentence_gbs {
  62:Core/Inc/minmea.h ****     struct minmea_time time;
  63:Core/Inc/minmea.h ****     struct minmea_float err_latitude;
  64:Core/Inc/minmea.h ****     struct minmea_float err_longitude;
  65:Core/Inc/minmea.h ****     struct minmea_float err_altitude;
  66:Core/Inc/minmea.h ****     int svid;
  67:Core/Inc/minmea.h ****     struct minmea_float prob;
  68:Core/Inc/minmea.h ****     struct minmea_float bias;
  69:Core/Inc/minmea.h ****     struct minmea_float stddev;
  70:Core/Inc/minmea.h **** };
  71:Core/Inc/minmea.h **** 
  72:Core/Inc/minmea.h **** struct minmea_sentence_rmc {
  73:Core/Inc/minmea.h ****     struct minmea_time time;
  74:Core/Inc/minmea.h ****     bool valid;
  75:Core/Inc/minmea.h ****     struct minmea_float latitude;
  76:Core/Inc/minmea.h ****     struct minmea_float longitude;
  77:Core/Inc/minmea.h ****     struct minmea_float speed;
  78:Core/Inc/minmea.h ****     struct minmea_float course;
  79:Core/Inc/minmea.h ****     struct minmea_date date;
  80:Core/Inc/minmea.h ****     struct minmea_float variation;
  81:Core/Inc/minmea.h **** };
  82:Core/Inc/minmea.h **** 
  83:Core/Inc/minmea.h **** struct minmea_sentence_gga {
  84:Core/Inc/minmea.h ****     struct minmea_time time;
  85:Core/Inc/minmea.h ****     struct minmea_float latitude;
  86:Core/Inc/minmea.h ****     struct minmea_float longitude;
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s 			page 3


  87:Core/Inc/minmea.h ****     int fix_quality;
  88:Core/Inc/minmea.h ****     int satellites_tracked;
  89:Core/Inc/minmea.h ****     struct minmea_float hdop;
  90:Core/Inc/minmea.h ****     struct minmea_float altitude; char altitude_units;
  91:Core/Inc/minmea.h ****     struct minmea_float height; char height_units;
  92:Core/Inc/minmea.h ****     struct minmea_float dgps_age;
  93:Core/Inc/minmea.h **** };
  94:Core/Inc/minmea.h **** 
  95:Core/Inc/minmea.h **** enum minmea_gll_status {
  96:Core/Inc/minmea.h ****     MINMEA_GLL_STATUS_DATA_VALID = 'A',
  97:Core/Inc/minmea.h ****     MINMEA_GLL_STATUS_DATA_NOT_VALID = 'V',
  98:Core/Inc/minmea.h **** };
  99:Core/Inc/minmea.h **** 
 100:Core/Inc/minmea.h **** // FAA mode added to some fields in NMEA 2.3.
 101:Core/Inc/minmea.h **** enum minmea_faa_mode {
 102:Core/Inc/minmea.h ****     MINMEA_FAA_MODE_AUTONOMOUS = 'A',
 103:Core/Inc/minmea.h ****     MINMEA_FAA_MODE_DIFFERENTIAL = 'D',
 104:Core/Inc/minmea.h ****     MINMEA_FAA_MODE_ESTIMATED = 'E',
 105:Core/Inc/minmea.h ****     MINMEA_FAA_MODE_MANUAL = 'M',
 106:Core/Inc/minmea.h ****     MINMEA_FAA_MODE_SIMULATED = 'S',
 107:Core/Inc/minmea.h ****     MINMEA_FAA_MODE_NOT_VALID = 'N',
 108:Core/Inc/minmea.h ****     MINMEA_FAA_MODE_PRECISE = 'P',
 109:Core/Inc/minmea.h **** };
 110:Core/Inc/minmea.h **** 
 111:Core/Inc/minmea.h **** struct minmea_sentence_gll {
 112:Core/Inc/minmea.h ****     struct minmea_float latitude;
 113:Core/Inc/minmea.h ****     struct minmea_float longitude;
 114:Core/Inc/minmea.h ****     struct minmea_time time;
 115:Core/Inc/minmea.h ****     char status;
 116:Core/Inc/minmea.h ****     char mode;
 117:Core/Inc/minmea.h **** };
 118:Core/Inc/minmea.h **** 
 119:Core/Inc/minmea.h **** struct minmea_sentence_gst {
 120:Core/Inc/minmea.h ****     struct minmea_time time;
 121:Core/Inc/minmea.h ****     struct minmea_float rms_deviation;
 122:Core/Inc/minmea.h ****     struct minmea_float semi_major_deviation;
 123:Core/Inc/minmea.h ****     struct minmea_float semi_minor_deviation;
 124:Core/Inc/minmea.h ****     struct minmea_float semi_major_orientation;
 125:Core/Inc/minmea.h ****     struct minmea_float latitude_error_deviation;
 126:Core/Inc/minmea.h ****     struct minmea_float longitude_error_deviation;
 127:Core/Inc/minmea.h ****     struct minmea_float altitude_error_deviation;
 128:Core/Inc/minmea.h **** };
 129:Core/Inc/minmea.h **** 
 130:Core/Inc/minmea.h **** enum minmea_gsa_mode {
 131:Core/Inc/minmea.h ****     MINMEA_GPGSA_MODE_AUTO = 'A',
 132:Core/Inc/minmea.h ****     MINMEA_GPGSA_MODE_FORCED = 'M',
 133:Core/Inc/minmea.h **** };
 134:Core/Inc/minmea.h **** 
 135:Core/Inc/minmea.h **** enum minmea_gsa_fix_type {
 136:Core/Inc/minmea.h ****     MINMEA_GPGSA_FIX_NONE = 1,
 137:Core/Inc/minmea.h ****     MINMEA_GPGSA_FIX_2D = 2,
 138:Core/Inc/minmea.h ****     MINMEA_GPGSA_FIX_3D = 3,
 139:Core/Inc/minmea.h **** };
 140:Core/Inc/minmea.h **** 
 141:Core/Inc/minmea.h **** struct minmea_sentence_gsa {
 142:Core/Inc/minmea.h ****     char mode;
 143:Core/Inc/minmea.h ****     int fix_type;
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s 			page 4


 144:Core/Inc/minmea.h ****     int sats[12];
 145:Core/Inc/minmea.h ****     struct minmea_float pdop;
 146:Core/Inc/minmea.h ****     struct minmea_float hdop;
 147:Core/Inc/minmea.h ****     struct minmea_float vdop;
 148:Core/Inc/minmea.h **** };
 149:Core/Inc/minmea.h **** 
 150:Core/Inc/minmea.h **** struct minmea_sat_info {
 151:Core/Inc/minmea.h ****     int nr;
 152:Core/Inc/minmea.h ****     int elevation;
 153:Core/Inc/minmea.h ****     int azimuth;
 154:Core/Inc/minmea.h ****     int snr;
 155:Core/Inc/minmea.h **** };
 156:Core/Inc/minmea.h **** 
 157:Core/Inc/minmea.h **** struct minmea_sentence_gsv {
 158:Core/Inc/minmea.h ****     int total_msgs;
 159:Core/Inc/minmea.h ****     int msg_nr;
 160:Core/Inc/minmea.h ****     int total_sats;
 161:Core/Inc/minmea.h ****     struct minmea_sat_info sats[4];
 162:Core/Inc/minmea.h **** };
 163:Core/Inc/minmea.h **** 
 164:Core/Inc/minmea.h **** struct minmea_sentence_vtg {
 165:Core/Inc/minmea.h ****     struct minmea_float true_track_degrees;
 166:Core/Inc/minmea.h ****     struct minmea_float magnetic_track_degrees;
 167:Core/Inc/minmea.h ****     struct minmea_float speed_knots;
 168:Core/Inc/minmea.h ****     struct minmea_float speed_kph;
 169:Core/Inc/minmea.h ****     enum minmea_faa_mode faa_mode;
 170:Core/Inc/minmea.h **** };
 171:Core/Inc/minmea.h **** 
 172:Core/Inc/minmea.h **** struct minmea_sentence_zda {
 173:Core/Inc/minmea.h ****     struct minmea_time time;
 174:Core/Inc/minmea.h ****     struct minmea_date date;
 175:Core/Inc/minmea.h ****     int hour_offset;
 176:Core/Inc/minmea.h ****     int minute_offset;
 177:Core/Inc/minmea.h **** };
 178:Core/Inc/minmea.h **** 
 179:Core/Inc/minmea.h **** /**
 180:Core/Inc/minmea.h ****  * Calculate raw sentence checksum. Does not check sentence integrity.
 181:Core/Inc/minmea.h ****  */
 182:Core/Inc/minmea.h **** uint8_t minmea_checksum(const char *sentence);
 183:Core/Inc/minmea.h **** 
 184:Core/Inc/minmea.h **** /**
 185:Core/Inc/minmea.h ****  * Check sentence validity and checksum. Returns true for valid sentences.
 186:Core/Inc/minmea.h ****  */
 187:Core/Inc/minmea.h **** bool minmea_check(const char *sentence, bool strict);
 188:Core/Inc/minmea.h **** 
 189:Core/Inc/minmea.h **** /**
 190:Core/Inc/minmea.h ****  * Determine talker identifier.
 191:Core/Inc/minmea.h ****  */
 192:Core/Inc/minmea.h **** bool minmea_talker_id(char talker[3], const char *sentence);
 193:Core/Inc/minmea.h **** 
 194:Core/Inc/minmea.h **** /**
 195:Core/Inc/minmea.h ****  * Determine sentence identifier.
 196:Core/Inc/minmea.h ****  */
 197:Core/Inc/minmea.h **** enum minmea_sentence_id minmea_sentence_id(const char *sentence, bool strict);
 198:Core/Inc/minmea.h **** 
 199:Core/Inc/minmea.h **** /**
 200:Core/Inc/minmea.h ****  * Scanf-like processor for NMEA sentences. Supports the following formats:
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s 			page 5


 201:Core/Inc/minmea.h ****  * c - single character (char *)
 202:Core/Inc/minmea.h ****  * d - direction, returned as 1/-1, default 0 (int *)
 203:Core/Inc/minmea.h ****  * f - fractional, returned as value + scale (struct minmea_float *)
 204:Core/Inc/minmea.h ****  * i - decimal, default zero (int *)
 205:Core/Inc/minmea.h ****  * s - string (char *)
 206:Core/Inc/minmea.h ****  * t - talker identifier and type (char *)
 207:Core/Inc/minmea.h ****  * D - date (struct minmea_date *)
 208:Core/Inc/minmea.h ****  * T - time stamp (struct minmea_time *)
 209:Core/Inc/minmea.h ****  * _ - ignore this field
 210:Core/Inc/minmea.h ****  * ; - following fields are optional
 211:Core/Inc/minmea.h ****  * Returns true on success. See library source code for details.
 212:Core/Inc/minmea.h ****  */
 213:Core/Inc/minmea.h **** bool minmea_scan(const char *sentence, const char *format, ...);
 214:Core/Inc/minmea.h **** 
 215:Core/Inc/minmea.h **** /*
 216:Core/Inc/minmea.h ****  * Parse a specific type of sentence. Return true on success.
 217:Core/Inc/minmea.h ****  */
 218:Core/Inc/minmea.h **** bool minmea_parse_gbs(struct minmea_sentence_gbs *frame, const char *sentence);
 219:Core/Inc/minmea.h **** bool minmea_parse_rmc(struct minmea_sentence_rmc *frame, const char *sentence);
 220:Core/Inc/minmea.h **** bool minmea_parse_gga(struct minmea_sentence_gga *frame, const char *sentence);
 221:Core/Inc/minmea.h **** bool minmea_parse_gsa(struct minmea_sentence_gsa *frame, const char *sentence);
 222:Core/Inc/minmea.h **** bool minmea_parse_gll(struct minmea_sentence_gll *frame, const char *sentence);
 223:Core/Inc/minmea.h **** bool minmea_parse_gst(struct minmea_sentence_gst *frame, const char *sentence);
 224:Core/Inc/minmea.h **** bool minmea_parse_gsv(struct minmea_sentence_gsv *frame, const char *sentence);
 225:Core/Inc/minmea.h **** bool minmea_parse_vtg(struct minmea_sentence_vtg *frame, const char *sentence);
 226:Core/Inc/minmea.h **** bool minmea_parse_zda(struct minmea_sentence_zda *frame, const char *sentence);
 227:Core/Inc/minmea.h **** 
 228:Core/Inc/minmea.h **** /**
 229:Core/Inc/minmea.h ****  * Convert GPS UTC date/time representation to a UNIX calendar time.
 230:Core/Inc/minmea.h ****  */
 231:Core/Inc/minmea.h **** int minmea_getdatetime(struct tm *tm, const struct minmea_date *date, const struct minmea_time *tim
 232:Core/Inc/minmea.h **** 
 233:Core/Inc/minmea.h **** /**
 234:Core/Inc/minmea.h ****  * Convert GPS UTC date/time representation to a UNIX timestamp.
 235:Core/Inc/minmea.h ****  */
 236:Core/Inc/minmea.h **** int minmea_gettime(struct timespec *ts, const struct minmea_date *date, const struct minmea_time *t
 237:Core/Inc/minmea.h **** 
 238:Core/Inc/minmea.h **** /**
 239:Core/Inc/minmea.h ****  * Rescale a fixed-point value to a different scale. Rounds towards zero.
 240:Core/Inc/minmea.h ****  */
 241:Core/Inc/minmea.h **** static inline int_least32_t minmea_rescale(const struct minmea_float *f, int_least32_t new_scale)
 242:Core/Inc/minmea.h **** {
  30              		.loc 2 242 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              		.loc 2 242 1 is_stmt 0 view .LVU1
  36 0000 0346     		mov	r3, r0
 243:Core/Inc/minmea.h ****     if (f->scale == 0)
  37              		.loc 2 243 5 is_stmt 1 view .LVU2
  38              		.loc 2 243 10 is_stmt 0 view .LVU3
  39 0002 4068     		ldr	r0, [r0, #4]
  40              	.LVL1:
  41              		.loc 2 243 8 view .LVU4
  42 0004 F0B1     		cbz	r0, .L1
 244:Core/Inc/minmea.h ****         return 0;
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s 			page 6


 245:Core/Inc/minmea.h ****     if (f->scale == new_scale)
  43              		.loc 2 245 5 is_stmt 1 view .LVU5
  44              		.loc 2 245 8 is_stmt 0 view .LVU6
  45 0006 8842     		cmp	r0, r1
  46 0008 15D0     		beq	.L5
 246:Core/Inc/minmea.h ****         return f->value;
 247:Core/Inc/minmea.h ****     if (f->scale > new_scale)
  47              		.loc 2 247 5 is_stmt 1 view .LVU7
  48              		.loc 2 247 8 is_stmt 0 view .LVU8
  49 000a 8842     		cmp	r0, r1
  50 000c 15DD     		ble	.L4
 248:Core/Inc/minmea.h ****         return (f->value + ((f->value > 0) - (f->value < 0)) * f->scale/new_scale/2) / (f->scale/ne
  51              		.loc 2 248 9 is_stmt 1 view .LVU9
  52              		.loc 2 248 18 is_stmt 0 view .LVU10
  53 000e 1A68     		ldr	r2, [r3]
  54              		.loc 2 248 56 view .LVU11
  55 0010 D30F     		lsrs	r3, r2, #31
  56              	.LVL2:
  57              		.loc 2 248 44 view .LVU12
  58 0012 002A     		cmp	r2, #0
  59 0014 D4BF     		ite	le
  60 0016 5B42     		rsble	r3, r3, #0
  61 0018 C3F10103 		rsbgt	r3, r3, #1
  62              		.loc 2 248 62 view .LVU13
  63 001c 00FB03F3 		mul	r3, r0, r3
  64              		.loc 2 248 72 view .LVU14
  65 0020 93FBF1F3 		sdiv	r3, r3, r1
  66              		.loc 2 248 82 view .LVU15
  67 0024 03EBD373 		add	r3, r3, r3, lsr #31
  68              		.loc 2 248 26 view .LVU16
  69 0028 02EB6302 		add	r2, r2, r3, asr #1
  70              		.loc 2 248 97 view .LVU17
  71 002c 90FBF1F0 		sdiv	r0, r0, r1
  72              		.loc 2 248 86 view .LVU18
  73 0030 92FBF0F0 		sdiv	r0, r2, r0
  74 0034 7047     		bx	lr
  75              	.LVL3:
  76              	.L5:
 246:Core/Inc/minmea.h ****         return f->value;
  77              		.loc 2 246 9 is_stmt 1 view .LVU19
 246:Core/Inc/minmea.h ****         return f->value;
  78              		.loc 2 246 17 is_stmt 0 view .LVU20
  79 0036 1868     		ldr	r0, [r3]
  80 0038 7047     		bx	lr
  81              	.L4:
 249:Core/Inc/minmea.h ****     else
 250:Core/Inc/minmea.h ****         return f->value * (new_scale/f->scale);
  82              		.loc 2 250 9 is_stmt 1 view .LVU21
  83              		.loc 2 250 17 is_stmt 0 view .LVU22
  84 003a 1B68     		ldr	r3, [r3]
  85              	.LVL4:
  86              		.loc 2 250 37 view .LVU23
  87 003c 91FBF0F0 		sdiv	r0, r1, r0
  88              		.loc 2 250 25 view .LVU24
  89 0040 03FB00F0 		mul	r0, r3, r0
  90              	.L1:
 251:Core/Inc/minmea.h **** }
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s 			page 7


  91              		.loc 2 251 1 view .LVU25
  92 0044 7047     		bx	lr
  93              		.cfi_endproc
  94              	.LFE134:
  96              		.section	.text.MX_GPIO_Init,"ax",%progbits
  97              		.align	1
  98              		.syntax unified
  99              		.thumb
 100              		.thumb_func
 102              	MX_GPIO_Init:
 103              	.LFB144:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include <stdio.h>
  25:Core/Src/main.c **** #include "minmea.h"
  26:Core/Src/main.c **** #include <stdlib.h>
  27:Core/Src/main.c **** #include <string.h>
  28:Core/Src/main.c **** #include <stdint.h>
  29:Core/Src/main.c **** #include "bmp280.h"
  30:Core/Src/main.c **** #include <float.h>
  31:Core/Src/main.c **** #include <math.h>
  32:Core/Src/main.c **** #include <LoRa.h>
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* USER CODE END Includes */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* USER CODE END PTD */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  42:Core/Src/main.c **** /* USER CODE BEGIN PD */
  43:Core/Src/main.c **** #define INDENT_SPACES "  "
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE END PD */
  46:Core/Src/main.c **** 
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s 			page 8


  47:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  48:Core/Src/main.c **** /* USER CODE BEGIN PM */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* USER CODE END PM */
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  53:Core/Src/main.c **** I2C_HandleTypeDef hi2c1;
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** SPI_HandleTypeDef hspi3;
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** UART_HandleTypeDef huart1;
  58:Core/Src/main.c **** UART_HandleTypeDef huart2;
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* USER CODE BEGIN PV */
  61:Core/Src/main.c **** uint8_t gps_raw[512] = {"\0"};
  62:Core/Src/main.c **** uint8_t flag = 0;
  63:Core/Src/main.c **** char line_out[512] = {"\0"};
  64:Core/Src/main.c **** char line[512] = {"\0"};
  65:Core/Src/main.c **** bool bme280p;
  66:Core/Src/main.c **** uint8_t transmit_data[256] = {"\0"};
  67:Core/Src/main.c **** LoRa myLoRa;
  68:Core/Src/main.c **** bool isLoraReady = true;
  69:Core/Src/main.c **** int preTicks = 0;
  70:Core/Src/main.c **** int currentTicks = 0;
  71:Core/Src/main.c **** 
  72:Core/Src/main.c **** //Variables to work out altitude
  73:Core/Src/main.c **** 
  74:Core/Src/main.c **** //Pressure at sea level
  75:Core/Src/main.c **** float P_b = 101325;
  76:Core/Src/main.c **** 
  77:Core/Src/main.c **** //Height that we are calculating
  78:Core/Src/main.c **** float altitude = 0;
  79:Core/Src/main.c **** 
  80:Core/Src/main.c **** 
  81:Core/Src/main.c **** BMP280_HandleTypedef bmp280;
  82:Core/Src/main.c **** 
  83:Core/Src/main.c **** float pressure, temperature, humidity;
  84:Core/Src/main.c **** char sPressure[128] = {"\0"};
  85:Core/Src/main.c **** char sTemperature[128] = {"\0"};
  86:Core/Src/main.c **** char sHumidity[128] = {"\0"};
  87:Core/Src/main.c **** char sAltitude[128] = {"\0"};
  88:Core/Src/main.c **** 
  89:Core/Src/main.c **** uint16_t size;
  90:Core/Src/main.c **** uint8_t Data[256] = {"\0"};
  91:Core/Src/main.c **** 
  92:Core/Src/main.c **** 
  93:Core/Src/main.c **** /* USER CODE END PV */
  94:Core/Src/main.c **** 
  95:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  96:Core/Src/main.c **** void SystemClock_Config(void);
  97:Core/Src/main.c **** static void MX_GPIO_Init(void);
  98:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
  99:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
 100:Core/Src/main.c **** static void MX_I2C1_Init(void);
 101:Core/Src/main.c **** static void MX_SPI3_Init(void);
 102:Core/Src/main.c **** /* USER CODE BEGIN PFP */
 103:Core/Src/main.c **** 
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s 			page 9


 104:Core/Src/main.c **** 
 105:Core/Src/main.c **** /* USER CODE END PFP */
 106:Core/Src/main.c **** 
 107:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 108:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 109:Core/Src/main.c **** 
 110:Core/Src/main.c **** /* USER CODE END 0 */
 111:Core/Src/main.c **** 
 112:Core/Src/main.c **** /**
 113:Core/Src/main.c ****   * @brief  The application entry point.
 114:Core/Src/main.c ****   * @retval int
 115:Core/Src/main.c ****   */
 116:Core/Src/main.c **** int main(void)
 117:Core/Src/main.c **** {
 118:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 119:Core/Src/main.c **** 
 120:Core/Src/main.c ****   /* USER CODE END 1 */
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 125:Core/Src/main.c ****   HAL_Init();
 126:Core/Src/main.c **** 
 127:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 128:Core/Src/main.c **** 
 129:Core/Src/main.c ****   /* USER CODE END Init */
 130:Core/Src/main.c **** 
 131:Core/Src/main.c ****   /* Configure the system clock */
 132:Core/Src/main.c ****   SystemClock_Config();
 133:Core/Src/main.c **** 
 134:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 135:Core/Src/main.c **** 
 136:Core/Src/main.c ****   /* USER CODE END SysInit */
 137:Core/Src/main.c **** 
 138:Core/Src/main.c ****   /* Initialize all configured peripherals */
 139:Core/Src/main.c ****   MX_GPIO_Init();
 140:Core/Src/main.c ****   MX_USART1_UART_Init();
 141:Core/Src/main.c ****   MX_USART2_UART_Init();
 142:Core/Src/main.c ****   MX_I2C1_Init();
 143:Core/Src/main.c ****   MX_SPI3_Init();
 144:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 145:Core/Src/main.c **** 
 146:Core/Src/main.c ****   bmp280_init_default_params(&bmp280.params);
 147:Core/Src/main.c **** 	bmp280.addr = 0x77;
 148:Core/Src/main.c **** 	bmp280.i2c = &hi2c1;
 149:Core/Src/main.c **** 
 150:Core/Src/main.c **** 	while (!bmp280_init(&bmp280, &bmp280.params)) {
 151:Core/Src/main.c **** 		size = sprintf((char *)Data, "BMP280 initialization failed\n");
 152:Core/Src/main.c **** 		HAL_UART_Transmit(&huart2, Data, size, 1000);
 153:Core/Src/main.c **** 		HAL_Delay(2000);
 154:Core/Src/main.c **** 	}
 155:Core/Src/main.c **** 	bool bme280p = bmp280.id == BME280_CHIP_ID;
 156:Core/Src/main.c **** 	size = sprintf((char *)Data, "\nBMP280: found %s\n", bme280p ? "BME280" : "BMP280");
 157:Core/Src/main.c **** 	HAL_UART_Transmit(&huart2, Data, size, 1000);
 158:Core/Src/main.c **** 
 159:Core/Src/main.c ****   myLoRa = newLoRa();
 160:Core/Src/main.c ****   myLoRa.CS_port         = GPIOA;
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s 			page 10


 161:Core/Src/main.c ****   myLoRa.CS_pin          = GPIO_PIN_4;
 162:Core/Src/main.c ****   myLoRa.reset_port      = GPIOB;
 163:Core/Src/main.c ****   myLoRa.reset_pin       = GPIO_PIN_8;
 164:Core/Src/main.c ****   myLoRa.DIO0_port       = GPIOB;
 165:Core/Src/main.c ****   myLoRa.DIO0_pin        = GPIO_PIN_9;
 166:Core/Src/main.c ****   myLoRa.hSPIx           = &hspi3;
 167:Core/Src/main.c **** 
 168:Core/Src/main.c ****   uint16_t ret = LoRa_init(&myLoRa);
 169:Core/Src/main.c ****   uint8_t buff[128] = {"\0"};
 170:Core/Src/main.c **** 
 171:Core/Src/main.c **** 
 172:Core/Src/main.c **** 
 173:Core/Src/main.c **** if (ret==LORA_OK){
 174:Core/Src/main.c ****   snprintf(buff,sizeof(buff),"LoRa is running... :) \n\r");
 175:Core/Src/main.c ****   LoRa_transmit(&myLoRa, (uint8_t*)buff, 120, 100);
 176:Core/Src/main.c ****   HAL_UART_Transmit(&huart2, buff, sizeof(buff)/sizeof(buff[0]), 1000);
 177:Core/Src/main.c **** }
 178:Core/Src/main.c **** else{
 179:Core/Src/main.c ****   snprintf(buff,sizeof(buff),"\n\r LoRa failed :( \n\r Error code: %d \n\r", ret);
 180:Core/Src/main.c ****   HAL_UART_Transmit(&huart2, buff, sizeof(buff)/sizeof(buff[0]), 1000);
 181:Core/Src/main.c **** }
 182:Core/Src/main.c **** 
 183:Core/Src/main.c **** myLoRa.frequency             = 433;             // default = 433 MHz
 184:Core/Src/main.c **** myLoRa.spredingFactor        = SF_7;            // default = SF_7
 185:Core/Src/main.c **** myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 186:Core/Src/main.c **** myLoRa.crcRate               = CR_4_8;          // default = CR_4_5
 187:Core/Src/main.c **** myLoRa.power                 = POWER_20db;      // default = 20db
 188:Core/Src/main.c **** myLoRa.overCurrentProtection = 100;             // default = 100 mA
 189:Core/Src/main.c **** myLoRa.preamble              = 8;              // default = 8;
 190:Core/Src/main.c **** 
 191:Core/Src/main.c **** 
 192:Core/Src/main.c ****   /* USER CODE END 2 */
 193:Core/Src/main.c **** 
 194:Core/Src/main.c ****   /* Infinite loop */
 195:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 196:Core/Src/main.c ****   while (1)
 197:Core/Src/main.c ****   {
 198:Core/Src/main.c ****     //HAL_UARTEx_ReceiveToIdle_DMA(&huart1,(uint8_t*)gps_raw,512);
 199:Core/Src/main.c ****     if (isLoraReady){
 200:Core/Src/main.c ****       HAL_UARTEx_ReceiveToIdle_IT(&huart1,(uint8_t*)gps_raw,512);
 201:Core/Src/main.c ****       if (flag == 1) {
 202:Core/Src/main.c ****       LoRa_transmit(&myLoRa, (uint8_t*)transmit_data, 113, 100);
 203:Core/Src/main.c ****       flag = 0;
 204:Core/Src/main.c ****       memset(transmit_data, '\0', sizeof(transmit_data));
 205:Core/Src/main.c ****     }
 206:Core/Src/main.c ****     }
 207:Core/Src/main.c ****     
 208:Core/Src/main.c ****     
 209:Core/Src/main.c ****     
 210:Core/Src/main.c ****     /* USER CODE END WHILE */
 211:Core/Src/main.c **** 
 212:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 213:Core/Src/main.c ****     //HAL_UART_Transmit_IT(&huart2, (uint8_t *)Gpsdata, sizeof(Gpsdata));
 214:Core/Src/main.c ****     //HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13);
 215:Core/Src/main.c **** 
 216:Core/Src/main.c ****     //HAL_Delay(1000); 
 217:Core/Src/main.c **** 
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s 			page 11


 218:Core/Src/main.c ****   }
 219:Core/Src/main.c ****   /* USER CODE END 3 */
 220:Core/Src/main.c **** }
 221:Core/Src/main.c **** 
 222:Core/Src/main.c **** /**
 223:Core/Src/main.c ****   * @brief System Clock Configuration
 224:Core/Src/main.c ****   * @retval None
 225:Core/Src/main.c ****   */
 226:Core/Src/main.c **** void SystemClock_Config(void)
 227:Core/Src/main.c **** {
 228:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 229:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 230:Core/Src/main.c **** 
 231:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 232:Core/Src/main.c ****   */
 233:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 234:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 235:Core/Src/main.c **** 
 236:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 237:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 238:Core/Src/main.c ****   */
 239:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 240:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 241:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 242:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 243:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 244:Core/Src/main.c ****   {
 245:Core/Src/main.c ****     Error_Handler();
 246:Core/Src/main.c ****   }
 247:Core/Src/main.c **** 
 248:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 249:Core/Src/main.c ****   */
 250:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 251:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 252:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 253:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 254:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 255:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 256:Core/Src/main.c **** 
 257:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 258:Core/Src/main.c ****   {
 259:Core/Src/main.c ****     Error_Handler();
 260:Core/Src/main.c ****   }
 261:Core/Src/main.c **** }
 262:Core/Src/main.c **** 
 263:Core/Src/main.c **** /**
 264:Core/Src/main.c ****   * @brief I2C1 Initialization Function
 265:Core/Src/main.c ****   * @param None
 266:Core/Src/main.c ****   * @retval None
 267:Core/Src/main.c ****   */
 268:Core/Src/main.c **** static void MX_I2C1_Init(void)
 269:Core/Src/main.c **** {
 270:Core/Src/main.c **** 
 271:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 0 */
 272:Core/Src/main.c **** 
 273:Core/Src/main.c ****   /* USER CODE END I2C1_Init 0 */
 274:Core/Src/main.c **** 
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s 			page 12


 275:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 1 */
 276:Core/Src/main.c **** 
 277:Core/Src/main.c ****   /* USER CODE END I2C1_Init 1 */
 278:Core/Src/main.c ****   hi2c1.Instance = I2C1;
 279:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 280:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 281:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 282:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 283:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 284:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 285:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 286:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 287:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 288:Core/Src/main.c ****   {
 289:Core/Src/main.c ****     Error_Handler();
 290:Core/Src/main.c ****   }
 291:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 2 */
 292:Core/Src/main.c **** 
 293:Core/Src/main.c ****   /* USER CODE END I2C1_Init 2 */
 294:Core/Src/main.c **** 
 295:Core/Src/main.c **** }
 296:Core/Src/main.c **** 
 297:Core/Src/main.c **** /**
 298:Core/Src/main.c ****   * @brief SPI3 Initialization Function
 299:Core/Src/main.c ****   * @param None
 300:Core/Src/main.c ****   * @retval None
 301:Core/Src/main.c ****   */
 302:Core/Src/main.c **** static void MX_SPI3_Init(void)
 303:Core/Src/main.c **** {
 304:Core/Src/main.c **** 
 305:Core/Src/main.c ****   /* USER CODE BEGIN SPI3_Init 0 */
 306:Core/Src/main.c **** 
 307:Core/Src/main.c ****   /* USER CODE END SPI3_Init 0 */
 308:Core/Src/main.c **** 
 309:Core/Src/main.c ****   /* USER CODE BEGIN SPI3_Init 1 */
 310:Core/Src/main.c **** 
 311:Core/Src/main.c ****   /* USER CODE END SPI3_Init 1 */
 312:Core/Src/main.c ****   /* SPI3 parameter configuration*/
 313:Core/Src/main.c ****   hspi3.Instance = SPI3;
 314:Core/Src/main.c ****   hspi3.Init.Mode = SPI_MODE_MASTER;
 315:Core/Src/main.c ****   hspi3.Init.Direction = SPI_DIRECTION_2LINES;
 316:Core/Src/main.c ****   hspi3.Init.DataSize = SPI_DATASIZE_8BIT;
 317:Core/Src/main.c ****   hspi3.Init.CLKPolarity = SPI_POLARITY_LOW;
 318:Core/Src/main.c ****   hspi3.Init.CLKPhase = SPI_PHASE_1EDGE;
 319:Core/Src/main.c ****   hspi3.Init.NSS = SPI_NSS_SOFT;
 320:Core/Src/main.c ****   hspi3.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 321:Core/Src/main.c ****   hspi3.Init.FirstBit = SPI_FIRSTBIT_MSB;
 322:Core/Src/main.c ****   hspi3.Init.TIMode = SPI_TIMODE_DISABLE;
 323:Core/Src/main.c ****   hspi3.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 324:Core/Src/main.c ****   hspi3.Init.CRCPolynomial = 10;
 325:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi3) != HAL_OK)
 326:Core/Src/main.c ****   {
 327:Core/Src/main.c ****     Error_Handler();
 328:Core/Src/main.c ****   }
 329:Core/Src/main.c ****   /* USER CODE BEGIN SPI3_Init 2 */
 330:Core/Src/main.c **** 
 331:Core/Src/main.c ****   /* USER CODE END SPI3_Init 2 */
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s 			page 13


 332:Core/Src/main.c **** 
 333:Core/Src/main.c **** }
 334:Core/Src/main.c **** 
 335:Core/Src/main.c **** /**
 336:Core/Src/main.c ****   * @brief USART1 Initialization Function
 337:Core/Src/main.c ****   * @param None
 338:Core/Src/main.c ****   * @retval None
 339:Core/Src/main.c ****   */
 340:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
 341:Core/Src/main.c **** {
 342:Core/Src/main.c **** 
 343:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
 344:Core/Src/main.c **** 
 345:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
 346:Core/Src/main.c **** 
 347:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
 348:Core/Src/main.c **** 
 349:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
 350:Core/Src/main.c ****   huart1.Instance = USART1;
 351:Core/Src/main.c ****   huart1.Init.BaudRate = 9600;
 352:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 353:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 354:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 355:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 356:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 357:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 358:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 359:Core/Src/main.c ****   {
 360:Core/Src/main.c ****     Error_Handler();
 361:Core/Src/main.c ****   }
 362:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
 363:Core/Src/main.c **** 
 364:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
 365:Core/Src/main.c **** 
 366:Core/Src/main.c **** }
 367:Core/Src/main.c **** 
 368:Core/Src/main.c **** /**
 369:Core/Src/main.c ****   * @brief USART2 Initialization Function
 370:Core/Src/main.c ****   * @param None
 371:Core/Src/main.c ****   * @retval None
 372:Core/Src/main.c ****   */
 373:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 374:Core/Src/main.c **** {
 375:Core/Src/main.c **** 
 376:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 377:Core/Src/main.c **** 
 378:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 379:Core/Src/main.c **** 
 380:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 381:Core/Src/main.c **** 
 382:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 383:Core/Src/main.c ****   huart2.Instance = USART2;
 384:Core/Src/main.c ****   huart2.Init.BaudRate = 230400;
 385:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 386:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 387:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 388:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s 			page 14


 389:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 390:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 391:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 392:Core/Src/main.c ****   {
 393:Core/Src/main.c ****     Error_Handler();
 394:Core/Src/main.c ****   }
 395:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 396:Core/Src/main.c **** 
 397:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 398:Core/Src/main.c **** 
 399:Core/Src/main.c **** }
 400:Core/Src/main.c **** 
 401:Core/Src/main.c **** /**
 402:Core/Src/main.c ****   * @brief GPIO Initialization Function
 403:Core/Src/main.c ****   * @param None
 404:Core/Src/main.c ****   * @retval None
 405:Core/Src/main.c ****   */
 406:Core/Src/main.c **** static void MX_GPIO_Init(void)
 407:Core/Src/main.c **** {
 104              		.loc 1 407 1 is_stmt 1 view -0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 32
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 109              		.cfi_def_cfa_offset 28
 110              		.cfi_offset 4, -28
 111              		.cfi_offset 5, -24
 112              		.cfi_offset 6, -20
 113              		.cfi_offset 7, -16
 114              		.cfi_offset 8, -12
 115              		.cfi_offset 9, -8
 116              		.cfi_offset 14, -4
 117 0004 89B0     		sub	sp, sp, #36
 118              		.cfi_def_cfa_offset 64
 408:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 119              		.loc 1 408 3 view .LVU27
 120              		.loc 1 408 20 is_stmt 0 view .LVU28
 121 0006 0024     		movs	r4, #0
 122 0008 0394     		str	r4, [sp, #12]
 123 000a 0494     		str	r4, [sp, #16]
 124 000c 0594     		str	r4, [sp, #20]
 125 000e 0694     		str	r4, [sp, #24]
 126 0010 0794     		str	r4, [sp, #28]
 409:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 410:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 411:Core/Src/main.c **** 
 412:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 413:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 127              		.loc 1 413 3 is_stmt 1 view .LVU29
 128              	.LBB4:
 129              		.loc 1 413 3 view .LVU30
 130 0012 0094     		str	r4, [sp]
 131              		.loc 1 413 3 view .LVU31
 132 0014 414B     		ldr	r3, .L8
 133 0016 1A6B     		ldr	r2, [r3, #48]
 134 0018 42F00402 		orr	r2, r2, #4
 135 001c 1A63     		str	r2, [r3, #48]
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s 			page 15


 136              		.loc 1 413 3 view .LVU32
 137 001e 1A6B     		ldr	r2, [r3, #48]
 138 0020 02F00402 		and	r2, r2, #4
 139 0024 0092     		str	r2, [sp]
 140              		.loc 1 413 3 view .LVU33
 141 0026 009A     		ldr	r2, [sp]
 142              	.LBE4:
 143              		.loc 1 413 3 view .LVU34
 414:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 144              		.loc 1 414 3 view .LVU35
 145              	.LBB5:
 146              		.loc 1 414 3 view .LVU36
 147 0028 0194     		str	r4, [sp, #4]
 148              		.loc 1 414 3 view .LVU37
 149 002a 1A6B     		ldr	r2, [r3, #48]
 150 002c 42F00102 		orr	r2, r2, #1
 151 0030 1A63     		str	r2, [r3, #48]
 152              		.loc 1 414 3 view .LVU38
 153 0032 1A6B     		ldr	r2, [r3, #48]
 154 0034 02F00102 		and	r2, r2, #1
 155 0038 0192     		str	r2, [sp, #4]
 156              		.loc 1 414 3 view .LVU39
 157 003a 019A     		ldr	r2, [sp, #4]
 158              	.LBE5:
 159              		.loc 1 414 3 view .LVU40
 415:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 160              		.loc 1 415 3 view .LVU41
 161              	.LBB6:
 162              		.loc 1 415 3 view .LVU42
 163 003c 0294     		str	r4, [sp, #8]
 164              		.loc 1 415 3 view .LVU43
 165 003e 1A6B     		ldr	r2, [r3, #48]
 166 0040 42F00202 		orr	r2, r2, #2
 167 0044 1A63     		str	r2, [r3, #48]
 168              		.loc 1 415 3 view .LVU44
 169 0046 1B6B     		ldr	r3, [r3, #48]
 170 0048 03F00203 		and	r3, r3, #2
 171 004c 0293     		str	r3, [sp, #8]
 172              		.loc 1 415 3 view .LVU45
 173 004e 029B     		ldr	r3, [sp, #8]
 174              	.LBE6:
 175              		.loc 1 415 3 view .LVU46
 416:Core/Src/main.c **** 
 417:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 418:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
 176              		.loc 1 418 3 view .LVU47
 177 0050 DFF8D480 		ldr	r8, .L8+12
 178 0054 2246     		mov	r2, r4
 179 0056 4FF40051 		mov	r1, #8192
 180 005a 4046     		mov	r0, r8
 181 005c FFF7FEFF 		bl	HAL_GPIO_WritePin
 182              	.LVL5:
 419:Core/Src/main.c **** 
 420:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 421:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_4, GPIO_PIN_SET);
 183              		.loc 1 421 3 view .LVU48
 184 0060 2F4F     		ldr	r7, .L8+4
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s 			page 16


 185 0062 0122     		movs	r2, #1
 186 0064 1021     		movs	r1, #16
 187 0066 3846     		mov	r0, r7
 188 0068 FFF7FEFF 		bl	HAL_GPIO_WritePin
 189              	.LVL6:
 422:Core/Src/main.c **** 
 423:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 424:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_8, GPIO_PIN_SET);
 190              		.loc 1 424 3 view .LVU49
 191 006c 2D4E     		ldr	r6, .L8+8
 192 006e 0122     		movs	r2, #1
 193 0070 4FF48071 		mov	r1, #256
 194 0074 3046     		mov	r0, r6
 195 0076 FFF7FEFF 		bl	HAL_GPIO_WritePin
 196              	.LVL7:
 425:Core/Src/main.c **** 
 426:Core/Src/main.c ****   /*Configure GPIO pin : PC13 */
 427:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_13;
 197              		.loc 1 427 3 view .LVU50
 198              		.loc 1 427 23 is_stmt 0 view .LVU51
 199 007a 4FF40059 		mov	r9, #8192
 200 007e CDF80C90 		str	r9, [sp, #12]
 428:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 201              		.loc 1 428 3 is_stmt 1 view .LVU52
 202              		.loc 1 428 24 is_stmt 0 view .LVU53
 203 0082 0125     		movs	r5, #1
 204 0084 0495     		str	r5, [sp, #16]
 429:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 205              		.loc 1 429 3 is_stmt 1 view .LVU54
 206              		.loc 1 429 24 is_stmt 0 view .LVU55
 207 0086 0594     		str	r4, [sp, #20]
 430:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 208              		.loc 1 430 3 is_stmt 1 view .LVU56
 209              		.loc 1 430 25 is_stmt 0 view .LVU57
 210 0088 0694     		str	r4, [sp, #24]
 431:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 211              		.loc 1 431 3 is_stmt 1 view .LVU58
 212 008a 03A9     		add	r1, sp, #12
 213 008c 4046     		mov	r0, r8
 214 008e FFF7FEFF 		bl	HAL_GPIO_Init
 215              	.LVL8:
 432:Core/Src/main.c **** 
 433:Core/Src/main.c ****   /*Configure GPIO pin : PA4 */
 434:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_4;
 216              		.loc 1 434 3 view .LVU59
 217              		.loc 1 434 23 is_stmt 0 view .LVU60
 218 0092 1023     		movs	r3, #16
 219 0094 0393     		str	r3, [sp, #12]
 435:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 220              		.loc 1 435 3 is_stmt 1 view .LVU61
 221              		.loc 1 435 24 is_stmt 0 view .LVU62
 222 0096 0495     		str	r5, [sp, #16]
 436:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 223              		.loc 1 436 3 is_stmt 1 view .LVU63
 224              		.loc 1 436 24 is_stmt 0 view .LVU64
 225 0098 0594     		str	r4, [sp, #20]
 437:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s 			page 17


 226              		.loc 1 437 3 is_stmt 1 view .LVU65
 227              		.loc 1 437 25 is_stmt 0 view .LVU66
 228 009a 0694     		str	r4, [sp, #24]
 438:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 229              		.loc 1 438 3 is_stmt 1 view .LVU67
 230 009c 03A9     		add	r1, sp, #12
 231 009e 3846     		mov	r0, r7
 232 00a0 FFF7FEFF 		bl	HAL_GPIO_Init
 233              	.LVL9:
 439:Core/Src/main.c **** 
 440:Core/Src/main.c ****   /*Configure GPIO pin : rightButton_Pin */
 441:Core/Src/main.c ****   GPIO_InitStruct.Pin = rightButton_Pin;
 234              		.loc 1 441 3 view .LVU68
 235              		.loc 1 441 23 is_stmt 0 view .LVU69
 236 00a4 2023     		movs	r3, #32
 237 00a6 0393     		str	r3, [sp, #12]
 442:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 238              		.loc 1 442 3 is_stmt 1 view .LVU70
 239              		.loc 1 442 24 is_stmt 0 view .LVU71
 240 00a8 4FF40418 		mov	r8, #2162688
 241 00ac CDF81080 		str	r8, [sp, #16]
 443:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 242              		.loc 1 443 3 is_stmt 1 view .LVU72
 243              		.loc 1 443 24 is_stmt 0 view .LVU73
 244 00b0 0595     		str	r5, [sp, #20]
 444:Core/Src/main.c ****   HAL_GPIO_Init(rightButton_GPIO_Port, &GPIO_InitStruct);
 245              		.loc 1 444 3 is_stmt 1 view .LVU74
 246 00b2 03A9     		add	r1, sp, #12
 247 00b4 3846     		mov	r0, r7
 248 00b6 FFF7FEFF 		bl	HAL_GPIO_Init
 249              	.LVL10:
 445:Core/Src/main.c **** 
 446:Core/Src/main.c ****   /*Configure GPIO pin : leftButton_Pin */
 447:Core/Src/main.c ****   GPIO_InitStruct.Pin = leftButton_Pin;
 250              		.loc 1 447 3 view .LVU75
 251              		.loc 1 447 23 is_stmt 0 view .LVU76
 252 00ba CDF80C90 		str	r9, [sp, #12]
 448:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 253              		.loc 1 448 3 is_stmt 1 view .LVU77
 254              		.loc 1 448 24 is_stmt 0 view .LVU78
 255 00be CDF81080 		str	r8, [sp, #16]
 449:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 256              		.loc 1 449 3 is_stmt 1 view .LVU79
 257              		.loc 1 449 24 is_stmt 0 view .LVU80
 258 00c2 0595     		str	r5, [sp, #20]
 450:Core/Src/main.c ****   HAL_GPIO_Init(leftButton_GPIO_Port, &GPIO_InitStruct);
 259              		.loc 1 450 3 is_stmt 1 view .LVU81
 260 00c4 03A9     		add	r1, sp, #12
 261 00c6 3046     		mov	r0, r6
 262 00c8 FFF7FEFF 		bl	HAL_GPIO_Init
 263              	.LVL11:
 451:Core/Src/main.c **** 
 452:Core/Src/main.c ****   /*Configure GPIO pin : PB8 */
 453:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_8;
 264              		.loc 1 453 3 view .LVU82
 265              		.loc 1 453 23 is_stmt 0 view .LVU83
 266 00cc 4FF48073 		mov	r3, #256
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s 			page 18


 267 00d0 0393     		str	r3, [sp, #12]
 454:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 268              		.loc 1 454 3 is_stmt 1 view .LVU84
 269              		.loc 1 454 24 is_stmt 0 view .LVU85
 270 00d2 0495     		str	r5, [sp, #16]
 455:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 271              		.loc 1 455 3 is_stmt 1 view .LVU86
 272              		.loc 1 455 24 is_stmt 0 view .LVU87
 273 00d4 0594     		str	r4, [sp, #20]
 456:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 274              		.loc 1 456 3 is_stmt 1 view .LVU88
 275              		.loc 1 456 25 is_stmt 0 view .LVU89
 276 00d6 0694     		str	r4, [sp, #24]
 457:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 277              		.loc 1 457 3 is_stmt 1 view .LVU90
 278 00d8 03A9     		add	r1, sp, #12
 279 00da 3046     		mov	r0, r6
 280 00dc FFF7FEFF 		bl	HAL_GPIO_Init
 281              	.LVL12:
 458:Core/Src/main.c **** 
 459:Core/Src/main.c ****   /*Configure GPIO pin : PB9 */
 460:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_9;
 282              		.loc 1 460 3 view .LVU91
 283              		.loc 1 460 23 is_stmt 0 view .LVU92
 284 00e0 4FF40073 		mov	r3, #512
 285 00e4 0393     		str	r3, [sp, #12]
 461:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 286              		.loc 1 461 3 is_stmt 1 view .LVU93
 287              		.loc 1 461 24 is_stmt 0 view .LVU94
 288 00e6 4FF48813 		mov	r3, #1114112
 289 00ea 0493     		str	r3, [sp, #16]
 462:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 290              		.loc 1 462 3 is_stmt 1 view .LVU95
 291              		.loc 1 462 24 is_stmt 0 view .LVU96
 292 00ec 0594     		str	r4, [sp, #20]
 463:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 293              		.loc 1 463 3 is_stmt 1 view .LVU97
 294 00ee 03A9     		add	r1, sp, #12
 295 00f0 3046     		mov	r0, r6
 296 00f2 FFF7FEFF 		bl	HAL_GPIO_Init
 297              	.LVL13:
 464:Core/Src/main.c **** 
 465:Core/Src/main.c ****   /* EXTI interrupt init*/
 466:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI9_5_IRQn, 2, 0);
 298              		.loc 1 466 3 view .LVU98
 299 00f6 2246     		mov	r2, r4
 300 00f8 0221     		movs	r1, #2
 301 00fa 1720     		movs	r0, #23
 302 00fc FFF7FEFF 		bl	HAL_NVIC_SetPriority
 303              	.LVL14:
 467:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 304              		.loc 1 467 3 view .LVU99
 305 0100 1720     		movs	r0, #23
 306 0102 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 307              	.LVL15:
 468:Core/Src/main.c **** 
 469:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI15_10_IRQn, 2, 0);
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s 			page 19


 308              		.loc 1 469 3 view .LVU100
 309 0106 2246     		mov	r2, r4
 310 0108 0221     		movs	r1, #2
 311 010a 2820     		movs	r0, #40
 312 010c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 313              	.LVL16:
 470:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 314              		.loc 1 470 3 view .LVU101
 315 0110 2820     		movs	r0, #40
 316 0112 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 317              	.LVL17:
 471:Core/Src/main.c **** 
 472:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 473:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 474:Core/Src/main.c **** }
 318              		.loc 1 474 1 is_stmt 0 view .LVU102
 319 0116 09B0     		add	sp, sp, #36
 320              		.cfi_def_cfa_offset 28
 321              		@ sp needed
 322 0118 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 323              	.L9:
 324              		.align	2
 325              	.L8:
 326 011c 00380240 		.word	1073887232
 327 0120 00000240 		.word	1073872896
 328 0124 00040240 		.word	1073873920
 329 0128 00080240 		.word	1073874944
 330              		.cfi_endproc
 331              	.LFE144:
 333              		.section	.rodata.HAL_UARTEx_RxEventCallback.str1.4,"aMS",%progbits,1
 334              		.align	2
 335              	.LC0:
 336 0000 0A00     		.ascii	"\012\000"
 337 0002 0000     		.align	2
 338              	.LC1:
 339 0004 25643A25 		.ascii	"%d:%d:%d,\000"
 339      643A2564 
 339      2C00
 340 000e 0000     		.align	2
 341              	.LC2:
 342 0010 2825642C 		.ascii	"(%d,%d),\000"
 342      2564292C 
 342      00
 343 0019 000000   		.align	2
 344              	.LC3:
 345 001c 54656D70 		.ascii	"Temperature/pressure reading failed\012\000"
 345      65726174 
 345      7572652F 
 345      70726573 
 345      73757265 
 346              		.global	__aeabi_f2d
 347              		.global	__aeabi_dsub
 348              		.global	__aeabi_dmul
 349              		.global	__aeabi_d2f
 350 0041 000000   		.align	2
 351              	.LC4:
 352 0044 25732C25 		.ascii	"%s,%s,%s,%s\000"
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s 			page 20


 352      732C2573 
 352      2C257300 
 353              		.section	.text.HAL_UARTEx_RxEventCallback,"ax",%progbits
 354              		.align	1
 355              		.global	HAL_UARTEx_RxEventCallback
 356              		.syntax unified
 357              		.thumb
 358              		.thumb_func
 360              	HAL_UARTEx_RxEventCallback:
 361              	.LVL18:
 362              	.LFB145:
 475:Core/Src/main.c **** 
 476:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 477:Core/Src/main.c **** void HAL_UARTEx_RxEventCallback(UART_HandleTypeDef *huart, uint16_t Size) {
 363              		.loc 1 477 75 is_stmt 1 view -0
 364              		.cfi_startproc
 365              		@ args = 0, pretend = 0, frame = 72
 366              		@ frame_needed = 0, uses_anonymous_args = 0
 367              		.loc 1 477 75 is_stmt 0 view .LVU104
 368 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 369              		.cfi_def_cfa_offset 24
 370              		.cfi_offset 4, -24
 371              		.cfi_offset 5, -20
 372              		.cfi_offset 6, -16
 373              		.cfi_offset 7, -12
 374              		.cfi_offset 8, -8
 375              		.cfi_offset 14, -4
 376 0004 94B0     		sub	sp, sp, #80
 377              		.cfi_def_cfa_offset 104
 478:Core/Src/main.c ****   //Set a flag high when the GPS sends data
 479:Core/Src/main.c ****   flag = 1;
 378              		.loc 1 479 3 is_stmt 1 view .LVU105
 379              		.loc 1 479 8 is_stmt 0 view .LVU106
 380 0006 6C4B     		ldr	r3, .L18+16
 381 0008 0122     		movs	r2, #1
 382 000a 1A70     		strb	r2, [r3]
 480:Core/Src/main.c **** 
 481:Core/Src/main.c ****   //Set memory of line_out to emtpy
 482:Core/Src/main.c ****   //memset(line_out, '\0', sizeof(line_out));
 483:Core/Src/main.c ****   memset(transmit_data, '\0', sizeof(transmit_data));
 383              		.loc 1 483 3 is_stmt 1 view .LVU107
 384 000c 4FF48072 		mov	r2, #256
 385 0010 0021     		movs	r1, #0
 386              	.LVL19:
 387              		.loc 1 483 3 is_stmt 0 view .LVU108
 388 0012 6A48     		ldr	r0, .L18+20
 389              	.LVL20:
 390              		.loc 1 483 3 view .LVU109
 391 0014 FFF7FEFF 		bl	memset
 392              	.LVL21:
 484:Core/Src/main.c **** 
 485:Core/Src/main.c ****   //Copy a new line character to line_out
 486:Core/Src/main.c ****   //memcpy(line_out, "\r\n\n", sizeof("\r\n\n"));
 487:Core/Src/main.c ****   //memcpy(transmit_data, "\r\n\n", sizeof("\r\n\n"));
 488:Core/Src/main.c **** 
 489:Core/Src/main.c ****   //Transmit the data over uart2
 490:Core/Src/main.c ****   //HAL_UART_Transmit(&huart2, (uint8_t*)line_out, sizeof(line_out)/sizeof(line_out[0]), 1000);
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s 			page 21


 491:Core/Src/main.c **** 
 492:Core/Src/main.c **** 
 493:Core/Src/main.c ****   
 494:Core/Src/main.c ****   //Search for the \n character
 495:Core/Src/main.c ****   uint8_t *token = strtok(gps_raw, "\n");
 393              		.loc 1 495 3 is_stmt 1 view .LVU110
 394              		.loc 1 495 20 is_stmt 0 view .LVU111
 395 0018 6949     		ldr	r1, .L18+24
 396 001a 6A48     		ldr	r0, .L18+28
 397 001c FFF7FEFF 		bl	strtok
 398              	.LVL22:
 496:Core/Src/main.c **** 
 497:Core/Src/main.c ****   if (token == NULL) {
 399              		.loc 1 497 3 is_stmt 1 view .LVU112
 400              		.loc 1 497 6 is_stmt 0 view .LVU113
 401 0020 48B1     		cbz	r0, .L11
 402 0022 0146     		mov	r1, r0
 403              	.LBB7:
 498:Core/Src/main.c ****     //break
 499:Core/Src/main.c ****   } else {
 500:Core/Src/main.c ****     //memset(line, '\0', sizeof(line));
 501:Core/Src/main.c ****     strcpy(line, token);
 404              		.loc 1 501 5 is_stmt 1 view .LVU114
 405 0024 684C     		ldr	r4, .L18+32
 406 0026 2046     		mov	r0, r4
 407              	.LVL23:
 408              		.loc 1 501 5 is_stmt 0 view .LVU115
 409 0028 FFF7FEFF 		bl	strcpy
 410              	.LVL24:
 502:Core/Src/main.c ****     struct minmea_sentence_rmc frame;
 411              		.loc 1 502 5 is_stmt 1 view .LVU116
 503:Core/Src/main.c ****     if (minmea_parse_rmc(&frame, line)) {
 412              		.loc 1 503 5 view .LVU117
 413              		.loc 1 503 9 is_stmt 0 view .LVU118
 414 002c 2146     		mov	r1, r4
 415 002e 02A8     		add	r0, sp, #8
 416 0030 FFF7FEFF 		bl	minmea_parse_rmc
 417              	.LVL25:
 418              		.loc 1 503 8 view .LVU119
 419 0034 30B9     		cbnz	r0, .L17
 420              	.L11:
 421              	.LBE7:
 504:Core/Src/main.c ****       //memset(line_out, '\0', sizeof(line_out));
 505:Core/Src/main.c ****       sprintf(transmit_data + strlen(transmit_data),"%d:%d:%d,",frame.time.hours, frame.time.minute
 506:Core/Src/main.c ****       //HAL_UART_Transmit(&huart2, (uint8_t*)line_out, sizeof(line_out)/sizeof(line_out[0]), 1000);
 507:Core/Src/main.c **** 
 508:Core/Src/main.c ****       //memset(line_out, '\0', sizeof(line_out));
 509:Core/Src/main.c ****       sprintf(transmit_data + strlen(transmit_data), "(%d,%d),",minmea_rescale(&frame.latitude, 100
 510:Core/Src/main.c ****       //HAL_UART_Transmit(&huart2, (uint8_t*)line_out, sizeof(line_out)/sizeof(line_out[0]), 1000);
 511:Core/Src/main.c ****       
 512:Core/Src/main.c ****     }
 513:Core/Src/main.c ****   }
 514:Core/Src/main.c **** 
 515:Core/Src/main.c ****   //Set gps_raw data register to empty
 516:Core/Src/main.c ****   memset(gps_raw, '\0', sizeof(gps_raw));
 422              		.loc 1 516 3 is_stmt 1 view .LVU120
 423 0036 4FF40072 		mov	r2, #512
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s 			page 22


 424 003a 0021     		movs	r1, #0
 425 003c 6148     		ldr	r0, .L18+28
 426 003e FFF7FEFF 		bl	memset
 427              	.LVL26:
 517:Core/Src/main.c **** 
 518:Core/Src/main.c **** 
 519:Core/Src/main.c **** 
 520:Core/Src/main.c ****   	//HAL_Delay(100);
 521:Core/Src/main.c **** 	while (!bmp280_read_float(&bmp280, &temperature, &pressure, &humidity)) {
 428              		.loc 1 521 2 view .LVU121
 429              		.loc 1 521 8 is_stmt 0 view .LVU122
 430 0042 42E0     		b	.L13
 431              	.L17:
 432              	.LBB8:
 505:Core/Src/main.c ****       //HAL_UART_Transmit(&huart2, (uint8_t*)line_out, sizeof(line_out)/sizeof(line_out[0]), 1000);
 433              		.loc 1 505 7 is_stmt 1 view .LVU123
 505:Core/Src/main.c ****       //HAL_UART_Transmit(&huart2, (uint8_t*)line_out, sizeof(line_out)/sizeof(line_out[0]), 1000);
 434              		.loc 1 505 31 is_stmt 0 view .LVU124
 435 0044 5D4C     		ldr	r4, .L18+20
 436 0046 2046     		mov	r0, r4
 437 0048 FFF7FEFF 		bl	strlen
 438              	.LVL27:
 505:Core/Src/main.c ****       //HAL_UART_Transmit(&huart2, (uint8_t*)line_out, sizeof(line_out)/sizeof(line_out[0]), 1000);
 439              		.loc 1 505 7 view .LVU125
 440 004c 049B     		ldr	r3, [sp, #16]
 441 004e 0093     		str	r3, [sp]
 442 0050 039B     		ldr	r3, [sp, #12]
 443 0052 029A     		ldr	r2, [sp, #8]
 444 0054 5D49     		ldr	r1, .L18+36
 445 0056 2044     		add	r0, r0, r4
 446 0058 FFF7FEFF 		bl	sprintf
 447              	.LVL28:
 509:Core/Src/main.c ****       //HAL_UART_Transmit(&huart2, (uint8_t*)line_out, sizeof(line_out)/sizeof(line_out[0]), 1000);
 448              		.loc 1 509 7 is_stmt 1 view .LVU126
 509:Core/Src/main.c ****       //HAL_UART_Transmit(&huart2, (uint8_t*)line_out, sizeof(line_out)/sizeof(line_out[0]), 1000);
 449              		.loc 1 509 31 is_stmt 0 view .LVU127
 450 005c 2046     		mov	r0, r4
 451 005e FFF7FEFF 		bl	strlen
 452              	.LVL29:
 453 0062 0546     		mov	r5, r0
 509:Core/Src/main.c ****       //HAL_UART_Transmit(&huart2, (uint8_t*)line_out, sizeof(line_out)/sizeof(line_out[0]), 1000);
 454              		.loc 1 509 7 view .LVU128
 455 0064 4FF47A71 		mov	r1, #1000
 456 0068 07A8     		add	r0, sp, #28
 457 006a FFF7FEFF 		bl	minmea_rescale
 458              	.LVL30:
 459 006e 0646     		mov	r6, r0
 460 0070 4FF47A71 		mov	r1, #1000
 461 0074 09A8     		add	r0, sp, #36
 462 0076 FFF7FEFF 		bl	minmea_rescale
 463              	.LVL31:
 464 007a 0346     		mov	r3, r0
 465 007c 3246     		mov	r2, r6
 466 007e 5449     		ldr	r1, .L18+40
 467 0080 6019     		adds	r0, r4, r5
 468 0082 FFF7FEFF 		bl	sprintf
 469              	.LVL32:
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s 			page 23


 470 0086 D6E7     		b	.L11
 471              	.L15:
 472              	.LBE8:
 522:Core/Src/main.c **** 	  size = sprintf(transmit_data + strlen(transmit_data),"Temperature/pressure reading failed\n");
 473              		.loc 1 522 4 is_stmt 1 view .LVU129
 474              		.loc 1 522 35 is_stmt 0 view .LVU130
 475 0088 4C4C     		ldr	r4, .L18+20
 476 008a 2046     		mov	r0, r4
 477 008c FFF7FEFF 		bl	strlen
 478              	.LVL33:
 479              		.loc 1 522 11 view .LVU131
 480 0090 504D     		ldr	r5, .L18+44
 481 0092 04EB000C 		add	ip, r4, r0
 482 0096 05F1200E 		add	lr, r5, #32
 483              	.L14:
 484 009a 2C46     		mov	r4, r5
 485 009c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 486 009e CCF80000 		str	r0, [ip]	@ unaligned
 487 00a2 CCF80410 		str	r1, [ip, #4]	@ unaligned
 488 00a6 CCF80820 		str	r2, [ip, #8]	@ unaligned
 489 00aa CCF80C30 		str	r3, [ip, #12]	@ unaligned
 490 00ae 2546     		mov	r5, r4
 491 00b0 0CF1100C 		add	ip, ip, #16
 492 00b4 7445     		cmp	r4, lr
 493 00b6 F0D1     		bne	.L14
 494 00b8 2068     		ldr	r0, [r4]
 495 00ba CCF80000 		str	r0, [ip]	@ unaligned
 496 00be 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 497 00c0 8CF80430 		strb	r3, [ip, #4]
 498              		.loc 1 522 9 view .LVU132
 499 00c4 444B     		ldr	r3, .L18+48
 500 00c6 2422     		movs	r2, #36
 501 00c8 1A80     		strh	r2, [r3]	@ movhi
 502              	.L13:
 521:Core/Src/main.c **** 	  size = sprintf(transmit_data + strlen(transmit_data),"Temperature/pressure reading failed\n");
 503              		.loc 1 521 9 is_stmt 1 view .LVU133
 521:Core/Src/main.c **** 	  size = sprintf(transmit_data + strlen(transmit_data),"Temperature/pressure reading failed\n");
 504              		.loc 1 521 10 is_stmt 0 view .LVU134
 505 00ca 444B     		ldr	r3, .L18+52
 506 00cc 444A     		ldr	r2, .L18+56
 507 00ce 4549     		ldr	r1, .L18+60
 508 00d0 4548     		ldr	r0, .L18+64
 509 00d2 FFF7FEFF 		bl	bmp280_read_float
 510              	.LVL34:
 521:Core/Src/main.c **** 	  size = sprintf(transmit_data + strlen(transmit_data),"Temperature/pressure reading failed\n");
 511              		.loc 1 521 9 view .LVU135
 512 00d6 0028     		cmp	r0, #0
 513 00d8 D6D0     		beq	.L15
 523:Core/Src/main.c **** 	  //HAL_UART_Transmit(&huart2, Data, size, 1000);
 524:Core/Src/main.c **** 	}
 525:Core/Src/main.c **** 
 526:Core/Src/main.c **** 
 527:Core/Src/main.c **** 
 528:Core/Src/main.c **** 
 529:Core/Src/main.c ****   //altitude = H_b + (T_b/L_b)*(pow((pressure/P_b),(-1*R*L_b)/(G_0*M))-1);
 530:Core/Src/main.c **** 
 531:Core/Src/main.c ****   altitude = 44330*(1-pow((pressure/P_b),(1/5.255)));
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s 			page 24


 514              		.loc 1 531 3 is_stmt 1 view .LVU136
 515              		.loc 1 531 36 is_stmt 0 view .LVU137
 516 00da 414C     		ldr	r4, .L18+56
 517 00dc 94ED007A 		vldr.32	s14, [r4]
 518 00e0 424B     		ldr	r3, .L18+68
 519 00e2 D3ED007A 		vldr.32	s15, [r3]
 520              		.loc 1 531 23 view .LVU138
 521 00e6 C7EE277A 		vdiv.f32	s15, s14, s15
 522 00ea 17EE900A 		vmov	r0, s15
 523 00ee FFF7FEFF 		bl	__aeabi_f2d
 524              	.LVL35:
 525 00f2 9FED2D1B 		vldr.64	d1, .L18
 526 00f6 41EC100B 		vmov	d0, r0, r1
 527 00fa FFF7FEFF 		bl	pow
 528              	.LVL36:
 529 00fe 53EC102B 		vmov	r2, r3, d0
 530              		.loc 1 531 22 view .LVU139
 531 0102 0020     		movs	r0, #0
 532 0104 3A49     		ldr	r1, .L18+72
 533 0106 FFF7FEFF 		bl	__aeabi_dsub
 534              	.LVL37:
 535              		.loc 1 531 19 view .LVU140
 536 010a 29A3     		adr	r3, .L18+8
 537 010c D3E90023 		ldrd	r2, [r3]
 538 0110 FFF7FEFF 		bl	__aeabi_dmul
 539              	.LVL38:
 540 0114 FFF7FEFF 		bl	__aeabi_d2f
 541              	.LVL39:
 542              		.loc 1 531 12 view .LVU141
 543 0118 364B     		ldr	r3, .L18+76
 544 011a 1860     		str	r0, [r3]	@ float
 532:Core/Src/main.c **** 
 533:Core/Src/main.c ****   gcvt(altitude, 6, sAltitude);
 545              		.loc 1 533 3 is_stmt 1 view .LVU142
 546 011c DFF8EC80 		ldr	r8, .L18+100
 547 0120 FFF7FEFF 		bl	__aeabi_f2d
 548              	.LVL40:
 549 0124 41EC100B 		vmov	d0, r0, r1
 550 0128 4146     		mov	r1, r8
 551 012a 0620     		movs	r0, #6
 552 012c FFF7FEFF 		bl	gcvt
 553              	.LVL41:
 534:Core/Src/main.c ****   gcvt(pressure, 8, sPressure);
 554              		.loc 1 534 3 view .LVU143
 555 0130 314D     		ldr	r5, .L18+80
 556 0132 2068     		ldr	r0, [r4]	@ float
 557 0134 FFF7FEFF 		bl	__aeabi_f2d
 558              	.LVL42:
 559 0138 41EC100B 		vmov	d0, r0, r1
 560 013c 2946     		mov	r1, r5
 561 013e 0820     		movs	r0, #8
 562 0140 FFF7FEFF 		bl	gcvt
 563              	.LVL43:
 535:Core/Src/main.c ****   gcvt(temperature, 4, sTemperature);
 564              		.loc 1 535 3 view .LVU144
 565 0144 2D4E     		ldr	r6, .L18+84
 566 0146 274B     		ldr	r3, .L18+60
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s 			page 25


 567 0148 1868     		ldr	r0, [r3]	@ float
 568 014a FFF7FEFF 		bl	__aeabi_f2d
 569              	.LVL44:
 570 014e 41EC100B 		vmov	d0, r0, r1
 571 0152 3146     		mov	r1, r6
 572 0154 0420     		movs	r0, #4
 573 0156 FFF7FEFF 		bl	gcvt
 574              	.LVL45:
 536:Core/Src/main.c ****   gcvt(humidity, 4, sHumidity);
 575              		.loc 1 536 3 view .LVU145
 576 015a 294F     		ldr	r7, .L18+88
 577 015c 1F4B     		ldr	r3, .L18+52
 578 015e 1868     		ldr	r0, [r3]	@ float
 579 0160 FFF7FEFF 		bl	__aeabi_f2d
 580              	.LVL46:
 581 0164 41EC100B 		vmov	d0, r0, r1
 582 0168 3946     		mov	r1, r7
 583 016a 0420     		movs	r0, #4
 584 016c FFF7FEFF 		bl	gcvt
 585              	.LVL47:
 537:Core/Src/main.c **** 
 538:Core/Src/main.c **** 	size = sprintf(transmit_data + strlen(transmit_data),"%s,%s,%s,%s",sPressure, sTemperature, sHumid
 586              		.loc 1 538 2 view .LVU146
 587              		.loc 1 538 33 is_stmt 0 view .LVU147
 588 0170 124C     		ldr	r4, .L18+20
 589 0172 2046     		mov	r0, r4
 590 0174 FFF7FEFF 		bl	strlen
 591              	.LVL48:
 592              		.loc 1 538 9 view .LVU148
 593 0178 CDF80480 		str	r8, [sp, #4]
 594 017c 0097     		str	r7, [sp]
 595 017e 3346     		mov	r3, r6
 596 0180 2A46     		mov	r2, r5
 597 0182 2049     		ldr	r1, .L18+92
 598 0184 2044     		add	r0, r0, r4
 599 0186 FFF7FEFF 		bl	sprintf
 600              	.LVL49:
 601              		.loc 1 538 7 view .LVU149
 602 018a 134B     		ldr	r3, .L18+48
 603 018c 1880     		strh	r0, [r3]	@ movhi
 539:Core/Src/main.c **** 	HAL_UART_Transmit(&huart2, transmit_data, sizeof(transmit_data)/sizeof(transmit_data[0]), 1000);
 604              		.loc 1 539 2 is_stmt 1 view .LVU150
 605 018e 4FF47A73 		mov	r3, #1000
 606 0192 4FF48072 		mov	r2, #256
 607 0196 2146     		mov	r1, r4
 608 0198 1B48     		ldr	r0, .L18+96
 609 019a FFF7FEFF 		bl	HAL_UART_Transmit
 610              	.LVL50:
 540:Core/Src/main.c **** 
 541:Core/Src/main.c **** 
 542:Core/Src/main.c **** 
 543:Core/Src/main.c ****   //Set flag low to indicate that data transfer is done
 544:Core/Src/main.c ****   
 545:Core/Src/main.c ****   //Send interrupt when data from GPS is sent again
 546:Core/Src/main.c ****   //HAL_UARTEx_ReceiveToIdle_IT(&huart1,(uint8_t*)gps_raw, 512);
 547:Core/Src/main.c **** 
 548:Core/Src/main.c **** }
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s 			page 26


 611              		.loc 1 548 1 is_stmt 0 view .LVU151
 612 019e 14B0     		add	sp, sp, #80
 613              		.cfi_def_cfa_offset 24
 614              		@ sp needed
 615 01a0 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 616              	.L19:
 617 01a4 AFF30080 		.align	3
 618              	.L18:
 619 01a8 6C45D9CC 		.word	-858176148
 620 01ac 955BC83F 		.word	1070095253
 621 01b0 00000000 		.word	0
 622 01b4 40A5E540 		.word	1088791872
 623 01b8 00000000 		.word	flag
 624 01bc 00000000 		.word	transmit_data
 625 01c0 00000000 		.word	.LC0
 626 01c4 00000000 		.word	gps_raw
 627 01c8 00000000 		.word	line
 628 01cc 04000000 		.word	.LC1
 629 01d0 10000000 		.word	.LC2
 630 01d4 1C000000 		.word	.LC3
 631 01d8 00000000 		.word	size
 632 01dc 00000000 		.word	humidity
 633 01e0 00000000 		.word	pressure
 634 01e4 00000000 		.word	temperature
 635 01e8 00000000 		.word	bmp280
 636 01ec 00000000 		.word	P_b
 637 01f0 0000F03F 		.word	1072693248
 638 01f4 00000000 		.word	altitude
 639 01f8 00000000 		.word	sPressure
 640 01fc 00000000 		.word	sTemperature
 641 0200 00000000 		.word	sHumidity
 642 0204 44000000 		.word	.LC4
 643 0208 00000000 		.word	huart2
 644 020c 00000000 		.word	sAltitude
 645              		.cfi_endproc
 646              	.LFE145:
 648              		.section	.rodata.HAL_GPIO_EXTI_Callback.str1.4,"aMS",%progbits,1
 649              		.align	2
 650              	.LC5:
 651 0000 0A4C6566 		.ascii	"\012Left Button Pushed\000"
 651      74204275 
 651      74746F6E 
 651      20507573 
 651      68656400 
 652              		.align	2
 653              	.LC6:
 654 0014 0A526967 		.ascii	"\012Right Button Pushed\000"
 654      68742042 
 654      7574746F 
 654      6E205075 
 654      73686564 
 655              		.section	.text.HAL_GPIO_EXTI_Callback,"ax",%progbits
 656              		.align	1
 657              		.global	HAL_GPIO_EXTI_Callback
 658              		.syntax unified
 659              		.thumb
 660              		.thumb_func
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s 			page 27


 662              	HAL_GPIO_EXTI_Callback:
 663              	.LVL51:
 664              	.LFB146:
 549:Core/Src/main.c **** 
 550:Core/Src/main.c **** 
 551:Core/Src/main.c **** void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
 552:Core/Src/main.c **** {
 665              		.loc 1 552 1 is_stmt 1 view -0
 666              		.cfi_startproc
 667              		@ args = 0, pretend = 0, frame = 0
 668              		@ frame_needed = 0, uses_anonymous_args = 0
 669              		.loc 1 552 1 is_stmt 0 view .LVU153
 670 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 671              		.cfi_def_cfa_offset 24
 672              		.cfi_offset 4, -24
 673              		.cfi_offset 5, -20
 674              		.cfi_offset 6, -16
 675              		.cfi_offset 7, -12
 676              		.cfi_offset 8, -8
 677              		.cfi_offset 14, -4
 678 0004 0446     		mov	r4, r0
 553:Core/Src/main.c ****   if(GPIO_Pin == GPIO_PIN_13) // INT Source is pin A1
 679              		.loc 1 553 3 is_stmt 1 view .LVU154
 680              		.loc 1 553 5 is_stmt 0 view .LVU155
 681 0006 B0F5005F 		cmp	r0, #8192
 682 000a 07D0     		beq	.L24
 683              	.LVL52:
 684              	.L21:
 554:Core/Src/main.c ****     {
 555:Core/Src/main.c ****       //get the current time
 556:Core/Src/main.c ****       currentTicks = HAL_GetTick();
 557:Core/Src/main.c ****       if ((currentTicks-preTicks)>250) {
 558:Core/Src/main.c ****         memset(transmit_data, '\0', sizeof(transmit_data));
 559:Core/Src/main.c ****         sprintf(transmit_data,"%s","\nLeft Button Pushed");
 560:Core/Src/main.c **** 	      HAL_UART_Transmit(&huart2, transmit_data, sizeof(transmit_data)/sizeof(transmit_data[0]),100
 561:Core/Src/main.c ****         memset(transmit_data, '\0', sizeof(transmit_data));
 562:Core/Src/main.c ****       } else {
 563:Core/Src/main.c ****         //break
 564:Core/Src/main.c ****       }
 685              		.loc 1 564 7 is_stmt 1 view .LVU156
 565:Core/Src/main.c ****     }
 566:Core/Src/main.c **** 
 567:Core/Src/main.c ****   if(GPIO_Pin == GPIO_PIN_5) // INT Source is pin A1
 686              		.loc 1 567 3 view .LVU157
 687              		.loc 1 567 5 is_stmt 0 view .LVU158
 688 000c 202C     		cmp	r4, #32
 689 000e 29D0     		beq	.L25
 690              	.L22:
 568:Core/Src/main.c ****     {
 569:Core/Src/main.c ****       //get the current time
 570:Core/Src/main.c ****       currentTicks = HAL_GetTick();
 571:Core/Src/main.c ****       if ((currentTicks-preTicks)>250) {
 572:Core/Src/main.c ****         memset(transmit_data, '\0', sizeof(transmit_data));
 573:Core/Src/main.c ****         sprintf(transmit_data,"%s","\nRight Button Pushed");
 574:Core/Src/main.c **** 	      HAL_UART_Transmit(&huart2, transmit_data, sizeof(transmit_data)/sizeof(transmit_data[0]),100
 575:Core/Src/main.c ****         memset(transmit_data, '\0', sizeof(transmit_data));
 576:Core/Src/main.c ****       } else {
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s 			page 28


 577:Core/Src/main.c ****         //break
 578:Core/Src/main.c ****       }
 691              		.loc 1 578 7 is_stmt 1 view .LVU159
 579:Core/Src/main.c ****     }  
 580:Core/Src/main.c ****   preTicks = currentTicks;
 692              		.loc 1 580 3 view .LVU160
 693              		.loc 1 580 12 is_stmt 0 view .LVU161
 694 0010 284B     		ldr	r3, .L26
 695 0012 1A68     		ldr	r2, [r3]
 696 0014 284B     		ldr	r3, .L26+4
 697 0016 1A60     		str	r2, [r3]
 581:Core/Src/main.c **** }
 698              		.loc 1 581 1 view .LVU162
 699 0018 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 700              	.LVL53:
 701              	.L24:
 556:Core/Src/main.c ****       if ((currentTicks-preTicks)>250) {
 702              		.loc 1 556 7 is_stmt 1 view .LVU163
 556:Core/Src/main.c ****       if ((currentTicks-preTicks)>250) {
 703              		.loc 1 556 22 is_stmt 0 view .LVU164
 704 001c FFF7FEFF 		bl	HAL_GetTick
 705              	.LVL54:
 556:Core/Src/main.c ****       if ((currentTicks-preTicks)>250) {
 706              		.loc 1 556 20 view .LVU165
 707 0020 244B     		ldr	r3, .L26
 708 0022 1860     		str	r0, [r3]
 557:Core/Src/main.c ****         memset(transmit_data, '\0', sizeof(transmit_data));
 709              		.loc 1 557 7 is_stmt 1 view .LVU166
 557:Core/Src/main.c ****         memset(transmit_data, '\0', sizeof(transmit_data));
 710              		.loc 1 557 24 is_stmt 0 view .LVU167
 711 0024 244B     		ldr	r3, .L26+4
 712 0026 1B68     		ldr	r3, [r3]
 713 0028 C01A     		subs	r0, r0, r3
 557:Core/Src/main.c ****         memset(transmit_data, '\0', sizeof(transmit_data));
 714              		.loc 1 557 10 view .LVU168
 715 002a FA28     		cmp	r0, #250
 716 002c EEDD     		ble	.L21
 558:Core/Src/main.c ****         sprintf(transmit_data,"%s","\nLeft Button Pushed");
 717              		.loc 1 558 9 is_stmt 1 view .LVU169
 718 002e 234F     		ldr	r7, .L26+8
 719 0030 4FF48078 		mov	r8, #256
 720 0034 4246     		mov	r2, r8
 721 0036 0021     		movs	r1, #0
 722 0038 3846     		mov	r0, r7
 723 003a FFF7FEFF 		bl	memset
 724              	.LVL55:
 559:Core/Src/main.c **** 	      HAL_UART_Transmit(&huart2, transmit_data, sizeof(transmit_data)/sizeof(transmit_data[0]),100
 725              		.loc 1 559 9 view .LVU170
 726 003e 3D46     		mov	r5, r7
 727 0040 1F4E     		ldr	r6, .L26+12
 728 0042 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 729 0044 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 730 0046 3368     		ldr	r3, [r6]
 731 0048 2B60     		str	r3, [r5]
 560:Core/Src/main.c ****         memset(transmit_data, '\0', sizeof(transmit_data));
 732              		.loc 1 560 8 view .LVU171
 733 004a 4FF47A73 		mov	r3, #1000
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s 			page 29


 734 004e 4246     		mov	r2, r8
 735 0050 3946     		mov	r1, r7
 736 0052 1C48     		ldr	r0, .L26+16
 737 0054 FFF7FEFF 		bl	HAL_UART_Transmit
 738              	.LVL56:
 561:Core/Src/main.c ****       } else {
 739              		.loc 1 561 9 view .LVU172
 740 0058 4246     		mov	r2, r8
 741 005a 0021     		movs	r1, #0
 742 005c 3846     		mov	r0, r7
 743 005e FFF7FEFF 		bl	memset
 744              	.LVL57:
 745 0062 D3E7     		b	.L21
 746              	.L25:
 570:Core/Src/main.c ****       if ((currentTicks-preTicks)>250) {
 747              		.loc 1 570 7 view .LVU173
 570:Core/Src/main.c ****       if ((currentTicks-preTicks)>250) {
 748              		.loc 1 570 22 is_stmt 0 view .LVU174
 749 0064 FFF7FEFF 		bl	HAL_GetTick
 750              	.LVL58:
 570:Core/Src/main.c ****       if ((currentTicks-preTicks)>250) {
 751              		.loc 1 570 20 view .LVU175
 752 0068 124B     		ldr	r3, .L26
 753 006a 1860     		str	r0, [r3]
 571:Core/Src/main.c ****         memset(transmit_data, '\0', sizeof(transmit_data));
 754              		.loc 1 571 7 is_stmt 1 view .LVU176
 571:Core/Src/main.c ****         memset(transmit_data, '\0', sizeof(transmit_data));
 755              		.loc 1 571 24 is_stmt 0 view .LVU177
 756 006c 124B     		ldr	r3, .L26+4
 757 006e 1B68     		ldr	r3, [r3]
 758 0070 C01A     		subs	r0, r0, r3
 571:Core/Src/main.c ****         memset(transmit_data, '\0', sizeof(transmit_data));
 759              		.loc 1 571 10 view .LVU178
 760 0072 FA28     		cmp	r0, #250
 761 0074 CCDD     		ble	.L22
 572:Core/Src/main.c ****         sprintf(transmit_data,"%s","\nRight Button Pushed");
 762              		.loc 1 572 9 is_stmt 1 view .LVU179
 763 0076 114E     		ldr	r6, .L26+8
 764 0078 4FF48077 		mov	r7, #256
 765 007c 3A46     		mov	r2, r7
 766 007e 0021     		movs	r1, #0
 767 0080 3046     		mov	r0, r6
 768 0082 FFF7FEFF 		bl	memset
 769              	.LVL59:
 573:Core/Src/main.c **** 	      HAL_UART_Transmit(&huart2, transmit_data, sizeof(transmit_data)/sizeof(transmit_data[0]),100
 770              		.loc 1 573 9 view .LVU180
 771 0086 3446     		mov	r4, r6
 772 0088 0F4D     		ldr	r5, .L26+20
 773 008a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 774 008c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 775 008e 95E80300 		ldm	r5, {r0, r1}
 776 0092 44F8040B 		str	r0, [r4], #4
 777 0096 2170     		strb	r1, [r4]
 574:Core/Src/main.c ****         memset(transmit_data, '\0', sizeof(transmit_data));
 778              		.loc 1 574 8 view .LVU181
 779 0098 4FF47A73 		mov	r3, #1000
 780 009c 3A46     		mov	r2, r7
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s 			page 30


 781 009e 3146     		mov	r1, r6
 782 00a0 0848     		ldr	r0, .L26+16
 783 00a2 FFF7FEFF 		bl	HAL_UART_Transmit
 784              	.LVL60:
 575:Core/Src/main.c ****       } else {
 785              		.loc 1 575 9 view .LVU182
 786 00a6 3A46     		mov	r2, r7
 787 00a8 0021     		movs	r1, #0
 788 00aa 3046     		mov	r0, r6
 789 00ac FFF7FEFF 		bl	memset
 790              	.LVL61:
 791 00b0 AEE7     		b	.L22
 792              	.L27:
 793 00b2 00BF     		.align	2
 794              	.L26:
 795 00b4 00000000 		.word	currentTicks
 796 00b8 00000000 		.word	preTicks
 797 00bc 00000000 		.word	transmit_data
 798 00c0 00000000 		.word	.LC5
 799 00c4 00000000 		.word	huart2
 800 00c8 14000000 		.word	.LC6
 801              		.cfi_endproc
 802              	.LFE146:
 804              		.section	.text.Error_Handler,"ax",%progbits
 805              		.align	1
 806              		.global	Error_Handler
 807              		.syntax unified
 808              		.thumb
 809              		.thumb_func
 811              	Error_Handler:
 812              	.LFB147:
 582:Core/Src/main.c **** 
 583:Core/Src/main.c **** /* USER CODE END 4 */
 584:Core/Src/main.c **** 
 585:Core/Src/main.c **** /**
 586:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 587:Core/Src/main.c ****   * @retval None
 588:Core/Src/main.c ****   */
 589:Core/Src/main.c **** void Error_Handler(void)
 590:Core/Src/main.c **** {
 813              		.loc 1 590 1 view -0
 814              		.cfi_startproc
 815              		@ Volatile: function does not return.
 816              		@ args = 0, pretend = 0, frame = 0
 817              		@ frame_needed = 0, uses_anonymous_args = 0
 818              		@ link register save eliminated.
 591:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 592:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 593:Core/Src/main.c ****   __disable_irq();
 819              		.loc 1 593 3 view .LVU184
 820              	.LBB9:
 821              	.LBI9:
 822              		.file 3 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s 			page 31


   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s 			page 32


  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s 			page 33


 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 823              		.loc 3 140 27 view .LVU185
 824              	.LBB10:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 825              		.loc 3 142 3 view .LVU186
 826              		.syntax unified
 827              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 828 0000 72B6     		cpsid i
 829              	@ 0 "" 2
 830              		.thumb
 831              		.syntax unified
 832              	.L29:
 833              	.LBE10:
 834              	.LBE9:
 594:Core/Src/main.c ****   while (1)
 835              		.loc 1 594 3 discriminator 1 view .LVU187
 595:Core/Src/main.c ****   {
 596:Core/Src/main.c ****   }
 836              		.loc 1 596 3 discriminator 1 view .LVU188
 594:Core/Src/main.c ****   while (1)
 837              		.loc 1 594 9 discriminator 1 view .LVU189
 838 0002 FEE7     		b	.L29
 839              		.cfi_endproc
 840              	.LFE147:
 842              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 843              		.align	1
 844              		.syntax unified
 845              		.thumb
 846              		.thumb_func
 848              	MX_USART1_UART_Init:
 849              	.LFB142:
 341:Core/Src/main.c **** 
 850              		.loc 1 341 1 view -0
 851              		.cfi_startproc
 852              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s 			page 34


 853              		@ frame_needed = 0, uses_anonymous_args = 0
 854 0000 08B5     		push	{r3, lr}
 855              		.cfi_def_cfa_offset 8
 856              		.cfi_offset 3, -8
 857              		.cfi_offset 14, -4
 350:Core/Src/main.c ****   huart1.Init.BaudRate = 9600;
 858              		.loc 1 350 3 view .LVU191
 350:Core/Src/main.c ****   huart1.Init.BaudRate = 9600;
 859              		.loc 1 350 19 is_stmt 0 view .LVU192
 860 0002 0A48     		ldr	r0, .L34
 861 0004 0A4B     		ldr	r3, .L34+4
 862 0006 0360     		str	r3, [r0]
 351:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 863              		.loc 1 351 3 is_stmt 1 view .LVU193
 351:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 864              		.loc 1 351 24 is_stmt 0 view .LVU194
 865 0008 4FF41653 		mov	r3, #9600
 866 000c 4360     		str	r3, [r0, #4]
 352:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 867              		.loc 1 352 3 is_stmt 1 view .LVU195
 352:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 868              		.loc 1 352 26 is_stmt 0 view .LVU196
 869 000e 0023     		movs	r3, #0
 870 0010 8360     		str	r3, [r0, #8]
 353:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 871              		.loc 1 353 3 is_stmt 1 view .LVU197
 353:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 872              		.loc 1 353 24 is_stmt 0 view .LVU198
 873 0012 C360     		str	r3, [r0, #12]
 354:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 874              		.loc 1 354 3 is_stmt 1 view .LVU199
 354:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 875              		.loc 1 354 22 is_stmt 0 view .LVU200
 876 0014 0361     		str	r3, [r0, #16]
 355:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 877              		.loc 1 355 3 is_stmt 1 view .LVU201
 355:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 878              		.loc 1 355 20 is_stmt 0 view .LVU202
 879 0016 0C22     		movs	r2, #12
 880 0018 4261     		str	r2, [r0, #20]
 356:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 881              		.loc 1 356 3 is_stmt 1 view .LVU203
 356:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 882              		.loc 1 356 25 is_stmt 0 view .LVU204
 883 001a 8361     		str	r3, [r0, #24]
 357:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 884              		.loc 1 357 3 is_stmt 1 view .LVU205
 357:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 885              		.loc 1 357 28 is_stmt 0 view .LVU206
 886 001c C361     		str	r3, [r0, #28]
 358:Core/Src/main.c ****   {
 887              		.loc 1 358 3 is_stmt 1 view .LVU207
 358:Core/Src/main.c ****   {
 888              		.loc 1 358 7 is_stmt 0 view .LVU208
 889 001e FFF7FEFF 		bl	HAL_UART_Init
 890              	.LVL62:
 358:Core/Src/main.c ****   {
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s 			page 35


 891              		.loc 1 358 6 view .LVU209
 892 0022 00B9     		cbnz	r0, .L33
 366:Core/Src/main.c **** 
 893              		.loc 1 366 1 view .LVU210
 894 0024 08BD     		pop	{r3, pc}
 895              	.L33:
 360:Core/Src/main.c ****   }
 896              		.loc 1 360 5 is_stmt 1 view .LVU211
 897 0026 FFF7FEFF 		bl	Error_Handler
 898              	.LVL63:
 899              	.L35:
 900 002a 00BF     		.align	2
 901              	.L34:
 902 002c 00000000 		.word	huart1
 903 0030 00100140 		.word	1073811456
 904              		.cfi_endproc
 905              	.LFE142:
 907              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 908              		.align	1
 909              		.syntax unified
 910              		.thumb
 911              		.thumb_func
 913              	MX_USART2_UART_Init:
 914              	.LFB143:
 374:Core/Src/main.c **** 
 915              		.loc 1 374 1 view -0
 916              		.cfi_startproc
 917              		@ args = 0, pretend = 0, frame = 0
 918              		@ frame_needed = 0, uses_anonymous_args = 0
 919 0000 08B5     		push	{r3, lr}
 920              		.cfi_def_cfa_offset 8
 921              		.cfi_offset 3, -8
 922              		.cfi_offset 14, -4
 383:Core/Src/main.c ****   huart2.Init.BaudRate = 230400;
 923              		.loc 1 383 3 view .LVU213
 383:Core/Src/main.c ****   huart2.Init.BaudRate = 230400;
 924              		.loc 1 383 19 is_stmt 0 view .LVU214
 925 0002 0A48     		ldr	r0, .L40
 926 0004 0A4B     		ldr	r3, .L40+4
 927 0006 0360     		str	r3, [r0]
 384:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 928              		.loc 1 384 3 is_stmt 1 view .LVU215
 384:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 929              		.loc 1 384 24 is_stmt 0 view .LVU216
 930 0008 4FF46133 		mov	r3, #230400
 931 000c 4360     		str	r3, [r0, #4]
 385:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 932              		.loc 1 385 3 is_stmt 1 view .LVU217
 385:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 933              		.loc 1 385 26 is_stmt 0 view .LVU218
 934 000e 0023     		movs	r3, #0
 935 0010 8360     		str	r3, [r0, #8]
 386:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 936              		.loc 1 386 3 is_stmt 1 view .LVU219
 386:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 937              		.loc 1 386 24 is_stmt 0 view .LVU220
 938 0012 C360     		str	r3, [r0, #12]
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s 			page 36


 387:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 939              		.loc 1 387 3 is_stmt 1 view .LVU221
 387:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 940              		.loc 1 387 22 is_stmt 0 view .LVU222
 941 0014 0361     		str	r3, [r0, #16]
 388:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 942              		.loc 1 388 3 is_stmt 1 view .LVU223
 388:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 943              		.loc 1 388 20 is_stmt 0 view .LVU224
 944 0016 0C22     		movs	r2, #12
 945 0018 4261     		str	r2, [r0, #20]
 389:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 946              		.loc 1 389 3 is_stmt 1 view .LVU225
 389:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 947              		.loc 1 389 25 is_stmt 0 view .LVU226
 948 001a 8361     		str	r3, [r0, #24]
 390:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 949              		.loc 1 390 3 is_stmt 1 view .LVU227
 390:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 950              		.loc 1 390 28 is_stmt 0 view .LVU228
 951 001c C361     		str	r3, [r0, #28]
 391:Core/Src/main.c ****   {
 952              		.loc 1 391 3 is_stmt 1 view .LVU229
 391:Core/Src/main.c ****   {
 953              		.loc 1 391 7 is_stmt 0 view .LVU230
 954 001e FFF7FEFF 		bl	HAL_UART_Init
 955              	.LVL64:
 391:Core/Src/main.c ****   {
 956              		.loc 1 391 6 view .LVU231
 957 0022 00B9     		cbnz	r0, .L39
 399:Core/Src/main.c **** 
 958              		.loc 1 399 1 view .LVU232
 959 0024 08BD     		pop	{r3, pc}
 960              	.L39:
 393:Core/Src/main.c ****   }
 961              		.loc 1 393 5 is_stmt 1 view .LVU233
 962 0026 FFF7FEFF 		bl	Error_Handler
 963              	.LVL65:
 964              	.L41:
 965 002a 00BF     		.align	2
 966              	.L40:
 967 002c 00000000 		.word	huart2
 968 0030 00440040 		.word	1073759232
 969              		.cfi_endproc
 970              	.LFE143:
 972              		.section	.text.MX_I2C1_Init,"ax",%progbits
 973              		.align	1
 974              		.syntax unified
 975              		.thumb
 976              		.thumb_func
 978              	MX_I2C1_Init:
 979              	.LFB140:
 269:Core/Src/main.c **** 
 980              		.loc 1 269 1 view -0
 981              		.cfi_startproc
 982              		@ args = 0, pretend = 0, frame = 0
 983              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s 			page 37


 984 0000 08B5     		push	{r3, lr}
 985              		.cfi_def_cfa_offset 8
 986              		.cfi_offset 3, -8
 987              		.cfi_offset 14, -4
 278:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 988              		.loc 1 278 3 view .LVU235
 278:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 989              		.loc 1 278 18 is_stmt 0 view .LVU236
 990 0002 0A48     		ldr	r0, .L46
 991 0004 0A4B     		ldr	r3, .L46+4
 992 0006 0360     		str	r3, [r0]
 279:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 993              		.loc 1 279 3 is_stmt 1 view .LVU237
 279:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 994              		.loc 1 279 25 is_stmt 0 view .LVU238
 995 0008 0A4B     		ldr	r3, .L46+8
 996 000a 4360     		str	r3, [r0, #4]
 280:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 997              		.loc 1 280 3 is_stmt 1 view .LVU239
 280:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 998              		.loc 1 280 24 is_stmt 0 view .LVU240
 999 000c 0023     		movs	r3, #0
 1000 000e 8360     		str	r3, [r0, #8]
 281:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 1001              		.loc 1 281 3 is_stmt 1 view .LVU241
 281:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 1002              		.loc 1 281 26 is_stmt 0 view .LVU242
 1003 0010 C360     		str	r3, [r0, #12]
 282:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 1004              		.loc 1 282 3 is_stmt 1 view .LVU243
 282:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 1005              		.loc 1 282 29 is_stmt 0 view .LVU244
 1006 0012 4FF48042 		mov	r2, #16384
 1007 0016 0261     		str	r2, [r0, #16]
 283:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 1008              		.loc 1 283 3 is_stmt 1 view .LVU245
 283:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 1009              		.loc 1 283 30 is_stmt 0 view .LVU246
 1010 0018 4361     		str	r3, [r0, #20]
 284:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 1011              		.loc 1 284 3 is_stmt 1 view .LVU247
 284:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 1012              		.loc 1 284 26 is_stmt 0 view .LVU248
 1013 001a 8361     		str	r3, [r0, #24]
 285:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 1014              		.loc 1 285 3 is_stmt 1 view .LVU249
 285:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 1015              		.loc 1 285 30 is_stmt 0 view .LVU250
 1016 001c C361     		str	r3, [r0, #28]
 286:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 1017              		.loc 1 286 3 is_stmt 1 view .LVU251
 286:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 1018              		.loc 1 286 28 is_stmt 0 view .LVU252
 1019 001e 0362     		str	r3, [r0, #32]
 287:Core/Src/main.c ****   {
 1020              		.loc 1 287 3 is_stmt 1 view .LVU253
 287:Core/Src/main.c ****   {
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s 			page 38


 1021              		.loc 1 287 7 is_stmt 0 view .LVU254
 1022 0020 FFF7FEFF 		bl	HAL_I2C_Init
 1023              	.LVL66:
 287:Core/Src/main.c ****   {
 1024              		.loc 1 287 6 view .LVU255
 1025 0024 00B9     		cbnz	r0, .L45
 295:Core/Src/main.c **** 
 1026              		.loc 1 295 1 view .LVU256
 1027 0026 08BD     		pop	{r3, pc}
 1028              	.L45:
 289:Core/Src/main.c ****   }
 1029              		.loc 1 289 5 is_stmt 1 view .LVU257
 1030 0028 FFF7FEFF 		bl	Error_Handler
 1031              	.LVL67:
 1032              	.L47:
 1033              		.align	2
 1034              	.L46:
 1035 002c 00000000 		.word	hi2c1
 1036 0030 00540040 		.word	1073763328
 1037 0034 A0860100 		.word	100000
 1038              		.cfi_endproc
 1039              	.LFE140:
 1041              		.section	.text.MX_SPI3_Init,"ax",%progbits
 1042              		.align	1
 1043              		.syntax unified
 1044              		.thumb
 1045              		.thumb_func
 1047              	MX_SPI3_Init:
 1048              	.LFB141:
 303:Core/Src/main.c **** 
 1049              		.loc 1 303 1 view -0
 1050              		.cfi_startproc
 1051              		@ args = 0, pretend = 0, frame = 0
 1052              		@ frame_needed = 0, uses_anonymous_args = 0
 1053 0000 08B5     		push	{r3, lr}
 1054              		.cfi_def_cfa_offset 8
 1055              		.cfi_offset 3, -8
 1056              		.cfi_offset 14, -4
 313:Core/Src/main.c ****   hspi3.Init.Mode = SPI_MODE_MASTER;
 1057              		.loc 1 313 3 view .LVU259
 313:Core/Src/main.c ****   hspi3.Init.Mode = SPI_MODE_MASTER;
 1058              		.loc 1 313 18 is_stmt 0 view .LVU260
 1059 0002 0D48     		ldr	r0, .L52
 1060 0004 0D4B     		ldr	r3, .L52+4
 1061 0006 0360     		str	r3, [r0]
 314:Core/Src/main.c ****   hspi3.Init.Direction = SPI_DIRECTION_2LINES;
 1062              		.loc 1 314 3 is_stmt 1 view .LVU261
 314:Core/Src/main.c ****   hspi3.Init.Direction = SPI_DIRECTION_2LINES;
 1063              		.loc 1 314 19 is_stmt 0 view .LVU262
 1064 0008 4FF48273 		mov	r3, #260
 1065 000c 4360     		str	r3, [r0, #4]
 315:Core/Src/main.c ****   hspi3.Init.DataSize = SPI_DATASIZE_8BIT;
 1066              		.loc 1 315 3 is_stmt 1 view .LVU263
 315:Core/Src/main.c ****   hspi3.Init.DataSize = SPI_DATASIZE_8BIT;
 1067              		.loc 1 315 24 is_stmt 0 view .LVU264
 1068 000e 0023     		movs	r3, #0
 1069 0010 8360     		str	r3, [r0, #8]
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s 			page 39


 316:Core/Src/main.c ****   hspi3.Init.CLKPolarity = SPI_POLARITY_LOW;
 1070              		.loc 1 316 3 is_stmt 1 view .LVU265
 316:Core/Src/main.c ****   hspi3.Init.CLKPolarity = SPI_POLARITY_LOW;
 1071              		.loc 1 316 23 is_stmt 0 view .LVU266
 1072 0012 C360     		str	r3, [r0, #12]
 317:Core/Src/main.c ****   hspi3.Init.CLKPhase = SPI_PHASE_1EDGE;
 1073              		.loc 1 317 3 is_stmt 1 view .LVU267
 317:Core/Src/main.c ****   hspi3.Init.CLKPhase = SPI_PHASE_1EDGE;
 1074              		.loc 1 317 26 is_stmt 0 view .LVU268
 1075 0014 0361     		str	r3, [r0, #16]
 318:Core/Src/main.c ****   hspi3.Init.NSS = SPI_NSS_SOFT;
 1076              		.loc 1 318 3 is_stmt 1 view .LVU269
 318:Core/Src/main.c ****   hspi3.Init.NSS = SPI_NSS_SOFT;
 1077              		.loc 1 318 23 is_stmt 0 view .LVU270
 1078 0016 4361     		str	r3, [r0, #20]
 319:Core/Src/main.c ****   hspi3.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 1079              		.loc 1 319 3 is_stmt 1 view .LVU271
 319:Core/Src/main.c ****   hspi3.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 1080              		.loc 1 319 18 is_stmt 0 view .LVU272
 1081 0018 4FF40072 		mov	r2, #512
 1082 001c 8261     		str	r2, [r0, #24]
 320:Core/Src/main.c ****   hspi3.Init.FirstBit = SPI_FIRSTBIT_MSB;
 1083              		.loc 1 320 3 is_stmt 1 view .LVU273
 320:Core/Src/main.c ****   hspi3.Init.FirstBit = SPI_FIRSTBIT_MSB;
 1084              		.loc 1 320 32 is_stmt 0 view .LVU274
 1085 001e C361     		str	r3, [r0, #28]
 321:Core/Src/main.c ****   hspi3.Init.TIMode = SPI_TIMODE_DISABLE;
 1086              		.loc 1 321 3 is_stmt 1 view .LVU275
 321:Core/Src/main.c ****   hspi3.Init.TIMode = SPI_TIMODE_DISABLE;
 1087              		.loc 1 321 23 is_stmt 0 view .LVU276
 1088 0020 0362     		str	r3, [r0, #32]
 322:Core/Src/main.c ****   hspi3.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 1089              		.loc 1 322 3 is_stmt 1 view .LVU277
 322:Core/Src/main.c ****   hspi3.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 1090              		.loc 1 322 21 is_stmt 0 view .LVU278
 1091 0022 4362     		str	r3, [r0, #36]
 323:Core/Src/main.c ****   hspi3.Init.CRCPolynomial = 10;
 1092              		.loc 1 323 3 is_stmt 1 view .LVU279
 323:Core/Src/main.c ****   hspi3.Init.CRCPolynomial = 10;
 1093              		.loc 1 323 29 is_stmt 0 view .LVU280
 1094 0024 8362     		str	r3, [r0, #40]
 324:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi3) != HAL_OK)
 1095              		.loc 1 324 3 is_stmt 1 view .LVU281
 324:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi3) != HAL_OK)
 1096              		.loc 1 324 28 is_stmt 0 view .LVU282
 1097 0026 0A23     		movs	r3, #10
 1098 0028 C362     		str	r3, [r0, #44]
 325:Core/Src/main.c ****   {
 1099              		.loc 1 325 3 is_stmt 1 view .LVU283
 325:Core/Src/main.c ****   {
 1100              		.loc 1 325 7 is_stmt 0 view .LVU284
 1101 002a FFF7FEFF 		bl	HAL_SPI_Init
 1102              	.LVL68:
 325:Core/Src/main.c ****   {
 1103              		.loc 1 325 6 view .LVU285
 1104 002e 00B9     		cbnz	r0, .L51
 333:Core/Src/main.c **** 
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s 			page 40


 1105              		.loc 1 333 1 view .LVU286
 1106 0030 08BD     		pop	{r3, pc}
 1107              	.L51:
 327:Core/Src/main.c ****   }
 1108              		.loc 1 327 5 is_stmt 1 view .LVU287
 1109 0032 FFF7FEFF 		bl	Error_Handler
 1110              	.LVL69:
 1111              	.L53:
 1112 0036 00BF     		.align	2
 1113              	.L52:
 1114 0038 00000000 		.word	hspi3
 1115 003c 003C0040 		.word	1073757184
 1116              		.cfi_endproc
 1117              	.LFE141:
 1119              		.section	.text.SystemClock_Config,"ax",%progbits
 1120              		.align	1
 1121              		.global	SystemClock_Config
 1122              		.syntax unified
 1123              		.thumb
 1124              		.thumb_func
 1126              	SystemClock_Config:
 1127              	.LFB139:
 227:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1128              		.loc 1 227 1 view -0
 1129              		.cfi_startproc
 1130              		@ args = 0, pretend = 0, frame = 80
 1131              		@ frame_needed = 0, uses_anonymous_args = 0
 1132 0000 00B5     		push	{lr}
 1133              		.cfi_def_cfa_offset 4
 1134              		.cfi_offset 14, -4
 1135 0002 95B0     		sub	sp, sp, #84
 1136              		.cfi_def_cfa_offset 88
 228:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1137              		.loc 1 228 3 view .LVU289
 228:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1138              		.loc 1 228 22 is_stmt 0 view .LVU290
 1139 0004 3022     		movs	r2, #48
 1140 0006 0021     		movs	r1, #0
 1141 0008 08A8     		add	r0, sp, #32
 1142 000a FFF7FEFF 		bl	memset
 1143              	.LVL70:
 229:Core/Src/main.c **** 
 1144              		.loc 1 229 3 is_stmt 1 view .LVU291
 229:Core/Src/main.c **** 
 1145              		.loc 1 229 22 is_stmt 0 view .LVU292
 1146 000e 0023     		movs	r3, #0
 1147 0010 0393     		str	r3, [sp, #12]
 1148 0012 0493     		str	r3, [sp, #16]
 1149 0014 0593     		str	r3, [sp, #20]
 1150 0016 0693     		str	r3, [sp, #24]
 1151 0018 0793     		str	r3, [sp, #28]
 233:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1152              		.loc 1 233 3 is_stmt 1 view .LVU293
 1153              	.LBB11:
 233:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1154              		.loc 1 233 3 view .LVU294
 1155 001a 0193     		str	r3, [sp, #4]
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s 			page 41


 233:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1156              		.loc 1 233 3 view .LVU295
 1157 001c 184A     		ldr	r2, .L60
 1158 001e 116C     		ldr	r1, [r2, #64]
 1159 0020 41F08051 		orr	r1, r1, #268435456
 1160 0024 1164     		str	r1, [r2, #64]
 233:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1161              		.loc 1 233 3 view .LVU296
 1162 0026 126C     		ldr	r2, [r2, #64]
 1163 0028 02F08052 		and	r2, r2, #268435456
 1164 002c 0192     		str	r2, [sp, #4]
 233:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1165              		.loc 1 233 3 view .LVU297
 1166 002e 019A     		ldr	r2, [sp, #4]
 1167              	.LBE11:
 233:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1168              		.loc 1 233 3 view .LVU298
 234:Core/Src/main.c **** 
 1169              		.loc 1 234 3 view .LVU299
 1170              	.LBB12:
 234:Core/Src/main.c **** 
 1171              		.loc 1 234 3 view .LVU300
 1172 0030 0293     		str	r3, [sp, #8]
 234:Core/Src/main.c **** 
 1173              		.loc 1 234 3 view .LVU301
 1174 0032 144A     		ldr	r2, .L60+4
 1175 0034 1168     		ldr	r1, [r2]
 1176 0036 41F44041 		orr	r1, r1, #49152
 1177 003a 1160     		str	r1, [r2]
 234:Core/Src/main.c **** 
 1178              		.loc 1 234 3 view .LVU302
 1179 003c 1268     		ldr	r2, [r2]
 1180 003e 02F44042 		and	r2, r2, #49152
 1181 0042 0292     		str	r2, [sp, #8]
 234:Core/Src/main.c **** 
 1182              		.loc 1 234 3 view .LVU303
 1183 0044 029A     		ldr	r2, [sp, #8]
 1184              	.LBE12:
 234:Core/Src/main.c **** 
 1185              		.loc 1 234 3 view .LVU304
 239:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1186              		.loc 1 239 3 view .LVU305
 239:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1187              		.loc 1 239 36 is_stmt 0 view .LVU306
 1188 0046 0222     		movs	r2, #2
 1189 0048 0892     		str	r2, [sp, #32]
 240:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1190              		.loc 1 240 3 is_stmt 1 view .LVU307
 240:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1191              		.loc 1 240 30 is_stmt 0 view .LVU308
 1192 004a 0122     		movs	r2, #1
 1193 004c 0B92     		str	r2, [sp, #44]
 241:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 1194              		.loc 1 241 3 is_stmt 1 view .LVU309
 241:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 1195              		.loc 1 241 41 is_stmt 0 view .LVU310
 1196 004e 1022     		movs	r2, #16
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s 			page 42


 1197 0050 0C92     		str	r2, [sp, #48]
 242:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1198              		.loc 1 242 3 is_stmt 1 view .LVU311
 242:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1199              		.loc 1 242 34 is_stmt 0 view .LVU312
 1200 0052 0E93     		str	r3, [sp, #56]
 243:Core/Src/main.c ****   {
 1201              		.loc 1 243 3 is_stmt 1 view .LVU313
 243:Core/Src/main.c ****   {
 1202              		.loc 1 243 7 is_stmt 0 view .LVU314
 1203 0054 08A8     		add	r0, sp, #32
 1204 0056 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1205              	.LVL71:
 243:Core/Src/main.c ****   {
 1206              		.loc 1 243 6 view .LVU315
 1207 005a 68B9     		cbnz	r0, .L58
 250:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1208              		.loc 1 250 3 is_stmt 1 view .LVU316
 250:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1209              		.loc 1 250 31 is_stmt 0 view .LVU317
 1210 005c 0F23     		movs	r3, #15
 1211 005e 0393     		str	r3, [sp, #12]
 252:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1212              		.loc 1 252 3 is_stmt 1 view .LVU318
 252:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1213              		.loc 1 252 34 is_stmt 0 view .LVU319
 1214 0060 0021     		movs	r1, #0
 1215 0062 0491     		str	r1, [sp, #16]
 253:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1216              		.loc 1 253 3 is_stmt 1 view .LVU320
 253:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1217              		.loc 1 253 35 is_stmt 0 view .LVU321
 1218 0064 0591     		str	r1, [sp, #20]
 254:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1219              		.loc 1 254 3 is_stmt 1 view .LVU322
 254:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1220              		.loc 1 254 36 is_stmt 0 view .LVU323
 1221 0066 0691     		str	r1, [sp, #24]
 255:Core/Src/main.c **** 
 1222              		.loc 1 255 3 is_stmt 1 view .LVU324
 255:Core/Src/main.c **** 
 1223              		.loc 1 255 36 is_stmt 0 view .LVU325
 1224 0068 0791     		str	r1, [sp, #28]
 257:Core/Src/main.c ****   {
 1225              		.loc 1 257 3 is_stmt 1 view .LVU326
 257:Core/Src/main.c ****   {
 1226              		.loc 1 257 7 is_stmt 0 view .LVU327
 1227 006a 03A8     		add	r0, sp, #12
 1228 006c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1229              	.LVL72:
 257:Core/Src/main.c ****   {
 1230              		.loc 1 257 6 view .LVU328
 1231 0070 20B9     		cbnz	r0, .L59
 261:Core/Src/main.c **** 
 1232              		.loc 1 261 1 view .LVU329
 1233 0072 15B0     		add	sp, sp, #84
 1234              		.cfi_remember_state
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s 			page 43


 1235              		.cfi_def_cfa_offset 4
 1236              		@ sp needed
 1237 0074 5DF804FB 		ldr	pc, [sp], #4
 1238              	.L58:
 1239              		.cfi_restore_state
 245:Core/Src/main.c ****   }
 1240              		.loc 1 245 5 is_stmt 1 view .LVU330
 1241 0078 FFF7FEFF 		bl	Error_Handler
 1242              	.LVL73:
 1243              	.L59:
 259:Core/Src/main.c ****   }
 1244              		.loc 1 259 5 view .LVU331
 1245 007c FFF7FEFF 		bl	Error_Handler
 1246              	.LVL74:
 1247              	.L61:
 1248              		.align	2
 1249              	.L60:
 1250 0080 00380240 		.word	1073887232
 1251 0084 00700040 		.word	1073770496
 1252              		.cfi_endproc
 1253              	.LFE139:
 1255              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 1256              		.align	2
 1257              	.LC7:
 1258 0000 424D4532 		.ascii	"BME280\000"
 1258      383000
 1259 0007 00       		.align	2
 1260              	.LC8:
 1261 0008 424D5032 		.ascii	"BMP280\000"
 1261      383000
 1262 000f 00       		.align	2
 1263              	.LC9:
 1264 0010 424D5032 		.ascii	"BMP280 initialization failed\012\000"
 1264      38302069 
 1264      6E697469 
 1264      616C697A 
 1264      6174696F 
 1265 002e 0000     		.align	2
 1266              	.LC10:
 1267 0030 0A424D50 		.ascii	"\012BMP280: found %s\012\000"
 1267      3238303A 
 1267      20666F75 
 1267      6E642025 
 1267      730A00
 1268 0043 00       		.align	2
 1269              	.LC11:
 1270 0044 4C6F5261 		.ascii	"LoRa is running... :) \012\015\000"
 1270      20697320 
 1270      72756E6E 
 1270      696E672E 
 1270      2E2E203A 
 1271 005d 000000   		.align	2
 1272              	.LC12:
 1273 0060 0A0D204C 		.ascii	"\012\015 LoRa failed :( \012\015 Error code: %d \012"
 1273      6F526120 
 1273      6661696C 
 1273      6564203A 
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s 			page 44


 1273      28200A0D 
 1274 0085 0D00     		.ascii	"\015\000"
 1275              		.section	.text.main,"ax",%progbits
 1276              		.align	1
 1277              		.global	main
 1278              		.syntax unified
 1279              		.thumb
 1280              		.thumb_func
 1282              	main:
 1283              	.LFB138:
 117:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 1284              		.loc 1 117 1 view -0
 1285              		.cfi_startproc
 1286              		@ args = 0, pretend = 0, frame = 176
 1287              		@ frame_needed = 0, uses_anonymous_args = 0
 1288 0000 70B5     		push	{r4, r5, r6, lr}
 1289              		.cfi_def_cfa_offset 16
 1290              		.cfi_offset 4, -16
 1291              		.cfi_offset 5, -12
 1292              		.cfi_offset 6, -8
 1293              		.cfi_offset 14, -4
 1294 0002 ACB0     		sub	sp, sp, #176
 1295              		.cfi_def_cfa_offset 192
 125:Core/Src/main.c **** 
 1296              		.loc 1 125 3 view .LVU333
 1297 0004 FFF7FEFF 		bl	HAL_Init
 1298              	.LVL75:
 132:Core/Src/main.c **** 
 1299              		.loc 1 132 3 view .LVU334
 1300 0008 FFF7FEFF 		bl	SystemClock_Config
 1301              	.LVL76:
 139:Core/Src/main.c ****   MX_USART1_UART_Init();
 1302              		.loc 1 139 3 view .LVU335
 1303 000c FFF7FEFF 		bl	MX_GPIO_Init
 1304              	.LVL77:
 140:Core/Src/main.c ****   MX_USART2_UART_Init();
 1305              		.loc 1 140 3 view .LVU336
 1306 0010 FFF7FEFF 		bl	MX_USART1_UART_Init
 1307              	.LVL78:
 141:Core/Src/main.c ****   MX_I2C1_Init();
 1308              		.loc 1 141 3 view .LVU337
 1309 0014 FFF7FEFF 		bl	MX_USART2_UART_Init
 1310              	.LVL79:
 142:Core/Src/main.c ****   MX_SPI3_Init();
 1311              		.loc 1 142 3 view .LVU338
 1312 0018 FFF7FEFF 		bl	MX_I2C1_Init
 1313              	.LVL80:
 143:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1314              		.loc 1 143 3 view .LVU339
 1315 001c FFF7FEFF 		bl	MX_SPI3_Init
 1316              	.LVL81:
 146:Core/Src/main.c **** 	bmp280.addr = 0x77;
 1317              		.loc 1 146 3 view .LVU340
 1318 0020 5F4C     		ldr	r4, .L75
 1319 0022 2046     		mov	r0, r4
 1320 0024 FFF7FEFF 		bl	bmp280_init_default_params
 1321              	.LVL82:
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s 			page 45


 147:Core/Src/main.c **** 	bmp280.i2c = &hi2c1;
 1322              		.loc 1 147 2 view .LVU341
 147:Core/Src/main.c **** 	bmp280.i2c = &hi2c1;
 1323              		.loc 1 147 14 is_stmt 0 view .LVU342
 1324 0028 7723     		movs	r3, #119
 1325 002a 24F8083C 		strh	r3, [r4, #-8]	@ movhi
 148:Core/Src/main.c **** 
 1326              		.loc 1 148 2 is_stmt 1 view .LVU343
 148:Core/Src/main.c **** 
 1327              		.loc 1 148 13 is_stmt 0 view .LVU344
 1328 002e 5D4B     		ldr	r3, .L75+4
 1329 0030 44F8043C 		str	r3, [r4, #-4]
 150:Core/Src/main.c **** 		size = sprintf((char *)Data, "BMP280 initialization failed\n");
 1330              		.loc 1 150 2 is_stmt 1 view .LVU345
 150:Core/Src/main.c **** 		size = sprintf((char *)Data, "BMP280 initialization failed\n");
 1331              		.loc 1 150 8 is_stmt 0 view .LVU346
 1332 0034 15E0     		b	.L63
 1333              	.L64:
 151:Core/Src/main.c **** 		HAL_UART_Transmit(&huart2, Data, size, 1000);
 1334              		.loc 1 151 3 is_stmt 1 view .LVU347
 151:Core/Src/main.c **** 		HAL_UART_Transmit(&huart2, Data, size, 1000);
 1335              		.loc 1 151 10 is_stmt 0 view .LVU348
 1336 0036 5C4D     		ldr	r5, .L75+8
 1337 0038 2C46     		mov	r4, r5
 1338 003a 5C4E     		ldr	r6, .L75+12
 1339 003c 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 1340 003e 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1341 0040 96E80F00 		ldm	r6, {r0, r1, r2, r3}
 1342 0044 07C4     		stmia	r4!, {r0, r1, r2}
 1343 0046 2380     		strh	r3, [r4]	@ movhi
 151:Core/Src/main.c **** 		HAL_UART_Transmit(&huart2, Data, size, 1000);
 1344              		.loc 1 151 8 view .LVU349
 1345 0048 1D22     		movs	r2, #29
 1346 004a 594B     		ldr	r3, .L75+16
 1347 004c 1A80     		strh	r2, [r3]	@ movhi
 152:Core/Src/main.c **** 		HAL_Delay(2000);
 1348              		.loc 1 152 3 is_stmt 1 view .LVU350
 1349 004e 4FF47A73 		mov	r3, #1000
 1350 0052 2946     		mov	r1, r5
 1351 0054 5748     		ldr	r0, .L75+20
 1352 0056 FFF7FEFF 		bl	HAL_UART_Transmit
 1353              	.LVL83:
 153:Core/Src/main.c **** 	}
 1354              		.loc 1 153 3 view .LVU351
 1355 005a 4FF4FA60 		mov	r0, #2000
 1356 005e FFF7FEFF 		bl	HAL_Delay
 1357              	.LVL84:
 1358              	.L63:
 150:Core/Src/main.c **** 		size = sprintf((char *)Data, "BMP280 initialization failed\n");
 1359              		.loc 1 150 9 view .LVU352
 150:Core/Src/main.c **** 		size = sprintf((char *)Data, "BMP280 initialization failed\n");
 1360              		.loc 1 150 10 is_stmt 0 view .LVU353
 1361 0062 4F49     		ldr	r1, .L75
 1362 0064 A1F12C00 		sub	r0, r1, #44
 1363 0068 FFF7FEFF 		bl	bmp280_init
 1364              	.LVL85:
 150:Core/Src/main.c **** 		size = sprintf((char *)Data, "BMP280 initialization failed\n");
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s 			page 46


 1365              		.loc 1 150 9 view .LVU354
 1366 006c 0028     		cmp	r0, #0
 1367 006e E2D0     		beq	.L64
 155:Core/Src/main.c **** 	size = sprintf((char *)Data, "\nBMP280: found %s\n", bme280p ? "BME280" : "BMP280");
 1368              		.loc 1 155 2 is_stmt 1 view .LVU355
 155:Core/Src/main.c **** 	size = sprintf((char *)Data, "\nBMP280: found %s\n", bme280p ? "BME280" : "BMP280");
 1369              		.loc 1 155 23 is_stmt 0 view .LVU356
 1370 0070 514B     		ldr	r3, .L75+24
 1371 0072 93F83230 		ldrb	r3, [r3, #50]	@ zero_extendqisi2
 1372              	.LVL86:
 156:Core/Src/main.c **** 	HAL_UART_Transmit(&huart2, Data, size, 1000);
 1373              		.loc 1 156 2 is_stmt 1 view .LVU357
 156:Core/Src/main.c **** 	HAL_UART_Transmit(&huart2, Data, size, 1000);
 1374              		.loc 1 156 9 is_stmt 0 view .LVU358
 1375 0076 602B     		cmp	r3, #96
 1376 0078 79D0     		beq	.L73
 1377 007a 504A     		ldr	r2, .L75+28
 1378              	.L65:
 156:Core/Src/main.c **** 	HAL_UART_Transmit(&huart2, Data, size, 1000);
 1379              		.loc 1 156 9 discriminator 4 view .LVU359
 1380 007c 4A4C     		ldr	r4, .L75+8
 1381 007e 5049     		ldr	r1, .L75+32
 1382 0080 2046     		mov	r0, r4
 1383 0082 FFF7FEFF 		bl	sprintf
 1384              	.LVL87:
 156:Core/Src/main.c **** 	HAL_UART_Transmit(&huart2, Data, size, 1000);
 1385              		.loc 1 156 7 discriminator 4 view .LVU360
 1386 0086 1622     		movs	r2, #22
 1387 0088 494B     		ldr	r3, .L75+16
 1388 008a 1A80     		strh	r2, [r3]	@ movhi
 157:Core/Src/main.c **** 
 1389              		.loc 1 157 2 is_stmt 1 discriminator 4 view .LVU361
 1390 008c 4FF47A73 		mov	r3, #1000
 1391 0090 2146     		mov	r1, r4
 1392 0092 4848     		ldr	r0, .L75+20
 1393 0094 FFF7FEFF 		bl	HAL_UART_Transmit
 1394              	.LVL88:
 159:Core/Src/main.c ****   myLoRa.CS_port         = GPIOA;
 1395              		.loc 1 159 3 discriminator 4 view .LVU362
 159:Core/Src/main.c ****   myLoRa.CS_port         = GPIOA;
 1396              		.loc 1 159 12 is_stmt 0 discriminator 4 view .LVU363
 1397 0098 4A4D     		ldr	r5, .L75+36
 1398 009a 6846     		mov	r0, sp
 1399 009c FFF7FEFF 		bl	newLoRa
 1400              	.LVL89:
 1401 00a0 AC46     		mov	ip, r5
 1402 00a2 6C46     		mov	r4, sp
 1403 00a4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1404 00a6 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 1405 00aa 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1406 00ac ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 1407 00b0 94E80700 		ldm	r4, {r0, r1, r2}
 1408 00b4 8CE80700 		stm	ip, {r0, r1, r2}
 160:Core/Src/main.c ****   myLoRa.CS_pin          = GPIO_PIN_4;
 1409              		.loc 1 160 3 is_stmt 1 discriminator 4 view .LVU364
 160:Core/Src/main.c ****   myLoRa.CS_pin          = GPIO_PIN_4;
 1410              		.loc 1 160 26 is_stmt 0 discriminator 4 view .LVU365
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s 			page 47


 1411 00b8 434B     		ldr	r3, .L75+40
 1412 00ba 2B60     		str	r3, [r5]
 161:Core/Src/main.c ****   myLoRa.reset_port      = GPIOB;
 1413              		.loc 1 161 3 is_stmt 1 discriminator 4 view .LVU366
 161:Core/Src/main.c ****   myLoRa.reset_port      = GPIOB;
 1414              		.loc 1 161 26 is_stmt 0 discriminator 4 view .LVU367
 1415 00bc 1023     		movs	r3, #16
 1416 00be AB80     		strh	r3, [r5, #4]	@ movhi
 162:Core/Src/main.c ****   myLoRa.reset_pin       = GPIO_PIN_8;
 1417              		.loc 1 162 3 is_stmt 1 discriminator 4 view .LVU368
 162:Core/Src/main.c ****   myLoRa.reset_pin       = GPIO_PIN_8;
 1418              		.loc 1 162 26 is_stmt 0 discriminator 4 view .LVU369
 1419 00c0 424B     		ldr	r3, .L75+44
 1420 00c2 AB60     		str	r3, [r5, #8]
 163:Core/Src/main.c ****   myLoRa.DIO0_port       = GPIOB;
 1421              		.loc 1 163 3 is_stmt 1 discriminator 4 view .LVU370
 163:Core/Src/main.c ****   myLoRa.DIO0_port       = GPIOB;
 1422              		.loc 1 163 26 is_stmt 0 discriminator 4 view .LVU371
 1423 00c4 4FF48072 		mov	r2, #256
 1424 00c8 AA81     		strh	r2, [r5, #12]	@ movhi
 164:Core/Src/main.c ****   myLoRa.DIO0_pin        = GPIO_PIN_9;
 1425              		.loc 1 164 3 is_stmt 1 discriminator 4 view .LVU372
 164:Core/Src/main.c ****   myLoRa.DIO0_pin        = GPIO_PIN_9;
 1426              		.loc 1 164 26 is_stmt 0 discriminator 4 view .LVU373
 1427 00ca 2B61     		str	r3, [r5, #16]
 165:Core/Src/main.c ****   myLoRa.hSPIx           = &hspi3;
 1428              		.loc 1 165 3 is_stmt 1 discriminator 4 view .LVU374
 165:Core/Src/main.c ****   myLoRa.hSPIx           = &hspi3;
 1429              		.loc 1 165 26 is_stmt 0 discriminator 4 view .LVU375
 1430 00cc 4FF40073 		mov	r3, #512
 1431 00d0 AB82     		strh	r3, [r5, #20]	@ movhi
 166:Core/Src/main.c **** 
 1432              		.loc 1 166 3 is_stmt 1 discriminator 4 view .LVU376
 166:Core/Src/main.c **** 
 1433              		.loc 1 166 26 is_stmt 0 discriminator 4 view .LVU377
 1434 00d2 3F4B     		ldr	r3, .L75+48
 1435 00d4 AB61     		str	r3, [r5, #24]
 168:Core/Src/main.c ****   uint8_t buff[128] = {"\0"};
 1436              		.loc 1 168 3 is_stmt 1 discriminator 4 view .LVU378
 168:Core/Src/main.c ****   uint8_t buff[128] = {"\0"};
 1437              		.loc 1 168 18 is_stmt 0 discriminator 4 view .LVU379
 1438 00d6 2846     		mov	r0, r5
 1439 00d8 FFF7FEFF 		bl	LoRa_init
 1440              	.LVL90:
 1441 00dc 0446     		mov	r4, r0
 1442              	.LVL91:
 169:Core/Src/main.c **** 
 1443              		.loc 1 169 3 is_stmt 1 discriminator 4 view .LVU380
 169:Core/Src/main.c **** 
 1444              		.loc 1 169 11 is_stmt 0 discriminator 4 view .LVU381
 1445 00de 0021     		movs	r1, #0
 1446 00e0 0C91     		str	r1, [sp, #48]
 1447 00e2 7C22     		movs	r2, #124
 1448 00e4 0DA8     		add	r0, sp, #52
 1449 00e6 FFF7FEFF 		bl	memset
 1450              	.LVL92:
 173:Core/Src/main.c ****   snprintf(buff,sizeof(buff),"LoRa is running... :) \n\r");
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s 			page 48


 1451              		.loc 1 173 1 is_stmt 1 discriminator 4 view .LVU382
 173:Core/Src/main.c ****   snprintf(buff,sizeof(buff),"LoRa is running... :) \n\r");
 1452              		.loc 1 173 4 is_stmt 0 discriminator 4 view .LVU383
 1453 00ea C82C     		cmp	r4, #200
 1454 00ec 41D0     		beq	.L74
 179:Core/Src/main.c ****   HAL_UART_Transmit(&huart2, buff, sizeof(buff)/sizeof(buff[0]), 1000);
 1455              		.loc 1 179 3 is_stmt 1 view .LVU384
 1456 00ee 2346     		mov	r3, r4
 1457 00f0 384A     		ldr	r2, .L75+52
 1458 00f2 8021     		movs	r1, #128
 1459 00f4 0CA8     		add	r0, sp, #48
 1460 00f6 FFF7FEFF 		bl	snprintf
 1461              	.LVL93:
 180:Core/Src/main.c **** }
 1462              		.loc 1 180 3 view .LVU385
 1463 00fa 4FF47A73 		mov	r3, #1000
 1464 00fe 8022     		movs	r2, #128
 1465 0100 0CA9     		add	r1, sp, #48
 1466 0102 2C48     		ldr	r0, .L75+20
 1467 0104 FFF7FEFF 		bl	HAL_UART_Transmit
 1468              	.LVL94:
 1469              	.L67:
 183:Core/Src/main.c **** myLoRa.spredingFactor        = SF_7;            // default = SF_7
 1470              		.loc 1 183 1 view .LVU386
 183:Core/Src/main.c **** myLoRa.spredingFactor        = SF_7;            // default = SF_7
 1471              		.loc 1 183 30 is_stmt 0 view .LVU387
 1472 0108 2E4B     		ldr	r3, .L75+36
 1473 010a 40F2B112 		movw	r2, #433
 1474 010e 1A62     		str	r2, [r3, #32]
 184:Core/Src/main.c **** myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 1475              		.loc 1 184 1 is_stmt 1 view .LVU388
 184:Core/Src/main.c **** myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 1476              		.loc 1 184 30 is_stmt 0 view .LVU389
 1477 0110 0722     		movs	r2, #7
 1478 0112 83F82420 		strb	r2, [r3, #36]
 185:Core/Src/main.c **** myLoRa.crcRate               = CR_4_8;          // default = CR_4_5
 1479              		.loc 1 185 1 is_stmt 1 view .LVU390
 185:Core/Src/main.c **** myLoRa.crcRate               = CR_4_8;          // default = CR_4_5
 1480              		.loc 1 185 30 is_stmt 0 view .LVU391
 1481 0116 0022     		movs	r2, #0
 1482 0118 83F82520 		strb	r2, [r3, #37]
 186:Core/Src/main.c **** myLoRa.power                 = POWER_20db;      // default = 20db
 1483              		.loc 1 186 1 is_stmt 1 view .LVU392
 186:Core/Src/main.c **** myLoRa.power                 = POWER_20db;      // default = 20db
 1484              		.loc 1 186 30 is_stmt 0 view .LVU393
 1485 011c 0422     		movs	r2, #4
 1486 011e 83F82620 		strb	r2, [r3, #38]
 187:Core/Src/main.c **** myLoRa.overCurrentProtection = 100;             // default = 100 mA
 1487              		.loc 1 187 1 is_stmt 1 view .LVU394
 187:Core/Src/main.c **** myLoRa.overCurrentProtection = 100;             // default = 100 mA
 1488              		.loc 1 187 30 is_stmt 0 view .LVU395
 1489 0122 FF22     		movs	r2, #255
 1490 0124 83F82A20 		strb	r2, [r3, #42]
 188:Core/Src/main.c **** myLoRa.preamble              = 8;              // default = 8;
 1491              		.loc 1 188 1 is_stmt 1 view .LVU396
 188:Core/Src/main.c **** myLoRa.preamble              = 8;              // default = 8;
 1492              		.loc 1 188 30 is_stmt 0 view .LVU397
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s 			page 49


 1493 0128 6422     		movs	r2, #100
 1494 012a 83F82B20 		strb	r2, [r3, #43]
 189:Core/Src/main.c **** 
 1495              		.loc 1 189 1 is_stmt 1 view .LVU398
 189:Core/Src/main.c **** 
 1496              		.loc 1 189 30 is_stmt 0 view .LVU399
 1497 012e 0822     		movs	r2, #8
 1498 0130 1A85     		strh	r2, [r3, #40]	@ movhi
 1499              	.L68:
 196:Core/Src/main.c ****   {
 1500              		.loc 1 196 3 is_stmt 1 view .LVU400
 199:Core/Src/main.c ****       HAL_UARTEx_ReceiveToIdle_IT(&huart1,(uint8_t*)gps_raw,512);
 1501              		.loc 1 199 5 view .LVU401
 199:Core/Src/main.c ****       HAL_UARTEx_ReceiveToIdle_IT(&huart1,(uint8_t*)gps_raw,512);
 1502              		.loc 1 199 9 is_stmt 0 view .LVU402
 1503 0132 294B     		ldr	r3, .L75+56
 1504 0134 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 199:Core/Src/main.c ****       HAL_UARTEx_ReceiveToIdle_IT(&huart1,(uint8_t*)gps_raw,512);
 1505              		.loc 1 199 8 view .LVU403
 1506 0136 002B     		cmp	r3, #0
 1507 0138 FBD0     		beq	.L68
 200:Core/Src/main.c ****       if (flag == 1) {
 1508              		.loc 1 200 7 is_stmt 1 view .LVU404
 1509 013a 4FF40072 		mov	r2, #512
 1510 013e 2749     		ldr	r1, .L75+60
 1511 0140 2748     		ldr	r0, .L75+64
 1512 0142 FFF7FEFF 		bl	HAL_UARTEx_ReceiveToIdle_IT
 1513              	.LVL95:
 201:Core/Src/main.c ****       LoRa_transmit(&myLoRa, (uint8_t*)transmit_data, 113, 100);
 1514              		.loc 1 201 7 view .LVU405
 201:Core/Src/main.c ****       LoRa_transmit(&myLoRa, (uint8_t*)transmit_data, 113, 100);
 1515              		.loc 1 201 16 is_stmt 0 view .LVU406
 1516 0146 274B     		ldr	r3, .L75+68
 1517 0148 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 201:Core/Src/main.c ****       LoRa_transmit(&myLoRa, (uint8_t*)transmit_data, 113, 100);
 1518              		.loc 1 201 10 view .LVU407
 1519 014a 012B     		cmp	r3, #1
 1520 014c F1D1     		bne	.L68
 202:Core/Src/main.c ****       flag = 0;
 1521              		.loc 1 202 7 is_stmt 1 view .LVU408
 1522 014e 264C     		ldr	r4, .L75+72
 1523 0150 6423     		movs	r3, #100
 1524 0152 7122     		movs	r2, #113
 1525 0154 2146     		mov	r1, r4
 1526 0156 1B48     		ldr	r0, .L75+36
 1527 0158 FFF7FEFF 		bl	LoRa_transmit
 1528              	.LVL96:
 203:Core/Src/main.c ****       memset(transmit_data, '\0', sizeof(transmit_data));
 1529              		.loc 1 203 7 view .LVU409
 203:Core/Src/main.c ****       memset(transmit_data, '\0', sizeof(transmit_data));
 1530              		.loc 1 203 12 is_stmt 0 view .LVU410
 1531 015c 0021     		movs	r1, #0
 1532 015e 214B     		ldr	r3, .L75+68
 1533 0160 1970     		strb	r1, [r3]
 204:Core/Src/main.c ****     }
 1534              		.loc 1 204 7 is_stmt 1 view .LVU411
 1535 0162 4FF48072 		mov	r2, #256
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s 			page 50


 1536 0166 2046     		mov	r0, r4
 1537 0168 FFF7FEFF 		bl	memset
 1538              	.LVL97:
 1539 016c E1E7     		b	.L68
 1540              	.LVL98:
 1541              	.L73:
 156:Core/Src/main.c **** 	HAL_UART_Transmit(&huart2, Data, size, 1000);
 1542              		.loc 1 156 9 is_stmt 0 view .LVU412
 1543 016e 1F4A     		ldr	r2, .L75+76
 1544 0170 84E7     		b	.L65
 1545              	.LVL99:
 1546              	.L74:
 174:Core/Src/main.c ****   LoRa_transmit(&myLoRa, (uint8_t*)buff, 120, 100);
 1547              		.loc 1 174 3 is_stmt 1 view .LVU413
 1548 0172 0CAC     		add	r4, sp, #48
 1549              	.LVL100:
 174:Core/Src/main.c ****   LoRa_transmit(&myLoRa, (uint8_t*)buff, 120, 100);
 1550              		.loc 1 174 3 is_stmt 0 view .LVU414
 1551 0174 1E4D     		ldr	r5, .L75+80
 1552 0176 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1553 0178 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1554 017a 95E80700 		ldm	r5, {r0, r1, r2}
 1555 017e 03C4     		stmia	r4!, {r0, r1}
 1556 0180 2270     		strb	r2, [r4]
 175:Core/Src/main.c ****   HAL_UART_Transmit(&huart2, buff, sizeof(buff)/sizeof(buff[0]), 1000);
 1557              		.loc 1 175 3 is_stmt 1 view .LVU415
 1558 0182 6423     		movs	r3, #100
 1559 0184 7822     		movs	r2, #120
 1560 0186 0CA9     		add	r1, sp, #48
 1561 0188 0E48     		ldr	r0, .L75+36
 1562 018a FFF7FEFF 		bl	LoRa_transmit
 1563              	.LVL101:
 176:Core/Src/main.c **** }
 1564              		.loc 1 176 3 view .LVU416
 1565 018e 4FF47A73 		mov	r3, #1000
 1566 0192 8022     		movs	r2, #128
 1567 0194 0CA9     		add	r1, sp, #48
 1568 0196 0748     		ldr	r0, .L75+20
 1569 0198 FFF7FEFF 		bl	HAL_UART_Transmit
 1570              	.LVL102:
 1571 019c B4E7     		b	.L67
 1572              	.L76:
 1573 019e 00BF     		.align	2
 1574              	.L75:
 1575 01a0 2C000000 		.word	bmp280+44
 1576 01a4 00000000 		.word	hi2c1
 1577 01a8 00000000 		.word	Data
 1578 01ac 10000000 		.word	.LC9
 1579 01b0 00000000 		.word	size
 1580 01b4 00000000 		.word	huart2
 1581 01b8 00000000 		.word	bmp280
 1582 01bc 08000000 		.word	.LC8
 1583 01c0 30000000 		.word	.LC10
 1584 01c4 00000000 		.word	myLoRa
 1585 01c8 00000240 		.word	1073872896
 1586 01cc 00040240 		.word	1073873920
 1587 01d0 00000000 		.word	hspi3
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s 			page 51


 1588 01d4 60000000 		.word	.LC12
 1589 01d8 00000000 		.word	isLoraReady
 1590 01dc 00000000 		.word	gps_raw
 1591 01e0 00000000 		.word	huart1
 1592 01e4 00000000 		.word	flag
 1593 01e8 00000000 		.word	transmit_data
 1594 01ec 00000000 		.word	.LC7
 1595 01f0 44000000 		.word	.LC11
 1596              		.cfi_endproc
 1597              	.LFE138:
 1599              		.global	Data
 1600              		.section	.bss.Data,"aw",%nobits
 1601              		.align	2
 1604              	Data:
 1605 0000 00000000 		.space	256
 1605      00000000 
 1605      00000000 
 1605      00000000 
 1605      00000000 
 1606              		.global	size
 1607              		.section	.bss.size,"aw",%nobits
 1608              		.align	1
 1611              	size:
 1612 0000 0000     		.space	2
 1613              		.global	sAltitude
 1614              		.section	.bss.sAltitude,"aw",%nobits
 1615              		.align	2
 1618              	sAltitude:
 1619 0000 00000000 		.space	128
 1619      00000000 
 1619      00000000 
 1619      00000000 
 1619      00000000 
 1620              		.global	sHumidity
 1621              		.section	.bss.sHumidity,"aw",%nobits
 1622              		.align	2
 1625              	sHumidity:
 1626 0000 00000000 		.space	128
 1626      00000000 
 1626      00000000 
 1626      00000000 
 1626      00000000 
 1627              		.global	sTemperature
 1628              		.section	.bss.sTemperature,"aw",%nobits
 1629              		.align	2
 1632              	sTemperature:
 1633 0000 00000000 		.space	128
 1633      00000000 
 1633      00000000 
 1633      00000000 
 1633      00000000 
 1634              		.global	sPressure
 1635              		.section	.bss.sPressure,"aw",%nobits
 1636              		.align	2
 1639              	sPressure:
 1640 0000 00000000 		.space	128
 1640      00000000 
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s 			page 52


 1640      00000000 
 1640      00000000 
 1640      00000000 
 1641              		.global	humidity
 1642              		.section	.bss.humidity,"aw",%nobits
 1643              		.align	2
 1646              	humidity:
 1647 0000 00000000 		.space	4
 1648              		.global	temperature
 1649              		.section	.bss.temperature,"aw",%nobits
 1650              		.align	2
 1653              	temperature:
 1654 0000 00000000 		.space	4
 1655              		.global	pressure
 1656              		.section	.bss.pressure,"aw",%nobits
 1657              		.align	2
 1660              	pressure:
 1661 0000 00000000 		.space	4
 1662              		.global	bmp280
 1663              		.section	.bss.bmp280,"aw",%nobits
 1664              		.align	2
 1667              	bmp280:
 1668 0000 00000000 		.space	52
 1668      00000000 
 1668      00000000 
 1668      00000000 
 1668      00000000 
 1669              		.global	altitude
 1670              		.section	.bss.altitude,"aw",%nobits
 1671              		.align	2
 1674              	altitude:
 1675 0000 00000000 		.space	4
 1676              		.global	P_b
 1677              		.section	.data.P_b,"aw"
 1678              		.align	2
 1681              	P_b:
 1682 0000 80E6C547 		.word	1204151936
 1683              		.global	currentTicks
 1684              		.section	.bss.currentTicks,"aw",%nobits
 1685              		.align	2
 1688              	currentTicks:
 1689 0000 00000000 		.space	4
 1690              		.global	preTicks
 1691              		.section	.bss.preTicks,"aw",%nobits
 1692              		.align	2
 1695              	preTicks:
 1696 0000 00000000 		.space	4
 1697              		.global	isLoraReady
 1698              		.section	.data.isLoraReady,"aw"
 1701              	isLoraReady:
 1702 0000 01       		.byte	1
 1703              		.global	myLoRa
 1704              		.section	.bss.myLoRa,"aw",%nobits
 1705              		.align	2
 1708              	myLoRa:
 1709 0000 00000000 		.space	44
 1709      00000000 
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s 			page 53


 1709      00000000 
 1709      00000000 
 1709      00000000 
 1710              		.global	transmit_data
 1711              		.section	.bss.transmit_data,"aw",%nobits
 1712              		.align	2
 1715              	transmit_data:
 1716 0000 00000000 		.space	256
 1716      00000000 
 1716      00000000 
 1716      00000000 
 1716      00000000 
 1717              		.global	bme280p
 1718              		.section	.bss.bme280p,"aw",%nobits
 1721              	bme280p:
 1722 0000 00       		.space	1
 1723              		.global	line
 1724              		.section	.bss.line,"aw",%nobits
 1725              		.align	2
 1728              	line:
 1729 0000 00000000 		.space	512
 1729      00000000 
 1729      00000000 
 1729      00000000 
 1729      00000000 
 1730              		.global	line_out
 1731              		.section	.bss.line_out,"aw",%nobits
 1732              		.align	2
 1735              	line_out:
 1736 0000 00000000 		.space	512
 1736      00000000 
 1736      00000000 
 1736      00000000 
 1736      00000000 
 1737              		.global	flag
 1738              		.section	.bss.flag,"aw",%nobits
 1741              	flag:
 1742 0000 00       		.space	1
 1743              		.global	gps_raw
 1744              		.section	.bss.gps_raw,"aw",%nobits
 1745              		.align	2
 1748              	gps_raw:
 1749 0000 00000000 		.space	512
 1749      00000000 
 1749      00000000 
 1749      00000000 
 1749      00000000 
 1750              		.global	huart2
 1751              		.section	.bss.huart2,"aw",%nobits
 1752              		.align	2
 1755              	huart2:
 1756 0000 00000000 		.space	68
 1756      00000000 
 1756      00000000 
 1756      00000000 
 1756      00000000 
 1757              		.global	huart1
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s 			page 54


 1758              		.section	.bss.huart1,"aw",%nobits
 1759              		.align	2
 1762              	huart1:
 1763 0000 00000000 		.space	68
 1763      00000000 
 1763      00000000 
 1763      00000000 
 1763      00000000 
 1764              		.global	hspi3
 1765              		.section	.bss.hspi3,"aw",%nobits
 1766              		.align	2
 1769              	hspi3:
 1770 0000 00000000 		.space	88
 1770      00000000 
 1770      00000000 
 1770      00000000 
 1770      00000000 
 1771              		.global	hi2c1
 1772              		.section	.bss.hi2c1,"aw",%nobits
 1773              		.align	2
 1776              	hi2c1:
 1777 0000 00000000 		.space	84
 1777      00000000 
 1777      00000000 
 1777      00000000 
 1777      00000000 
 1778              		.text
 1779              	.Letext0:
 1780              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 1781              		.file 5 "/Users/roryschram/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscod
 1782              		.file 6 "/Users/roryschram/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscod
 1783              		.file 7 "/Users/roryschram/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscod
 1784              		.file 8 "/Users/roryschram/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscod
 1785              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1786              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1787              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1788              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1789              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1790              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 1791              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 1792              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 1793              		.file 17 "Core/Inc/bmp280.h"
 1794              		.file 18 "Core/Inc/LoRa.h"
 1795              		.file 19 "/Users/roryschram/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vsco
 1796              		.file 20 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 1797              		.file 21 "/Users/roryschram/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vsco
 1798              		.file 22 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1799              		.file 23 "/Users/roryschram/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vsco
 1800              		.file 24 "<built-in>"
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s 			page 55


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s:21     .text.minmea_rescale:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s:26     .text.minmea_rescale:00000000 minmea_rescale
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s:97     .text.MX_GPIO_Init:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s:102    .text.MX_GPIO_Init:00000000 MX_GPIO_Init
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s:326    .text.MX_GPIO_Init:0000011c $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s:334    .rodata.HAL_UARTEx_RxEventCallback.str1.4:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s:354    .text.HAL_UARTEx_RxEventCallback:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s:360    .text.HAL_UARTEx_RxEventCallback:00000000 HAL_UARTEx_RxEventCallback
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s:619    .text.HAL_UARTEx_RxEventCallback:000001a8 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s:1741   .bss.flag:00000000 flag
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s:1715   .bss.transmit_data:00000000 transmit_data
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s:1748   .bss.gps_raw:00000000 gps_raw
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s:1728   .bss.line:00000000 line
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s:1611   .bss.size:00000000 size
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s:1646   .bss.humidity:00000000 humidity
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s:1660   .bss.pressure:00000000 pressure
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s:1653   .bss.temperature:00000000 temperature
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s:1667   .bss.bmp280:00000000 bmp280
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s:1681   .data.P_b:00000000 P_b
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s:1674   .bss.altitude:00000000 altitude
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s:1639   .bss.sPressure:00000000 sPressure
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s:1632   .bss.sTemperature:00000000 sTemperature
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s:1625   .bss.sHumidity:00000000 sHumidity
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s:1755   .bss.huart2:00000000 huart2
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s:1618   .bss.sAltitude:00000000 sAltitude
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s:649    .rodata.HAL_GPIO_EXTI_Callback.str1.4:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s:656    .text.HAL_GPIO_EXTI_Callback:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s:662    .text.HAL_GPIO_EXTI_Callback:00000000 HAL_GPIO_EXTI_Callback
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s:795    .text.HAL_GPIO_EXTI_Callback:000000b4 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s:1688   .bss.currentTicks:00000000 currentTicks
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s:1695   .bss.preTicks:00000000 preTicks
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s:805    .text.Error_Handler:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s:811    .text.Error_Handler:00000000 Error_Handler
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s:843    .text.MX_USART1_UART_Init:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s:848    .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s:902    .text.MX_USART1_UART_Init:0000002c $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s:1762   .bss.huart1:00000000 huart1
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s:908    .text.MX_USART2_UART_Init:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s:913    .text.MX_USART2_UART_Init:00000000 MX_USART2_UART_Init
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s:967    .text.MX_USART2_UART_Init:0000002c $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s:973    .text.MX_I2C1_Init:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s:978    .text.MX_I2C1_Init:00000000 MX_I2C1_Init
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s:1035   .text.MX_I2C1_Init:0000002c $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s:1776   .bss.hi2c1:00000000 hi2c1
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s:1042   .text.MX_SPI3_Init:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s:1047   .text.MX_SPI3_Init:00000000 MX_SPI3_Init
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s:1114   .text.MX_SPI3_Init:00000038 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s:1769   .bss.hspi3:00000000 hspi3
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s:1120   .text.SystemClock_Config:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s:1126   .text.SystemClock_Config:00000000 SystemClock_Config
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s:1250   .text.SystemClock_Config:00000080 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s:1256   .rodata.main.str1.4:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s:1276   .text.main:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s:1282   .text.main:00000000 main
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s:1575   .text.main:000001a0 $d
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s 			page 56


/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s:1604   .bss.Data:00000000 Data
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s:1708   .bss.myLoRa:00000000 myLoRa
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s:1701   .data.isLoraReady:00000000 isLoraReady
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s:1601   .bss.Data:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s:1608   .bss.size:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s:1615   .bss.sAltitude:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s:1622   .bss.sHumidity:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s:1629   .bss.sTemperature:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s:1636   .bss.sPressure:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s:1643   .bss.humidity:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s:1650   .bss.temperature:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s:1657   .bss.pressure:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s:1664   .bss.bmp280:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s:1671   .bss.altitude:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s:1678   .data.P_b:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s:1685   .bss.currentTicks:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s:1692   .bss.preTicks:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s:1705   .bss.myLoRa:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s:1712   .bss.transmit_data:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s:1721   .bss.bme280p:00000000 bme280p
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s:1722   .bss.bme280p:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s:1725   .bss.line:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s:1735   .bss.line_out:00000000 line_out
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s:1732   .bss.line_out:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s:1742   .bss.flag:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s:1745   .bss.gps_raw:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s:1752   .bss.huart2:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s:1759   .bss.huart1:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s:1766   .bss.hspi3:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s:1773   .bss.hi2c1:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
__aeabi_f2d
__aeabi_dsub
__aeabi_dmul
__aeabi_d2f
memset
strtok
strcpy
minmea_parse_rmc
strlen
sprintf
bmp280_read_float
pow
gcvt
HAL_UART_Transmit
HAL_GetTick
HAL_UART_Init
HAL_I2C_Init
HAL_SPI_Init
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//cc8QEIPA.s 			page 57


bmp280_init_default_params
HAL_Delay
bmp280_init
newLoRa
LoRa_init
snprintf
HAL_UARTEx_ReceiveToIdle_IT
LoRa_transmit
