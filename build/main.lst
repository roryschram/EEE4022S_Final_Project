ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.minmea_rescale,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	minmea_rescale:
  27              	.LVL0:
  28              	.LFB134:
  29              		.file 2 "Core/Inc/minmea.h"
   1:Core/Inc/minmea.h **** /*
   2:Core/Inc/minmea.h ****  * Copyright Â© 2014 Kosma Moczek <kosma@cloudyourcar.com>
   3:Core/Inc/minmea.h ****  * This program is free software. It comes without any warranty, to the extent
   4:Core/Inc/minmea.h ****  * permitted by applicable law. You can redistribute it and/or modify it under
   5:Core/Inc/minmea.h ****  * the terms of the Do What The Fuck You Want To Public License, Version 2, as
   6:Core/Inc/minmea.h ****  * published by Sam Hocevar. See the COPYING file for more details.
   7:Core/Inc/minmea.h ****  */
   8:Core/Inc/minmea.h **** 
   9:Core/Inc/minmea.h **** #ifndef MINMEA_H
  10:Core/Inc/minmea.h **** #define MINMEA_H
  11:Core/Inc/minmea.h **** 
  12:Core/Inc/minmea.h **** #ifdef __cplusplus
  13:Core/Inc/minmea.h **** extern "C" {
  14:Core/Inc/minmea.h **** #endif
  15:Core/Inc/minmea.h **** 
  16:Core/Inc/minmea.h **** #include <ctype.h>
  17:Core/Inc/minmea.h **** #include <stdint.h>
  18:Core/Inc/minmea.h **** #include <stdbool.h>
  19:Core/Inc/minmea.h **** #include <time.h>
  20:Core/Inc/minmea.h **** #include <math.h>
  21:Core/Inc/minmea.h **** #ifdef MINMEA_INCLUDE_COMPAT
  22:Core/Inc/minmea.h **** #include <minmea_compat.h>
  23:Core/Inc/minmea.h **** #endif
  24:Core/Inc/minmea.h **** 
  25:Core/Inc/minmea.h **** #ifndef MINMEA_MAX_SENTENCE_LENGTH
  26:Core/Inc/minmea.h **** #define MINMEA_MAX_SENTENCE_LENGTH 80
  27:Core/Inc/minmea.h **** #endif
  28:Core/Inc/minmea.h **** 
  29:Core/Inc/minmea.h **** enum minmea_sentence_id {
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 2


  30:Core/Inc/minmea.h ****     MINMEA_INVALID = -1,
  31:Core/Inc/minmea.h ****     MINMEA_UNKNOWN = 0,
  32:Core/Inc/minmea.h ****     MINMEA_SENTENCE_GBS,
  33:Core/Inc/minmea.h ****     MINMEA_SENTENCE_GGA,
  34:Core/Inc/minmea.h ****     MINMEA_SENTENCE_GLL,
  35:Core/Inc/minmea.h ****     MINMEA_SENTENCE_GSA,
  36:Core/Inc/minmea.h ****     MINMEA_SENTENCE_GST,
  37:Core/Inc/minmea.h ****     MINMEA_SENTENCE_GSV,
  38:Core/Inc/minmea.h ****     MINMEA_SENTENCE_RMC,
  39:Core/Inc/minmea.h ****     MINMEA_SENTENCE_VTG,
  40:Core/Inc/minmea.h ****     MINMEA_SENTENCE_ZDA,
  41:Core/Inc/minmea.h **** };
  42:Core/Inc/minmea.h **** 
  43:Core/Inc/minmea.h **** struct minmea_float {
  44:Core/Inc/minmea.h ****     int_least32_t value;
  45:Core/Inc/minmea.h ****     int_least32_t scale;
  46:Core/Inc/minmea.h **** };
  47:Core/Inc/minmea.h **** 
  48:Core/Inc/minmea.h **** struct minmea_date {
  49:Core/Inc/minmea.h ****     int day;
  50:Core/Inc/minmea.h ****     int month;
  51:Core/Inc/minmea.h ****     int year;
  52:Core/Inc/minmea.h **** };
  53:Core/Inc/minmea.h **** 
  54:Core/Inc/minmea.h **** struct minmea_time {
  55:Core/Inc/minmea.h ****     int hours;
  56:Core/Inc/minmea.h ****     int minutes;
  57:Core/Inc/minmea.h ****     int seconds;
  58:Core/Inc/minmea.h ****     int microseconds;
  59:Core/Inc/minmea.h **** };
  60:Core/Inc/minmea.h **** 
  61:Core/Inc/minmea.h **** struct minmea_sentence_gbs {
  62:Core/Inc/minmea.h ****     struct minmea_time time;
  63:Core/Inc/minmea.h ****     struct minmea_float err_latitude;
  64:Core/Inc/minmea.h ****     struct minmea_float err_longitude;
  65:Core/Inc/minmea.h ****     struct minmea_float err_altitude;
  66:Core/Inc/minmea.h ****     int svid;
  67:Core/Inc/minmea.h ****     struct minmea_float prob;
  68:Core/Inc/minmea.h ****     struct minmea_float bias;
  69:Core/Inc/minmea.h ****     struct minmea_float stddev;
  70:Core/Inc/minmea.h **** };
  71:Core/Inc/minmea.h **** 
  72:Core/Inc/minmea.h **** struct minmea_sentence_rmc {
  73:Core/Inc/minmea.h ****     struct minmea_time time;
  74:Core/Inc/minmea.h ****     bool valid;
  75:Core/Inc/minmea.h ****     struct minmea_float latitude;
  76:Core/Inc/minmea.h ****     struct minmea_float longitude;
  77:Core/Inc/minmea.h ****     struct minmea_float speed;
  78:Core/Inc/minmea.h ****     struct minmea_float course;
  79:Core/Inc/minmea.h ****     struct minmea_date date;
  80:Core/Inc/minmea.h ****     struct minmea_float variation;
  81:Core/Inc/minmea.h **** };
  82:Core/Inc/minmea.h **** 
  83:Core/Inc/minmea.h **** struct minmea_sentence_gga {
  84:Core/Inc/minmea.h ****     struct minmea_time time;
  85:Core/Inc/minmea.h ****     struct minmea_float latitude;
  86:Core/Inc/minmea.h ****     struct minmea_float longitude;
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 3


  87:Core/Inc/minmea.h ****     int fix_quality;
  88:Core/Inc/minmea.h ****     int satellites_tracked;
  89:Core/Inc/minmea.h ****     struct minmea_float hdop;
  90:Core/Inc/minmea.h ****     struct minmea_float altitude; char altitude_units;
  91:Core/Inc/minmea.h ****     struct minmea_float height; char height_units;
  92:Core/Inc/minmea.h ****     struct minmea_float dgps_age;
  93:Core/Inc/minmea.h **** };
  94:Core/Inc/minmea.h **** 
  95:Core/Inc/minmea.h **** enum minmea_gll_status {
  96:Core/Inc/minmea.h ****     MINMEA_GLL_STATUS_DATA_VALID = 'A',
  97:Core/Inc/minmea.h ****     MINMEA_GLL_STATUS_DATA_NOT_VALID = 'V',
  98:Core/Inc/minmea.h **** };
  99:Core/Inc/minmea.h **** 
 100:Core/Inc/minmea.h **** // FAA mode added to some fields in NMEA 2.3.
 101:Core/Inc/minmea.h **** enum minmea_faa_mode {
 102:Core/Inc/minmea.h ****     MINMEA_FAA_MODE_AUTONOMOUS = 'A',
 103:Core/Inc/minmea.h ****     MINMEA_FAA_MODE_DIFFERENTIAL = 'D',
 104:Core/Inc/minmea.h ****     MINMEA_FAA_MODE_ESTIMATED = 'E',
 105:Core/Inc/minmea.h ****     MINMEA_FAA_MODE_MANUAL = 'M',
 106:Core/Inc/minmea.h ****     MINMEA_FAA_MODE_SIMULATED = 'S',
 107:Core/Inc/minmea.h ****     MINMEA_FAA_MODE_NOT_VALID = 'N',
 108:Core/Inc/minmea.h ****     MINMEA_FAA_MODE_PRECISE = 'P',
 109:Core/Inc/minmea.h **** };
 110:Core/Inc/minmea.h **** 
 111:Core/Inc/minmea.h **** struct minmea_sentence_gll {
 112:Core/Inc/minmea.h ****     struct minmea_float latitude;
 113:Core/Inc/minmea.h ****     struct minmea_float longitude;
 114:Core/Inc/minmea.h ****     struct minmea_time time;
 115:Core/Inc/minmea.h ****     char status;
 116:Core/Inc/minmea.h ****     char mode;
 117:Core/Inc/minmea.h **** };
 118:Core/Inc/minmea.h **** 
 119:Core/Inc/minmea.h **** struct minmea_sentence_gst {
 120:Core/Inc/minmea.h ****     struct minmea_time time;
 121:Core/Inc/minmea.h ****     struct minmea_float rms_deviation;
 122:Core/Inc/minmea.h ****     struct minmea_float semi_major_deviation;
 123:Core/Inc/minmea.h ****     struct minmea_float semi_minor_deviation;
 124:Core/Inc/minmea.h ****     struct minmea_float semi_major_orientation;
 125:Core/Inc/minmea.h ****     struct minmea_float latitude_error_deviation;
 126:Core/Inc/minmea.h ****     struct minmea_float longitude_error_deviation;
 127:Core/Inc/minmea.h ****     struct minmea_float altitude_error_deviation;
 128:Core/Inc/minmea.h **** };
 129:Core/Inc/minmea.h **** 
 130:Core/Inc/minmea.h **** enum minmea_gsa_mode {
 131:Core/Inc/minmea.h ****     MINMEA_GPGSA_MODE_AUTO = 'A',
 132:Core/Inc/minmea.h ****     MINMEA_GPGSA_MODE_FORCED = 'M',
 133:Core/Inc/minmea.h **** };
 134:Core/Inc/minmea.h **** 
 135:Core/Inc/minmea.h **** enum minmea_gsa_fix_type {
 136:Core/Inc/minmea.h ****     MINMEA_GPGSA_FIX_NONE = 1,
 137:Core/Inc/minmea.h ****     MINMEA_GPGSA_FIX_2D = 2,
 138:Core/Inc/minmea.h ****     MINMEA_GPGSA_FIX_3D = 3,
 139:Core/Inc/minmea.h **** };
 140:Core/Inc/minmea.h **** 
 141:Core/Inc/minmea.h **** struct minmea_sentence_gsa {
 142:Core/Inc/minmea.h ****     char mode;
 143:Core/Inc/minmea.h ****     int fix_type;
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 4


 144:Core/Inc/minmea.h ****     int sats[12];
 145:Core/Inc/minmea.h ****     struct minmea_float pdop;
 146:Core/Inc/minmea.h ****     struct minmea_float hdop;
 147:Core/Inc/minmea.h ****     struct minmea_float vdop;
 148:Core/Inc/minmea.h **** };
 149:Core/Inc/minmea.h **** 
 150:Core/Inc/minmea.h **** struct minmea_sat_info {
 151:Core/Inc/minmea.h ****     int nr;
 152:Core/Inc/minmea.h ****     int elevation;
 153:Core/Inc/minmea.h ****     int azimuth;
 154:Core/Inc/minmea.h ****     int snr;
 155:Core/Inc/minmea.h **** };
 156:Core/Inc/minmea.h **** 
 157:Core/Inc/minmea.h **** struct minmea_sentence_gsv {
 158:Core/Inc/minmea.h ****     int total_msgs;
 159:Core/Inc/minmea.h ****     int msg_nr;
 160:Core/Inc/minmea.h ****     int total_sats;
 161:Core/Inc/minmea.h ****     struct minmea_sat_info sats[4];
 162:Core/Inc/minmea.h **** };
 163:Core/Inc/minmea.h **** 
 164:Core/Inc/minmea.h **** struct minmea_sentence_vtg {
 165:Core/Inc/minmea.h ****     struct minmea_float true_track_degrees;
 166:Core/Inc/minmea.h ****     struct minmea_float magnetic_track_degrees;
 167:Core/Inc/minmea.h ****     struct minmea_float speed_knots;
 168:Core/Inc/minmea.h ****     struct minmea_float speed_kph;
 169:Core/Inc/minmea.h ****     enum minmea_faa_mode faa_mode;
 170:Core/Inc/minmea.h **** };
 171:Core/Inc/minmea.h **** 
 172:Core/Inc/minmea.h **** struct minmea_sentence_zda {
 173:Core/Inc/minmea.h ****     struct minmea_time time;
 174:Core/Inc/minmea.h ****     struct minmea_date date;
 175:Core/Inc/minmea.h ****     int hour_offset;
 176:Core/Inc/minmea.h ****     int minute_offset;
 177:Core/Inc/minmea.h **** };
 178:Core/Inc/minmea.h **** 
 179:Core/Inc/minmea.h **** /**
 180:Core/Inc/minmea.h ****  * Calculate raw sentence checksum. Does not check sentence integrity.
 181:Core/Inc/minmea.h ****  */
 182:Core/Inc/minmea.h **** uint8_t minmea_checksum(const char *sentence);
 183:Core/Inc/minmea.h **** 
 184:Core/Inc/minmea.h **** /**
 185:Core/Inc/minmea.h ****  * Check sentence validity and checksum. Returns true for valid sentences.
 186:Core/Inc/minmea.h ****  */
 187:Core/Inc/minmea.h **** bool minmea_check(const char *sentence, bool strict);
 188:Core/Inc/minmea.h **** 
 189:Core/Inc/minmea.h **** /**
 190:Core/Inc/minmea.h ****  * Determine talker identifier.
 191:Core/Inc/minmea.h ****  */
 192:Core/Inc/minmea.h **** bool minmea_talker_id(char talker[3], const char *sentence);
 193:Core/Inc/minmea.h **** 
 194:Core/Inc/minmea.h **** /**
 195:Core/Inc/minmea.h ****  * Determine sentence identifier.
 196:Core/Inc/minmea.h ****  */
 197:Core/Inc/minmea.h **** enum minmea_sentence_id minmea_sentence_id(const char *sentence, bool strict);
 198:Core/Inc/minmea.h **** 
 199:Core/Inc/minmea.h **** /**
 200:Core/Inc/minmea.h ****  * Scanf-like processor for NMEA sentences. Supports the following formats:
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 5


 201:Core/Inc/minmea.h ****  * c - single character (char *)
 202:Core/Inc/minmea.h ****  * d - direction, returned as 1/-1, default 0 (int *)
 203:Core/Inc/minmea.h ****  * f - fractional, returned as value + scale (struct minmea_float *)
 204:Core/Inc/minmea.h ****  * i - decimal, default zero (int *)
 205:Core/Inc/minmea.h ****  * s - string (char *)
 206:Core/Inc/minmea.h ****  * t - talker identifier and type (char *)
 207:Core/Inc/minmea.h ****  * D - date (struct minmea_date *)
 208:Core/Inc/minmea.h ****  * T - time stamp (struct minmea_time *)
 209:Core/Inc/minmea.h ****  * _ - ignore this field
 210:Core/Inc/minmea.h ****  * ; - following fields are optional
 211:Core/Inc/minmea.h ****  * Returns true on success. See library source code for details.
 212:Core/Inc/minmea.h ****  */
 213:Core/Inc/minmea.h **** bool minmea_scan(const char *sentence, const char *format, ...);
 214:Core/Inc/minmea.h **** 
 215:Core/Inc/minmea.h **** /*
 216:Core/Inc/minmea.h ****  * Parse a specific type of sentence. Return true on success.
 217:Core/Inc/minmea.h ****  */
 218:Core/Inc/minmea.h **** bool minmea_parse_gbs(struct minmea_sentence_gbs *frame, const char *sentence);
 219:Core/Inc/minmea.h **** bool minmea_parse_rmc(struct minmea_sentence_rmc *frame, const char *sentence);
 220:Core/Inc/minmea.h **** bool minmea_parse_gga(struct minmea_sentence_gga *frame, const char *sentence);
 221:Core/Inc/minmea.h **** bool minmea_parse_gsa(struct minmea_sentence_gsa *frame, const char *sentence);
 222:Core/Inc/minmea.h **** bool minmea_parse_gll(struct minmea_sentence_gll *frame, const char *sentence);
 223:Core/Inc/minmea.h **** bool minmea_parse_gst(struct minmea_sentence_gst *frame, const char *sentence);
 224:Core/Inc/minmea.h **** bool minmea_parse_gsv(struct minmea_sentence_gsv *frame, const char *sentence);
 225:Core/Inc/minmea.h **** bool minmea_parse_vtg(struct minmea_sentence_vtg *frame, const char *sentence);
 226:Core/Inc/minmea.h **** bool minmea_parse_zda(struct minmea_sentence_zda *frame, const char *sentence);
 227:Core/Inc/minmea.h **** 
 228:Core/Inc/minmea.h **** /**
 229:Core/Inc/minmea.h ****  * Convert GPS UTC date/time representation to a UNIX calendar time.
 230:Core/Inc/minmea.h ****  */
 231:Core/Inc/minmea.h **** int minmea_getdatetime(struct tm *tm, const struct minmea_date *date, const struct minmea_time *tim
 232:Core/Inc/minmea.h **** 
 233:Core/Inc/minmea.h **** /**
 234:Core/Inc/minmea.h ****  * Convert GPS UTC date/time representation to a UNIX timestamp.
 235:Core/Inc/minmea.h ****  */
 236:Core/Inc/minmea.h **** int minmea_gettime(struct timespec *ts, const struct minmea_date *date, const struct minmea_time *t
 237:Core/Inc/minmea.h **** 
 238:Core/Inc/minmea.h **** /**
 239:Core/Inc/minmea.h ****  * Rescale a fixed-point value to a different scale. Rounds towards zero.
 240:Core/Inc/minmea.h ****  */
 241:Core/Inc/minmea.h **** static inline int_least32_t minmea_rescale(const struct minmea_float *f, int_least32_t new_scale)
 242:Core/Inc/minmea.h **** {
  30              		.loc 2 242 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              		.loc 2 242 1 is_stmt 0 view .LVU1
  36 0000 0346     		mov	r3, r0
 243:Core/Inc/minmea.h ****     if (f->scale == 0)
  37              		.loc 2 243 5 is_stmt 1 view .LVU2
  38              		.loc 2 243 10 is_stmt 0 view .LVU3
  39 0002 4068     		ldr	r0, [r0, #4]
  40              	.LVL1:
  41              		.loc 2 243 8 view .LVU4
  42 0004 F0B1     		cbz	r0, .L1
 244:Core/Inc/minmea.h ****         return 0;
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 6


 245:Core/Inc/minmea.h ****     if (f->scale == new_scale)
  43              		.loc 2 245 5 is_stmt 1 view .LVU5
  44              		.loc 2 245 8 is_stmt 0 view .LVU6
  45 0006 8842     		cmp	r0, r1
  46 0008 15D0     		beq	.L5
 246:Core/Inc/minmea.h ****         return f->value;
 247:Core/Inc/minmea.h ****     if (f->scale > new_scale)
  47              		.loc 2 247 5 is_stmt 1 view .LVU7
  48              		.loc 2 247 8 is_stmt 0 view .LVU8
  49 000a 8842     		cmp	r0, r1
  50 000c 15DD     		ble	.L4
 248:Core/Inc/minmea.h ****         return (f->value + ((f->value > 0) - (f->value < 0)) * f->scale/new_scale/2) / (f->scale/ne
  51              		.loc 2 248 9 is_stmt 1 view .LVU9
  52              		.loc 2 248 18 is_stmt 0 view .LVU10
  53 000e 1A68     		ldr	r2, [r3]
  54              		.loc 2 248 56 view .LVU11
  55 0010 D30F     		lsrs	r3, r2, #31
  56              	.LVL2:
  57              		.loc 2 248 44 view .LVU12
  58 0012 002A     		cmp	r2, #0
  59 0014 D4BF     		ite	le
  60 0016 5B42     		rsble	r3, r3, #0
  61 0018 C3F10103 		rsbgt	r3, r3, #1
  62              		.loc 2 248 62 view .LVU13
  63 001c 00FB03F3 		mul	r3, r0, r3
  64              		.loc 2 248 72 view .LVU14
  65 0020 93FBF1F3 		sdiv	r3, r3, r1
  66              		.loc 2 248 82 view .LVU15
  67 0024 03EBD373 		add	r3, r3, r3, lsr #31
  68              		.loc 2 248 26 view .LVU16
  69 0028 02EB6302 		add	r2, r2, r3, asr #1
  70              		.loc 2 248 97 view .LVU17
  71 002c 90FBF1F0 		sdiv	r0, r0, r1
  72              		.loc 2 248 86 view .LVU18
  73 0030 92FBF0F0 		sdiv	r0, r2, r0
  74 0034 7047     		bx	lr
  75              	.LVL3:
  76              	.L5:
 246:Core/Inc/minmea.h ****         return f->value;
  77              		.loc 2 246 9 is_stmt 1 view .LVU19
 246:Core/Inc/minmea.h ****         return f->value;
  78              		.loc 2 246 17 is_stmt 0 view .LVU20
  79 0036 1868     		ldr	r0, [r3]
  80 0038 7047     		bx	lr
  81              	.L4:
 249:Core/Inc/minmea.h ****     else
 250:Core/Inc/minmea.h ****         return f->value * (new_scale/f->scale);
  82              		.loc 2 250 9 is_stmt 1 view .LVU21
  83              		.loc 2 250 17 is_stmt 0 view .LVU22
  84 003a 1B68     		ldr	r3, [r3]
  85              	.LVL4:
  86              		.loc 2 250 37 view .LVU23
  87 003c 91FBF0F0 		sdiv	r0, r1, r0
  88              		.loc 2 250 25 view .LVU24
  89 0040 03FB00F0 		mul	r0, r3, r0
  90              	.L1:
 251:Core/Inc/minmea.h **** }
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 7


  91              		.loc 2 251 1 view .LVU25
  92 0044 7047     		bx	lr
  93              		.cfi_endproc
  94              	.LFE134:
  96              		.section	.text.MX_GPIO_Init,"ax",%progbits
  97              		.align	1
  98              		.syntax unified
  99              		.thumb
 100              		.thumb_func
 102              	MX_GPIO_Init:
 103              	.LFB146:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include <stdio.h>
  25:Core/Src/main.c **** #include "minmea.h"
  26:Core/Src/main.c **** #include <stdlib.h>
  27:Core/Src/main.c **** #include <string.h>
  28:Core/Src/main.c **** #include <stdint.h>
  29:Core/Src/main.c **** #include "bmp280.h"
  30:Core/Src/main.c **** #include <float.h>
  31:Core/Src/main.c **** #include <math.h>
  32:Core/Src/main.c **** #include <LoRa.h>
  33:Core/Src/main.c **** #include "ssd1306.h"
  34:Core/Src/main.c **** #include "fonts.h"
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* USER CODE END Includes */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* USER CODE END PTD */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  45:Core/Src/main.c **** /* USER CODE BEGIN PD */
  46:Core/Src/main.c **** #define INDENT_SPACES "  "
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 8


  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* USER CODE END PD */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  51:Core/Src/main.c **** /* USER CODE BEGIN PM */
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* USER CODE END PM */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  56:Core/Src/main.c **** I2C_HandleTypeDef hi2c1;
  57:Core/Src/main.c **** I2C_HandleTypeDef hi2c2;
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** SPI_HandleTypeDef hspi3;
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** TIM_HandleTypeDef htim3;
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** UART_HandleTypeDef huart1;
  64:Core/Src/main.c **** UART_HandleTypeDef huart2;
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** /* USER CODE BEGIN PV */
  67:Core/Src/main.c **** uint8_t gps_raw[512] = {"\0"};
  68:Core/Src/main.c **** uint8_t flag = 0;
  69:Core/Src/main.c **** char line_out[512] = {"\0"};
  70:Core/Src/main.c **** char line[512] = {"\0"};
  71:Core/Src/main.c **** bool bme280p;
  72:Core/Src/main.c **** uint8_t transmit_data[256] = {"\0"};
  73:Core/Src/main.c **** LoRa myLoRa;
  74:Core/Src/main.c **** bool isLoraReady = true;
  75:Core/Src/main.c **** int preTicks = 0;
  76:Core/Src/main.c **** int currentTicks = 0;
  77:Core/Src/main.c **** int iMode = 1;
  78:Core/Src/main.c **** char sMode[10];
  79:Core/Src/main.c **** bool bModeChanged = true;
  80:Core/Src/main.c **** bool sendData = false;
  81:Core/Src/main.c **** 
  82:Core/Src/main.c **** 
  83:Core/Src/main.c **** bool beginRead = false;
  84:Core/Src/main.c **** uint16_t packetSize = 0;
  85:Core/Src/main.c **** 
  86:Core/Src/main.c **** //Variables to work out altitude
  87:Core/Src/main.c **** 
  88:Core/Src/main.c **** //Pressure at sea level
  89:Core/Src/main.c **** float P_b = 101325;
  90:Core/Src/main.c **** 
  91:Core/Src/main.c **** //Height that we are calculating
  92:Core/Src/main.c **** float altitude = 0;
  93:Core/Src/main.c **** 
  94:Core/Src/main.c **** 
  95:Core/Src/main.c **** BMP280_HandleTypedef bmp280;
  96:Core/Src/main.c **** 
  97:Core/Src/main.c **** float pressure, temperature, humidity;
  98:Core/Src/main.c **** char sPressure[128] = {"\0"};
  99:Core/Src/main.c **** char sTemperature[128] = {"\0"};
 100:Core/Src/main.c **** char sHumidity[128] = {"\0"};
 101:Core/Src/main.c **** char sAltitude[128] = {"\0"};
 102:Core/Src/main.c **** 
 103:Core/Src/main.c **** size_t size;
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 9


 104:Core/Src/main.c **** uint8_t Data[256] = {"\0"};
 105:Core/Src/main.c **** 
 106:Core/Src/main.c **** 
 107:Core/Src/main.c **** /* USER CODE END PV */
 108:Core/Src/main.c **** 
 109:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
 110:Core/Src/main.c **** void SystemClock_Config(void);
 111:Core/Src/main.c **** static void MX_GPIO_Init(void);
 112:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
 113:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
 114:Core/Src/main.c **** static void MX_I2C1_Init(void);
 115:Core/Src/main.c **** static void MX_SPI3_Init(void);
 116:Core/Src/main.c **** static void MX_I2C2_Init(void);
 117:Core/Src/main.c **** static void MX_TIM3_Init(void);
 118:Core/Src/main.c **** /* USER CODE BEGIN PFP */
 119:Core/Src/main.c **** uint16_t buildDataPacket();
 120:Core/Src/main.c **** 
 121:Core/Src/main.c **** 
 122:Core/Src/main.c **** /* USER CODE END PFP */
 123:Core/Src/main.c **** 
 124:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 125:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 126:Core/Src/main.c **** 
 127:Core/Src/main.c **** /* USER CODE END 0 */
 128:Core/Src/main.c **** 
 129:Core/Src/main.c **** /**
 130:Core/Src/main.c ****   * @brief  The application entry point.
 131:Core/Src/main.c ****   * @retval int
 132:Core/Src/main.c ****   */
 133:Core/Src/main.c **** int main(void)
 134:Core/Src/main.c **** {
 135:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 136:Core/Src/main.c **** 
 137:Core/Src/main.c ****   /* USER CODE END 1 */
 138:Core/Src/main.c **** 
 139:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 140:Core/Src/main.c **** 
 141:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 142:Core/Src/main.c ****   HAL_Init();
 143:Core/Src/main.c **** 
 144:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 145:Core/Src/main.c **** 
 146:Core/Src/main.c ****   /* USER CODE END Init */
 147:Core/Src/main.c **** 
 148:Core/Src/main.c ****   /* Configure the system clock */
 149:Core/Src/main.c ****   SystemClock_Config();
 150:Core/Src/main.c **** 
 151:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 152:Core/Src/main.c **** 
 153:Core/Src/main.c ****   /* USER CODE END SysInit */
 154:Core/Src/main.c **** 
 155:Core/Src/main.c ****   /* Initialize all configured peripherals */
 156:Core/Src/main.c ****   MX_GPIO_Init();
 157:Core/Src/main.c ****   MX_USART1_UART_Init();
 158:Core/Src/main.c ****   MX_USART2_UART_Init();
 159:Core/Src/main.c ****   MX_I2C1_Init();
 160:Core/Src/main.c ****   MX_SPI3_Init();
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 10


 161:Core/Src/main.c ****   MX_I2C2_Init();
 162:Core/Src/main.c ****   MX_TIM3_Init();
 163:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 164:Core/Src/main.c ****   
 165:Core/Src/main.c ****   // Start timer
 166:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim3);
 167:Core/Src/main.c **** 
 168:Core/Src/main.c ****   bmp280_init_default_params(&bmp280.params);
 169:Core/Src/main.c **** 	bmp280.addr = 0x77;
 170:Core/Src/main.c **** 	bmp280.i2c = &hi2c1;
 171:Core/Src/main.c **** 
 172:Core/Src/main.c **** 	while (!bmp280_init(&bmp280, &bmp280.params)) {
 173:Core/Src/main.c **** 		size = sprintf((char *)Data, "BMP280 initialization failed\n");
 174:Core/Src/main.c **** 		HAL_UART_Transmit(&huart2, Data, size, 1000);
 175:Core/Src/main.c **** 		HAL_Delay(2000);
 176:Core/Src/main.c **** 	}
 177:Core/Src/main.c **** 	bool bme280p = bmp280.id == BME280_CHIP_ID;
 178:Core/Src/main.c **** 	size = sprintf((char *)Data, "\nBMP280: found %s\n", bme280p ? "BME280" : "BMP280");
 179:Core/Src/main.c **** 	HAL_UART_Transmit(&huart2, Data, size, 1000);
 180:Core/Src/main.c **** 
 181:Core/Src/main.c ****   myLoRa = newLoRa();
 182:Core/Src/main.c ****   myLoRa.CS_port         = GPIOA;
 183:Core/Src/main.c ****   myLoRa.CS_pin          = GPIO_PIN_4;
 184:Core/Src/main.c ****   myLoRa.reset_port      = GPIOB;
 185:Core/Src/main.c ****   myLoRa.reset_pin       = GPIO_PIN_8;
 186:Core/Src/main.c ****   myLoRa.DIO0_port       = GPIOB;
 187:Core/Src/main.c ****   myLoRa.DIO0_pin        = GPIO_PIN_9;
 188:Core/Src/main.c ****   myLoRa.hSPIx           = &hspi3;
 189:Core/Src/main.c ****   
 190:Core/Src/main.c ****   
 191:Core/Src/main.c ****   myLoRa.frequency             = 433;             // default = 433 MHz
 192:Core/Src/main.c ****   myLoRa.spreadingFactor        = SF_7;            // default = SF_7
 193:Core/Src/main.c ****   myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 194:Core/Src/main.c ****   myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 195:Core/Src/main.c ****   myLoRa.power                 = POWER_20db;      // default = 20db
 196:Core/Src/main.c ****   myLoRa.overCurrentProtection = 100;             // default = 100 mA
 197:Core/Src/main.c ****   myLoRa.preamble              = 8;              // default = 8;
 198:Core/Src/main.c **** 
 199:Core/Src/main.c ****   uint16_t ret = LoRa_init(&myLoRa);
 200:Core/Src/main.c ****   uint8_t buff[128] = {"\0"};
 201:Core/Src/main.c ****   
 202:Core/Src/main.c **** 
 203:Core/Src/main.c **** if (ret==LORA_OK){
 204:Core/Src/main.c ****   snprintf(buff,sizeof(buff),"LoRa is running... :) \n\r");
 205:Core/Src/main.c ****   size = strlen(&buff);
 206:Core/Src/main.c ****   LoRa_transmit(&myLoRa, (uint8_t*)buff, size, 100);
 207:Core/Src/main.c ****   HAL_UART_Transmit_IT(&huart2, buff, size);
 208:Core/Src/main.c **** }
 209:Core/Src/main.c **** else{
 210:Core/Src/main.c ****   snprintf(buff,sizeof(buff),"\n\r LoRa failed :( \n\r Error code: %d \n\r", ret);
 211:Core/Src/main.c ****   size = strlen(&buff);
 212:Core/Src/main.c ****   HAL_UART_Transmit_IT(&huart2, buff, size);
 213:Core/Src/main.c **** }
 214:Core/Src/main.c **** 
 215:Core/Src/main.c **** 
 216:Core/Src/main.c **** ssd1306_Init(&hi2c2);
 217:Core/Src/main.c **** 
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 11


 218:Core/Src/main.c **** // Set cursors and write the word "mode"
 219:Core/Src/main.c **** ssd1306_SetCursor(0, 0);
 220:Core/Src/main.c **** ssd1306_WriteString("Mode:", Font_16x26, White);
 221:Core/Src/main.c **** 
 222:Core/Src/main.c **** ssd1306_SetCursor(0, 35);
 223:Core/Src/main.c **** sprintf(sMode, "%d", iMode);
 224:Core/Src/main.c **** ssd1306_WriteString(sMode, Font_16x26, White);
 225:Core/Src/main.c **** 
 226:Core/Src/main.c **** // Copy all data from local screenbuffer to the screen
 227:Core/Src/main.c **** ssd1306_UpdateScreen(&hi2c2);
 228:Core/Src/main.c **** 
 229:Core/Src/main.c **** 
 230:Core/Src/main.c **** 
 231:Core/Src/main.c ****   /* USER CODE END 2 */
 232:Core/Src/main.c **** 
 233:Core/Src/main.c ****   /* Infinite loop */
 234:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 235:Core/Src/main.c ****   while (1)
 236:Core/Src/main.c ****   {
 237:Core/Src/main.c **** 
 238:Core/Src/main.c ****     if (beginRead) {
 239:Core/Src/main.c ****       HAL_UARTEx_ReceiveToIdle(&huart1,(uint8_t*)gps_raw,512,512,1000);
 240:Core/Src/main.c ****       packetSize = buildDataPacket();
 241:Core/Src/main.c ****       //HAL_UART_Transmit(&huart2,(uint8_t *)transmit_data,packetSize, 1000);
 242:Core/Src/main.c **** 
 243:Core/Src/main.c ****       size = strlen(&transmit_data);
 244:Core/Src/main.c ****       ret = LoRa_transmit(&myLoRa, (uint8_t*)"1234", 4, 10000);
 245:Core/Src/main.c ****       memset(transmit_data, '\0', sizeof(transmit_data));
 246:Core/Src/main.c **** 
 247:Core/Src/main.c ****       sprintf(transmit_data, "Data sent with code %u\n", ret);
 248:Core/Src/main.c ****       size = strlen(&transmit_data);
 249:Core/Src/main.c **** 	    HAL_UART_Transmit(&huart2, (uint8_t *)transmit_data, size, 1000);
 250:Core/Src/main.c ****       memset(transmit_data, '\0', sizeof(transmit_data));
 251:Core/Src/main.c ****       
 252:Core/Src/main.c ****       
 253:Core/Src/main.c ****       beginRead = false;
 254:Core/Src/main.c ****     }      
 255:Core/Src/main.c **** 
 256:Core/Src/main.c ****     if (bModeChanged) {
 257:Core/Src/main.c **** switch (iMode) {
 258:Core/Src/main.c ****     case 1:
 259:Core/Src/main.c ****       // statements
 260:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 261:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_7;            // default = SF_7
 262:Core/Src/main.c ****       myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 263:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 264:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 265:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 266:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 267:Core/Src/main.c ****       LoRa_init(&myLoRa);
 268:Core/Src/main.c ****       break;
 269:Core/Src/main.c **** 
 270:Core/Src/main.c ****     case 2:
 271:Core/Src/main.c ****       // statements
 272:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 273:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_7;            // default = SF_7
 274:Core/Src/main.c ****       myLoRa.bandWidth             = BW_10_4KHz;       // default = BW_125KHz
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 12


 275:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 276:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 277:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 278:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 279:Core/Src/main.c ****       LoRa_init(&myLoRa);
 280:Core/Src/main.c ****       break;
 281:Core/Src/main.c **** 
 282:Core/Src/main.c ****     case 3:
 283:Core/Src/main.c ****       // statements
 284:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 285:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_7;            // default = SF_7
 286:Core/Src/main.c ****       myLoRa.bandWidth             = BW_15_6KHz;       // default = BW_125KHz
 287:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 288:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 289:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 290:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 291:Core/Src/main.c ****       LoRa_init(&myLoRa);
 292:Core/Src/main.c ****       break;
 293:Core/Src/main.c **** 
 294:Core/Src/main.c ****     case 4:
 295:Core/Src/main.c ****       // statements
 296:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 297:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_7;            // default = SF_7
 298:Core/Src/main.c ****       myLoRa.bandWidth             = BW_20_8KHz;       // default = BW_125KHz
 299:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 300:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 301:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 302:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 303:Core/Src/main.c ****       LoRa_init(&myLoRa);
 304:Core/Src/main.c ****       break;
 305:Core/Src/main.c **** 
 306:Core/Src/main.c ****     case 5:
 307:Core/Src/main.c ****       // statements
 308:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 309:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_7;            // default = SF_7
 310:Core/Src/main.c ****       myLoRa.bandWidth             = BW_31_25KHz;       // default = BW_125KHz
 311:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 312:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 313:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 314:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 315:Core/Src/main.c ****       LoRa_init(&myLoRa);
 316:Core/Src/main.c ****       break;
 317:Core/Src/main.c **** 
 318:Core/Src/main.c ****     case 6:
 319:Core/Src/main.c ****       // statements
 320:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 321:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_7;            // default = SF_7
 322:Core/Src/main.c ****       myLoRa.bandWidth             = BW_41_7KHz;       // default = BW_125KHz
 323:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 324:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 325:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 326:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 327:Core/Src/main.c ****       LoRa_init(&myLoRa);
 328:Core/Src/main.c ****       break;
 329:Core/Src/main.c **** 
 330:Core/Src/main.c ****     case 7:
 331:Core/Src/main.c ****       // statements
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 13


 332:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 333:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_7;            // default = SF_7
 334:Core/Src/main.c ****       myLoRa.bandWidth             = BW_62_5KHz;       // default = BW_125KHz
 335:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 336:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 337:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 338:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 339:Core/Src/main.c ****       LoRa_init(&myLoRa);
 340:Core/Src/main.c ****       break;
 341:Core/Src/main.c **** 
 342:Core/Src/main.c ****     case 8:
 343:Core/Src/main.c ****       // statements
 344:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 345:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_7;            // default = SF_7
 346:Core/Src/main.c ****       myLoRa.bandWidth             = BW_125KHz;       // default = BW_125KHz
 347:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 348:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 349:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 350:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 351:Core/Src/main.c ****       LoRa_init(&myLoRa);
 352:Core/Src/main.c ****       break;
 353:Core/Src/main.c **** 
 354:Core/Src/main.c ****     case 9:
 355:Core/Src/main.c ****       // statements
 356:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 357:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_7;            // default = SF_7
 358:Core/Src/main.c ****       myLoRa.bandWidth             = BW_250KHz;       // default = BW_125KHz
 359:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 360:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 361:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 362:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 363:Core/Src/main.c ****       LoRa_init(&myLoRa);
 364:Core/Src/main.c ****       break;
 365:Core/Src/main.c **** 
 366:Core/Src/main.c ****     case 10:
 367:Core/Src/main.c ****       // statements
 368:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 369:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_7;            // default = SF_7
 370:Core/Src/main.c ****       myLoRa.bandWidth             = BW_500KHz;       // default = BW_125KHz
 371:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 372:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 373:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 374:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 375:Core/Src/main.c ****       LoRa_init(&myLoRa);
 376:Core/Src/main.c ****       break;
 377:Core/Src/main.c ****     
 378:Core/Src/main.c ****     case 11:
 379:Core/Src/main.c ****       // statements
 380:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 381:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_8;            // default = SF_7
 382:Core/Src/main.c ****       myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 383:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 384:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 385:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 386:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 387:Core/Src/main.c ****       LoRa_init(&myLoRa);
 388:Core/Src/main.c ****       break;
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 14


 389:Core/Src/main.c **** 
 390:Core/Src/main.c ****     case 12:
 391:Core/Src/main.c ****       // statements
 392:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 393:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_8;            // default = SF_7
 394:Core/Src/main.c ****       myLoRa.bandWidth             = BW_10_4KHz;       // default = BW_125KHz
 395:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 396:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 397:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 398:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 399:Core/Src/main.c ****       LoRa_init(&myLoRa);
 400:Core/Src/main.c ****       break;
 401:Core/Src/main.c **** 
 402:Core/Src/main.c ****     case 13:
 403:Core/Src/main.c ****       // statements
 404:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 405:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_8;            // default = SF_7
 406:Core/Src/main.c ****       myLoRa.bandWidth             = BW_15_6KHz;       // default = BW_125KHz
 407:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 408:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 409:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 410:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 411:Core/Src/main.c ****       LoRa_init(&myLoRa);
 412:Core/Src/main.c ****       break;
 413:Core/Src/main.c **** 
 414:Core/Src/main.c ****     case 14:
 415:Core/Src/main.c ****       // statements
 416:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 417:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_8;            // default = SF_7
 418:Core/Src/main.c ****       myLoRa.bandWidth             = BW_20_8KHz;       // default = BW_125KHz
 419:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 420:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 421:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 422:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 423:Core/Src/main.c ****       LoRa_init(&myLoRa);
 424:Core/Src/main.c ****       break;
 425:Core/Src/main.c **** 
 426:Core/Src/main.c ****     case 15:
 427:Core/Src/main.c ****       // statements
 428:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 429:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_8;            // default = SF_7
 430:Core/Src/main.c ****       myLoRa.bandWidth             = BW_31_25KHz;       // default = BW_125KHz
 431:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 432:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 433:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 434:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 435:Core/Src/main.c ****       LoRa_init(&myLoRa);
 436:Core/Src/main.c ****       break;
 437:Core/Src/main.c **** 
 438:Core/Src/main.c ****     case 16:
 439:Core/Src/main.c ****       // statements
 440:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 441:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_8;            // default = SF_7
 442:Core/Src/main.c ****       myLoRa.bandWidth             = BW_41_7KHz;       // default = BW_125KHz
 443:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 444:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 445:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 15


 446:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 447:Core/Src/main.c ****       LoRa_init(&myLoRa);
 448:Core/Src/main.c ****       break;
 449:Core/Src/main.c **** 
 450:Core/Src/main.c ****     case 17:
 451:Core/Src/main.c ****       // statements
 452:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 453:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_8;            // default = SF_7
 454:Core/Src/main.c ****       myLoRa.bandWidth             = BW_62_5KHz;       // default = BW_125KHz
 455:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 456:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 457:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 458:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 459:Core/Src/main.c ****       LoRa_init(&myLoRa);
 460:Core/Src/main.c ****       break;
 461:Core/Src/main.c **** 
 462:Core/Src/main.c ****     case 18:
 463:Core/Src/main.c ****       // statements
 464:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 465:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_8;            // default = SF_7
 466:Core/Src/main.c ****       myLoRa.bandWidth             = BW_125KHz;       // default = BW_125KHz
 467:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 468:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 469:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 470:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 471:Core/Src/main.c ****       LoRa_init(&myLoRa);
 472:Core/Src/main.c ****       break;
 473:Core/Src/main.c **** 
 474:Core/Src/main.c ****     case 19:
 475:Core/Src/main.c ****       // statements
 476:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 477:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_8;            // default = SF_7
 478:Core/Src/main.c ****       myLoRa.bandWidth             = BW_250KHz;       // default = BW_125KHz
 479:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 480:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 481:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 482:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 483:Core/Src/main.c ****       LoRa_init(&myLoRa);
 484:Core/Src/main.c ****       break;
 485:Core/Src/main.c **** 
 486:Core/Src/main.c ****     case 20:
 487:Core/Src/main.c ****       // statements
 488:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 489:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_8;            // default = SF_7
 490:Core/Src/main.c ****       myLoRa.bandWidth             = BW_500KHz;       // default = BW_125KHz
 491:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 492:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 493:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 494:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 495:Core/Src/main.c ****       LoRa_init(&myLoRa);
 496:Core/Src/main.c ****       break;
 497:Core/Src/main.c **** 
 498:Core/Src/main.c ****     case 21:
 499:Core/Src/main.c ****       // statements
 500:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 501:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_9;            // default = SF_7
 502:Core/Src/main.c ****       myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 16


 503:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 504:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 505:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 506:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 507:Core/Src/main.c ****       LoRa_init(&myLoRa);
 508:Core/Src/main.c ****       break;
 509:Core/Src/main.c **** 
 510:Core/Src/main.c ****     case 22:
 511:Core/Src/main.c ****       // statements
 512:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 513:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_9;            // default = SF_7
 514:Core/Src/main.c ****       myLoRa.bandWidth             = BW_10_4KHz;       // default = BW_125KHz
 515:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 516:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 517:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 518:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 519:Core/Src/main.c ****       LoRa_init(&myLoRa);
 520:Core/Src/main.c ****       break;
 521:Core/Src/main.c **** 
 522:Core/Src/main.c ****     case 23:
 523:Core/Src/main.c ****       // statements
 524:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 525:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_9;            // default = SF_7
 526:Core/Src/main.c ****       myLoRa.bandWidth             = BW_15_6KHz;       // default = BW_125KHz
 527:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 528:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 529:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 530:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 531:Core/Src/main.c ****       LoRa_init(&myLoRa);
 532:Core/Src/main.c ****       break;
 533:Core/Src/main.c **** 
 534:Core/Src/main.c ****     case 24:
 535:Core/Src/main.c ****       // statements
 536:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 537:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_9;            // default = SF_7
 538:Core/Src/main.c ****       myLoRa.bandWidth             = BW_20_8KHz;       // default = BW_125KHz
 539:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 540:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 541:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 542:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 543:Core/Src/main.c ****       LoRa_init(&myLoRa);
 544:Core/Src/main.c ****       break;
 545:Core/Src/main.c **** 
 546:Core/Src/main.c ****     case 25:
 547:Core/Src/main.c ****       // statements
 548:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 549:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_9;            // default = SF_7
 550:Core/Src/main.c ****       myLoRa.bandWidth             = BW_31_25KHz;       // default = BW_125KHz
 551:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 552:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 553:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 554:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 555:Core/Src/main.c ****       LoRa_init(&myLoRa);
 556:Core/Src/main.c ****       break;
 557:Core/Src/main.c **** 
 558:Core/Src/main.c ****     case 26:
 559:Core/Src/main.c ****       // statements
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 17


 560:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 561:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_9;            // default = SF_7
 562:Core/Src/main.c ****       myLoRa.bandWidth             = BW_41_7KHz;       // default = BW_125KHz
 563:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 564:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 565:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 566:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 567:Core/Src/main.c ****       LoRa_init(&myLoRa);
 568:Core/Src/main.c ****       break;
 569:Core/Src/main.c **** 
 570:Core/Src/main.c ****     case 27:
 571:Core/Src/main.c ****       // statements
 572:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 573:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_9;            // default = SF_7
 574:Core/Src/main.c ****       myLoRa.bandWidth             = BW_62_5KHz;       // default = BW_125KHz
 575:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 576:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 577:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 578:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 579:Core/Src/main.c ****       LoRa_init(&myLoRa);
 580:Core/Src/main.c ****       break;
 581:Core/Src/main.c **** 
 582:Core/Src/main.c ****     case 28:
 583:Core/Src/main.c ****       // statements
 584:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 585:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_9;            // default = SF_7
 586:Core/Src/main.c ****       myLoRa.bandWidth             = BW_125KHz;       // default = BW_125KHz
 587:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 588:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 589:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 590:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 591:Core/Src/main.c ****       LoRa_init(&myLoRa);
 592:Core/Src/main.c ****       break;
 593:Core/Src/main.c **** 
 594:Core/Src/main.c ****     case 29:
 595:Core/Src/main.c ****       // statements
 596:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 597:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_9;            // default = SF_7
 598:Core/Src/main.c ****       myLoRa.bandWidth             = BW_250KHz;       // default = BW_125KHz
 599:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 600:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 601:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 602:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 603:Core/Src/main.c ****       LoRa_init(&myLoRa);
 604:Core/Src/main.c ****       break;
 605:Core/Src/main.c **** 
 606:Core/Src/main.c ****     case 30:
 607:Core/Src/main.c ****       // statements
 608:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 609:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_9;            // default = SF_7
 610:Core/Src/main.c ****       myLoRa.bandWidth             = BW_500KHz;       // default = BW_125KHz
 611:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 612:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 613:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 614:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 615:Core/Src/main.c ****       LoRa_init(&myLoRa);
 616:Core/Src/main.c ****       break;
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 18


 617:Core/Src/main.c **** 
 618:Core/Src/main.c ****     case 31:
 619:Core/Src/main.c ****       // statements
 620:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 621:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_10;            // default = SF_7
 622:Core/Src/main.c ****       myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 623:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 624:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 625:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 626:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 627:Core/Src/main.c ****       LoRa_init(&myLoRa);
 628:Core/Src/main.c ****       break;
 629:Core/Src/main.c **** 
 630:Core/Src/main.c ****     case 32:
 631:Core/Src/main.c ****       // statements
 632:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 633:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_10;            // default = SF_7
 634:Core/Src/main.c ****       myLoRa.bandWidth             = BW_10_4KHz;       // default = BW_125KHz
 635:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 636:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 637:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 638:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 639:Core/Src/main.c ****       LoRa_init(&myLoRa);
 640:Core/Src/main.c ****       break;
 641:Core/Src/main.c **** 
 642:Core/Src/main.c ****     case 33:
 643:Core/Src/main.c ****       // statements
 644:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 645:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_10;            // default = SF_7
 646:Core/Src/main.c ****       myLoRa.bandWidth             = BW_15_6KHz;       // default = BW_125KHz
 647:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 648:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 649:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 650:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 651:Core/Src/main.c ****       LoRa_init(&myLoRa);
 652:Core/Src/main.c ****       break;
 653:Core/Src/main.c **** 
 654:Core/Src/main.c ****     case 34:
 655:Core/Src/main.c ****       // statements
 656:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 657:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_10;            // default = SF_7
 658:Core/Src/main.c ****       myLoRa.bandWidth             = BW_20_8KHz;       // default = BW_125KHz
 659:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 660:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 661:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 662:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 663:Core/Src/main.c ****       LoRa_init(&myLoRa);
 664:Core/Src/main.c ****       break;
 665:Core/Src/main.c **** 
 666:Core/Src/main.c ****     case 35:
 667:Core/Src/main.c ****       // statements
 668:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 669:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_10;            // default = SF_7
 670:Core/Src/main.c ****       myLoRa.bandWidth             = BW_31_25KHz;       // default = BW_125KHz
 671:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 672:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 673:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 19


 674:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 675:Core/Src/main.c ****       LoRa_init(&myLoRa);
 676:Core/Src/main.c ****       break;
 677:Core/Src/main.c **** 
 678:Core/Src/main.c ****     case 36:
 679:Core/Src/main.c ****       // statements
 680:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 681:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_10;            // default = SF_7
 682:Core/Src/main.c ****       myLoRa.bandWidth             = BW_41_7KHz;       // default = BW_125KHz
 683:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 684:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 685:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 686:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 687:Core/Src/main.c ****       LoRa_init(&myLoRa);
 688:Core/Src/main.c ****       break;
 689:Core/Src/main.c **** 
 690:Core/Src/main.c ****     case 37:
 691:Core/Src/main.c ****       // statements
 692:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 693:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_10;            // default = SF_7
 694:Core/Src/main.c ****       myLoRa.bandWidth             = BW_62_5KHz;       // default = BW_125KHz
 695:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 696:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 697:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 698:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 699:Core/Src/main.c ****       LoRa_init(&myLoRa);
 700:Core/Src/main.c ****       break;
 701:Core/Src/main.c **** 
 702:Core/Src/main.c ****     case 38:
 703:Core/Src/main.c ****       // statements
 704:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 705:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_10;            // default = SF_7
 706:Core/Src/main.c ****       myLoRa.bandWidth             = BW_125KHz;       // default = BW_125KHz
 707:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 708:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 709:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 710:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 711:Core/Src/main.c ****       LoRa_init(&myLoRa);
 712:Core/Src/main.c ****       break;
 713:Core/Src/main.c **** 
 714:Core/Src/main.c ****     case 39:
 715:Core/Src/main.c ****       // statements
 716:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 717:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_10;            // default = SF_7
 718:Core/Src/main.c ****       myLoRa.bandWidth             = BW_250KHz;       // default = BW_125KHz
 719:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 720:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 721:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 722:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 723:Core/Src/main.c ****       LoRa_init(&myLoRa);
 724:Core/Src/main.c ****       break;
 725:Core/Src/main.c **** 
 726:Core/Src/main.c ****     case 40:
 727:Core/Src/main.c ****       // statements
 728:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 729:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_10;            // default = SF_7
 730:Core/Src/main.c ****       myLoRa.bandWidth             = BW_500KHz;       // default = BW_125KHz
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 20


 731:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 732:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 733:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 734:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 735:Core/Src/main.c ****       LoRa_init(&myLoRa);
 736:Core/Src/main.c ****       break;
 737:Core/Src/main.c **** 
 738:Core/Src/main.c ****     case 41:
 739:Core/Src/main.c ****       // statements
 740:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 741:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_11;            // default = SF_7
 742:Core/Src/main.c ****       myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 743:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 744:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 745:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 746:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 747:Core/Src/main.c ****       LoRa_init(&myLoRa);
 748:Core/Src/main.c ****       break;
 749:Core/Src/main.c **** 
 750:Core/Src/main.c ****     case 42:
 751:Core/Src/main.c ****       // statements
 752:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 753:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_11;            // default = SF_7
 754:Core/Src/main.c ****       myLoRa.bandWidth             = BW_10_4KHz;       // default = BW_125KHz
 755:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 756:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 757:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 758:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 759:Core/Src/main.c ****       LoRa_init(&myLoRa);
 760:Core/Src/main.c ****       break;
 761:Core/Src/main.c **** 
 762:Core/Src/main.c ****     case 43:
 763:Core/Src/main.c ****       // statements
 764:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 765:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_11;            // default = SF_7
 766:Core/Src/main.c ****       myLoRa.bandWidth             = BW_15_6KHz;       // default = BW_125KHz
 767:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 768:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 769:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 770:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 771:Core/Src/main.c ****       LoRa_init(&myLoRa);
 772:Core/Src/main.c ****       break;
 773:Core/Src/main.c **** 
 774:Core/Src/main.c ****     case 44:
 775:Core/Src/main.c ****       // statements
 776:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 777:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_11;            // default = SF_7
 778:Core/Src/main.c ****       myLoRa.bandWidth             = BW_20_8KHz;       // default = BW_125KHz
 779:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 780:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 781:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 782:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 783:Core/Src/main.c ****       LoRa_init(&myLoRa);
 784:Core/Src/main.c ****       break;
 785:Core/Src/main.c **** 
 786:Core/Src/main.c ****     case 45:
 787:Core/Src/main.c ****       // statements
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 21


 788:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 789:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_11;            // default = SF_7
 790:Core/Src/main.c ****       myLoRa.bandWidth             = BW_31_25KHz;       // default = BW_125KHz
 791:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 792:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 793:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 794:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 795:Core/Src/main.c ****       LoRa_init(&myLoRa);
 796:Core/Src/main.c ****       break;
 797:Core/Src/main.c **** 
 798:Core/Src/main.c ****     case 46:
 799:Core/Src/main.c ****       // statements
 800:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 801:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_11;            // default = SF_7
 802:Core/Src/main.c ****       myLoRa.bandWidth             = BW_41_7KHz;       // default = BW_125KHz
 803:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 804:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 805:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 806:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 807:Core/Src/main.c ****       LoRa_init(&myLoRa);
 808:Core/Src/main.c ****       break;
 809:Core/Src/main.c **** 
 810:Core/Src/main.c ****     case 47:
 811:Core/Src/main.c ****       // statements
 812:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 813:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_11;            // default = SF_7
 814:Core/Src/main.c ****       myLoRa.bandWidth             = BW_62_5KHz;       // default = BW_125KHz
 815:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 816:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 817:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 818:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 819:Core/Src/main.c ****       LoRa_init(&myLoRa);
 820:Core/Src/main.c ****       break;
 821:Core/Src/main.c **** 
 822:Core/Src/main.c ****     case 48:
 823:Core/Src/main.c ****       // statements
 824:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 825:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_11;            // default = SF_7
 826:Core/Src/main.c ****       myLoRa.bandWidth             = BW_125KHz;       // default = BW_125KHz
 827:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 828:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 829:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 830:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 831:Core/Src/main.c ****       LoRa_init(&myLoRa);
 832:Core/Src/main.c ****       break;
 833:Core/Src/main.c **** 
 834:Core/Src/main.c ****     case 49:
 835:Core/Src/main.c ****       // statements
 836:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 837:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_11;            // default = SF_7
 838:Core/Src/main.c ****       myLoRa.bandWidth             = BW_250KHz;       // default = BW_125KHz
 839:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 840:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 841:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 842:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 843:Core/Src/main.c ****       LoRa_init(&myLoRa);
 844:Core/Src/main.c ****       break;
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 22


 845:Core/Src/main.c **** 
 846:Core/Src/main.c ****     case 50:
 847:Core/Src/main.c ****       // statements
 848:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 849:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_11;            // default = SF_7
 850:Core/Src/main.c ****       myLoRa.bandWidth             = BW_500KHz;       // default = BW_125KHz
 851:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 852:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 853:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 854:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 855:Core/Src/main.c ****       LoRa_init(&myLoRa);
 856:Core/Src/main.c ****       break;
 857:Core/Src/main.c **** 
 858:Core/Src/main.c ****     case 51:
 859:Core/Src/main.c ****       // statements
 860:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 861:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_12;            // default = SF_7
 862:Core/Src/main.c ****       myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 863:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 864:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 865:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 866:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 867:Core/Src/main.c ****       LoRa_init(&myLoRa);
 868:Core/Src/main.c ****       break;
 869:Core/Src/main.c **** 
 870:Core/Src/main.c ****     case 52:
 871:Core/Src/main.c ****       // statements
 872:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 873:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_12;            // default = SF_7
 874:Core/Src/main.c ****       myLoRa.bandWidth             = BW_10_4KHz;       // default = BW_125KHz
 875:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 876:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 877:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 878:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 879:Core/Src/main.c ****       LoRa_init(&myLoRa);
 880:Core/Src/main.c ****       break;
 881:Core/Src/main.c **** 
 882:Core/Src/main.c ****     case 53:
 883:Core/Src/main.c ****       // statements
 884:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 885:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_12;            // default = SF_7
 886:Core/Src/main.c ****       myLoRa.bandWidth             = BW_15_6KHz;       // default = BW_125KHz
 887:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 888:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 889:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 890:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 891:Core/Src/main.c ****       LoRa_init(&myLoRa);
 892:Core/Src/main.c ****       break;
 893:Core/Src/main.c **** 
 894:Core/Src/main.c ****     case 54:
 895:Core/Src/main.c ****       // statements
 896:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 897:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_12;            // default = SF_7
 898:Core/Src/main.c ****       myLoRa.bandWidth             = BW_20_8KHz;       // default = BW_125KHz
 899:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 900:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 901:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 23


 902:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 903:Core/Src/main.c ****       LoRa_init(&myLoRa);
 904:Core/Src/main.c ****       break;
 905:Core/Src/main.c **** 
 906:Core/Src/main.c ****     case 55:
 907:Core/Src/main.c ****       // statements
 908:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 909:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_12;            // default = SF_7
 910:Core/Src/main.c ****       myLoRa.bandWidth             = BW_31_25KHz;       // default = BW_125KHz
 911:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 912:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 913:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 914:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 915:Core/Src/main.c ****       LoRa_init(&myLoRa);
 916:Core/Src/main.c ****       break;
 917:Core/Src/main.c **** 
 918:Core/Src/main.c ****     case 56:
 919:Core/Src/main.c ****       // statements
 920:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 921:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_12;            // default = SF_7
 922:Core/Src/main.c ****       myLoRa.bandWidth             = BW_41_7KHz;       // default = BW_125KHz
 923:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 924:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 925:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 926:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 927:Core/Src/main.c ****       LoRa_init(&myLoRa);
 928:Core/Src/main.c ****       break;
 929:Core/Src/main.c **** 
 930:Core/Src/main.c ****     case 57:
 931:Core/Src/main.c ****       // statements
 932:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 933:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_12;            // default = SF_7
 934:Core/Src/main.c ****       myLoRa.bandWidth             = BW_62_5KHz;       // default = BW_125KHz
 935:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 936:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 937:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 938:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 939:Core/Src/main.c ****       LoRa_init(&myLoRa);
 940:Core/Src/main.c ****       break;
 941:Core/Src/main.c **** 
 942:Core/Src/main.c ****     case 58:
 943:Core/Src/main.c ****       // statements
 944:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 945:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_12;            // default = SF_7
 946:Core/Src/main.c ****       myLoRa.bandWidth             = BW_125KHz;       // default = BW_125KHz
 947:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 948:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 949:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 950:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 951:Core/Src/main.c ****       LoRa_init(&myLoRa);
 952:Core/Src/main.c ****       break;
 953:Core/Src/main.c **** 
 954:Core/Src/main.c ****     case 59:
 955:Core/Src/main.c ****       // statements
 956:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 957:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_12;            // default = SF_7
 958:Core/Src/main.c ****       myLoRa.bandWidth             = BW_250KHz;       // default = BW_125KHz
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 24


 959:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 960:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 961:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 962:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 963:Core/Src/main.c ****       LoRa_init(&myLoRa);
 964:Core/Src/main.c ****       break;
 965:Core/Src/main.c **** 
 966:Core/Src/main.c ****     case 60:
 967:Core/Src/main.c ****       // statements
 968:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 969:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_12;            // default = SF_7
 970:Core/Src/main.c ****       myLoRa.bandWidth             = BW_500KHz;       // default = BW_125KHz
 971:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 972:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 973:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 974:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 975:Core/Src/main.c ****       LoRa_init(&myLoRa);
 976:Core/Src/main.c ****       break;
 977:Core/Src/main.c **** 
 978:Core/Src/main.c ****     default:
 979:Core/Src/main.c ****       // default statements
 980:Core/Src/main.c **** }
 981:Core/Src/main.c ****       bModeChanged = false;
 982:Core/Src/main.c **** 
 983:Core/Src/main.c ****       // sprintf(transmit_data, "Data Optimization %d\n", myLoRa.lowDataRateOptimization);
 984:Core/Src/main.c ****       // size = strlen(&transmit_data);
 985:Core/Src/main.c **** 	    // HAL_UART_Transmit(&huart2, (uint8_t *)transmit_data, size, 1000);
 986:Core/Src/main.c ****       // memset(transmit_data, '\0', sizeof(transmit_data));
 987:Core/Src/main.c ****     }
 988:Core/Src/main.c **** 
 989:Core/Src/main.c ****     
 990:Core/Src/main.c ****     
 991:Core/Src/main.c ****     
 992:Core/Src/main.c ****     /* USER CODE END WHILE */
 993:Core/Src/main.c **** 
 994:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 995:Core/Src/main.c ****     //HAL_UART_Transmit_IT(&huart2, (uint8_t *)Gpsdata, sizeof(Gpsdata));
 996:Core/Src/main.c ****     //HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13);
 997:Core/Src/main.c **** 
 998:Core/Src/main.c ****     //HAL_Delay(1000); 
 999:Core/Src/main.c ****     HAL_UARTEx_ReceiveToIdle_IT(&huart1,(uint8_t*)gps_raw,512);
1000:Core/Src/main.c **** 
1001:Core/Src/main.c ****   }
1002:Core/Src/main.c ****   /* USER CODE END 3 */
1003:Core/Src/main.c **** }
1004:Core/Src/main.c **** 
1005:Core/Src/main.c **** /**
1006:Core/Src/main.c ****   * @brief System Clock Configuration
1007:Core/Src/main.c ****   * @retval None
1008:Core/Src/main.c ****   */
1009:Core/Src/main.c **** void SystemClock_Config(void)
1010:Core/Src/main.c **** {
1011:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
1012:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
1013:Core/Src/main.c **** 
1014:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
1015:Core/Src/main.c ****   */
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 25


1016:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
1017:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
1018:Core/Src/main.c **** 
1019:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
1020:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
1021:Core/Src/main.c ****   */
1022:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
1023:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
1024:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
1025:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
1026:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
1027:Core/Src/main.c ****   {
1028:Core/Src/main.c ****     Error_Handler();
1029:Core/Src/main.c ****   }
1030:Core/Src/main.c **** 
1031:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
1032:Core/Src/main.c ****   */
1033:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
1034:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
1035:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
1036:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
1037:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
1038:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
1039:Core/Src/main.c **** 
1040:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
1041:Core/Src/main.c ****   {
1042:Core/Src/main.c ****     Error_Handler();
1043:Core/Src/main.c ****   }
1044:Core/Src/main.c **** }
1045:Core/Src/main.c **** 
1046:Core/Src/main.c **** /**
1047:Core/Src/main.c ****   * @brief I2C1 Initialization Function
1048:Core/Src/main.c ****   * @param None
1049:Core/Src/main.c ****   * @retval None
1050:Core/Src/main.c ****   */
1051:Core/Src/main.c **** static void MX_I2C1_Init(void)
1052:Core/Src/main.c **** {
1053:Core/Src/main.c **** 
1054:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 0 */
1055:Core/Src/main.c **** 
1056:Core/Src/main.c ****   /* USER CODE END I2C1_Init 0 */
1057:Core/Src/main.c **** 
1058:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 1 */
1059:Core/Src/main.c **** 
1060:Core/Src/main.c ****   /* USER CODE END I2C1_Init 1 */
1061:Core/Src/main.c ****   hi2c1.Instance = I2C1;
1062:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
1063:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
1064:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
1065:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
1066:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
1067:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
1068:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
1069:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
1070:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
1071:Core/Src/main.c ****   {
1072:Core/Src/main.c ****     Error_Handler();
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 26


1073:Core/Src/main.c ****   }
1074:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 2 */
1075:Core/Src/main.c **** 
1076:Core/Src/main.c ****   /* USER CODE END I2C1_Init 2 */
1077:Core/Src/main.c **** 
1078:Core/Src/main.c **** }
1079:Core/Src/main.c **** 
1080:Core/Src/main.c **** /**
1081:Core/Src/main.c ****   * @brief I2C2 Initialization Function
1082:Core/Src/main.c ****   * @param None
1083:Core/Src/main.c ****   * @retval None
1084:Core/Src/main.c ****   */
1085:Core/Src/main.c **** static void MX_I2C2_Init(void)
1086:Core/Src/main.c **** {
1087:Core/Src/main.c **** 
1088:Core/Src/main.c ****   /* USER CODE BEGIN I2C2_Init 0 */
1089:Core/Src/main.c **** 
1090:Core/Src/main.c ****   /* USER CODE END I2C2_Init 0 */
1091:Core/Src/main.c **** 
1092:Core/Src/main.c ****   /* USER CODE BEGIN I2C2_Init 1 */
1093:Core/Src/main.c **** 
1094:Core/Src/main.c ****   /* USER CODE END I2C2_Init 1 */
1095:Core/Src/main.c ****   hi2c2.Instance = I2C2;
1096:Core/Src/main.c ****   hi2c2.Init.ClockSpeed = 100000;
1097:Core/Src/main.c ****   hi2c2.Init.DutyCycle = I2C_DUTYCYCLE_2;
1098:Core/Src/main.c ****   hi2c2.Init.OwnAddress1 = 0;
1099:Core/Src/main.c ****   hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
1100:Core/Src/main.c ****   hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
1101:Core/Src/main.c ****   hi2c2.Init.OwnAddress2 = 0;
1102:Core/Src/main.c ****   hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
1103:Core/Src/main.c ****   hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
1104:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c2) != HAL_OK)
1105:Core/Src/main.c ****   {
1106:Core/Src/main.c ****     Error_Handler();
1107:Core/Src/main.c ****   }
1108:Core/Src/main.c ****   /* USER CODE BEGIN I2C2_Init 2 */
1109:Core/Src/main.c **** 
1110:Core/Src/main.c ****   /* USER CODE END I2C2_Init 2 */
1111:Core/Src/main.c **** 
1112:Core/Src/main.c **** }
1113:Core/Src/main.c **** 
1114:Core/Src/main.c **** /**
1115:Core/Src/main.c ****   * @brief SPI3 Initialization Function
1116:Core/Src/main.c ****   * @param None
1117:Core/Src/main.c ****   * @retval None
1118:Core/Src/main.c ****   */
1119:Core/Src/main.c **** static void MX_SPI3_Init(void)
1120:Core/Src/main.c **** {
1121:Core/Src/main.c **** 
1122:Core/Src/main.c ****   /* USER CODE BEGIN SPI3_Init 0 */
1123:Core/Src/main.c **** 
1124:Core/Src/main.c ****   /* USER CODE END SPI3_Init 0 */
1125:Core/Src/main.c **** 
1126:Core/Src/main.c ****   /* USER CODE BEGIN SPI3_Init 1 */
1127:Core/Src/main.c **** 
1128:Core/Src/main.c ****   /* USER CODE END SPI3_Init 1 */
1129:Core/Src/main.c ****   /* SPI3 parameter configuration*/
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 27


1130:Core/Src/main.c ****   hspi3.Instance = SPI3;
1131:Core/Src/main.c ****   hspi3.Init.Mode = SPI_MODE_MASTER;
1132:Core/Src/main.c ****   hspi3.Init.Direction = SPI_DIRECTION_2LINES;
1133:Core/Src/main.c ****   hspi3.Init.DataSize = SPI_DATASIZE_8BIT;
1134:Core/Src/main.c ****   hspi3.Init.CLKPolarity = SPI_POLARITY_LOW;
1135:Core/Src/main.c ****   hspi3.Init.CLKPhase = SPI_PHASE_1EDGE;
1136:Core/Src/main.c ****   hspi3.Init.NSS = SPI_NSS_SOFT;
1137:Core/Src/main.c ****   hspi3.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
1138:Core/Src/main.c ****   hspi3.Init.FirstBit = SPI_FIRSTBIT_MSB;
1139:Core/Src/main.c ****   hspi3.Init.TIMode = SPI_TIMODE_DISABLE;
1140:Core/Src/main.c ****   hspi3.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
1141:Core/Src/main.c ****   hspi3.Init.CRCPolynomial = 10;
1142:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi3) != HAL_OK)
1143:Core/Src/main.c ****   {
1144:Core/Src/main.c ****     Error_Handler();
1145:Core/Src/main.c ****   }
1146:Core/Src/main.c ****   /* USER CODE BEGIN SPI3_Init 2 */
1147:Core/Src/main.c **** 
1148:Core/Src/main.c ****   /* USER CODE END SPI3_Init 2 */
1149:Core/Src/main.c **** 
1150:Core/Src/main.c **** }
1151:Core/Src/main.c **** 
1152:Core/Src/main.c **** /**
1153:Core/Src/main.c ****   * @brief TIM3 Initialization Function
1154:Core/Src/main.c ****   * @param None
1155:Core/Src/main.c ****   * @retval None
1156:Core/Src/main.c ****   */
1157:Core/Src/main.c **** static void MX_TIM3_Init(void)
1158:Core/Src/main.c **** {
1159:Core/Src/main.c **** 
1160:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 0 */
1161:Core/Src/main.c **** 
1162:Core/Src/main.c ****   /* USER CODE END TIM3_Init 0 */
1163:Core/Src/main.c **** 
1164:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
1165:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
1166:Core/Src/main.c **** 
1167:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 1 */
1168:Core/Src/main.c **** 
1169:Core/Src/main.c ****   /* USER CODE END TIM3_Init 1 */
1170:Core/Src/main.c ****   htim3.Instance = TIM3;
1171:Core/Src/main.c ****   htim3.Init.Prescaler = 16000-1;
1172:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
1173:Core/Src/main.c ****   htim3.Init.Period = 1000-1;
1174:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
1175:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
1176:Core/Src/main.c **** 
1177:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
1178:Core/Src/main.c ****   {
1179:Core/Src/main.c ****     Error_Handler();
1180:Core/Src/main.c ****   }
1181:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
1182:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
1183:Core/Src/main.c ****   {
1184:Core/Src/main.c ****     Error_Handler();
1185:Core/Src/main.c ****   }
1186:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 28


1187:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
1188:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
1189:Core/Src/main.c ****   {
1190:Core/Src/main.c ****     Error_Handler();
1191:Core/Src/main.c ****   }
1192:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 2 */
1193:Core/Src/main.c **** 
1194:Core/Src/main.c ****   /* USER CODE END TIM3_Init 2 */
1195:Core/Src/main.c **** 
1196:Core/Src/main.c **** }
1197:Core/Src/main.c **** 
1198:Core/Src/main.c **** /**
1199:Core/Src/main.c ****   * @brief USART1 Initialization Function
1200:Core/Src/main.c ****   * @param None
1201:Core/Src/main.c ****   * @retval None
1202:Core/Src/main.c ****   */
1203:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
1204:Core/Src/main.c **** {
1205:Core/Src/main.c **** 
1206:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
1207:Core/Src/main.c **** 
1208:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
1209:Core/Src/main.c **** 
1210:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
1211:Core/Src/main.c **** 
1212:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
1213:Core/Src/main.c ****   huart1.Instance = USART1;
1214:Core/Src/main.c ****   huart1.Init.BaudRate = 9600;
1215:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
1216:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
1217:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
1218:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
1219:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
1220:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
1221:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
1222:Core/Src/main.c ****   {
1223:Core/Src/main.c ****     Error_Handler();
1224:Core/Src/main.c ****   }
1225:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
1226:Core/Src/main.c **** 
1227:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
1228:Core/Src/main.c **** 
1229:Core/Src/main.c **** }
1230:Core/Src/main.c **** 
1231:Core/Src/main.c **** /**
1232:Core/Src/main.c ****   * @brief USART2 Initialization Function
1233:Core/Src/main.c ****   * @param None
1234:Core/Src/main.c ****   * @retval None
1235:Core/Src/main.c ****   */
1236:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
1237:Core/Src/main.c **** {
1238:Core/Src/main.c **** 
1239:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
1240:Core/Src/main.c **** 
1241:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
1242:Core/Src/main.c **** 
1243:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 29


1244:Core/Src/main.c **** 
1245:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
1246:Core/Src/main.c ****   huart2.Instance = USART2;
1247:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
1248:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
1249:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
1250:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
1251:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
1252:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
1253:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
1254:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
1255:Core/Src/main.c ****   {
1256:Core/Src/main.c ****     Error_Handler();
1257:Core/Src/main.c ****   }
1258:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
1259:Core/Src/main.c **** 
1260:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
1261:Core/Src/main.c **** 
1262:Core/Src/main.c **** }
1263:Core/Src/main.c **** 
1264:Core/Src/main.c **** /**
1265:Core/Src/main.c ****   * @brief GPIO Initialization Function
1266:Core/Src/main.c ****   * @param None
1267:Core/Src/main.c ****   * @retval None
1268:Core/Src/main.c ****   */
1269:Core/Src/main.c **** static void MX_GPIO_Init(void)
1270:Core/Src/main.c **** {
 104              		.loc 1 1270 1 is_stmt 1 view -0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 32
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 109              		.cfi_def_cfa_offset 28
 110              		.cfi_offset 4, -28
 111              		.cfi_offset 5, -24
 112              		.cfi_offset 6, -20
 113              		.cfi_offset 7, -16
 114              		.cfi_offset 8, -12
 115              		.cfi_offset 9, -8
 116              		.cfi_offset 14, -4
 117 0004 89B0     		sub	sp, sp, #36
 118              		.cfi_def_cfa_offset 64
1271:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 119              		.loc 1 1271 3 view .LVU27
 120              		.loc 1 1271 20 is_stmt 0 view .LVU28
 121 0006 0024     		movs	r4, #0
 122 0008 0394     		str	r4, [sp, #12]
 123 000a 0494     		str	r4, [sp, #16]
 124 000c 0594     		str	r4, [sp, #20]
 125 000e 0694     		str	r4, [sp, #24]
 126 0010 0794     		str	r4, [sp, #28]
1272:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
1273:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
1274:Core/Src/main.c **** 
1275:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
1276:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 127              		.loc 1 1276 3 is_stmt 1 view .LVU29
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 30


 128              	.LBB4:
 129              		.loc 1 1276 3 view .LVU30
 130 0012 0094     		str	r4, [sp]
 131              		.loc 1 1276 3 view .LVU31
 132 0014 414B     		ldr	r3, .L8
 133 0016 1A6B     		ldr	r2, [r3, #48]
 134 0018 42F00402 		orr	r2, r2, #4
 135 001c 1A63     		str	r2, [r3, #48]
 136              		.loc 1 1276 3 view .LVU32
 137 001e 1A6B     		ldr	r2, [r3, #48]
 138 0020 02F00402 		and	r2, r2, #4
 139 0024 0092     		str	r2, [sp]
 140              		.loc 1 1276 3 view .LVU33
 141 0026 009A     		ldr	r2, [sp]
 142              	.LBE4:
 143              		.loc 1 1276 3 view .LVU34
1277:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 144              		.loc 1 1277 3 view .LVU35
 145              	.LBB5:
 146              		.loc 1 1277 3 view .LVU36
 147 0028 0194     		str	r4, [sp, #4]
 148              		.loc 1 1277 3 view .LVU37
 149 002a 1A6B     		ldr	r2, [r3, #48]
 150 002c 42F00102 		orr	r2, r2, #1
 151 0030 1A63     		str	r2, [r3, #48]
 152              		.loc 1 1277 3 view .LVU38
 153 0032 1A6B     		ldr	r2, [r3, #48]
 154 0034 02F00102 		and	r2, r2, #1
 155 0038 0192     		str	r2, [sp, #4]
 156              		.loc 1 1277 3 view .LVU39
 157 003a 019A     		ldr	r2, [sp, #4]
 158              	.LBE5:
 159              		.loc 1 1277 3 view .LVU40
1278:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 160              		.loc 1 1278 3 view .LVU41
 161              	.LBB6:
 162              		.loc 1 1278 3 view .LVU42
 163 003c 0294     		str	r4, [sp, #8]
 164              		.loc 1 1278 3 view .LVU43
 165 003e 1A6B     		ldr	r2, [r3, #48]
 166 0040 42F00202 		orr	r2, r2, #2
 167 0044 1A63     		str	r2, [r3, #48]
 168              		.loc 1 1278 3 view .LVU44
 169 0046 1B6B     		ldr	r3, [r3, #48]
 170 0048 03F00203 		and	r3, r3, #2
 171 004c 0293     		str	r3, [sp, #8]
 172              		.loc 1 1278 3 view .LVU45
 173 004e 029B     		ldr	r3, [sp, #8]
 174              	.LBE6:
 175              		.loc 1 1278 3 view .LVU46
1279:Core/Src/main.c **** 
1280:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
1281:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
 176              		.loc 1 1281 3 view .LVU47
 177 0050 DFF8D480 		ldr	r8, .L8+12
 178 0054 2246     		mov	r2, r4
 179 0056 4FF40051 		mov	r1, #8192
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 31


 180 005a 4046     		mov	r0, r8
 181 005c FFF7FEFF 		bl	HAL_GPIO_WritePin
 182              	.LVL5:
1282:Core/Src/main.c **** 
1283:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
1284:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_4, GPIO_PIN_SET);
 183              		.loc 1 1284 3 view .LVU48
 184 0060 2F4F     		ldr	r7, .L8+4
 185 0062 0122     		movs	r2, #1
 186 0064 1021     		movs	r1, #16
 187 0066 3846     		mov	r0, r7
 188 0068 FFF7FEFF 		bl	HAL_GPIO_WritePin
 189              	.LVL6:
1285:Core/Src/main.c **** 
1286:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
1287:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_8, GPIO_PIN_SET);
 190              		.loc 1 1287 3 view .LVU49
 191 006c 2D4E     		ldr	r6, .L8+8
 192 006e 0122     		movs	r2, #1
 193 0070 4FF48071 		mov	r1, #256
 194 0074 3046     		mov	r0, r6
 195 0076 FFF7FEFF 		bl	HAL_GPIO_WritePin
 196              	.LVL7:
1288:Core/Src/main.c **** 
1289:Core/Src/main.c ****   /*Configure GPIO pin : PC13 */
1290:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_13;
 197              		.loc 1 1290 3 view .LVU50
 198              		.loc 1 1290 23 is_stmt 0 view .LVU51
 199 007a 4FF40059 		mov	r9, #8192
 200 007e CDF80C90 		str	r9, [sp, #12]
1291:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 201              		.loc 1 1291 3 is_stmt 1 view .LVU52
 202              		.loc 1 1291 24 is_stmt 0 view .LVU53
 203 0082 0125     		movs	r5, #1
 204 0084 0495     		str	r5, [sp, #16]
1292:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 205              		.loc 1 1292 3 is_stmt 1 view .LVU54
 206              		.loc 1 1292 24 is_stmt 0 view .LVU55
 207 0086 0594     		str	r4, [sp, #20]
1293:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 208              		.loc 1 1293 3 is_stmt 1 view .LVU56
 209              		.loc 1 1293 25 is_stmt 0 view .LVU57
 210 0088 0694     		str	r4, [sp, #24]
1294:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 211              		.loc 1 1294 3 is_stmt 1 view .LVU58
 212 008a 03A9     		add	r1, sp, #12
 213 008c 4046     		mov	r0, r8
 214 008e FFF7FEFF 		bl	HAL_GPIO_Init
 215              	.LVL8:
1295:Core/Src/main.c **** 
1296:Core/Src/main.c ****   /*Configure GPIO pin : PA4 */
1297:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_4;
 216              		.loc 1 1297 3 view .LVU59
 217              		.loc 1 1297 23 is_stmt 0 view .LVU60
 218 0092 1023     		movs	r3, #16
 219 0094 0393     		str	r3, [sp, #12]
1298:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 32


 220              		.loc 1 1298 3 is_stmt 1 view .LVU61
 221              		.loc 1 1298 24 is_stmt 0 view .LVU62
 222 0096 0495     		str	r5, [sp, #16]
1299:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 223              		.loc 1 1299 3 is_stmt 1 view .LVU63
 224              		.loc 1 1299 24 is_stmt 0 view .LVU64
 225 0098 0594     		str	r4, [sp, #20]
1300:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 226              		.loc 1 1300 3 is_stmt 1 view .LVU65
 227              		.loc 1 1300 25 is_stmt 0 view .LVU66
 228 009a 0694     		str	r4, [sp, #24]
1301:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 229              		.loc 1 1301 3 is_stmt 1 view .LVU67
 230 009c 03A9     		add	r1, sp, #12
 231 009e 3846     		mov	r0, r7
 232 00a0 FFF7FEFF 		bl	HAL_GPIO_Init
 233              	.LVL9:
1302:Core/Src/main.c **** 
1303:Core/Src/main.c ****   /*Configure GPIO pin : rightButton_Pin */
1304:Core/Src/main.c ****   GPIO_InitStruct.Pin = rightButton_Pin;
 234              		.loc 1 1304 3 view .LVU68
 235              		.loc 1 1304 23 is_stmt 0 view .LVU69
 236 00a4 2023     		movs	r3, #32
 237 00a6 0393     		str	r3, [sp, #12]
1305:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 238              		.loc 1 1305 3 is_stmt 1 view .LVU70
 239              		.loc 1 1305 24 is_stmt 0 view .LVU71
 240 00a8 4FF40418 		mov	r8, #2162688
 241 00ac CDF81080 		str	r8, [sp, #16]
1306:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 242              		.loc 1 1306 3 is_stmt 1 view .LVU72
 243              		.loc 1 1306 24 is_stmt 0 view .LVU73
 244 00b0 0595     		str	r5, [sp, #20]
1307:Core/Src/main.c ****   HAL_GPIO_Init(rightButton_GPIO_Port, &GPIO_InitStruct);
 245              		.loc 1 1307 3 is_stmt 1 view .LVU74
 246 00b2 03A9     		add	r1, sp, #12
 247 00b4 3846     		mov	r0, r7
 248 00b6 FFF7FEFF 		bl	HAL_GPIO_Init
 249              	.LVL10:
1308:Core/Src/main.c **** 
1309:Core/Src/main.c ****   /*Configure GPIO pin : leftButton_Pin */
1310:Core/Src/main.c ****   GPIO_InitStruct.Pin = leftButton_Pin;
 250              		.loc 1 1310 3 view .LVU75
 251              		.loc 1 1310 23 is_stmt 0 view .LVU76
 252 00ba CDF80C90 		str	r9, [sp, #12]
1311:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 253              		.loc 1 1311 3 is_stmt 1 view .LVU77
 254              		.loc 1 1311 24 is_stmt 0 view .LVU78
 255 00be CDF81080 		str	r8, [sp, #16]
1312:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 256              		.loc 1 1312 3 is_stmt 1 view .LVU79
 257              		.loc 1 1312 24 is_stmt 0 view .LVU80
 258 00c2 0595     		str	r5, [sp, #20]
1313:Core/Src/main.c ****   HAL_GPIO_Init(leftButton_GPIO_Port, &GPIO_InitStruct);
 259              		.loc 1 1313 3 is_stmt 1 view .LVU81
 260 00c4 03A9     		add	r1, sp, #12
 261 00c6 3046     		mov	r0, r6
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 33


 262 00c8 FFF7FEFF 		bl	HAL_GPIO_Init
 263              	.LVL11:
1314:Core/Src/main.c **** 
1315:Core/Src/main.c ****   /*Configure GPIO pin : PB8 */
1316:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_8;
 264              		.loc 1 1316 3 view .LVU82
 265              		.loc 1 1316 23 is_stmt 0 view .LVU83
 266 00cc 4FF48073 		mov	r3, #256
 267 00d0 0393     		str	r3, [sp, #12]
1317:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 268              		.loc 1 1317 3 is_stmt 1 view .LVU84
 269              		.loc 1 1317 24 is_stmt 0 view .LVU85
 270 00d2 0495     		str	r5, [sp, #16]
1318:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 271              		.loc 1 1318 3 is_stmt 1 view .LVU86
 272              		.loc 1 1318 24 is_stmt 0 view .LVU87
 273 00d4 0594     		str	r4, [sp, #20]
1319:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 274              		.loc 1 1319 3 is_stmt 1 view .LVU88
 275              		.loc 1 1319 25 is_stmt 0 view .LVU89
 276 00d6 0694     		str	r4, [sp, #24]
1320:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 277              		.loc 1 1320 3 is_stmt 1 view .LVU90
 278 00d8 03A9     		add	r1, sp, #12
 279 00da 3046     		mov	r0, r6
 280 00dc FFF7FEFF 		bl	HAL_GPIO_Init
 281              	.LVL12:
1321:Core/Src/main.c **** 
1322:Core/Src/main.c ****   /*Configure GPIO pin : PB9 */
1323:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_9;
 282              		.loc 1 1323 3 view .LVU91
 283              		.loc 1 1323 23 is_stmt 0 view .LVU92
 284 00e0 4FF40073 		mov	r3, #512
 285 00e4 0393     		str	r3, [sp, #12]
1324:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 286              		.loc 1 1324 3 is_stmt 1 view .LVU93
 287              		.loc 1 1324 24 is_stmt 0 view .LVU94
 288 00e6 4FF48813 		mov	r3, #1114112
 289 00ea 0493     		str	r3, [sp, #16]
1325:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 290              		.loc 1 1325 3 is_stmt 1 view .LVU95
 291              		.loc 1 1325 24 is_stmt 0 view .LVU96
 292 00ec 0594     		str	r4, [sp, #20]
1326:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 293              		.loc 1 1326 3 is_stmt 1 view .LVU97
 294 00ee 03A9     		add	r1, sp, #12
 295 00f0 3046     		mov	r0, r6
 296 00f2 FFF7FEFF 		bl	HAL_GPIO_Init
 297              	.LVL13:
1327:Core/Src/main.c **** 
1328:Core/Src/main.c ****   /* EXTI interrupt init*/
1329:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI9_5_IRQn, 2, 0);
 298              		.loc 1 1329 3 view .LVU98
 299 00f6 2246     		mov	r2, r4
 300 00f8 0221     		movs	r1, #2
 301 00fa 1720     		movs	r0, #23
 302 00fc FFF7FEFF 		bl	HAL_NVIC_SetPriority
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 34


 303              	.LVL14:
1330:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 304              		.loc 1 1330 3 view .LVU99
 305 0100 1720     		movs	r0, #23
 306 0102 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 307              	.LVL15:
1331:Core/Src/main.c **** 
1332:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI15_10_IRQn, 2, 0);
 308              		.loc 1 1332 3 view .LVU100
 309 0106 2246     		mov	r2, r4
 310 0108 0221     		movs	r1, #2
 311 010a 2820     		movs	r0, #40
 312 010c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 313              	.LVL16:
1333:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 314              		.loc 1 1333 3 view .LVU101
 315 0110 2820     		movs	r0, #40
 316 0112 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 317              	.LVL17:
1334:Core/Src/main.c **** 
1335:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
1336:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
1337:Core/Src/main.c **** }
 318              		.loc 1 1337 1 is_stmt 0 view .LVU102
 319 0116 09B0     		add	sp, sp, #36
 320              		.cfi_def_cfa_offset 28
 321              		@ sp needed
 322 0118 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 323              	.L9:
 324              		.align	2
 325              	.L8:
 326 011c 00380240 		.word	1073887232
 327 0120 00000240 		.word	1073872896
 328 0124 00040240 		.word	1073873920
 329 0128 00080240 		.word	1073874944
 330              		.cfi_endproc
 331              	.LFE146:
 333              		.section	.rodata.buildDataPacket.str1.4,"aMS",%progbits,1
 334              		.align	2
 335              	.LC0:
 336 0000 0A00     		.ascii	"\012\000"
 337 0002 0000     		.align	2
 338              	.LC1:
 339 0004 25643A25 		.ascii	"%d:%d:%d,\000"
 339      643A2564 
 339      2C00
 340 000e 0000     		.align	2
 341              	.LC2:
 342 0010 2825642C 		.ascii	"(%d,%d),\000"
 342      2564292C 
 342      00
 343 0019 000000   		.align	2
 344              	.LC3:
 345 001c 54656D70 		.ascii	"Temperature/pressure reading failed\012\000"
 345      65726174 
 345      7572652F 
 345      70726573 
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 35


 345      73757265 
 346              		.global	__aeabi_f2d
 347              		.global	__aeabi_dsub
 348              		.global	__aeabi_dmul
 349              		.global	__aeabi_d2f
 350 0041 000000   		.align	2
 351              	.LC4:
 352 0044 25732C25 		.ascii	"%s,%s,%s,%s\000"
 352      732C2573 
 352      2C257300 
 353              		.section	.text.buildDataPacket,"ax",%progbits
 354              		.align	1
 355              		.global	buildDataPacket
 356              		.syntax unified
 357              		.thumb
 358              		.thumb_func
 360              	buildDataPacket:
 361              	.LFB147:
1338:Core/Src/main.c **** 
1339:Core/Src/main.c **** /* USER CODE BEGIN 4 */
1340:Core/Src/main.c **** uint16_t buildDataPacket() {
 362              		.loc 1 1340 28 is_stmt 1 view -0
 363              		.cfi_startproc
 364              		@ args = 0, pretend = 0, frame = 72
 365              		@ frame_needed = 0, uses_anonymous_args = 0
 366 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 367              		.cfi_def_cfa_offset 24
 368              		.cfi_offset 4, -24
 369              		.cfi_offset 5, -20
 370              		.cfi_offset 6, -16
 371              		.cfi_offset 7, -12
 372              		.cfi_offset 8, -8
 373              		.cfi_offset 14, -4
 374 0004 94B0     		sub	sp, sp, #80
 375              		.cfi_def_cfa_offset 104
1341:Core/Src/main.c ****   //Set memory of line_out to emtpy
1342:Core/Src/main.c ****   //memset(line_out, '\0', sizeof(line_out));
1343:Core/Src/main.c ****   memset(transmit_data, '\0', sizeof(transmit_data));
 376              		.loc 1 1343 3 view .LVU104
 377 0006 4FF48072 		mov	r2, #256
 378 000a 0021     		movs	r1, #0
 379 000c 6648     		ldr	r0, .L18+16
 380 000e FFF7FEFF 		bl	memset
 381              	.LVL18:
1344:Core/Src/main.c **** 
1345:Core/Src/main.c ****   //Copy a new line character to line_out
1346:Core/Src/main.c ****   //memcpy(line_out, "\r\n\n", sizeof("\r\n\n"));
1347:Core/Src/main.c ****   //memcpy(transmit_data, "\r\n\n", sizeof("\r\n\n"));
1348:Core/Src/main.c **** 
1349:Core/Src/main.c ****   //Transmit the data over uart2
1350:Core/Src/main.c ****   //HAL_UART_Transmit(&huart2, (uint8_t*)line_out, sizeof(line_out)/sizeof(line_out[0]), 1000);
1351:Core/Src/main.c **** 
1352:Core/Src/main.c **** 
1353:Core/Src/main.c ****   
1354:Core/Src/main.c ****   //Search for the \n character
1355:Core/Src/main.c ****   uint8_t *token = strtok(gps_raw, "\n");
 382              		.loc 1 1355 3 view .LVU105
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 36


 383              		.loc 1 1355 20 is_stmt 0 view .LVU106
 384 0012 6649     		ldr	r1, .L18+20
 385 0014 6648     		ldr	r0, .L18+24
 386 0016 FFF7FEFF 		bl	strtok
 387              	.LVL19:
1356:Core/Src/main.c **** 
1357:Core/Src/main.c ****   if (token == NULL) {
 388              		.loc 1 1357 3 is_stmt 1 view .LVU107
 389              		.loc 1 1357 6 is_stmt 0 view .LVU108
 390 001a 48B1     		cbz	r0, .L11
 391 001c 0146     		mov	r1, r0
 392              	.LBB7:
1358:Core/Src/main.c ****     //break
1359:Core/Src/main.c ****   } else {
1360:Core/Src/main.c ****     //memset(line, '\0', sizeof(line));
1361:Core/Src/main.c ****     strcpy(line, token);
 393              		.loc 1 1361 5 is_stmt 1 view .LVU109
 394 001e 654C     		ldr	r4, .L18+28
 395 0020 2046     		mov	r0, r4
 396              	.LVL20:
 397              		.loc 1 1361 5 is_stmt 0 view .LVU110
 398 0022 FFF7FEFF 		bl	strcpy
 399              	.LVL21:
1362:Core/Src/main.c ****     struct minmea_sentence_rmc frame;
 400              		.loc 1 1362 5 is_stmt 1 view .LVU111
1363:Core/Src/main.c ****     if (minmea_parse_rmc(&frame, line)) {
 401              		.loc 1 1363 5 view .LVU112
 402              		.loc 1 1363 9 is_stmt 0 view .LVU113
 403 0026 2146     		mov	r1, r4
 404 0028 02A8     		add	r0, sp, #8
 405 002a FFF7FEFF 		bl	minmea_parse_rmc
 406              	.LVL22:
 407              		.loc 1 1363 8 view .LVU114
 408 002e 30B9     		cbnz	r0, .L17
 409              	.L11:
 410              	.LBE7:
1364:Core/Src/main.c ****       //memset(line_out, '\0', sizeof(line_out));
1365:Core/Src/main.c ****       sprintf(transmit_data + strlen(transmit_data),"%d:%d:%d,",frame.time.hours, frame.time.minute
1366:Core/Src/main.c ****       //HAL_UART_Transmit(&huart2, (uint8_t*)line_out, sizeof(line_out)/sizeof(line_out[0]), 1000);
1367:Core/Src/main.c **** 
1368:Core/Src/main.c ****       //memset(line_out, '\0', sizeof(line_out));
1369:Core/Src/main.c ****       sprintf(transmit_data + strlen(transmit_data), "(%d,%d),",minmea_rescale(&frame.latitude, 100
1370:Core/Src/main.c ****       //HAL_UART_Transmit(&huart2, (uint8_t*)line_out, sizeof(line_out)/sizeof(line_out[0]), 1000);
1371:Core/Src/main.c ****       
1372:Core/Src/main.c ****     }
1373:Core/Src/main.c ****   }
1374:Core/Src/main.c **** 
1375:Core/Src/main.c ****   //Set gps_raw data register to empty
1376:Core/Src/main.c ****   memset(gps_raw, '\0', sizeof(gps_raw));
 411              		.loc 1 1376 3 is_stmt 1 view .LVU115
 412 0030 4FF40072 		mov	r2, #512
 413 0034 0021     		movs	r1, #0
 414 0036 5E48     		ldr	r0, .L18+24
 415 0038 FFF7FEFF 		bl	memset
 416              	.LVL23:
1377:Core/Src/main.c **** 
1378:Core/Src/main.c **** 
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 37


1379:Core/Src/main.c **** 
1380:Core/Src/main.c ****   	//HAL_Delay(100);
1381:Core/Src/main.c **** 	while (!bmp280_read_float(&bmp280, &temperature, &pressure, &humidity)) {
 417              		.loc 1 1381 2 view .LVU116
 418              		.loc 1 1381 8 is_stmt 0 view .LVU117
 419 003c 42E0     		b	.L13
 420              	.L17:
 421              	.LBB8:
1365:Core/Src/main.c ****       //HAL_UART_Transmit(&huart2, (uint8_t*)line_out, sizeof(line_out)/sizeof(line_out[0]), 1000);
 422              		.loc 1 1365 7 is_stmt 1 view .LVU118
1365:Core/Src/main.c ****       //HAL_UART_Transmit(&huart2, (uint8_t*)line_out, sizeof(line_out)/sizeof(line_out[0]), 1000);
 423              		.loc 1 1365 31 is_stmt 0 view .LVU119
 424 003e 5A4C     		ldr	r4, .L18+16
 425 0040 2046     		mov	r0, r4
 426 0042 FFF7FEFF 		bl	strlen
 427              	.LVL24:
1365:Core/Src/main.c ****       //HAL_UART_Transmit(&huart2, (uint8_t*)line_out, sizeof(line_out)/sizeof(line_out[0]), 1000);
 428              		.loc 1 1365 7 view .LVU120
 429 0046 049B     		ldr	r3, [sp, #16]
 430 0048 0093     		str	r3, [sp]
 431 004a 039B     		ldr	r3, [sp, #12]
 432 004c 029A     		ldr	r2, [sp, #8]
 433 004e 5A49     		ldr	r1, .L18+32
 434 0050 2044     		add	r0, r0, r4
 435 0052 FFF7FEFF 		bl	sprintf
 436              	.LVL25:
1369:Core/Src/main.c ****       //HAL_UART_Transmit(&huart2, (uint8_t*)line_out, sizeof(line_out)/sizeof(line_out[0]), 1000);
 437              		.loc 1 1369 7 is_stmt 1 view .LVU121
1369:Core/Src/main.c ****       //HAL_UART_Transmit(&huart2, (uint8_t*)line_out, sizeof(line_out)/sizeof(line_out[0]), 1000);
 438              		.loc 1 1369 31 is_stmt 0 view .LVU122
 439 0056 2046     		mov	r0, r4
 440 0058 FFF7FEFF 		bl	strlen
 441              	.LVL26:
 442 005c 0546     		mov	r5, r0
1369:Core/Src/main.c ****       //HAL_UART_Transmit(&huart2, (uint8_t*)line_out, sizeof(line_out)/sizeof(line_out[0]), 1000);
 443              		.loc 1 1369 7 view .LVU123
 444 005e 4FF47A71 		mov	r1, #1000
 445 0062 07A8     		add	r0, sp, #28
 446 0064 FFF7FEFF 		bl	minmea_rescale
 447              	.LVL27:
 448 0068 0646     		mov	r6, r0
 449 006a 4FF47A71 		mov	r1, #1000
 450 006e 09A8     		add	r0, sp, #36
 451 0070 FFF7FEFF 		bl	minmea_rescale
 452              	.LVL28:
 453 0074 0346     		mov	r3, r0
 454 0076 3246     		mov	r2, r6
 455 0078 5049     		ldr	r1, .L18+36
 456 007a 6019     		adds	r0, r4, r5
 457 007c FFF7FEFF 		bl	sprintf
 458              	.LVL29:
 459 0080 D6E7     		b	.L11
 460              	.L15:
 461              	.LBE8:
1382:Core/Src/main.c **** 	  size = sprintf(transmit_data + strlen(transmit_data),"Temperature/pressure reading failed\n");
 462              		.loc 1 1382 4 is_stmt 1 view .LVU124
 463              		.loc 1 1382 35 is_stmt 0 view .LVU125
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 38


 464 0082 494C     		ldr	r4, .L18+16
 465 0084 2046     		mov	r0, r4
 466 0086 FFF7FEFF 		bl	strlen
 467              	.LVL30:
 468              		.loc 1 1382 11 view .LVU126
 469 008a 4D4D     		ldr	r5, .L18+40
 470 008c 04EB000C 		add	ip, r4, r0
 471 0090 05F1200E 		add	lr, r5, #32
 472              	.L14:
 473 0094 2C46     		mov	r4, r5
 474 0096 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 475 0098 CCF80000 		str	r0, [ip]	@ unaligned
 476 009c CCF80410 		str	r1, [ip, #4]	@ unaligned
 477 00a0 CCF80820 		str	r2, [ip, #8]	@ unaligned
 478 00a4 CCF80C30 		str	r3, [ip, #12]	@ unaligned
 479 00a8 2546     		mov	r5, r4
 480 00aa 0CF1100C 		add	ip, ip, #16
 481 00ae 7445     		cmp	r4, lr
 482 00b0 F0D1     		bne	.L14
 483 00b2 2068     		ldr	r0, [r4]
 484 00b4 CCF80000 		str	r0, [ip]	@ unaligned
 485 00b8 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 486 00ba 8CF80430 		strb	r3, [ip, #4]
 487              		.loc 1 1382 9 view .LVU127
 488 00be 2422     		movs	r2, #36
 489 00c0 404B     		ldr	r3, .L18+44
 490 00c2 1A60     		str	r2, [r3]
 491              	.L13:
1381:Core/Src/main.c **** 	  size = sprintf(transmit_data + strlen(transmit_data),"Temperature/pressure reading failed\n");
 492              		.loc 1 1381 9 is_stmt 1 view .LVU128
1381:Core/Src/main.c **** 	  size = sprintf(transmit_data + strlen(transmit_data),"Temperature/pressure reading failed\n");
 493              		.loc 1 1381 10 is_stmt 0 view .LVU129
 494 00c4 404B     		ldr	r3, .L18+48
 495 00c6 414A     		ldr	r2, .L18+52
 496 00c8 4149     		ldr	r1, .L18+56
 497 00ca 4248     		ldr	r0, .L18+60
 498 00cc FFF7FEFF 		bl	bmp280_read_float
 499              	.LVL31:
1381:Core/Src/main.c **** 	  size = sprintf(transmit_data + strlen(transmit_data),"Temperature/pressure reading failed\n");
 500              		.loc 1 1381 9 view .LVU130
 501 00d0 0028     		cmp	r0, #0
 502 00d2 D6D0     		beq	.L15
1383:Core/Src/main.c **** 	}
1384:Core/Src/main.c **** 
1385:Core/Src/main.c ****   altitude = 44330*(1-pow((pressure/P_b),(1/5.255)));
 503              		.loc 1 1385 3 is_stmt 1 view .LVU131
 504              		.loc 1 1385 36 is_stmt 0 view .LVU132
 505 00d4 3D4C     		ldr	r4, .L18+52
 506 00d6 94ED007A 		vldr.32	s14, [r4]
 507 00da 3F4B     		ldr	r3, .L18+64
 508 00dc D3ED007A 		vldr.32	s15, [r3]
 509              		.loc 1 1385 23 view .LVU133
 510 00e0 C7EE277A 		vdiv.f32	s15, s14, s15
 511 00e4 17EE900A 		vmov	r0, s15
 512 00e8 FFF7FEFF 		bl	__aeabi_f2d
 513              	.LVL32:
 514 00ec 9FED2A1B 		vldr.64	d1, .L18
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 39


 515 00f0 41EC100B 		vmov	d0, r0, r1
 516 00f4 FFF7FEFF 		bl	pow
 517              	.LVL33:
 518 00f8 53EC102B 		vmov	r2, r3, d0
 519              		.loc 1 1385 22 view .LVU134
 520 00fc 0020     		movs	r0, #0
 521 00fe 3749     		ldr	r1, .L18+68
 522 0100 FFF7FEFF 		bl	__aeabi_dsub
 523              	.LVL34:
 524              		.loc 1 1385 19 view .LVU135
 525 0104 26A3     		adr	r3, .L18+8
 526 0106 D3E90023 		ldrd	r2, [r3]
 527 010a FFF7FEFF 		bl	__aeabi_dmul
 528              	.LVL35:
 529 010e FFF7FEFF 		bl	__aeabi_d2f
 530              	.LVL36:
 531              		.loc 1 1385 12 view .LVU136
 532 0112 334B     		ldr	r3, .L18+72
 533 0114 1860     		str	r0, [r3]	@ float
1386:Core/Src/main.c **** 
1387:Core/Src/main.c ****   gcvt(altitude, 6, sAltitude);
 534              		.loc 1 1387 3 is_stmt 1 view .LVU137
 535 0116 DFF8DC80 		ldr	r8, .L18+92
 536 011a FFF7FEFF 		bl	__aeabi_f2d
 537              	.LVL37:
 538 011e 41EC100B 		vmov	d0, r0, r1
 539 0122 4146     		mov	r1, r8
 540 0124 0620     		movs	r0, #6
 541 0126 FFF7FEFF 		bl	gcvt
 542              	.LVL38:
1388:Core/Src/main.c ****   gcvt(pressure, 8, sPressure);
 543              		.loc 1 1388 3 view .LVU138
 544 012a 2E4D     		ldr	r5, .L18+76
 545 012c 2068     		ldr	r0, [r4]	@ float
 546 012e FFF7FEFF 		bl	__aeabi_f2d
 547              	.LVL39:
 548 0132 41EC100B 		vmov	d0, r0, r1
 549 0136 2946     		mov	r1, r5
 550 0138 0820     		movs	r0, #8
 551 013a FFF7FEFF 		bl	gcvt
 552              	.LVL40:
1389:Core/Src/main.c ****   gcvt(temperature, 4, sTemperature);
 553              		.loc 1 1389 3 view .LVU139
 554 013e 2A4E     		ldr	r6, .L18+80
 555 0140 234B     		ldr	r3, .L18+56
 556 0142 1868     		ldr	r0, [r3]	@ float
 557 0144 FFF7FEFF 		bl	__aeabi_f2d
 558              	.LVL41:
 559 0148 41EC100B 		vmov	d0, r0, r1
 560 014c 3146     		mov	r1, r6
 561 014e 0420     		movs	r0, #4
 562 0150 FFF7FEFF 		bl	gcvt
 563              	.LVL42:
1390:Core/Src/main.c ****   gcvt(humidity, 4, sHumidity);
 564              		.loc 1 1390 3 view .LVU140
 565 0154 254F     		ldr	r7, .L18+84
 566 0156 1C4B     		ldr	r3, .L18+48
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 40


 567 0158 1868     		ldr	r0, [r3]	@ float
 568 015a FFF7FEFF 		bl	__aeabi_f2d
 569              	.LVL43:
 570 015e 41EC100B 		vmov	d0, r0, r1
 571 0162 3946     		mov	r1, r7
 572 0164 0420     		movs	r0, #4
 573 0166 FFF7FEFF 		bl	gcvt
 574              	.LVL44:
1391:Core/Src/main.c **** 
1392:Core/Src/main.c **** 	sprintf(transmit_data + strlen(transmit_data),"%s,%s,%s,%s",sPressure, sTemperature, sHumidity, sA
 575              		.loc 1 1392 2 view .LVU141
 576              		.loc 1 1392 26 is_stmt 0 view .LVU142
 577 016a 0F4C     		ldr	r4, .L18+16
 578 016c 2046     		mov	r0, r4
 579 016e FFF7FEFF 		bl	strlen
 580              	.LVL45:
 581              		.loc 1 1392 2 view .LVU143
 582 0172 CDF80480 		str	r8, [sp, #4]
 583 0176 0097     		str	r7, [sp]
 584 0178 3346     		mov	r3, r6
 585 017a 2A46     		mov	r2, r5
 586 017c 1C49     		ldr	r1, .L18+88
 587 017e 2044     		add	r0, r0, r4
 588 0180 FFF7FEFF 		bl	sprintf
 589              	.LVL46:
1393:Core/Src/main.c ****   return strlen(transmit_data);
 590              		.loc 1 1393 3 is_stmt 1 view .LVU144
 591              		.loc 1 1393 10 is_stmt 0 view .LVU145
 592 0184 2046     		mov	r0, r4
 593 0186 FFF7FEFF 		bl	strlen
 594              	.LVL47:
1394:Core/Src/main.c **** }
 595              		.loc 1 1394 1 view .LVU146
 596 018a 80B2     		uxth	r0, r0
 597 018c 14B0     		add	sp, sp, #80
 598              		.cfi_def_cfa_offset 24
 599              		@ sp needed
 600 018e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 601              	.L19:
 602 0192 00BFAFF3 		.align	3
 602      0080
 603              	.L18:
 604 0198 6C45D9CC 		.word	-858176148
 605 019c 955BC83F 		.word	1070095253
 606 01a0 00000000 		.word	0
 607 01a4 40A5E540 		.word	1088791872
 608 01a8 00000000 		.word	transmit_data
 609 01ac 00000000 		.word	.LC0
 610 01b0 00000000 		.word	gps_raw
 611 01b4 00000000 		.word	line
 612 01b8 04000000 		.word	.LC1
 613 01bc 10000000 		.word	.LC2
 614 01c0 1C000000 		.word	.LC3
 615 01c4 00000000 		.word	size
 616 01c8 00000000 		.word	humidity
 617 01cc 00000000 		.word	pressure
 618 01d0 00000000 		.word	temperature
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 41


 619 01d4 00000000 		.word	bmp280
 620 01d8 00000000 		.word	P_b
 621 01dc 0000F03F 		.word	1072693248
 622 01e0 00000000 		.word	altitude
 623 01e4 00000000 		.word	sPressure
 624 01e8 00000000 		.word	sTemperature
 625 01ec 00000000 		.word	sHumidity
 626 01f0 44000000 		.word	.LC4
 627 01f4 00000000 		.word	sAltitude
 628              		.cfi_endproc
 629              	.LFE147:
 631              		.section	.rodata.HAL_GPIO_EXTI_Callback.str1.4,"aMS",%progbits,1
 632              		.align	2
 633              	.LC5:
 634 0000 0A4C6566 		.ascii	"\012Left Button Pushed\000"
 634      74204275 
 634      74746F6E 
 634      20507573 
 634      68656400 
 635              		.align	2
 636              	.LC6:
 637 0014 4D6F6465 		.ascii	"Mode:\000"
 637      3A00
 638 001a 0000     		.align	2
 639              	.LC7:
 640 001c 25642020 		.ascii	"%d        \000"
 640      20202020 
 640      202000
 641 0027 00       		.align	2
 642              	.LC8:
 643 0028 0A526967 		.ascii	"\012Right Button Pushed\000"
 643      68742042 
 643      7574746F 
 643      6E205075 
 643      73686564 
 644              		.section	.text.HAL_GPIO_EXTI_Callback,"ax",%progbits
 645              		.align	1
 646              		.global	HAL_GPIO_EXTI_Callback
 647              		.syntax unified
 648              		.thumb
 649              		.thumb_func
 651              	HAL_GPIO_EXTI_Callback:
 652              	.LVL48:
 653              	.LFB148:
1395:Core/Src/main.c **** 
1396:Core/Src/main.c **** 
1397:Core/Src/main.c **** void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
1398:Core/Src/main.c **** {
 654              		.loc 1 1398 1 is_stmt 1 view -0
 655              		.cfi_startproc
 656              		@ args = 0, pretend = 0, frame = 0
 657              		@ frame_needed = 0, uses_anonymous_args = 0
 658              		.loc 1 1398 1 is_stmt 0 view .LVU148
 659 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 660              		.cfi_def_cfa_offset 24
 661              		.cfi_offset 4, -24
 662              		.cfi_offset 5, -20
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 42


 663              		.cfi_offset 6, -16
 664              		.cfi_offset 7, -12
 665              		.cfi_offset 8, -8
 666              		.cfi_offset 14, -4
 667 0004 0446     		mov	r4, r0
1399:Core/Src/main.c ****   if(GPIO_Pin == GPIO_PIN_13) // Left button pushed
 668              		.loc 1 1399 3 is_stmt 1 view .LVU149
 669              		.loc 1 1399 5 is_stmt 0 view .LVU150
 670 0006 B0F5005F 		cmp	r0, #8192
 671 000a 07D0     		beq	.L26
 672              	.LVL49:
 673              	.L21:
1400:Core/Src/main.c ****     {
1401:Core/Src/main.c ****       //get the current time
1402:Core/Src/main.c ****       currentTicks = HAL_GetTick();
1403:Core/Src/main.c ****       if ((currentTicks-preTicks)>200) {
1404:Core/Src/main.c ****         memset(transmit_data, '\0', sizeof(transmit_data));
1405:Core/Src/main.c ****         sprintf(transmit_data,"%s","\nLeft Button Pushed");
1406:Core/Src/main.c **** 	      HAL_UART_Transmit(&huart2, transmit_data, sizeof(transmit_data)/sizeof(transmit_data[0]),100
1407:Core/Src/main.c ****         memset(transmit_data, '\0', sizeof(transmit_data));
1408:Core/Src/main.c ****         bModeChanged = true;
1409:Core/Src/main.c **** 
1410:Core/Src/main.c ****         if (iMode == 1) {
1411:Core/Src/main.c ****           iMode = 60;
1412:Core/Src/main.c ****           // Set cursors and write the word "mode"
1413:Core/Src/main.c ****           ssd1306_SetCursor(0, 0);
1414:Core/Src/main.c ****           ssd1306_WriteString("Mode:", Font_16x26, White);
1415:Core/Src/main.c **** 
1416:Core/Src/main.c ****           ssd1306_SetCursor(0, 35);
1417:Core/Src/main.c ****           sprintf(sMode, "%d        ", iMode);
1418:Core/Src/main.c ****           ssd1306_WriteString(sMode, Font_16x26, White);
1419:Core/Src/main.c **** 
1420:Core/Src/main.c ****           // Copy all data from local screenbuffer to the screen
1421:Core/Src/main.c ****           ssd1306_UpdateScreen(&hi2c2);
1422:Core/Src/main.c ****         } else {
1423:Core/Src/main.c ****           iMode = iMode - 1;
1424:Core/Src/main.c ****           // Set cursors and write the word "mode"
1425:Core/Src/main.c ****           ssd1306_SetCursor(0, 0);
1426:Core/Src/main.c ****           ssd1306_WriteString("Mode:", Font_16x26, White);
1427:Core/Src/main.c **** 
1428:Core/Src/main.c ****           ssd1306_SetCursor(0, 35);
1429:Core/Src/main.c ****           sprintf(sMode, "%d        ", iMode);
1430:Core/Src/main.c ****           ssd1306_WriteString(sMode, Font_16x26, White);
1431:Core/Src/main.c **** 
1432:Core/Src/main.c ****           // Copy all data from local screenbuffer to the screen
1433:Core/Src/main.c ****           ssd1306_UpdateScreen(&hi2c2);
1434:Core/Src/main.c **** 
1435:Core/Src/main.c ****         }
1436:Core/Src/main.c **** 
1437:Core/Src/main.c **** 
1438:Core/Src/main.c **** 
1439:Core/Src/main.c ****       } else {
1440:Core/Src/main.c ****         //break
1441:Core/Src/main.c ****       }
 674              		.loc 1 1441 7 is_stmt 1 view .LVU151
1442:Core/Src/main.c ****     }
1443:Core/Src/main.c **** 
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 43


1444:Core/Src/main.c ****   if(GPIO_Pin == GPIO_PIN_5) // Right button pushed
 675              		.loc 1 1444 3 view .LVU152
 676              		.loc 1 1444 5 is_stmt 0 view .LVU153
 677 000c 202C     		cmp	r4, #32
 678 000e 73D0     		beq	.L27
 679              	.L23:
1445:Core/Src/main.c ****     {
1446:Core/Src/main.c ****       //get the current time
1447:Core/Src/main.c ****       currentTicks = HAL_GetTick();
1448:Core/Src/main.c ****       if ((currentTicks-preTicks)>200) {
1449:Core/Src/main.c ****         memset(transmit_data, '\0', sizeof(transmit_data));
1450:Core/Src/main.c ****         sprintf(transmit_data,"%s","\nRight Button Pushed");
1451:Core/Src/main.c **** 	      HAL_UART_Transmit(&huart2, transmit_data, sizeof(transmit_data)/sizeof(transmit_data[0]),100
1452:Core/Src/main.c ****         memset(transmit_data, '\0', sizeof(transmit_data));
1453:Core/Src/main.c ****         bModeChanged = true;
1454:Core/Src/main.c ****         
1455:Core/Src/main.c ****         if (iMode == 60) {
1456:Core/Src/main.c ****           iMode = 1;
1457:Core/Src/main.c ****           // Set cursors and write the word "mode"
1458:Core/Src/main.c ****           ssd1306_SetCursor(0, 0);
1459:Core/Src/main.c ****           ssd1306_WriteString("Mode:", Font_16x26, White);
1460:Core/Src/main.c **** 
1461:Core/Src/main.c ****           ssd1306_SetCursor(0, 35);
1462:Core/Src/main.c ****           sprintf(sMode, "%d        ", iMode);
1463:Core/Src/main.c ****           ssd1306_WriteString(sMode, Font_16x26, White);
1464:Core/Src/main.c **** 
1465:Core/Src/main.c ****           // Copy all data from local screenbuffer to the screen
1466:Core/Src/main.c ****           ssd1306_UpdateScreen(&hi2c2);
1467:Core/Src/main.c ****         } else {
1468:Core/Src/main.c ****           iMode = iMode + 1;
1469:Core/Src/main.c ****           // Set cursors and write the word "mode"
1470:Core/Src/main.c ****           ssd1306_SetCursor(0, 0);
1471:Core/Src/main.c ****           ssd1306_WriteString("Mode:", Font_16x26, White);
1472:Core/Src/main.c **** 
1473:Core/Src/main.c ****           ssd1306_SetCursor(0, 35);
1474:Core/Src/main.c ****           sprintf(sMode, "%d        ", iMode);
1475:Core/Src/main.c ****           ssd1306_WriteString(sMode, Font_16x26, White);
1476:Core/Src/main.c **** 
1477:Core/Src/main.c ****           // Copy all data from local screenbuffer to the screen
1478:Core/Src/main.c ****           ssd1306_UpdateScreen(&hi2c2);
1479:Core/Src/main.c **** 
1480:Core/Src/main.c ****         }
1481:Core/Src/main.c **** 
1482:Core/Src/main.c **** 
1483:Core/Src/main.c ****       } else {
1484:Core/Src/main.c ****         //break
1485:Core/Src/main.c ****       }
 680              		.loc 1 1485 7 is_stmt 1 view .LVU154
1486:Core/Src/main.c ****     }  
1487:Core/Src/main.c ****   preTicks = currentTicks;
 681              		.loc 1 1487 3 view .LVU155
 682              		.loc 1 1487 12 is_stmt 0 view .LVU156
 683 0010 724B     		ldr	r3, .L30
 684 0012 1A68     		ldr	r2, [r3]
 685 0014 724B     		ldr	r3, .L30+4
 686 0016 1A60     		str	r2, [r3]
1488:Core/Src/main.c **** }
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 44


 687              		.loc 1 1488 1 view .LVU157
 688 0018 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 689              	.LVL50:
 690              	.L26:
1402:Core/Src/main.c ****       if ((currentTicks-preTicks)>200) {
 691              		.loc 1 1402 7 is_stmt 1 view .LVU158
1402:Core/Src/main.c ****       if ((currentTicks-preTicks)>200) {
 692              		.loc 1 1402 22 is_stmt 0 view .LVU159
 693 001c FFF7FEFF 		bl	HAL_GetTick
 694              	.LVL51:
1402:Core/Src/main.c ****       if ((currentTicks-preTicks)>200) {
 695              		.loc 1 1402 20 view .LVU160
 696 0020 6E4B     		ldr	r3, .L30
 697 0022 1860     		str	r0, [r3]
1403:Core/Src/main.c ****         memset(transmit_data, '\0', sizeof(transmit_data));
 698              		.loc 1 1403 7 is_stmt 1 view .LVU161
1403:Core/Src/main.c ****         memset(transmit_data, '\0', sizeof(transmit_data));
 699              		.loc 1 1403 24 is_stmt 0 view .LVU162
 700 0024 6E4B     		ldr	r3, .L30+4
 701 0026 1B68     		ldr	r3, [r3]
 702 0028 C01A     		subs	r0, r0, r3
1403:Core/Src/main.c ****         memset(transmit_data, '\0', sizeof(transmit_data));
 703              		.loc 1 1403 10 view .LVU163
 704 002a C828     		cmp	r0, #200
 705 002c EEDD     		ble	.L21
1404:Core/Src/main.c ****         sprintf(transmit_data,"%s","\nLeft Button Pushed");
 706              		.loc 1 1404 9 is_stmt 1 view .LVU164
 707 002e 6D4F     		ldr	r7, .L30+8
 708 0030 4FF48078 		mov	r8, #256
 709 0034 4246     		mov	r2, r8
 710 0036 0021     		movs	r1, #0
 711 0038 3846     		mov	r0, r7
 712 003a FFF7FEFF 		bl	memset
 713              	.LVL52:
1405:Core/Src/main.c **** 	      HAL_UART_Transmit(&huart2, transmit_data, sizeof(transmit_data)/sizeof(transmit_data[0]),100
 714              		.loc 1 1405 9 view .LVU165
 715 003e 3D46     		mov	r5, r7
 716 0040 694E     		ldr	r6, .L30+12
 717 0042 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 718 0044 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 719 0046 3368     		ldr	r3, [r6]
 720 0048 2B60     		str	r3, [r5]
1406:Core/Src/main.c ****         memset(transmit_data, '\0', sizeof(transmit_data));
 721              		.loc 1 1406 8 view .LVU166
 722 004a 4FF47A73 		mov	r3, #1000
 723 004e 4246     		mov	r2, r8
 724 0050 3946     		mov	r1, r7
 725 0052 6648     		ldr	r0, .L30+16
 726 0054 FFF7FEFF 		bl	HAL_UART_Transmit
 727              	.LVL53:
1407:Core/Src/main.c ****         bModeChanged = true;
 728              		.loc 1 1407 9 view .LVU167
 729 0058 4246     		mov	r2, r8
 730 005a 0021     		movs	r1, #0
 731 005c 3846     		mov	r0, r7
 732 005e FFF7FEFF 		bl	memset
 733              	.LVL54:
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 45


1408:Core/Src/main.c **** 
 734              		.loc 1 1408 9 view .LVU168
1408:Core/Src/main.c **** 
 735              		.loc 1 1408 22 is_stmt 0 view .LVU169
 736 0062 634B     		ldr	r3, .L30+20
 737 0064 0122     		movs	r2, #1
 738 0066 1A70     		strb	r2, [r3]
1410:Core/Src/main.c ****           iMode = 60;
 739              		.loc 1 1410 9 is_stmt 1 view .LVU170
1410:Core/Src/main.c ****           iMode = 60;
 740              		.loc 1 1410 19 is_stmt 0 view .LVU171
 741 0068 624B     		ldr	r3, .L30+24
 742 006a 1B68     		ldr	r3, [r3]
1410:Core/Src/main.c ****           iMode = 60;
 743              		.loc 1 1410 12 view .LVU172
 744 006c 9342     		cmp	r3, r2
 745 006e 21D0     		beq	.L28
1423:Core/Src/main.c ****           // Set cursors and write the word "mode"
 746              		.loc 1 1423 11 is_stmt 1 view .LVU173
1423:Core/Src/main.c ****           // Set cursors and write the word "mode"
 747              		.loc 1 1423 25 is_stmt 0 view .LVU174
 748 0070 013B     		subs	r3, r3, #1
1423:Core/Src/main.c ****           // Set cursors and write the word "mode"
 749              		.loc 1 1423 17 view .LVU175
 750 0072 604F     		ldr	r7, .L30+24
 751 0074 3B60     		str	r3, [r7]
1425:Core/Src/main.c ****           ssd1306_WriteString("Mode:", Font_16x26, White);
 752              		.loc 1 1425 11 is_stmt 1 view .LVU176
 753 0076 0021     		movs	r1, #0
 754 0078 0846     		mov	r0, r1
 755 007a FFF7FEFF 		bl	ssd1306_SetCursor
 756              	.LVL55:
1426:Core/Src/main.c **** 
 757              		.loc 1 1426 11 view .LVU177
 758 007e 5E4D     		ldr	r5, .L30+28
 759 0080 0123     		movs	r3, #1
 760 0082 95E80600 		ldm	r5, {r1, r2}
 761 0086 5D48     		ldr	r0, .L30+32
 762 0088 FFF7FEFF 		bl	ssd1306_WriteString
 763              	.LVL56:
1428:Core/Src/main.c ****           sprintf(sMode, "%d        ", iMode);
 764              		.loc 1 1428 11 view .LVU178
 765 008c 2321     		movs	r1, #35
 766 008e 0020     		movs	r0, #0
 767 0090 FFF7FEFF 		bl	ssd1306_SetCursor
 768              	.LVL57:
1429:Core/Src/main.c ****           ssd1306_WriteString(sMode, Font_16x26, White);
 769              		.loc 1 1429 11 view .LVU179
 770 0094 5A4E     		ldr	r6, .L30+36
 771 0096 3A68     		ldr	r2, [r7]
 772 0098 5A49     		ldr	r1, .L30+40
 773 009a 3046     		mov	r0, r6
 774 009c FFF7FEFF 		bl	sprintf
 775              	.LVL58:
1430:Core/Src/main.c **** 
 776              		.loc 1 1430 11 view .LVU180
 777 00a0 0123     		movs	r3, #1
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 46


 778 00a2 95E80600 		ldm	r5, {r1, r2}
 779 00a6 3046     		mov	r0, r6
 780 00a8 FFF7FEFF 		bl	ssd1306_WriteString
 781              	.LVL59:
1433:Core/Src/main.c **** 
 782              		.loc 1 1433 11 view .LVU181
 783 00ac 5648     		ldr	r0, .L30+44
 784 00ae FFF7FEFF 		bl	ssd1306_UpdateScreen
 785              	.LVL60:
 786 00b2 ABE7     		b	.L21
 787              	.L28:
1411:Core/Src/main.c ****           // Set cursors and write the word "mode"
 788              		.loc 1 1411 11 view .LVU182
1411:Core/Src/main.c ****           // Set cursors and write the word "mode"
 789              		.loc 1 1411 17 is_stmt 0 view .LVU183
 790 00b4 4F4F     		ldr	r7, .L30+24
 791 00b6 3C23     		movs	r3, #60
 792 00b8 3B60     		str	r3, [r7]
1413:Core/Src/main.c ****           ssd1306_WriteString("Mode:", Font_16x26, White);
 793              		.loc 1 1413 11 is_stmt 1 view .LVU184
 794 00ba 0021     		movs	r1, #0
 795 00bc 0846     		mov	r0, r1
 796 00be FFF7FEFF 		bl	ssd1306_SetCursor
 797              	.LVL61:
1414:Core/Src/main.c **** 
 798              		.loc 1 1414 11 view .LVU185
 799 00c2 4D4D     		ldr	r5, .L30+28
 800 00c4 0123     		movs	r3, #1
 801 00c6 95E80600 		ldm	r5, {r1, r2}
 802 00ca 4C48     		ldr	r0, .L30+32
 803 00cc FFF7FEFF 		bl	ssd1306_WriteString
 804              	.LVL62:
1416:Core/Src/main.c ****           sprintf(sMode, "%d        ", iMode);
 805              		.loc 1 1416 11 view .LVU186
 806 00d0 2321     		movs	r1, #35
 807 00d2 0020     		movs	r0, #0
 808 00d4 FFF7FEFF 		bl	ssd1306_SetCursor
 809              	.LVL63:
1417:Core/Src/main.c ****           ssd1306_WriteString(sMode, Font_16x26, White);
 810              		.loc 1 1417 11 view .LVU187
 811 00d8 494E     		ldr	r6, .L30+36
 812 00da 3A68     		ldr	r2, [r7]
 813 00dc 4949     		ldr	r1, .L30+40
 814 00de 3046     		mov	r0, r6
 815 00e0 FFF7FEFF 		bl	sprintf
 816              	.LVL64:
1418:Core/Src/main.c **** 
 817              		.loc 1 1418 11 view .LVU188
 818 00e4 0123     		movs	r3, #1
 819 00e6 95E80600 		ldm	r5, {r1, r2}
 820 00ea 3046     		mov	r0, r6
 821 00ec FFF7FEFF 		bl	ssd1306_WriteString
 822              	.LVL65:
1421:Core/Src/main.c ****         } else {
 823              		.loc 1 1421 11 view .LVU189
 824 00f0 4548     		ldr	r0, .L30+44
 825 00f2 FFF7FEFF 		bl	ssd1306_UpdateScreen
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 47


 826              	.LVL66:
 827 00f6 89E7     		b	.L21
 828              	.L27:
1447:Core/Src/main.c ****       if ((currentTicks-preTicks)>200) {
 829              		.loc 1 1447 7 view .LVU190
1447:Core/Src/main.c ****       if ((currentTicks-preTicks)>200) {
 830              		.loc 1 1447 22 is_stmt 0 view .LVU191
 831 00f8 FFF7FEFF 		bl	HAL_GetTick
 832              	.LVL67:
1447:Core/Src/main.c ****       if ((currentTicks-preTicks)>200) {
 833              		.loc 1 1447 20 view .LVU192
 834 00fc 374B     		ldr	r3, .L30
 835 00fe 1860     		str	r0, [r3]
1448:Core/Src/main.c ****         memset(transmit_data, '\0', sizeof(transmit_data));
 836              		.loc 1 1448 7 is_stmt 1 view .LVU193
1448:Core/Src/main.c ****         memset(transmit_data, '\0', sizeof(transmit_data));
 837              		.loc 1 1448 24 is_stmt 0 view .LVU194
 838 0100 374B     		ldr	r3, .L30+4
 839 0102 1B68     		ldr	r3, [r3]
 840 0104 C01A     		subs	r0, r0, r3
1448:Core/Src/main.c ****         memset(transmit_data, '\0', sizeof(transmit_data));
 841              		.loc 1 1448 10 view .LVU195
 842 0106 C828     		cmp	r0, #200
 843 0108 82DD     		ble	.L23
1449:Core/Src/main.c ****         sprintf(transmit_data,"%s","\nRight Button Pushed");
 844              		.loc 1 1449 9 is_stmt 1 view .LVU196
 845 010a 364E     		ldr	r6, .L30+8
 846 010c 4FF48077 		mov	r7, #256
 847 0110 3A46     		mov	r2, r7
 848 0112 0021     		movs	r1, #0
 849 0114 3046     		mov	r0, r6
 850 0116 FFF7FEFF 		bl	memset
 851              	.LVL68:
1450:Core/Src/main.c **** 	      HAL_UART_Transmit(&huart2, transmit_data, sizeof(transmit_data)/sizeof(transmit_data[0]),100
 852              		.loc 1 1450 9 view .LVU197
 853 011a 3446     		mov	r4, r6
 854 011c 3B4D     		ldr	r5, .L30+48
 855 011e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 856 0120 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 857 0122 95E80300 		ldm	r5, {r0, r1}
 858 0126 44F8040B 		str	r0, [r4], #4
 859 012a 2170     		strb	r1, [r4]
1451:Core/Src/main.c ****         memset(transmit_data, '\0', sizeof(transmit_data));
 860              		.loc 1 1451 8 view .LVU198
 861 012c 4FF47A73 		mov	r3, #1000
 862 0130 3A46     		mov	r2, r7
 863 0132 3146     		mov	r1, r6
 864 0134 2D48     		ldr	r0, .L30+16
 865 0136 FFF7FEFF 		bl	HAL_UART_Transmit
 866              	.LVL69:
1452:Core/Src/main.c ****         bModeChanged = true;
 867              		.loc 1 1452 9 view .LVU199
 868 013a 3A46     		mov	r2, r7
 869 013c 0021     		movs	r1, #0
 870 013e 3046     		mov	r0, r6
 871 0140 FFF7FEFF 		bl	memset
 872              	.LVL70:
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 48


1453:Core/Src/main.c ****         
 873              		.loc 1 1453 9 view .LVU200
1453:Core/Src/main.c ****         
 874              		.loc 1 1453 22 is_stmt 0 view .LVU201
 875 0144 2A4B     		ldr	r3, .L30+20
 876 0146 0122     		movs	r2, #1
 877 0148 1A70     		strb	r2, [r3]
1455:Core/Src/main.c ****           iMode = 1;
 878              		.loc 1 1455 9 is_stmt 1 view .LVU202
1455:Core/Src/main.c ****           iMode = 1;
 879              		.loc 1 1455 19 is_stmt 0 view .LVU203
 880 014a 2A4B     		ldr	r3, .L30+24
 881 014c 1B68     		ldr	r3, [r3]
1455:Core/Src/main.c ****           iMode = 1;
 882              		.loc 1 1455 12 view .LVU204
 883 014e 3C2B     		cmp	r3, #60
 884 0150 21D0     		beq	.L29
1468:Core/Src/main.c ****           // Set cursors and write the word "mode"
 885              		.loc 1 1468 11 is_stmt 1 view .LVU205
1468:Core/Src/main.c ****           // Set cursors and write the word "mode"
 886              		.loc 1 1468 25 is_stmt 0 view .LVU206
 887 0152 0133     		adds	r3, r3, #1
1468:Core/Src/main.c ****           // Set cursors and write the word "mode"
 888              		.loc 1 1468 17 view .LVU207
 889 0154 274E     		ldr	r6, .L30+24
 890 0156 3360     		str	r3, [r6]
1470:Core/Src/main.c ****           ssd1306_WriteString("Mode:", Font_16x26, White);
 891              		.loc 1 1470 11 is_stmt 1 view .LVU208
 892 0158 0021     		movs	r1, #0
 893 015a 0846     		mov	r0, r1
 894 015c FFF7FEFF 		bl	ssd1306_SetCursor
 895              	.LVL71:
1471:Core/Src/main.c **** 
 896              		.loc 1 1471 11 view .LVU209
 897 0160 254C     		ldr	r4, .L30+28
 898 0162 0123     		movs	r3, #1
 899 0164 94E80600 		ldm	r4, {r1, r2}
 900 0168 2448     		ldr	r0, .L30+32
 901 016a FFF7FEFF 		bl	ssd1306_WriteString
 902              	.LVL72:
1473:Core/Src/main.c ****           sprintf(sMode, "%d        ", iMode);
 903              		.loc 1 1473 11 view .LVU210
 904 016e 2321     		movs	r1, #35
 905 0170 0020     		movs	r0, #0
 906 0172 FFF7FEFF 		bl	ssd1306_SetCursor
 907              	.LVL73:
1474:Core/Src/main.c ****           ssd1306_WriteString(sMode, Font_16x26, White);
 908              		.loc 1 1474 11 view .LVU211
 909 0176 224D     		ldr	r5, .L30+36
 910 0178 3268     		ldr	r2, [r6]
 911 017a 2249     		ldr	r1, .L30+40
 912 017c 2846     		mov	r0, r5
 913 017e FFF7FEFF 		bl	sprintf
 914              	.LVL74:
1475:Core/Src/main.c **** 
 915              		.loc 1 1475 11 view .LVU212
 916 0182 0123     		movs	r3, #1
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 49


 917 0184 94E80600 		ldm	r4, {r1, r2}
 918 0188 2846     		mov	r0, r5
 919 018a FFF7FEFF 		bl	ssd1306_WriteString
 920              	.LVL75:
1478:Core/Src/main.c **** 
 921              		.loc 1 1478 11 view .LVU213
 922 018e 1E48     		ldr	r0, .L30+44
 923 0190 FFF7FEFF 		bl	ssd1306_UpdateScreen
 924              	.LVL76:
 925 0194 3CE7     		b	.L23
 926              	.L29:
1456:Core/Src/main.c ****           // Set cursors and write the word "mode"
 927              		.loc 1 1456 11 view .LVU214
1456:Core/Src/main.c ****           // Set cursors and write the word "mode"
 928              		.loc 1 1456 17 is_stmt 0 view .LVU215
 929 0196 174F     		ldr	r7, .L30+24
 930 0198 1546     		mov	r5, r2
 931 019a 3A60     		str	r2, [r7]
1458:Core/Src/main.c ****           ssd1306_WriteString("Mode:", Font_16x26, White);
 932              		.loc 1 1458 11 is_stmt 1 view .LVU216
 933 019c 0021     		movs	r1, #0
 934 019e 0846     		mov	r0, r1
 935 01a0 FFF7FEFF 		bl	ssd1306_SetCursor
 936              	.LVL77:
1459:Core/Src/main.c **** 
 937              		.loc 1 1459 11 view .LVU217
 938 01a4 144C     		ldr	r4, .L30+28
 939 01a6 2B46     		mov	r3, r5
 940 01a8 94E80600 		ldm	r4, {r1, r2}
 941 01ac 1348     		ldr	r0, .L30+32
 942 01ae FFF7FEFF 		bl	ssd1306_WriteString
 943              	.LVL78:
1461:Core/Src/main.c ****           sprintf(sMode, "%d        ", iMode);
 944              		.loc 1 1461 11 view .LVU218
 945 01b2 2321     		movs	r1, #35
 946 01b4 0020     		movs	r0, #0
 947 01b6 FFF7FEFF 		bl	ssd1306_SetCursor
 948              	.LVL79:
1462:Core/Src/main.c ****           ssd1306_WriteString(sMode, Font_16x26, White);
 949              		.loc 1 1462 11 view .LVU219
 950 01ba 114E     		ldr	r6, .L30+36
 951 01bc 3A68     		ldr	r2, [r7]
 952 01be 1149     		ldr	r1, .L30+40
 953 01c0 3046     		mov	r0, r6
 954 01c2 FFF7FEFF 		bl	sprintf
 955              	.LVL80:
1463:Core/Src/main.c **** 
 956              		.loc 1 1463 11 view .LVU220
 957 01c6 2B46     		mov	r3, r5
 958 01c8 94E80600 		ldm	r4, {r1, r2}
 959 01cc 3046     		mov	r0, r6
 960 01ce FFF7FEFF 		bl	ssd1306_WriteString
 961              	.LVL81:
1466:Core/Src/main.c ****         } else {
 962              		.loc 1 1466 11 view .LVU221
 963 01d2 0D48     		ldr	r0, .L30+44
 964 01d4 FFF7FEFF 		bl	ssd1306_UpdateScreen
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 50


 965              	.LVL82:
 966 01d8 1AE7     		b	.L23
 967              	.L31:
 968 01da 00BF     		.align	2
 969              	.L30:
 970 01dc 00000000 		.word	currentTicks
 971 01e0 00000000 		.word	preTicks
 972 01e4 00000000 		.word	transmit_data
 973 01e8 00000000 		.word	.LC5
 974 01ec 00000000 		.word	huart2
 975 01f0 00000000 		.word	bModeChanged
 976 01f4 00000000 		.word	iMode
 977 01f8 00000000 		.word	Font_16x26
 978 01fc 14000000 		.word	.LC6
 979 0200 00000000 		.word	sMode
 980 0204 1C000000 		.word	.LC7
 981 0208 00000000 		.word	hi2c2
 982 020c 28000000 		.word	.LC8
 983              		.cfi_endproc
 984              	.LFE148:
 986              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 987              		.align	1
 988              		.global	HAL_TIM_PeriodElapsedCallback
 989              		.syntax unified
 990              		.thumb
 991              		.thumb_func
 993              	HAL_TIM_PeriodElapsedCallback:
 994              	.LVL83:
 995              	.LFB149:
1489:Core/Src/main.c **** 
1490:Core/Src/main.c **** 
1491:Core/Src/main.c **** // Callback: timer has rolled over
1492:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
1493:Core/Src/main.c **** {
 996              		.loc 1 1493 1 view -0
 997              		.cfi_startproc
 998              		@ args = 0, pretend = 0, frame = 0
 999              		@ frame_needed = 0, uses_anonymous_args = 0
 1000              		@ link register save eliminated.
1494:Core/Src/main.c ****   // Check which version of the timer triggered this callback and toggle LED
1495:Core/Src/main.c ****   if (htim == &htim3)
 1001              		.loc 1 1495 3 view .LVU223
 1002              		.loc 1 1495 6 is_stmt 0 view .LVU224
 1003 0000 034B     		ldr	r3, .L35
 1004 0002 8342     		cmp	r3, r0
 1005 0004 00D0     		beq	.L34
 1006              	.L32:
1496:Core/Src/main.c ****   {
1497:Core/Src/main.c ****     beginRead = true;
1498:Core/Src/main.c ****   }
1499:Core/Src/main.c **** }
 1007              		.loc 1 1499 1 view .LVU225
 1008 0006 7047     		bx	lr
 1009              	.L34:
1497:Core/Src/main.c ****   }
 1010              		.loc 1 1497 5 is_stmt 1 view .LVU226
1497:Core/Src/main.c ****   }
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 51


 1011              		.loc 1 1497 15 is_stmt 0 view .LVU227
 1012 0008 024B     		ldr	r3, .L35+4
 1013 000a 0122     		movs	r2, #1
 1014 000c 1A70     		strb	r2, [r3]
 1015              		.loc 1 1499 1 view .LVU228
 1016 000e FAE7     		b	.L32
 1017              	.L36:
 1018              		.align	2
 1019              	.L35:
 1020 0010 00000000 		.word	htim3
 1021 0014 00000000 		.word	beginRead
 1022              		.cfi_endproc
 1023              	.LFE149:
 1025              		.section	.text.Error_Handler,"ax",%progbits
 1026              		.align	1
 1027              		.global	Error_Handler
 1028              		.syntax unified
 1029              		.thumb
 1030              		.thumb_func
 1032              	Error_Handler:
 1033              	.LFB150:
1500:Core/Src/main.c **** 
1501:Core/Src/main.c **** /* USER CODE END 4 */
1502:Core/Src/main.c **** 
1503:Core/Src/main.c **** /**
1504:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
1505:Core/Src/main.c ****   * @retval None
1506:Core/Src/main.c ****   */
1507:Core/Src/main.c **** void Error_Handler(void)
1508:Core/Src/main.c **** {
 1034              		.loc 1 1508 1 is_stmt 1 view -0
 1035              		.cfi_startproc
 1036              		@ Volatile: function does not return.
 1037              		@ args = 0, pretend = 0, frame = 0
 1038              		@ frame_needed = 0, uses_anonymous_args = 0
 1039              		@ link register save eliminated.
1509:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
1510:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
1511:Core/Src/main.c ****   __disable_irq();
 1040              		.loc 1 1511 3 view .LVU230
 1041              	.LBB9:
 1042              	.LBI9:
 1043              		.file 3 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 52


  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 53


  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 54


 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 1044              		.loc 3 140 27 view .LVU231
 1045              	.LBB10:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 1046              		.loc 3 142 3 view .LVU232
 1047              		.syntax unified
 1048              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1049 0000 72B6     		cpsid i
 1050              	@ 0 "" 2
 1051              		.thumb
 1052              		.syntax unified
 1053              	.L38:
 1054              	.LBE10:
 1055              	.LBE9:
1512:Core/Src/main.c ****   while (1)
 1056              		.loc 1 1512 3 discriminator 1 view .LVU233
1513:Core/Src/main.c ****   {
1514:Core/Src/main.c ****   }
 1057              		.loc 1 1514 3 discriminator 1 view .LVU234
1512:Core/Src/main.c ****   while (1)
 1058              		.loc 1 1512 9 discriminator 1 view .LVU235
 1059 0002 FEE7     		b	.L38
 1060              		.cfi_endproc
 1061              	.LFE150:
 1063              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 1064              		.align	1
 1065              		.syntax unified
 1066              		.thumb
 1067              		.thumb_func
 1069              	MX_USART1_UART_Init:
 1070              	.LFB144:
1204:Core/Src/main.c **** 
 1071              		.loc 1 1204 1 view -0
 1072              		.cfi_startproc
 1073              		@ args = 0, pretend = 0, frame = 0
 1074              		@ frame_needed = 0, uses_anonymous_args = 0
 1075 0000 08B5     		push	{r3, lr}
 1076              		.cfi_def_cfa_offset 8
 1077              		.cfi_offset 3, -8
 1078              		.cfi_offset 14, -4
1213:Core/Src/main.c ****   huart1.Init.BaudRate = 9600;
 1079              		.loc 1 1213 3 view .LVU237
1213:Core/Src/main.c ****   huart1.Init.BaudRate = 9600;
 1080              		.loc 1 1213 19 is_stmt 0 view .LVU238
 1081 0002 0A48     		ldr	r0, .L43
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 55


 1082 0004 0A4B     		ldr	r3, .L43+4
 1083 0006 0360     		str	r3, [r0]
1214:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 1084              		.loc 1 1214 3 is_stmt 1 view .LVU239
1214:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 1085              		.loc 1 1214 24 is_stmt 0 view .LVU240
 1086 0008 4FF41653 		mov	r3, #9600
 1087 000c 4360     		str	r3, [r0, #4]
1215:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 1088              		.loc 1 1215 3 is_stmt 1 view .LVU241
1215:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 1089              		.loc 1 1215 26 is_stmt 0 view .LVU242
 1090 000e 0023     		movs	r3, #0
 1091 0010 8360     		str	r3, [r0, #8]
1216:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 1092              		.loc 1 1216 3 is_stmt 1 view .LVU243
1216:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 1093              		.loc 1 1216 24 is_stmt 0 view .LVU244
 1094 0012 C360     		str	r3, [r0, #12]
1217:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 1095              		.loc 1 1217 3 is_stmt 1 view .LVU245
1217:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 1096              		.loc 1 1217 22 is_stmt 0 view .LVU246
 1097 0014 0361     		str	r3, [r0, #16]
1218:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1098              		.loc 1 1218 3 is_stmt 1 view .LVU247
1218:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1099              		.loc 1 1218 20 is_stmt 0 view .LVU248
 1100 0016 0C22     		movs	r2, #12
 1101 0018 4261     		str	r2, [r0, #20]
1219:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 1102              		.loc 1 1219 3 is_stmt 1 view .LVU249
1219:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 1103              		.loc 1 1219 25 is_stmt 0 view .LVU250
 1104 001a 8361     		str	r3, [r0, #24]
1220:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 1105              		.loc 1 1220 3 is_stmt 1 view .LVU251
1220:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 1106              		.loc 1 1220 28 is_stmt 0 view .LVU252
 1107 001c C361     		str	r3, [r0, #28]
1221:Core/Src/main.c ****   {
 1108              		.loc 1 1221 3 is_stmt 1 view .LVU253
1221:Core/Src/main.c ****   {
 1109              		.loc 1 1221 7 is_stmt 0 view .LVU254
 1110 001e FFF7FEFF 		bl	HAL_UART_Init
 1111              	.LVL84:
1221:Core/Src/main.c ****   {
 1112              		.loc 1 1221 6 view .LVU255
 1113 0022 00B9     		cbnz	r0, .L42
1229:Core/Src/main.c **** 
 1114              		.loc 1 1229 1 view .LVU256
 1115 0024 08BD     		pop	{r3, pc}
 1116              	.L42:
1223:Core/Src/main.c ****   }
 1117              		.loc 1 1223 5 is_stmt 1 view .LVU257
 1118 0026 FFF7FEFF 		bl	Error_Handler
 1119              	.LVL85:
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 56


 1120              	.L44:
 1121 002a 00BF     		.align	2
 1122              	.L43:
 1123 002c 00000000 		.word	huart1
 1124 0030 00100140 		.word	1073811456
 1125              		.cfi_endproc
 1126              	.LFE144:
 1128              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 1129              		.align	1
 1130              		.syntax unified
 1131              		.thumb
 1132              		.thumb_func
 1134              	MX_USART2_UART_Init:
 1135              	.LFB145:
1237:Core/Src/main.c **** 
 1136              		.loc 1 1237 1 view -0
 1137              		.cfi_startproc
 1138              		@ args = 0, pretend = 0, frame = 0
 1139              		@ frame_needed = 0, uses_anonymous_args = 0
 1140 0000 08B5     		push	{r3, lr}
 1141              		.cfi_def_cfa_offset 8
 1142              		.cfi_offset 3, -8
 1143              		.cfi_offset 14, -4
1246:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 1144              		.loc 1 1246 3 view .LVU259
1246:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 1145              		.loc 1 1246 19 is_stmt 0 view .LVU260
 1146 0002 0A48     		ldr	r0, .L49
 1147 0004 0A4B     		ldr	r3, .L49+4
 1148 0006 0360     		str	r3, [r0]
1247:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 1149              		.loc 1 1247 3 is_stmt 1 view .LVU261
1247:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 1150              		.loc 1 1247 24 is_stmt 0 view .LVU262
 1151 0008 4FF4E133 		mov	r3, #115200
 1152 000c 4360     		str	r3, [r0, #4]
1248:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 1153              		.loc 1 1248 3 is_stmt 1 view .LVU263
1248:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 1154              		.loc 1 1248 26 is_stmt 0 view .LVU264
 1155 000e 0023     		movs	r3, #0
 1156 0010 8360     		str	r3, [r0, #8]
1249:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 1157              		.loc 1 1249 3 is_stmt 1 view .LVU265
1249:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 1158              		.loc 1 1249 24 is_stmt 0 view .LVU266
 1159 0012 C360     		str	r3, [r0, #12]
1250:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 1160              		.loc 1 1250 3 is_stmt 1 view .LVU267
1250:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 1161              		.loc 1 1250 22 is_stmt 0 view .LVU268
 1162 0014 0361     		str	r3, [r0, #16]
1251:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1163              		.loc 1 1251 3 is_stmt 1 view .LVU269
1251:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1164              		.loc 1 1251 20 is_stmt 0 view .LVU270
 1165 0016 0C22     		movs	r2, #12
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 57


 1166 0018 4261     		str	r2, [r0, #20]
1252:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 1167              		.loc 1 1252 3 is_stmt 1 view .LVU271
1252:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 1168              		.loc 1 1252 25 is_stmt 0 view .LVU272
 1169 001a 8361     		str	r3, [r0, #24]
1253:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 1170              		.loc 1 1253 3 is_stmt 1 view .LVU273
1253:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 1171              		.loc 1 1253 28 is_stmt 0 view .LVU274
 1172 001c C361     		str	r3, [r0, #28]
1254:Core/Src/main.c ****   {
 1173              		.loc 1 1254 3 is_stmt 1 view .LVU275
1254:Core/Src/main.c ****   {
 1174              		.loc 1 1254 7 is_stmt 0 view .LVU276
 1175 001e FFF7FEFF 		bl	HAL_UART_Init
 1176              	.LVL86:
1254:Core/Src/main.c ****   {
 1177              		.loc 1 1254 6 view .LVU277
 1178 0022 00B9     		cbnz	r0, .L48
1262:Core/Src/main.c **** 
 1179              		.loc 1 1262 1 view .LVU278
 1180 0024 08BD     		pop	{r3, pc}
 1181              	.L48:
1256:Core/Src/main.c ****   }
 1182              		.loc 1 1256 5 is_stmt 1 view .LVU279
 1183 0026 FFF7FEFF 		bl	Error_Handler
 1184              	.LVL87:
 1185              	.L50:
 1186 002a 00BF     		.align	2
 1187              	.L49:
 1188 002c 00000000 		.word	huart2
 1189 0030 00440040 		.word	1073759232
 1190              		.cfi_endproc
 1191              	.LFE145:
 1193              		.section	.text.MX_I2C1_Init,"ax",%progbits
 1194              		.align	1
 1195              		.syntax unified
 1196              		.thumb
 1197              		.thumb_func
 1199              	MX_I2C1_Init:
 1200              	.LFB140:
1052:Core/Src/main.c **** 
 1201              		.loc 1 1052 1 view -0
 1202              		.cfi_startproc
 1203              		@ args = 0, pretend = 0, frame = 0
 1204              		@ frame_needed = 0, uses_anonymous_args = 0
 1205 0000 08B5     		push	{r3, lr}
 1206              		.cfi_def_cfa_offset 8
 1207              		.cfi_offset 3, -8
 1208              		.cfi_offset 14, -4
1061:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 1209              		.loc 1 1061 3 view .LVU281
1061:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 1210              		.loc 1 1061 18 is_stmt 0 view .LVU282
 1211 0002 0A48     		ldr	r0, .L55
 1212 0004 0A4B     		ldr	r3, .L55+4
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 58


 1213 0006 0360     		str	r3, [r0]
1062:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 1214              		.loc 1 1062 3 is_stmt 1 view .LVU283
1062:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 1215              		.loc 1 1062 25 is_stmt 0 view .LVU284
 1216 0008 0A4B     		ldr	r3, .L55+8
 1217 000a 4360     		str	r3, [r0, #4]
1063:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 1218              		.loc 1 1063 3 is_stmt 1 view .LVU285
1063:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 1219              		.loc 1 1063 24 is_stmt 0 view .LVU286
 1220 000c 0023     		movs	r3, #0
 1221 000e 8360     		str	r3, [r0, #8]
1064:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 1222              		.loc 1 1064 3 is_stmt 1 view .LVU287
1064:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 1223              		.loc 1 1064 26 is_stmt 0 view .LVU288
 1224 0010 C360     		str	r3, [r0, #12]
1065:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 1225              		.loc 1 1065 3 is_stmt 1 view .LVU289
1065:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 1226              		.loc 1 1065 29 is_stmt 0 view .LVU290
 1227 0012 4FF48042 		mov	r2, #16384
 1228 0016 0261     		str	r2, [r0, #16]
1066:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 1229              		.loc 1 1066 3 is_stmt 1 view .LVU291
1066:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 1230              		.loc 1 1066 30 is_stmt 0 view .LVU292
 1231 0018 4361     		str	r3, [r0, #20]
1067:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 1232              		.loc 1 1067 3 is_stmt 1 view .LVU293
1067:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 1233              		.loc 1 1067 26 is_stmt 0 view .LVU294
 1234 001a 8361     		str	r3, [r0, #24]
1068:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 1235              		.loc 1 1068 3 is_stmt 1 view .LVU295
1068:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 1236              		.loc 1 1068 30 is_stmt 0 view .LVU296
 1237 001c C361     		str	r3, [r0, #28]
1069:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 1238              		.loc 1 1069 3 is_stmt 1 view .LVU297
1069:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 1239              		.loc 1 1069 28 is_stmt 0 view .LVU298
 1240 001e 0362     		str	r3, [r0, #32]
1070:Core/Src/main.c ****   {
 1241              		.loc 1 1070 3 is_stmt 1 view .LVU299
1070:Core/Src/main.c ****   {
 1242              		.loc 1 1070 7 is_stmt 0 view .LVU300
 1243 0020 FFF7FEFF 		bl	HAL_I2C_Init
 1244              	.LVL88:
1070:Core/Src/main.c ****   {
 1245              		.loc 1 1070 6 view .LVU301
 1246 0024 00B9     		cbnz	r0, .L54
1078:Core/Src/main.c **** 
 1247              		.loc 1 1078 1 view .LVU302
 1248 0026 08BD     		pop	{r3, pc}
 1249              	.L54:
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 59


1072:Core/Src/main.c ****   }
 1250              		.loc 1 1072 5 is_stmt 1 view .LVU303
 1251 0028 FFF7FEFF 		bl	Error_Handler
 1252              	.LVL89:
 1253              	.L56:
 1254              		.align	2
 1255              	.L55:
 1256 002c 00000000 		.word	hi2c1
 1257 0030 00540040 		.word	1073763328
 1258 0034 A0860100 		.word	100000
 1259              		.cfi_endproc
 1260              	.LFE140:
 1262              		.section	.text.MX_SPI3_Init,"ax",%progbits
 1263              		.align	1
 1264              		.syntax unified
 1265              		.thumb
 1266              		.thumb_func
 1268              	MX_SPI3_Init:
 1269              	.LFB142:
1120:Core/Src/main.c **** 
 1270              		.loc 1 1120 1 view -0
 1271              		.cfi_startproc
 1272              		@ args = 0, pretend = 0, frame = 0
 1273              		@ frame_needed = 0, uses_anonymous_args = 0
 1274 0000 08B5     		push	{r3, lr}
 1275              		.cfi_def_cfa_offset 8
 1276              		.cfi_offset 3, -8
 1277              		.cfi_offset 14, -4
1130:Core/Src/main.c ****   hspi3.Init.Mode = SPI_MODE_MASTER;
 1278              		.loc 1 1130 3 view .LVU305
1130:Core/Src/main.c ****   hspi3.Init.Mode = SPI_MODE_MASTER;
 1279              		.loc 1 1130 18 is_stmt 0 view .LVU306
 1280 0002 0D48     		ldr	r0, .L61
 1281 0004 0D4B     		ldr	r3, .L61+4
 1282 0006 0360     		str	r3, [r0]
1131:Core/Src/main.c ****   hspi3.Init.Direction = SPI_DIRECTION_2LINES;
 1283              		.loc 1 1131 3 is_stmt 1 view .LVU307
1131:Core/Src/main.c ****   hspi3.Init.Direction = SPI_DIRECTION_2LINES;
 1284              		.loc 1 1131 19 is_stmt 0 view .LVU308
 1285 0008 4FF48273 		mov	r3, #260
 1286 000c 4360     		str	r3, [r0, #4]
1132:Core/Src/main.c ****   hspi3.Init.DataSize = SPI_DATASIZE_8BIT;
 1287              		.loc 1 1132 3 is_stmt 1 view .LVU309
1132:Core/Src/main.c ****   hspi3.Init.DataSize = SPI_DATASIZE_8BIT;
 1288              		.loc 1 1132 24 is_stmt 0 view .LVU310
 1289 000e 0023     		movs	r3, #0
 1290 0010 8360     		str	r3, [r0, #8]
1133:Core/Src/main.c ****   hspi3.Init.CLKPolarity = SPI_POLARITY_LOW;
 1291              		.loc 1 1133 3 is_stmt 1 view .LVU311
1133:Core/Src/main.c ****   hspi3.Init.CLKPolarity = SPI_POLARITY_LOW;
 1292              		.loc 1 1133 23 is_stmt 0 view .LVU312
 1293 0012 C360     		str	r3, [r0, #12]
1134:Core/Src/main.c ****   hspi3.Init.CLKPhase = SPI_PHASE_1EDGE;
 1294              		.loc 1 1134 3 is_stmt 1 view .LVU313
1134:Core/Src/main.c ****   hspi3.Init.CLKPhase = SPI_PHASE_1EDGE;
 1295              		.loc 1 1134 26 is_stmt 0 view .LVU314
 1296 0014 0361     		str	r3, [r0, #16]
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 60


1135:Core/Src/main.c ****   hspi3.Init.NSS = SPI_NSS_SOFT;
 1297              		.loc 1 1135 3 is_stmt 1 view .LVU315
1135:Core/Src/main.c ****   hspi3.Init.NSS = SPI_NSS_SOFT;
 1298              		.loc 1 1135 23 is_stmt 0 view .LVU316
 1299 0016 4361     		str	r3, [r0, #20]
1136:Core/Src/main.c ****   hspi3.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 1300              		.loc 1 1136 3 is_stmt 1 view .LVU317
1136:Core/Src/main.c ****   hspi3.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 1301              		.loc 1 1136 18 is_stmt 0 view .LVU318
 1302 0018 4FF40072 		mov	r2, #512
 1303 001c 8261     		str	r2, [r0, #24]
1137:Core/Src/main.c ****   hspi3.Init.FirstBit = SPI_FIRSTBIT_MSB;
 1304              		.loc 1 1137 3 is_stmt 1 view .LVU319
1137:Core/Src/main.c ****   hspi3.Init.FirstBit = SPI_FIRSTBIT_MSB;
 1305              		.loc 1 1137 32 is_stmt 0 view .LVU320
 1306 001e C361     		str	r3, [r0, #28]
1138:Core/Src/main.c ****   hspi3.Init.TIMode = SPI_TIMODE_DISABLE;
 1307              		.loc 1 1138 3 is_stmt 1 view .LVU321
1138:Core/Src/main.c ****   hspi3.Init.TIMode = SPI_TIMODE_DISABLE;
 1308              		.loc 1 1138 23 is_stmt 0 view .LVU322
 1309 0020 0362     		str	r3, [r0, #32]
1139:Core/Src/main.c ****   hspi3.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 1310              		.loc 1 1139 3 is_stmt 1 view .LVU323
1139:Core/Src/main.c ****   hspi3.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 1311              		.loc 1 1139 21 is_stmt 0 view .LVU324
 1312 0022 4362     		str	r3, [r0, #36]
1140:Core/Src/main.c ****   hspi3.Init.CRCPolynomial = 10;
 1313              		.loc 1 1140 3 is_stmt 1 view .LVU325
1140:Core/Src/main.c ****   hspi3.Init.CRCPolynomial = 10;
 1314              		.loc 1 1140 29 is_stmt 0 view .LVU326
 1315 0024 8362     		str	r3, [r0, #40]
1141:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi3) != HAL_OK)
 1316              		.loc 1 1141 3 is_stmt 1 view .LVU327
1141:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi3) != HAL_OK)
 1317              		.loc 1 1141 28 is_stmt 0 view .LVU328
 1318 0026 0A23     		movs	r3, #10
 1319 0028 C362     		str	r3, [r0, #44]
1142:Core/Src/main.c ****   {
 1320              		.loc 1 1142 3 is_stmt 1 view .LVU329
1142:Core/Src/main.c ****   {
 1321              		.loc 1 1142 7 is_stmt 0 view .LVU330
 1322 002a FFF7FEFF 		bl	HAL_SPI_Init
 1323              	.LVL90:
1142:Core/Src/main.c ****   {
 1324              		.loc 1 1142 6 view .LVU331
 1325 002e 00B9     		cbnz	r0, .L60
1150:Core/Src/main.c **** 
 1326              		.loc 1 1150 1 view .LVU332
 1327 0030 08BD     		pop	{r3, pc}
 1328              	.L60:
1144:Core/Src/main.c ****   }
 1329              		.loc 1 1144 5 is_stmt 1 view .LVU333
 1330 0032 FFF7FEFF 		bl	Error_Handler
 1331              	.LVL91:
 1332              	.L62:
 1333 0036 00BF     		.align	2
 1334              	.L61:
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 61


 1335 0038 00000000 		.word	hspi3
 1336 003c 003C0040 		.word	1073757184
 1337              		.cfi_endproc
 1338              	.LFE142:
 1340              		.section	.text.MX_I2C2_Init,"ax",%progbits
 1341              		.align	1
 1342              		.syntax unified
 1343              		.thumb
 1344              		.thumb_func
 1346              	MX_I2C2_Init:
 1347              	.LFB141:
1086:Core/Src/main.c **** 
 1348              		.loc 1 1086 1 view -0
 1349              		.cfi_startproc
 1350              		@ args = 0, pretend = 0, frame = 0
 1351              		@ frame_needed = 0, uses_anonymous_args = 0
 1352 0000 08B5     		push	{r3, lr}
 1353              		.cfi_def_cfa_offset 8
 1354              		.cfi_offset 3, -8
 1355              		.cfi_offset 14, -4
1095:Core/Src/main.c ****   hi2c2.Init.ClockSpeed = 100000;
 1356              		.loc 1 1095 3 view .LVU335
1095:Core/Src/main.c ****   hi2c2.Init.ClockSpeed = 100000;
 1357              		.loc 1 1095 18 is_stmt 0 view .LVU336
 1358 0002 0A48     		ldr	r0, .L67
 1359 0004 0A4B     		ldr	r3, .L67+4
 1360 0006 0360     		str	r3, [r0]
1096:Core/Src/main.c ****   hi2c2.Init.DutyCycle = I2C_DUTYCYCLE_2;
 1361              		.loc 1 1096 3 is_stmt 1 view .LVU337
1096:Core/Src/main.c ****   hi2c2.Init.DutyCycle = I2C_DUTYCYCLE_2;
 1362              		.loc 1 1096 25 is_stmt 0 view .LVU338
 1363 0008 0A4B     		ldr	r3, .L67+8
 1364 000a 4360     		str	r3, [r0, #4]
1097:Core/Src/main.c ****   hi2c2.Init.OwnAddress1 = 0;
 1365              		.loc 1 1097 3 is_stmt 1 view .LVU339
1097:Core/Src/main.c ****   hi2c2.Init.OwnAddress1 = 0;
 1366              		.loc 1 1097 24 is_stmt 0 view .LVU340
 1367 000c 0023     		movs	r3, #0
 1368 000e 8360     		str	r3, [r0, #8]
1098:Core/Src/main.c ****   hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 1369              		.loc 1 1098 3 is_stmt 1 view .LVU341
1098:Core/Src/main.c ****   hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 1370              		.loc 1 1098 26 is_stmt 0 view .LVU342
 1371 0010 C360     		str	r3, [r0, #12]
1099:Core/Src/main.c ****   hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 1372              		.loc 1 1099 3 is_stmt 1 view .LVU343
1099:Core/Src/main.c ****   hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 1373              		.loc 1 1099 29 is_stmt 0 view .LVU344
 1374 0012 4FF48042 		mov	r2, #16384
 1375 0016 0261     		str	r2, [r0, #16]
1100:Core/Src/main.c ****   hi2c2.Init.OwnAddress2 = 0;
 1376              		.loc 1 1100 3 is_stmt 1 view .LVU345
1100:Core/Src/main.c ****   hi2c2.Init.OwnAddress2 = 0;
 1377              		.loc 1 1100 30 is_stmt 0 view .LVU346
 1378 0018 4361     		str	r3, [r0, #20]
1101:Core/Src/main.c ****   hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 1379              		.loc 1 1101 3 is_stmt 1 view .LVU347
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 62


1101:Core/Src/main.c ****   hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 1380              		.loc 1 1101 26 is_stmt 0 view .LVU348
 1381 001a 8361     		str	r3, [r0, #24]
1102:Core/Src/main.c ****   hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 1382              		.loc 1 1102 3 is_stmt 1 view .LVU349
1102:Core/Src/main.c ****   hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 1383              		.loc 1 1102 30 is_stmt 0 view .LVU350
 1384 001c C361     		str	r3, [r0, #28]
1103:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 1385              		.loc 1 1103 3 is_stmt 1 view .LVU351
1103:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 1386              		.loc 1 1103 28 is_stmt 0 view .LVU352
 1387 001e 0362     		str	r3, [r0, #32]
1104:Core/Src/main.c ****   {
 1388              		.loc 1 1104 3 is_stmt 1 view .LVU353
1104:Core/Src/main.c ****   {
 1389              		.loc 1 1104 7 is_stmt 0 view .LVU354
 1390 0020 FFF7FEFF 		bl	HAL_I2C_Init
 1391              	.LVL92:
1104:Core/Src/main.c ****   {
 1392              		.loc 1 1104 6 view .LVU355
 1393 0024 00B9     		cbnz	r0, .L66
1112:Core/Src/main.c **** 
 1394              		.loc 1 1112 1 view .LVU356
 1395 0026 08BD     		pop	{r3, pc}
 1396              	.L66:
1106:Core/Src/main.c ****   }
 1397              		.loc 1 1106 5 is_stmt 1 view .LVU357
 1398 0028 FFF7FEFF 		bl	Error_Handler
 1399              	.LVL93:
 1400              	.L68:
 1401              		.align	2
 1402              	.L67:
 1403 002c 00000000 		.word	hi2c2
 1404 0030 00580040 		.word	1073764352
 1405 0034 A0860100 		.word	100000
 1406              		.cfi_endproc
 1407              	.LFE141:
 1409              		.section	.text.MX_TIM3_Init,"ax",%progbits
 1410              		.align	1
 1411              		.syntax unified
 1412              		.thumb
 1413              		.thumb_func
 1415              	MX_TIM3_Init:
 1416              	.LFB143:
1158:Core/Src/main.c **** 
 1417              		.loc 1 1158 1 view -0
 1418              		.cfi_startproc
 1419              		@ args = 0, pretend = 0, frame = 24
 1420              		@ frame_needed = 0, uses_anonymous_args = 0
 1421 0000 00B5     		push	{lr}
 1422              		.cfi_def_cfa_offset 4
 1423              		.cfi_offset 14, -4
 1424 0002 87B0     		sub	sp, sp, #28
 1425              		.cfi_def_cfa_offset 32
1164:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1426              		.loc 1 1164 3 view .LVU359
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 63


1164:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1427              		.loc 1 1164 26 is_stmt 0 view .LVU360
 1428 0004 0023     		movs	r3, #0
 1429 0006 0293     		str	r3, [sp, #8]
 1430 0008 0393     		str	r3, [sp, #12]
 1431 000a 0493     		str	r3, [sp, #16]
 1432 000c 0593     		str	r3, [sp, #20]
1165:Core/Src/main.c **** 
 1433              		.loc 1 1165 3 is_stmt 1 view .LVU361
1165:Core/Src/main.c **** 
 1434              		.loc 1 1165 27 is_stmt 0 view .LVU362
 1435 000e 0093     		str	r3, [sp]
 1436 0010 0193     		str	r3, [sp, #4]
1170:Core/Src/main.c ****   htim3.Init.Prescaler = 16000-1;
 1437              		.loc 1 1170 3 is_stmt 1 view .LVU363
1170:Core/Src/main.c ****   htim3.Init.Prescaler = 16000-1;
 1438              		.loc 1 1170 18 is_stmt 0 view .LVU364
 1439 0012 1448     		ldr	r0, .L77
 1440 0014 144A     		ldr	r2, .L77+4
 1441 0016 0260     		str	r2, [r0]
1171:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 1442              		.loc 1 1171 3 is_stmt 1 view .LVU365
1171:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 1443              		.loc 1 1171 24 is_stmt 0 view .LVU366
 1444 0018 43F67F62 		movw	r2, #15999
 1445 001c 4260     		str	r2, [r0, #4]
1172:Core/Src/main.c ****   htim3.Init.Period = 1000-1;
 1446              		.loc 1 1172 3 is_stmt 1 view .LVU367
1172:Core/Src/main.c ****   htim3.Init.Period = 1000-1;
 1447              		.loc 1 1172 26 is_stmt 0 view .LVU368
 1448 001e 8360     		str	r3, [r0, #8]
1173:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1449              		.loc 1 1173 3 is_stmt 1 view .LVU369
1173:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1450              		.loc 1 1173 21 is_stmt 0 view .LVU370
 1451 0020 40F2E732 		movw	r2, #999
 1452 0024 C260     		str	r2, [r0, #12]
1174:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1453              		.loc 1 1174 3 is_stmt 1 view .LVU371
1174:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1454              		.loc 1 1174 28 is_stmt 0 view .LVU372
 1455 0026 0361     		str	r3, [r0, #16]
1175:Core/Src/main.c **** 
 1456              		.loc 1 1175 3 is_stmt 1 view .LVU373
1175:Core/Src/main.c **** 
 1457              		.loc 1 1175 32 is_stmt 0 view .LVU374
 1458 0028 8361     		str	r3, [r0, #24]
1177:Core/Src/main.c ****   {
 1459              		.loc 1 1177 3 is_stmt 1 view .LVU375
1177:Core/Src/main.c ****   {
 1460              		.loc 1 1177 7 is_stmt 0 view .LVU376
 1461 002a FFF7FEFF 		bl	HAL_TIM_Base_Init
 1462              	.LVL94:
1177:Core/Src/main.c ****   {
 1463              		.loc 1 1177 6 view .LVU377
 1464 002e 90B9     		cbnz	r0, .L74
1181:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 64


 1465              		.loc 1 1181 3 is_stmt 1 view .LVU378
1181:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 1466              		.loc 1 1181 34 is_stmt 0 view .LVU379
 1467 0030 4FF48053 		mov	r3, #4096
 1468 0034 0293     		str	r3, [sp, #8]
1182:Core/Src/main.c ****   {
 1469              		.loc 1 1182 3 is_stmt 1 view .LVU380
1182:Core/Src/main.c ****   {
 1470              		.loc 1 1182 7 is_stmt 0 view .LVU381
 1471 0036 02A9     		add	r1, sp, #8
 1472 0038 0A48     		ldr	r0, .L77
 1473 003a FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 1474              	.LVL95:
1182:Core/Src/main.c ****   {
 1475              		.loc 1 1182 6 view .LVU382
 1476 003e 60B9     		cbnz	r0, .L75
1186:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1477              		.loc 1 1186 3 is_stmt 1 view .LVU383
1186:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1478              		.loc 1 1186 37 is_stmt 0 view .LVU384
 1479 0040 0023     		movs	r3, #0
 1480 0042 0093     		str	r3, [sp]
1187:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 1481              		.loc 1 1187 3 is_stmt 1 view .LVU385
1187:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 1482              		.loc 1 1187 33 is_stmt 0 view .LVU386
 1483 0044 0193     		str	r3, [sp, #4]
1188:Core/Src/main.c ****   {
 1484              		.loc 1 1188 3 is_stmt 1 view .LVU387
1188:Core/Src/main.c ****   {
 1485              		.loc 1 1188 7 is_stmt 0 view .LVU388
 1486 0046 6946     		mov	r1, sp
 1487 0048 0648     		ldr	r0, .L77
 1488 004a FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1489              	.LVL96:
1188:Core/Src/main.c ****   {
 1490              		.loc 1 1188 6 view .LVU389
 1491 004e 30B9     		cbnz	r0, .L76
1196:Core/Src/main.c **** 
 1492              		.loc 1 1196 1 view .LVU390
 1493 0050 07B0     		add	sp, sp, #28
 1494              		.cfi_remember_state
 1495              		.cfi_def_cfa_offset 4
 1496              		@ sp needed
 1497 0052 5DF804FB 		ldr	pc, [sp], #4
 1498              	.L74:
 1499              		.cfi_restore_state
1179:Core/Src/main.c ****   }
 1500              		.loc 1 1179 5 is_stmt 1 view .LVU391
 1501 0056 FFF7FEFF 		bl	Error_Handler
 1502              	.LVL97:
 1503              	.L75:
1184:Core/Src/main.c ****   }
 1504              		.loc 1 1184 5 view .LVU392
 1505 005a FFF7FEFF 		bl	Error_Handler
 1506              	.LVL98:
 1507              	.L76:
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 65


1190:Core/Src/main.c ****   }
 1508              		.loc 1 1190 5 view .LVU393
 1509 005e FFF7FEFF 		bl	Error_Handler
 1510              	.LVL99:
 1511              	.L78:
 1512 0062 00BF     		.align	2
 1513              	.L77:
 1514 0064 00000000 		.word	htim3
 1515 0068 00040040 		.word	1073742848
 1516              		.cfi_endproc
 1517              	.LFE143:
 1519              		.section	.text.SystemClock_Config,"ax",%progbits
 1520              		.align	1
 1521              		.global	SystemClock_Config
 1522              		.syntax unified
 1523              		.thumb
 1524              		.thumb_func
 1526              	SystemClock_Config:
 1527              	.LFB139:
1010:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1528              		.loc 1 1010 1 view -0
 1529              		.cfi_startproc
 1530              		@ args = 0, pretend = 0, frame = 80
 1531              		@ frame_needed = 0, uses_anonymous_args = 0
 1532 0000 00B5     		push	{lr}
 1533              		.cfi_def_cfa_offset 4
 1534              		.cfi_offset 14, -4
 1535 0002 95B0     		sub	sp, sp, #84
 1536              		.cfi_def_cfa_offset 88
1011:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1537              		.loc 1 1011 3 view .LVU395
1011:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1538              		.loc 1 1011 22 is_stmt 0 view .LVU396
 1539 0004 3022     		movs	r2, #48
 1540 0006 0021     		movs	r1, #0
 1541 0008 08A8     		add	r0, sp, #32
 1542 000a FFF7FEFF 		bl	memset
 1543              	.LVL100:
1012:Core/Src/main.c **** 
 1544              		.loc 1 1012 3 is_stmt 1 view .LVU397
1012:Core/Src/main.c **** 
 1545              		.loc 1 1012 22 is_stmt 0 view .LVU398
 1546 000e 0023     		movs	r3, #0
 1547 0010 0393     		str	r3, [sp, #12]
 1548 0012 0493     		str	r3, [sp, #16]
 1549 0014 0593     		str	r3, [sp, #20]
 1550 0016 0693     		str	r3, [sp, #24]
 1551 0018 0793     		str	r3, [sp, #28]
1016:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1552              		.loc 1 1016 3 is_stmt 1 view .LVU399
 1553              	.LBB11:
1016:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1554              		.loc 1 1016 3 view .LVU400
 1555 001a 0193     		str	r3, [sp, #4]
1016:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1556              		.loc 1 1016 3 view .LVU401
 1557 001c 184A     		ldr	r2, .L85
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 66


 1558 001e 116C     		ldr	r1, [r2, #64]
 1559 0020 41F08051 		orr	r1, r1, #268435456
 1560 0024 1164     		str	r1, [r2, #64]
1016:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1561              		.loc 1 1016 3 view .LVU402
 1562 0026 126C     		ldr	r2, [r2, #64]
 1563 0028 02F08052 		and	r2, r2, #268435456
 1564 002c 0192     		str	r2, [sp, #4]
1016:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1565              		.loc 1 1016 3 view .LVU403
 1566 002e 019A     		ldr	r2, [sp, #4]
 1567              	.LBE11:
1016:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1568              		.loc 1 1016 3 view .LVU404
1017:Core/Src/main.c **** 
 1569              		.loc 1 1017 3 view .LVU405
 1570              	.LBB12:
1017:Core/Src/main.c **** 
 1571              		.loc 1 1017 3 view .LVU406
 1572 0030 0293     		str	r3, [sp, #8]
1017:Core/Src/main.c **** 
 1573              		.loc 1 1017 3 view .LVU407
 1574 0032 144A     		ldr	r2, .L85+4
 1575 0034 1168     		ldr	r1, [r2]
 1576 0036 41F44041 		orr	r1, r1, #49152
 1577 003a 1160     		str	r1, [r2]
1017:Core/Src/main.c **** 
 1578              		.loc 1 1017 3 view .LVU408
 1579 003c 1268     		ldr	r2, [r2]
 1580 003e 02F44042 		and	r2, r2, #49152
 1581 0042 0292     		str	r2, [sp, #8]
1017:Core/Src/main.c **** 
 1582              		.loc 1 1017 3 view .LVU409
 1583 0044 029A     		ldr	r2, [sp, #8]
 1584              	.LBE12:
1017:Core/Src/main.c **** 
 1585              		.loc 1 1017 3 view .LVU410
1022:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1586              		.loc 1 1022 3 view .LVU411
1022:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1587              		.loc 1 1022 36 is_stmt 0 view .LVU412
 1588 0046 0222     		movs	r2, #2
 1589 0048 0892     		str	r2, [sp, #32]
1023:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1590              		.loc 1 1023 3 is_stmt 1 view .LVU413
1023:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1591              		.loc 1 1023 30 is_stmt 0 view .LVU414
 1592 004a 0122     		movs	r2, #1
 1593 004c 0B92     		str	r2, [sp, #44]
1024:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 1594              		.loc 1 1024 3 is_stmt 1 view .LVU415
1024:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 1595              		.loc 1 1024 41 is_stmt 0 view .LVU416
 1596 004e 1022     		movs	r2, #16
 1597 0050 0C92     		str	r2, [sp, #48]
1025:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1598              		.loc 1 1025 3 is_stmt 1 view .LVU417
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 67


1025:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1599              		.loc 1 1025 34 is_stmt 0 view .LVU418
 1600 0052 0E93     		str	r3, [sp, #56]
1026:Core/Src/main.c ****   {
 1601              		.loc 1 1026 3 is_stmt 1 view .LVU419
1026:Core/Src/main.c ****   {
 1602              		.loc 1 1026 7 is_stmt 0 view .LVU420
 1603 0054 08A8     		add	r0, sp, #32
 1604 0056 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1605              	.LVL101:
1026:Core/Src/main.c ****   {
 1606              		.loc 1 1026 6 view .LVU421
 1607 005a 68B9     		cbnz	r0, .L83
1033:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1608              		.loc 1 1033 3 is_stmt 1 view .LVU422
1033:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1609              		.loc 1 1033 31 is_stmt 0 view .LVU423
 1610 005c 0F23     		movs	r3, #15
 1611 005e 0393     		str	r3, [sp, #12]
1035:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1612              		.loc 1 1035 3 is_stmt 1 view .LVU424
1035:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1613              		.loc 1 1035 34 is_stmt 0 view .LVU425
 1614 0060 0021     		movs	r1, #0
 1615 0062 0491     		str	r1, [sp, #16]
1036:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1616              		.loc 1 1036 3 is_stmt 1 view .LVU426
1036:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1617              		.loc 1 1036 35 is_stmt 0 view .LVU427
 1618 0064 0591     		str	r1, [sp, #20]
1037:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1619              		.loc 1 1037 3 is_stmt 1 view .LVU428
1037:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1620              		.loc 1 1037 36 is_stmt 0 view .LVU429
 1621 0066 0691     		str	r1, [sp, #24]
1038:Core/Src/main.c **** 
 1622              		.loc 1 1038 3 is_stmt 1 view .LVU430
1038:Core/Src/main.c **** 
 1623              		.loc 1 1038 36 is_stmt 0 view .LVU431
 1624 0068 0791     		str	r1, [sp, #28]
1040:Core/Src/main.c ****   {
 1625              		.loc 1 1040 3 is_stmt 1 view .LVU432
1040:Core/Src/main.c ****   {
 1626              		.loc 1 1040 7 is_stmt 0 view .LVU433
 1627 006a 03A8     		add	r0, sp, #12
 1628 006c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1629              	.LVL102:
1040:Core/Src/main.c ****   {
 1630              		.loc 1 1040 6 view .LVU434
 1631 0070 20B9     		cbnz	r0, .L84
1044:Core/Src/main.c **** 
 1632              		.loc 1 1044 1 view .LVU435
 1633 0072 15B0     		add	sp, sp, #84
 1634              		.cfi_remember_state
 1635              		.cfi_def_cfa_offset 4
 1636              		@ sp needed
 1637 0074 5DF804FB 		ldr	pc, [sp], #4
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 68


 1638              	.L83:
 1639              		.cfi_restore_state
1028:Core/Src/main.c ****   }
 1640              		.loc 1 1028 5 is_stmt 1 view .LVU436
 1641 0078 FFF7FEFF 		bl	Error_Handler
 1642              	.LVL103:
 1643              	.L84:
1042:Core/Src/main.c ****   }
 1644              		.loc 1 1042 5 view .LVU437
 1645 007c FFF7FEFF 		bl	Error_Handler
 1646              	.LVL104:
 1647              	.L86:
 1648              		.align	2
 1649              	.L85:
 1650 0080 00380240 		.word	1073887232
 1651 0084 00700040 		.word	1073770496
 1652              		.cfi_endproc
 1653              	.LFE139:
 1655              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 1656              		.align	2
 1657              	.LC9:
 1658 0000 424D4532 		.ascii	"BME280\000"
 1658      383000
 1659 0007 00       		.align	2
 1660              	.LC10:
 1661 0008 424D5032 		.ascii	"BMP280\000"
 1661      383000
 1662 000f 00       		.align	2
 1663              	.LC11:
 1664 0010 424D5032 		.ascii	"BMP280 initialization failed\012\000"
 1664      38302069 
 1664      6E697469 
 1664      616C697A 
 1664      6174696F 
 1665 002e 0000     		.align	2
 1666              	.LC12:
 1667 0030 0A424D50 		.ascii	"\012BMP280: found %s\012\000"
 1667      3238303A 
 1667      20666F75 
 1667      6E642025 
 1667      730A00
 1668 0043 00       		.align	2
 1669              	.LC13:
 1670 0044 4C6F5261 		.ascii	"LoRa is running... :) \012\015\000"
 1670      20697320 
 1670      72756E6E 
 1670      696E672E 
 1670      2E2E203A 
 1671 005d 000000   		.align	2
 1672              	.LC14:
 1673 0060 0A0D204C 		.ascii	"\012\015 LoRa failed :( \012\015 Error code: %d \012"
 1673      6F526120 
 1673      6661696C 
 1673      6564203A 
 1673      28200A0D 
 1674 0085 0D00     		.ascii	"\015\000"
 1675 0087 00       		.align	2
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 69


 1676              	.LC15:
 1677 0088 256400   		.ascii	"%d\000"
 1678 008b 00       		.align	2
 1679              	.LC16:
 1680 008c 31323334 		.ascii	"1234\000"
 1680      00
 1681 0091 000000   		.align	2
 1682              	.LC17:
 1683 0094 44617461 		.ascii	"Data sent with code %u\012\000"
 1683      2073656E 
 1683      74207769 
 1683      74682063 
 1683      6F646520 
 1684              		.section	.text.main,"ax",%progbits
 1685              		.align	1
 1686              		.global	main
 1687              		.syntax unified
 1688              		.thumb
 1689              		.thumb_func
 1691              	main:
 1692              	.LFB138:
 134:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 1693              		.loc 1 134 1 view -0
 1694              		.cfi_startproc
 1695              		@ args = 0, pretend = 0, frame = 176
 1696              		@ frame_needed = 0, uses_anonymous_args = 0
 1697 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1698              		.cfi_def_cfa_offset 24
 1699              		.cfi_offset 4, -24
 1700              		.cfi_offset 5, -20
 1701              		.cfi_offset 6, -16
 1702              		.cfi_offset 7, -12
 1703              		.cfi_offset 8, -8
 1704              		.cfi_offset 14, -4
 1705 0004 AEB0     		sub	sp, sp, #184
 1706              		.cfi_def_cfa_offset 208
 142:Core/Src/main.c **** 
 1707              		.loc 1 142 3 view .LVU439
 1708 0006 FFF7FEFF 		bl	HAL_Init
 1709              	.LVL105:
 149:Core/Src/main.c **** 
 1710              		.loc 1 149 3 view .LVU440
 1711 000a FFF7FEFF 		bl	SystemClock_Config
 1712              	.LVL106:
 156:Core/Src/main.c ****   MX_USART1_UART_Init();
 1713              		.loc 1 156 3 view .LVU441
 1714 000e FFF7FEFF 		bl	MX_GPIO_Init
 1715              	.LVL107:
 157:Core/Src/main.c ****   MX_USART2_UART_Init();
 1716              		.loc 1 157 3 view .LVU442
 1717 0012 FFF7FEFF 		bl	MX_USART1_UART_Init
 1718              	.LVL108:
 158:Core/Src/main.c ****   MX_I2C1_Init();
 1719              		.loc 1 158 3 view .LVU443
 1720 0016 FFF7FEFF 		bl	MX_USART2_UART_Init
 1721              	.LVL109:
 159:Core/Src/main.c ****   MX_SPI3_Init();
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 70


 1722              		.loc 1 159 3 view .LVU444
 1723 001a FFF7FEFF 		bl	MX_I2C1_Init
 1724              	.LVL110:
 160:Core/Src/main.c ****   MX_I2C2_Init();
 1725              		.loc 1 160 3 view .LVU445
 1726 001e FFF7FEFF 		bl	MX_SPI3_Init
 1727              	.LVL111:
 161:Core/Src/main.c ****   MX_TIM3_Init();
 1728              		.loc 1 161 3 view .LVU446
 1729 0022 FFF7FEFF 		bl	MX_I2C2_Init
 1730              	.LVL112:
 162:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1731              		.loc 1 162 3 view .LVU447
 1732 0026 FFF7FEFF 		bl	MX_TIM3_Init
 1733              	.LVL113:
 166:Core/Src/main.c **** 
 1734              		.loc 1 166 3 view .LVU448
 1735 002a 8448     		ldr	r0, .L164
 1736 002c FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1737              	.LVL114:
 168:Core/Src/main.c **** 	bmp280.addr = 0x77;
 1738              		.loc 1 168 3 view .LVU449
 1739 0030 834C     		ldr	r4, .L164+4
 1740 0032 2046     		mov	r0, r4
 1741 0034 FFF7FEFF 		bl	bmp280_init_default_params
 1742              	.LVL115:
 169:Core/Src/main.c **** 	bmp280.i2c = &hi2c1;
 1743              		.loc 1 169 2 view .LVU450
 169:Core/Src/main.c **** 	bmp280.i2c = &hi2c1;
 1744              		.loc 1 169 14 is_stmt 0 view .LVU451
 1745 0038 7723     		movs	r3, #119
 1746 003a 24F8083C 		strh	r3, [r4, #-8]	@ movhi
 170:Core/Src/main.c **** 
 1747              		.loc 1 170 2 is_stmt 1 view .LVU452
 170:Core/Src/main.c **** 
 1748              		.loc 1 170 13 is_stmt 0 view .LVU453
 1749 003e 814B     		ldr	r3, .L164+8
 1750 0040 44F8043C 		str	r3, [r4, #-4]
 172:Core/Src/main.c **** 		size = sprintf((char *)Data, "BMP280 initialization failed\n");
 1751              		.loc 1 172 2 is_stmt 1 view .LVU454
 172:Core/Src/main.c **** 		size = sprintf((char *)Data, "BMP280 initialization failed\n");
 1752              		.loc 1 172 8 is_stmt 0 view .LVU455
 1753 0044 15E0     		b	.L88
 1754              	.L89:
 173:Core/Src/main.c **** 		HAL_UART_Transmit(&huart2, Data, size, 1000);
 1755              		.loc 1 173 3 is_stmt 1 view .LVU456
 173:Core/Src/main.c **** 		HAL_UART_Transmit(&huart2, Data, size, 1000);
 1756              		.loc 1 173 10 is_stmt 0 view .LVU457
 1757 0046 804E     		ldr	r6, .L164+12
 1758 0048 3446     		mov	r4, r6
 1759 004a 804D     		ldr	r5, .L164+16
 1760 004c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1761 004e 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1762 0050 95E80F00 		ldm	r5, {r0, r1, r2, r3}
 1763 0054 07C4     		stmia	r4!, {r0, r1, r2}
 1764 0056 2380     		strh	r3, [r4]	@ movhi
 1765 0058 1D22     		movs	r2, #29
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 71


 173:Core/Src/main.c **** 		HAL_UART_Transmit(&huart2, Data, size, 1000);
 1766              		.loc 1 173 8 view .LVU458
 1767 005a 7D4B     		ldr	r3, .L164+20
 1768 005c 1A60     		str	r2, [r3]
 174:Core/Src/main.c **** 		HAL_Delay(2000);
 1769              		.loc 1 174 3 is_stmt 1 view .LVU459
 1770 005e 4FF47A73 		mov	r3, #1000
 1771 0062 3146     		mov	r1, r6
 1772 0064 7B48     		ldr	r0, .L164+24
 1773 0066 FFF7FEFF 		bl	HAL_UART_Transmit
 1774              	.LVL116:
 175:Core/Src/main.c **** 	}
 1775              		.loc 1 175 3 view .LVU460
 1776 006a 4FF4FA60 		mov	r0, #2000
 1777 006e FFF7FEFF 		bl	HAL_Delay
 1778              	.LVL117:
 1779              	.L88:
 172:Core/Src/main.c **** 		size = sprintf((char *)Data, "BMP280 initialization failed\n");
 1780              		.loc 1 172 9 view .LVU461
 172:Core/Src/main.c **** 		size = sprintf((char *)Data, "BMP280 initialization failed\n");
 1781              		.loc 1 172 10 is_stmt 0 view .LVU462
 1782 0072 7349     		ldr	r1, .L164+4
 1783 0074 A1F12C00 		sub	r0, r1, #44
 1784 0078 FFF7FEFF 		bl	bmp280_init
 1785              	.LVL118:
 172:Core/Src/main.c **** 		size = sprintf((char *)Data, "BMP280 initialization failed\n");
 1786              		.loc 1 172 9 view .LVU463
 1787 007c 0028     		cmp	r0, #0
 1788 007e E2D0     		beq	.L89
 177:Core/Src/main.c **** 	size = sprintf((char *)Data, "\nBMP280: found %s\n", bme280p ? "BME280" : "BMP280");
 1789              		.loc 1 177 2 is_stmt 1 view .LVU464
 177:Core/Src/main.c **** 	size = sprintf((char *)Data, "\nBMP280: found %s\n", bme280p ? "BME280" : "BMP280");
 1790              		.loc 1 177 23 is_stmt 0 view .LVU465
 1791 0080 754B     		ldr	r3, .L164+28
 1792 0082 93F83230 		ldrb	r3, [r3, #50]	@ zero_extendqisi2
 1793              	.LVL119:
 178:Core/Src/main.c **** 	HAL_UART_Transmit(&huart2, Data, size, 1000);
 1794              		.loc 1 178 2 is_stmt 1 view .LVU466
 178:Core/Src/main.c **** 	HAL_UART_Transmit(&huart2, Data, size, 1000);
 1795              		.loc 1 178 9 is_stmt 0 view .LVU467
 1796 0086 602B     		cmp	r3, #96
 1797 0088 7FD0     		beq	.L161
 1798 008a 744A     		ldr	r2, .L164+32
 1799              	.L90:
 178:Core/Src/main.c **** 	HAL_UART_Transmit(&huart2, Data, size, 1000);
 1800              		.loc 1 178 9 discriminator 4 view .LVU468
 1801 008c 6E4C     		ldr	r4, .L164+12
 1802 008e 7449     		ldr	r1, .L164+36
 1803 0090 2046     		mov	r0, r4
 1804 0092 FFF7FEFF 		bl	sprintf
 1805              	.LVL120:
 178:Core/Src/main.c **** 	HAL_UART_Transmit(&huart2, Data, size, 1000);
 1806              		.loc 1 178 9 discriminator 4 view .LVU469
 1807 0096 1622     		movs	r2, #22
 178:Core/Src/main.c **** 	HAL_UART_Transmit(&huart2, Data, size, 1000);
 1808              		.loc 1 178 7 discriminator 4 view .LVU470
 1809 0098 6D4B     		ldr	r3, .L164+20
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 72


 1810 009a 1A60     		str	r2, [r3]
 179:Core/Src/main.c **** 
 1811              		.loc 1 179 2 is_stmt 1 discriminator 4 view .LVU471
 1812 009c 4FF47A73 		mov	r3, #1000
 1813 00a0 2146     		mov	r1, r4
 1814 00a2 6C48     		ldr	r0, .L164+24
 1815 00a4 FFF7FEFF 		bl	HAL_UART_Transmit
 1816              	.LVL121:
 181:Core/Src/main.c ****   myLoRa.CS_port         = GPIOA;
 1817              		.loc 1 181 3 discriminator 4 view .LVU472
 181:Core/Src/main.c ****   myLoRa.CS_port         = GPIOA;
 1818              		.loc 1 181 12 is_stmt 0 discriminator 4 view .LVU473
 1819 00a8 6E4D     		ldr	r5, .L164+40
 1820 00aa 02A8     		add	r0, sp, #8
 1821 00ac FFF7FEFF 		bl	newLoRa
 1822              	.LVL122:
 1823 00b0 2E46     		mov	r6, r5
 1824 00b2 02AC     		add	r4, sp, #8
 1825 00b4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1826 00b6 0FC6     		stmia	r6!, {r0, r1, r2, r3}
 1827 00b8 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1828 00ba 0FC6     		stmia	r6!, {r0, r1, r2, r3}
 1829 00bc 94E80F00 		ldm	r4, {r0, r1, r2, r3}
 1830 00c0 86E80F00 		stm	r6, {r0, r1, r2, r3}
 182:Core/Src/main.c ****   myLoRa.CS_pin          = GPIO_PIN_4;
 1831              		.loc 1 182 3 is_stmt 1 discriminator 4 view .LVU474
 182:Core/Src/main.c ****   myLoRa.CS_pin          = GPIO_PIN_4;
 1832              		.loc 1 182 26 is_stmt 0 discriminator 4 view .LVU475
 1833 00c4 684B     		ldr	r3, .L164+44
 1834 00c6 2B60     		str	r3, [r5]
 183:Core/Src/main.c ****   myLoRa.reset_port      = GPIOB;
 1835              		.loc 1 183 3 is_stmt 1 discriminator 4 view .LVU476
 183:Core/Src/main.c ****   myLoRa.reset_port      = GPIOB;
 1836              		.loc 1 183 26 is_stmt 0 discriminator 4 view .LVU477
 1837 00c8 1023     		movs	r3, #16
 1838 00ca AB80     		strh	r3, [r5, #4]	@ movhi
 184:Core/Src/main.c ****   myLoRa.reset_pin       = GPIO_PIN_8;
 1839              		.loc 1 184 3 is_stmt 1 discriminator 4 view .LVU478
 184:Core/Src/main.c ****   myLoRa.reset_pin       = GPIO_PIN_8;
 1840              		.loc 1 184 26 is_stmt 0 discriminator 4 view .LVU479
 1841 00cc 674B     		ldr	r3, .L164+48
 1842 00ce AB60     		str	r3, [r5, #8]
 185:Core/Src/main.c ****   myLoRa.DIO0_port       = GPIOB;
 1843              		.loc 1 185 3 is_stmt 1 discriminator 4 view .LVU480
 185:Core/Src/main.c ****   myLoRa.DIO0_port       = GPIOB;
 1844              		.loc 1 185 26 is_stmt 0 discriminator 4 view .LVU481
 1845 00d0 4FF48072 		mov	r2, #256
 1846 00d4 AA81     		strh	r2, [r5, #12]	@ movhi
 186:Core/Src/main.c ****   myLoRa.DIO0_pin        = GPIO_PIN_9;
 1847              		.loc 1 186 3 is_stmt 1 discriminator 4 view .LVU482
 186:Core/Src/main.c ****   myLoRa.DIO0_pin        = GPIO_PIN_9;
 1848              		.loc 1 186 26 is_stmt 0 discriminator 4 view .LVU483
 1849 00d6 2B61     		str	r3, [r5, #16]
 187:Core/Src/main.c ****   myLoRa.hSPIx           = &hspi3;
 1850              		.loc 1 187 3 is_stmt 1 discriminator 4 view .LVU484
 187:Core/Src/main.c ****   myLoRa.hSPIx           = &hspi3;
 1851              		.loc 1 187 26 is_stmt 0 discriminator 4 view .LVU485
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 73


 1852 00d8 4FF40073 		mov	r3, #512
 1853 00dc AB82     		strh	r3, [r5, #20]	@ movhi
 188:Core/Src/main.c ****   
 1854              		.loc 1 188 3 is_stmt 1 discriminator 4 view .LVU486
 188:Core/Src/main.c ****   
 1855              		.loc 1 188 26 is_stmt 0 discriminator 4 view .LVU487
 1856 00de 644B     		ldr	r3, .L164+52
 1857 00e0 AB61     		str	r3, [r5, #24]
 191:Core/Src/main.c ****   myLoRa.spreadingFactor        = SF_7;            // default = SF_7
 1858              		.loc 1 191 3 is_stmt 1 discriminator 4 view .LVU488
 191:Core/Src/main.c ****   myLoRa.spreadingFactor        = SF_7;            // default = SF_7
 1859              		.loc 1 191 32 is_stmt 0 discriminator 4 view .LVU489
 1860 00e2 40F2B113 		movw	r3, #433
 1861 00e6 2B62     		str	r3, [r5, #32]
 192:Core/Src/main.c ****   myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 1862              		.loc 1 192 3 is_stmt 1 discriminator 4 view .LVU490
 192:Core/Src/main.c ****   myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 1863              		.loc 1 192 33 is_stmt 0 discriminator 4 view .LVU491
 1864 00e8 0723     		movs	r3, #7
 1865 00ea 85F82430 		strb	r3, [r5, #36]
 193:Core/Src/main.c ****   myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 1866              		.loc 1 193 3 is_stmt 1 discriminator 4 view .LVU492
 193:Core/Src/main.c ****   myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 1867              		.loc 1 193 32 is_stmt 0 discriminator 4 view .LVU493
 1868 00ee 0026     		movs	r6, #0
 1869 00f0 85F82560 		strb	r6, [r5, #37]
 194:Core/Src/main.c ****   myLoRa.power                 = POWER_20db;      // default = 20db
 1870              		.loc 1 194 3 is_stmt 1 discriminator 4 view .LVU494
 194:Core/Src/main.c ****   myLoRa.power                 = POWER_20db;      // default = 20db
 1871              		.loc 1 194 32 is_stmt 0 discriminator 4 view .LVU495
 1872 00f4 0123     		movs	r3, #1
 1873 00f6 85F82630 		strb	r3, [r5, #38]
 195:Core/Src/main.c ****   myLoRa.overCurrentProtection = 100;             // default = 100 mA
 1874              		.loc 1 195 3 is_stmt 1 discriminator 4 view .LVU496
 195:Core/Src/main.c ****   myLoRa.overCurrentProtection = 100;             // default = 100 mA
 1875              		.loc 1 195 32 is_stmt 0 discriminator 4 view .LVU497
 1876 00fa FF23     		movs	r3, #255
 1877 00fc 85F82A30 		strb	r3, [r5, #42]
 196:Core/Src/main.c ****   myLoRa.preamble              = 8;              // default = 8;
 1878              		.loc 1 196 3 is_stmt 1 discriminator 4 view .LVU498
 196:Core/Src/main.c ****   myLoRa.preamble              = 8;              // default = 8;
 1879              		.loc 1 196 32 is_stmt 0 discriminator 4 view .LVU499
 1880 0100 6423     		movs	r3, #100
 1881 0102 85F82B30 		strb	r3, [r5, #43]
 197:Core/Src/main.c **** 
 1882              		.loc 1 197 3 is_stmt 1 discriminator 4 view .LVU500
 197:Core/Src/main.c **** 
 1883              		.loc 1 197 32 is_stmt 0 discriminator 4 view .LVU501
 1884 0106 0823     		movs	r3, #8
 1885 0108 2B85     		strh	r3, [r5, #40]	@ movhi
 199:Core/Src/main.c ****   uint8_t buff[128] = {"\0"};
 1886              		.loc 1 199 3 is_stmt 1 discriminator 4 view .LVU502
 199:Core/Src/main.c ****   uint8_t buff[128] = {"\0"};
 1887              		.loc 1 199 18 is_stmt 0 discriminator 4 view .LVU503
 1888 010a 2846     		mov	r0, r5
 1889 010c FFF7FEFF 		bl	LoRa_init
 1890              	.LVL123:
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 74


 1891 0110 0446     		mov	r4, r0
 1892              	.LVL124:
 200:Core/Src/main.c ****   
 1893              		.loc 1 200 3 is_stmt 1 discriminator 4 view .LVU504
 200:Core/Src/main.c ****   
 1894              		.loc 1 200 11 is_stmt 0 discriminator 4 view .LVU505
 1895 0112 0E96     		str	r6, [sp, #56]
 1896 0114 7C22     		movs	r2, #124
 1897 0116 3146     		mov	r1, r6
 1898 0118 0FA8     		add	r0, sp, #60
 1899 011a FFF7FEFF 		bl	memset
 1900              	.LVL125:
 203:Core/Src/main.c ****   snprintf(buff,sizeof(buff),"LoRa is running... :) \n\r");
 1901              		.loc 1 203 1 is_stmt 1 discriminator 4 view .LVU506
 203:Core/Src/main.c ****   snprintf(buff,sizeof(buff),"LoRa is running... :) \n\r");
 1902              		.loc 1 203 4 is_stmt 0 discriminator 4 view .LVU507
 1903 011e C82C     		cmp	r4, #200
 1904 0120 35D0     		beq	.L162
 210:Core/Src/main.c ****   size = strlen(&buff);
 1905              		.loc 1 210 3 is_stmt 1 view .LVU508
 1906 0122 2346     		mov	r3, r4
 1907 0124 534A     		ldr	r2, .L164+56
 1908 0126 8021     		movs	r1, #128
 1909 0128 0EA8     		add	r0, sp, #56
 1910 012a FFF7FEFF 		bl	snprintf
 1911              	.LVL126:
 211:Core/Src/main.c ****   HAL_UART_Transmit_IT(&huart2, buff, size);
 1912              		.loc 1 211 3 view .LVU509
 211:Core/Src/main.c ****   HAL_UART_Transmit_IT(&huart2, buff, size);
 1913              		.loc 1 211 10 is_stmt 0 view .LVU510
 1914 012e 0EA8     		add	r0, sp, #56
 1915 0130 FFF7FEFF 		bl	strlen
 1916              	.LVL127:
 211:Core/Src/main.c ****   HAL_UART_Transmit_IT(&huart2, buff, size);
 1917              		.loc 1 211 8 view .LVU511
 1918 0134 464B     		ldr	r3, .L164+20
 1919 0136 1860     		str	r0, [r3]
 212:Core/Src/main.c **** }
 1920              		.loc 1 212 3 is_stmt 1 view .LVU512
 1921 0138 82B2     		uxth	r2, r0
 1922 013a 0EA9     		add	r1, sp, #56
 1923 013c 4548     		ldr	r0, .L164+24
 1924 013e FFF7FEFF 		bl	HAL_UART_Transmit_IT
 1925              	.LVL128:
 1926              	.L92:
 216:Core/Src/main.c **** 
 1927              		.loc 1 216 1 view .LVU513
 1928 0142 4D4D     		ldr	r5, .L164+60
 1929 0144 2846     		mov	r0, r5
 1930 0146 FFF7FEFF 		bl	ssd1306_Init
 1931              	.LVL129:
 219:Core/Src/main.c **** ssd1306_WriteString("Mode:", Font_16x26, White);
 1932              		.loc 1 219 1 view .LVU514
 1933 014a 0021     		movs	r1, #0
 1934 014c 0846     		mov	r0, r1
 1935 014e FFF7FEFF 		bl	ssd1306_SetCursor
 1936              	.LVL130:
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 75


 220:Core/Src/main.c **** 
 1937              		.loc 1 220 1 view .LVU515
 1938 0152 4A4C     		ldr	r4, .L164+64
 1939 0154 0123     		movs	r3, #1
 1940 0156 94E80600 		ldm	r4, {r1, r2}
 1941 015a 4948     		ldr	r0, .L164+68
 1942 015c FFF7FEFF 		bl	ssd1306_WriteString
 1943              	.LVL131:
 222:Core/Src/main.c **** sprintf(sMode, "%d", iMode);
 1944              		.loc 1 222 1 view .LVU516
 1945 0160 2321     		movs	r1, #35
 1946 0162 0020     		movs	r0, #0
 1947 0164 FFF7FEFF 		bl	ssd1306_SetCursor
 1948              	.LVL132:
 223:Core/Src/main.c **** ssd1306_WriteString(sMode, Font_16x26, White);
 1949              		.loc 1 223 1 view .LVU517
 1950 0168 464E     		ldr	r6, .L164+72
 1951 016a 474B     		ldr	r3, .L164+76
 1952 016c 1A68     		ldr	r2, [r3]
 1953 016e 4749     		ldr	r1, .L164+80
 1954 0170 3046     		mov	r0, r6
 1955 0172 FFF7FEFF 		bl	sprintf
 1956              	.LVL133:
 224:Core/Src/main.c **** 
 1957              		.loc 1 224 1 view .LVU518
 1958 0176 0123     		movs	r3, #1
 1959 0178 94E80600 		ldm	r4, {r1, r2}
 1960 017c 3046     		mov	r0, r6
 1961 017e FFF7FEFF 		bl	ssd1306_WriteString
 1962              	.LVL134:
 227:Core/Src/main.c **** 
 1963              		.loc 1 227 1 view .LVU519
 1964 0182 2846     		mov	r0, r5
 1965 0184 FFF7FEFF 		bl	ssd1306_UpdateScreen
 1966              	.LVL135:
 1967 0188 B4E0     		b	.L157
 1968              	.LVL136:
 1969              	.L161:
 178:Core/Src/main.c **** 	HAL_UART_Transmit(&huart2, Data, size, 1000);
 1970              		.loc 1 178 9 is_stmt 0 view .LVU520
 1971 018a 414A     		ldr	r2, .L164+84
 1972 018c 7EE7     		b	.L90
 1973              	.LVL137:
 1974              	.L162:
 204:Core/Src/main.c ****   size = strlen(&buff);
 1975              		.loc 1 204 3 is_stmt 1 view .LVU521
 1976 018e 0EAC     		add	r4, sp, #56
 1977              	.LVL138:
 204:Core/Src/main.c ****   size = strlen(&buff);
 1978              		.loc 1 204 3 is_stmt 0 view .LVU522
 1979 0190 404D     		ldr	r5, .L164+88
 1980 0192 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1981 0194 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1982 0196 95E80700 		ldm	r5, {r0, r1, r2}
 1983 019a 03C4     		stmia	r4!, {r0, r1}
 1984 019c 2270     		strb	r2, [r4]
 205:Core/Src/main.c ****   LoRa_transmit(&myLoRa, (uint8_t*)buff, size, 100);
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 76


 1985              		.loc 1 205 3 is_stmt 1 view .LVU523
 205:Core/Src/main.c ****   LoRa_transmit(&myLoRa, (uint8_t*)buff, size, 100);
 1986              		.loc 1 205 10 is_stmt 0 view .LVU524
 1987 019e 0EA8     		add	r0, sp, #56
 1988 01a0 FFF7FEFF 		bl	strlen
 1989              	.LVL139:
 205:Core/Src/main.c ****   LoRa_transmit(&myLoRa, (uint8_t*)buff, size, 100);
 1990              		.loc 1 205 8 view .LVU525
 1991 01a4 2A4C     		ldr	r4, .L164+20
 1992 01a6 2060     		str	r0, [r4]
 206:Core/Src/main.c ****   HAL_UART_Transmit_IT(&huart2, buff, size);
 1993              		.loc 1 206 3 is_stmt 1 view .LVU526
 1994 01a8 6423     		movs	r3, #100
 1995 01aa C2B2     		uxtb	r2, r0
 1996 01ac 0EA9     		add	r1, sp, #56
 1997 01ae 2D48     		ldr	r0, .L164+40
 1998 01b0 FFF7FEFF 		bl	LoRa_transmit
 1999              	.LVL140:
 207:Core/Src/main.c **** }
 2000              		.loc 1 207 3 view .LVU527
 2001 01b4 2288     		ldrh	r2, [r4]
 2002 01b6 0EA9     		add	r1, sp, #56
 2003 01b8 2648     		ldr	r0, .L164+24
 2004 01ba FFF7FEFF 		bl	HAL_UART_Transmit_IT
 2005              	.LVL141:
 2006 01be C0E7     		b	.L92
 2007              	.LVL142:
 2008              	.L163:
 239:Core/Src/main.c ****       packetSize = buildDataPacket();
 2009              		.loc 1 239 7 view .LVU528
 2010 01c0 4FF47A77 		mov	r7, #1000
 2011 01c4 0097     		str	r7, [sp]
 2012 01c6 4FF40073 		mov	r3, #512
 2013 01ca 1A46     		mov	r2, r3
 2014 01cc 3249     		ldr	r1, .L164+92
 2015 01ce 3348     		ldr	r0, .L164+96
 2016 01d0 FFF7FEFF 		bl	HAL_UARTEx_ReceiveToIdle
 2017              	.LVL143:
 240:Core/Src/main.c ****       //HAL_UART_Transmit(&huart2,(uint8_t *)transmit_data,packetSize, 1000);
 2018              		.loc 1 240 7 view .LVU529
 240:Core/Src/main.c ****       //HAL_UART_Transmit(&huart2,(uint8_t *)transmit_data,packetSize, 1000);
 2019              		.loc 1 240 20 is_stmt 0 view .LVU530
 2020 01d4 FFF7FEFF 		bl	buildDataPacket
 2021              	.LVL144:
 240:Core/Src/main.c ****       //HAL_UART_Transmit(&huart2,(uint8_t *)transmit_data,packetSize, 1000);
 2022              		.loc 1 240 18 view .LVU531
 2023 01d8 314B     		ldr	r3, .L164+100
 2024 01da 1880     		strh	r0, [r3]	@ movhi
 243:Core/Src/main.c ****       ret = LoRa_transmit(&myLoRa, (uint8_t*)"1234", 4, 10000);
 2025              		.loc 1 243 7 is_stmt 1 view .LVU532
 243:Core/Src/main.c ****       ret = LoRa_transmit(&myLoRa, (uint8_t*)"1234", 4, 10000);
 2026              		.loc 1 243 14 is_stmt 0 view .LVU533
 2027 01dc 314C     		ldr	r4, .L164+104
 2028 01de 2046     		mov	r0, r4
 2029 01e0 FFF7FEFF 		bl	strlen
 2030              	.LVL145:
 243:Core/Src/main.c ****       ret = LoRa_transmit(&myLoRa, (uint8_t*)"1234", 4, 10000);
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 77


 2031              		.loc 1 243 12 view .LVU534
 2032 01e4 DFF86880 		ldr	r8, .L164+20
 2033 01e8 C8F80000 		str	r0, [r8]
 244:Core/Src/main.c ****       memset(transmit_data, '\0', sizeof(transmit_data));
 2034              		.loc 1 244 7 is_stmt 1 view .LVU535
 244:Core/Src/main.c ****       memset(transmit_data, '\0', sizeof(transmit_data));
 2035              		.loc 1 244 13 is_stmt 0 view .LVU536
 2036 01ec 42F21073 		movw	r3, #10000
 2037 01f0 0422     		movs	r2, #4
 2038 01f2 2D49     		ldr	r1, .L164+108
 2039 01f4 1B48     		ldr	r0, .L164+40
 2040 01f6 FFF7FEFF 		bl	LoRa_transmit
 2041              	.LVL146:
 2042 01fa 0546     		mov	r5, r0
 2043              	.LVL147:
 245:Core/Src/main.c **** 
 2044              		.loc 1 245 7 is_stmt 1 view .LVU537
 2045 01fc 4FF48076 		mov	r6, #256
 2046 0200 3246     		mov	r2, r6
 2047 0202 0021     		movs	r1, #0
 2048 0204 2046     		mov	r0, r4
 2049 0206 FFF7FEFF 		bl	memset
 2050              	.LVL148:
 247:Core/Src/main.c ****       size = strlen(&transmit_data);
 2051              		.loc 1 247 7 view .LVU538
 2052 020a 2A46     		mov	r2, r5
 2053 020c 2749     		ldr	r1, .L164+112
 2054 020e 2046     		mov	r0, r4
 2055 0210 FFF7FEFF 		bl	sprintf
 2056              	.LVL149:
 248:Core/Src/main.c **** 	    HAL_UART_Transmit(&huart2, (uint8_t *)transmit_data, size, 1000);
 2057              		.loc 1 248 7 view .LVU539
 248:Core/Src/main.c **** 	    HAL_UART_Transmit(&huart2, (uint8_t *)transmit_data, size, 1000);
 2058              		.loc 1 248 14 is_stmt 0 view .LVU540
 2059 0214 2046     		mov	r0, r4
 2060 0216 FFF7FEFF 		bl	strlen
 2061              	.LVL150:
 248:Core/Src/main.c **** 	    HAL_UART_Transmit(&huart2, (uint8_t *)transmit_data, size, 1000);
 2062              		.loc 1 248 12 view .LVU541
 2063 021a C8F80000 		str	r0, [r8]
 249:Core/Src/main.c ****       memset(transmit_data, '\0', sizeof(transmit_data));
 2064              		.loc 1 249 6 is_stmt 1 view .LVU542
 2065 021e 3B46     		mov	r3, r7
 2066 0220 82B2     		uxth	r2, r0
 2067 0222 2146     		mov	r1, r4
 2068 0224 0B48     		ldr	r0, .L164+24
 2069 0226 FFF7FEFF 		bl	HAL_UART_Transmit
 2070              	.LVL151:
 250:Core/Src/main.c ****       
 2071              		.loc 1 250 7 view .LVU543
 2072 022a 3246     		mov	r2, r6
 2073 022c 0021     		movs	r1, #0
 2074 022e 2046     		mov	r0, r4
 2075 0230 FFF7FEFF 		bl	memset
 2076              	.LVL152:
 253:Core/Src/main.c ****     }      
 2077              		.loc 1 253 7 view .LVU544
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 78


 253:Core/Src/main.c ****     }      
 2078              		.loc 1 253 17 is_stmt 0 view .LVU545
 2079 0234 1E4B     		ldr	r3, .L164+116
 2080 0236 0022     		movs	r2, #0
 2081 0238 1A70     		strb	r2, [r3]
 2082 023a 60E0     		b	.L93
 2083              	.L165:
 2084              		.align	2
 2085              	.L164:
 2086 023c 00000000 		.word	htim3
 2087 0240 2C000000 		.word	bmp280+44
 2088 0244 00000000 		.word	hi2c1
 2089 0248 00000000 		.word	Data
 2090 024c 10000000 		.word	.LC11
 2091 0250 00000000 		.word	size
 2092 0254 00000000 		.word	huart2
 2093 0258 00000000 		.word	bmp280
 2094 025c 08000000 		.word	.LC10
 2095 0260 30000000 		.word	.LC12
 2096 0264 00000000 		.word	myLoRa
 2097 0268 00000240 		.word	1073872896
 2098 026c 00040240 		.word	1073873920
 2099 0270 00000000 		.word	hspi3
 2100 0274 60000000 		.word	.LC14
 2101 0278 00000000 		.word	hi2c2
 2102 027c 00000000 		.word	Font_16x26
 2103 0280 14000000 		.word	.LC6
 2104 0284 00000000 		.word	sMode
 2105 0288 00000000 		.word	iMode
 2106 028c 88000000 		.word	.LC15
 2107 0290 00000000 		.word	.LC9
 2108 0294 44000000 		.word	.LC13
 2109 0298 00000000 		.word	gps_raw
 2110 029c 00000000 		.word	huart1
 2111 02a0 00000000 		.word	packetSize
 2112 02a4 00000000 		.word	transmit_data
 2113 02a8 8C000000 		.word	.LC16
 2114 02ac 94000000 		.word	.LC17
 2115 02b0 00000000 		.word	beginRead
 2116              	.LVL153:
 2117              	.L156:
 260:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_7;            // default = SF_7
 2118              		.loc 1 260 7 is_stmt 1 view .LVU546
 260:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_7;            // default = SF_7
 2119              		.loc 1 260 36 is_stmt 0 view .LVU547
 2120 02b4 D548     		ldr	r0, .L166
 2121 02b6 40F2B113 		movw	r3, #433
 2122 02ba 0362     		str	r3, [r0, #32]
 261:Core/Src/main.c ****       myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 2123              		.loc 1 261 7 is_stmt 1 view .LVU548
 261:Core/Src/main.c ****       myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 2124              		.loc 1 261 37 is_stmt 0 view .LVU549
 2125 02bc 0723     		movs	r3, #7
 2126 02be 80F82430 		strb	r3, [r0, #36]
 262:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2127              		.loc 1 262 7 is_stmt 1 view .LVU550
 262:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 79


 2128              		.loc 1 262 36 is_stmt 0 view .LVU551
 2129 02c2 0023     		movs	r3, #0
 2130 02c4 80F82530 		strb	r3, [r0, #37]
 263:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2131              		.loc 1 263 7 is_stmt 1 view .LVU552
 263:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2132              		.loc 1 263 36 is_stmt 0 view .LVU553
 2133 02c8 0123     		movs	r3, #1
 2134 02ca 80F82630 		strb	r3, [r0, #38]
 264:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2135              		.loc 1 264 7 is_stmt 1 view .LVU554
 264:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2136              		.loc 1 264 36 is_stmt 0 view .LVU555
 2137 02ce FF23     		movs	r3, #255
 2138 02d0 80F82A30 		strb	r3, [r0, #42]
 265:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2139              		.loc 1 265 7 is_stmt 1 view .LVU556
 265:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2140              		.loc 1 265 36 is_stmt 0 view .LVU557
 2141 02d4 6423     		movs	r3, #100
 2142 02d6 80F82B30 		strb	r3, [r0, #43]
 266:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2143              		.loc 1 266 7 is_stmt 1 view .LVU558
 266:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2144              		.loc 1 266 36 is_stmt 0 view .LVU559
 2145 02da 0823     		movs	r3, #8
 2146 02dc 0385     		strh	r3, [r0, #40]	@ movhi
 267:Core/Src/main.c ****       break;
 2147              		.loc 1 267 7 is_stmt 1 view .LVU560
 2148 02de FFF7FEFF 		bl	LoRa_init
 2149              	.LVL154:
 268:Core/Src/main.c **** 
 2150              		.loc 1 268 7 view .LVU561
 2151              	.L95:
 981:Core/Src/main.c **** 
 2152              		.loc 1 981 7 view .LVU562
 981:Core/Src/main.c **** 
 2153              		.loc 1 981 20 is_stmt 0 view .LVU563
 2154 02e2 CB4B     		ldr	r3, .L166+4
 2155 02e4 0022     		movs	r2, #0
 2156 02e6 1A70     		strb	r2, [r3]
 2157              	.L94:
 999:Core/Src/main.c **** 
 2158              		.loc 1 999 5 is_stmt 1 view .LVU564
 2159 02e8 4FF40072 		mov	r2, #512
 2160 02ec C949     		ldr	r1, .L166+8
 2161 02ee CA48     		ldr	r0, .L166+12
 2162 02f0 FFF7FEFF 		bl	HAL_UARTEx_ReceiveToIdle_IT
 2163              	.LVL155:
 235:Core/Src/main.c ****   {
 2164              		.loc 1 235 9 view .LVU565
 2165              	.L157:
 235:Core/Src/main.c ****   {
 2166              		.loc 1 235 3 view .LVU566
 238:Core/Src/main.c ****       HAL_UARTEx_ReceiveToIdle(&huart1,(uint8_t*)gps_raw,512,512,1000);
 2167              		.loc 1 238 5 view .LVU567
 238:Core/Src/main.c ****       HAL_UARTEx_ReceiveToIdle(&huart1,(uint8_t*)gps_raw,512,512,1000);
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 80


 2168              		.loc 1 238 9 is_stmt 0 view .LVU568
 2169 02f4 C94B     		ldr	r3, .L166+16
 2170 02f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 238:Core/Src/main.c ****       HAL_UARTEx_ReceiveToIdle(&huart1,(uint8_t*)gps_raw,512,512,1000);
 2171              		.loc 1 238 8 view .LVU569
 2172 02f8 002B     		cmp	r3, #0
 2173 02fa 7FF461AF 		bne	.L163
 2174              	.L93:
 256:Core/Src/main.c **** switch (iMode) {
 2175              		.loc 1 256 5 is_stmt 1 view .LVU570
 256:Core/Src/main.c **** switch (iMode) {
 2176              		.loc 1 256 9 is_stmt 0 view .LVU571
 2177 02fe C44B     		ldr	r3, .L166+4
 2178 0300 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 256:Core/Src/main.c **** switch (iMode) {
 2179              		.loc 1 256 8 view .LVU572
 2180 0302 002B     		cmp	r3, #0
 2181 0304 F0D0     		beq	.L94
 257:Core/Src/main.c ****     case 1:
 2182              		.loc 1 257 1 is_stmt 1 view .LVU573
 2183 0306 C64B     		ldr	r3, .L166+20
 2184 0308 1B68     		ldr	r3, [r3]
 2185 030a 013B     		subs	r3, r3, #1
 2186 030c 3B2B     		cmp	r3, #59
 2187 030e E8D8     		bhi	.L95
 2188 0310 01A2     		adr	r2, .L97
 2189 0312 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2190 0316 00BF     		.p2align 2
 2191              	.L97:
 2192 0318 B5020000 		.word	.L156+1
 2193 031c 09040000 		.word	.L155+1
 2194 0320 37040000 		.word	.L154+1
 2195 0324 67040000 		.word	.L153+1
 2196 0328 97040000 		.word	.L152+1
 2197 032c C7040000 		.word	.L151+1
 2198 0330 F7040000 		.word	.L150+1
 2199 0334 27050000 		.word	.L149+1
 2200 0338 55050000 		.word	.L148+1
 2201 033c 83050000 		.word	.L147+1
 2202 0340 B3050000 		.word	.L146+1
 2203 0344 E1050000 		.word	.L145+1
 2204 0348 25060000 		.word	.L144+1
 2205 034c 53060000 		.word	.L143+1
 2206 0350 81060000 		.word	.L142+1
 2207 0354 AF060000 		.word	.L141+1
 2208 0358 DD060000 		.word	.L140+1
 2209 035c 0B070000 		.word	.L139+1
 2210 0360 39070000 		.word	.L138+1
 2211 0364 65070000 		.word	.L137+1
 2212 0368 93070000 		.word	.L136+1
 2213 036c C3070000 		.word	.L135+1
 2214 0370 F1070000 		.word	.L134+1
 2215 0374 21080000 		.word	.L133+1
 2216 0378 51080000 		.word	.L132+1
 2217 037c 81080000 		.word	.L131+1
 2218 0380 B1080000 		.word	.L130+1
 2219 0384 E1080000 		.word	.L129+1
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 81


 2220 0388 11090000 		.word	.L128+1
 2221 038c 3F090000 		.word	.L127+1
 2222 0390 71090000 		.word	.L126+1
 2223 0394 A1090000 		.word	.L125+1
 2224 0398 CF090000 		.word	.L124+1
 2225 039c FF090000 		.word	.L123+1
 2226 03a0 2F0A0000 		.word	.L122+1
 2227 03a4 5F0A0000 		.word	.L121+1
 2228 03a8 8F0A0000 		.word	.L120+1
 2229 03ac BF0A0000 		.word	.L119+1
 2230 03b0 F10A0000 		.word	.L118+1
 2231 03b4 210B0000 		.word	.L117+1
 2232 03b8 530B0000 		.word	.L116+1
 2233 03bc 850B0000 		.word	.L115+1
 2234 03c0 B50B0000 		.word	.L114+1
 2235 03c4 E70B0000 		.word	.L113+1
 2236 03c8 190C0000 		.word	.L112+1
 2237 03cc 4B0C0000 		.word	.L111+1
 2238 03d0 7D0C0000 		.word	.L110+1
 2239 03d4 AF0C0000 		.word	.L109+1
 2240 03d8 E50C0000 		.word	.L108+1
 2241 03dc 150D0000 		.word	.L107+1
 2242 03e0 470D0000 		.word	.L106+1
 2243 03e4 790D0000 		.word	.L105+1
 2244 03e8 A90D0000 		.word	.L104+1
 2245 03ec DB0D0000 		.word	.L103+1
 2246 03f0 0D0E0000 		.word	.L102+1
 2247 03f4 3F0E0000 		.word	.L101+1
 2248 03f8 710E0000 		.word	.L100+1
 2249 03fc A30E0000 		.word	.L99+1
 2250 0400 D50E0000 		.word	.L98+1
 2251 0404 050F0000 		.word	.L96+1
 2252              		.p2align 1
 2253              	.L155:
 272:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_7;            // default = SF_7
 2254              		.loc 1 272 7 view .LVU574
 272:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_7;            // default = SF_7
 2255              		.loc 1 272 36 is_stmt 0 view .LVU575
 2256 0408 8048     		ldr	r0, .L166
 2257 040a 40F2B113 		movw	r3, #433
 2258 040e 0362     		str	r3, [r0, #32]
 273:Core/Src/main.c ****       myLoRa.bandWidth             = BW_10_4KHz;       // default = BW_125KHz
 2259              		.loc 1 273 7 is_stmt 1 view .LVU576
 273:Core/Src/main.c ****       myLoRa.bandWidth             = BW_10_4KHz;       // default = BW_125KHz
 2260              		.loc 1 273 37 is_stmt 0 view .LVU577
 2261 0410 0723     		movs	r3, #7
 2262 0412 80F82430 		strb	r3, [r0, #36]
 274:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2263              		.loc 1 274 7 is_stmt 1 view .LVU578
 274:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2264              		.loc 1 274 36 is_stmt 0 view .LVU579
 2265 0416 0123     		movs	r3, #1
 2266 0418 80F82530 		strb	r3, [r0, #37]
 275:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2267              		.loc 1 275 7 is_stmt 1 view .LVU580
 275:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2268              		.loc 1 275 36 is_stmt 0 view .LVU581
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 82


 2269 041c 80F82630 		strb	r3, [r0, #38]
 276:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2270              		.loc 1 276 7 is_stmt 1 view .LVU582
 276:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2271              		.loc 1 276 36 is_stmt 0 view .LVU583
 2272 0420 FF23     		movs	r3, #255
 2273 0422 80F82A30 		strb	r3, [r0, #42]
 277:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2274              		.loc 1 277 7 is_stmt 1 view .LVU584
 277:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2275              		.loc 1 277 36 is_stmt 0 view .LVU585
 2276 0426 6423     		movs	r3, #100
 2277 0428 80F82B30 		strb	r3, [r0, #43]
 278:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2278              		.loc 1 278 7 is_stmt 1 view .LVU586
 278:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2279              		.loc 1 278 36 is_stmt 0 view .LVU587
 2280 042c 0823     		movs	r3, #8
 2281 042e 0385     		strh	r3, [r0, #40]	@ movhi
 279:Core/Src/main.c ****       break;
 2282              		.loc 1 279 7 is_stmt 1 view .LVU588
 2283 0430 FFF7FEFF 		bl	LoRa_init
 2284              	.LVL156:
 280:Core/Src/main.c **** 
 2285              		.loc 1 280 7 view .LVU589
 2286 0434 55E7     		b	.L95
 2287              	.L154:
 284:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_7;            // default = SF_7
 2288              		.loc 1 284 7 view .LVU590
 284:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_7;            // default = SF_7
 2289              		.loc 1 284 36 is_stmt 0 view .LVU591
 2290 0436 7548     		ldr	r0, .L166
 2291 0438 40F2B113 		movw	r3, #433
 2292 043c 0362     		str	r3, [r0, #32]
 285:Core/Src/main.c ****       myLoRa.bandWidth             = BW_15_6KHz;       // default = BW_125KHz
 2293              		.loc 1 285 7 is_stmt 1 view .LVU592
 285:Core/Src/main.c ****       myLoRa.bandWidth             = BW_15_6KHz;       // default = BW_125KHz
 2294              		.loc 1 285 37 is_stmt 0 view .LVU593
 2295 043e 0723     		movs	r3, #7
 2296 0440 80F82430 		strb	r3, [r0, #36]
 286:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2297              		.loc 1 286 7 is_stmt 1 view .LVU594
 286:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2298              		.loc 1 286 36 is_stmt 0 view .LVU595
 2299 0444 0223     		movs	r3, #2
 2300 0446 80F82530 		strb	r3, [r0, #37]
 287:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2301              		.loc 1 287 7 is_stmt 1 view .LVU596
 287:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2302              		.loc 1 287 36 is_stmt 0 view .LVU597
 2303 044a 0123     		movs	r3, #1
 2304 044c 80F82630 		strb	r3, [r0, #38]
 288:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2305              		.loc 1 288 7 is_stmt 1 view .LVU598
 288:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2306              		.loc 1 288 36 is_stmt 0 view .LVU599
 2307 0450 FF23     		movs	r3, #255
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 83


 2308 0452 80F82A30 		strb	r3, [r0, #42]
 289:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2309              		.loc 1 289 7 is_stmt 1 view .LVU600
 289:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2310              		.loc 1 289 36 is_stmt 0 view .LVU601
 2311 0456 6423     		movs	r3, #100
 2312 0458 80F82B30 		strb	r3, [r0, #43]
 290:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2313              		.loc 1 290 7 is_stmt 1 view .LVU602
 290:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2314              		.loc 1 290 36 is_stmt 0 view .LVU603
 2315 045c 0823     		movs	r3, #8
 2316 045e 0385     		strh	r3, [r0, #40]	@ movhi
 291:Core/Src/main.c ****       break;
 2317              		.loc 1 291 7 is_stmt 1 view .LVU604
 2318 0460 FFF7FEFF 		bl	LoRa_init
 2319              	.LVL157:
 292:Core/Src/main.c **** 
 2320              		.loc 1 292 7 view .LVU605
 2321 0464 3DE7     		b	.L95
 2322              	.L153:
 296:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_7;            // default = SF_7
 2323              		.loc 1 296 7 view .LVU606
 296:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_7;            // default = SF_7
 2324              		.loc 1 296 36 is_stmt 0 view .LVU607
 2325 0466 6948     		ldr	r0, .L166
 2326 0468 40F2B113 		movw	r3, #433
 2327 046c 0362     		str	r3, [r0, #32]
 297:Core/Src/main.c ****       myLoRa.bandWidth             = BW_20_8KHz;       // default = BW_125KHz
 2328              		.loc 1 297 7 is_stmt 1 view .LVU608
 297:Core/Src/main.c ****       myLoRa.bandWidth             = BW_20_8KHz;       // default = BW_125KHz
 2329              		.loc 1 297 37 is_stmt 0 view .LVU609
 2330 046e 0723     		movs	r3, #7
 2331 0470 80F82430 		strb	r3, [r0, #36]
 298:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2332              		.loc 1 298 7 is_stmt 1 view .LVU610
 298:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2333              		.loc 1 298 36 is_stmt 0 view .LVU611
 2334 0474 0323     		movs	r3, #3
 2335 0476 80F82530 		strb	r3, [r0, #37]
 299:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2336              		.loc 1 299 7 is_stmt 1 view .LVU612
 299:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2337              		.loc 1 299 36 is_stmt 0 view .LVU613
 2338 047a 0123     		movs	r3, #1
 2339 047c 80F82630 		strb	r3, [r0, #38]
 300:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2340              		.loc 1 300 7 is_stmt 1 view .LVU614
 300:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2341              		.loc 1 300 36 is_stmt 0 view .LVU615
 2342 0480 FF23     		movs	r3, #255
 2343 0482 80F82A30 		strb	r3, [r0, #42]
 301:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2344              		.loc 1 301 7 is_stmt 1 view .LVU616
 301:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2345              		.loc 1 301 36 is_stmt 0 view .LVU617
 2346 0486 6423     		movs	r3, #100
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 84


 2347 0488 80F82B30 		strb	r3, [r0, #43]
 302:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2348              		.loc 1 302 7 is_stmt 1 view .LVU618
 302:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2349              		.loc 1 302 36 is_stmt 0 view .LVU619
 2350 048c 0823     		movs	r3, #8
 2351 048e 0385     		strh	r3, [r0, #40]	@ movhi
 303:Core/Src/main.c ****       break;
 2352              		.loc 1 303 7 is_stmt 1 view .LVU620
 2353 0490 FFF7FEFF 		bl	LoRa_init
 2354              	.LVL158:
 304:Core/Src/main.c **** 
 2355              		.loc 1 304 7 view .LVU621
 2356 0494 25E7     		b	.L95
 2357              	.L152:
 308:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_7;            // default = SF_7
 2358              		.loc 1 308 7 view .LVU622
 308:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_7;            // default = SF_7
 2359              		.loc 1 308 36 is_stmt 0 view .LVU623
 2360 0496 5D48     		ldr	r0, .L166
 2361 0498 40F2B113 		movw	r3, #433
 2362 049c 0362     		str	r3, [r0, #32]
 309:Core/Src/main.c ****       myLoRa.bandWidth             = BW_31_25KHz;       // default = BW_125KHz
 2363              		.loc 1 309 7 is_stmt 1 view .LVU624
 309:Core/Src/main.c ****       myLoRa.bandWidth             = BW_31_25KHz;       // default = BW_125KHz
 2364              		.loc 1 309 37 is_stmt 0 view .LVU625
 2365 049e 0723     		movs	r3, #7
 2366 04a0 80F82430 		strb	r3, [r0, #36]
 310:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2367              		.loc 1 310 7 is_stmt 1 view .LVU626
 310:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2368              		.loc 1 310 36 is_stmt 0 view .LVU627
 2369 04a4 0423     		movs	r3, #4
 2370 04a6 80F82530 		strb	r3, [r0, #37]
 311:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2371              		.loc 1 311 7 is_stmt 1 view .LVU628
 311:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2372              		.loc 1 311 36 is_stmt 0 view .LVU629
 2373 04aa 0123     		movs	r3, #1
 2374 04ac 80F82630 		strb	r3, [r0, #38]
 312:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2375              		.loc 1 312 7 is_stmt 1 view .LVU630
 312:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2376              		.loc 1 312 36 is_stmt 0 view .LVU631
 2377 04b0 FF23     		movs	r3, #255
 2378 04b2 80F82A30 		strb	r3, [r0, #42]
 313:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2379              		.loc 1 313 7 is_stmt 1 view .LVU632
 313:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2380              		.loc 1 313 36 is_stmt 0 view .LVU633
 2381 04b6 6423     		movs	r3, #100
 2382 04b8 80F82B30 		strb	r3, [r0, #43]
 314:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2383              		.loc 1 314 7 is_stmt 1 view .LVU634
 314:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2384              		.loc 1 314 36 is_stmt 0 view .LVU635
 2385 04bc 0823     		movs	r3, #8
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 85


 2386 04be 0385     		strh	r3, [r0, #40]	@ movhi
 315:Core/Src/main.c ****       break;
 2387              		.loc 1 315 7 is_stmt 1 view .LVU636
 2388 04c0 FFF7FEFF 		bl	LoRa_init
 2389              	.LVL159:
 316:Core/Src/main.c **** 
 2390              		.loc 1 316 7 view .LVU637
 2391 04c4 0DE7     		b	.L95
 2392              	.L151:
 320:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_7;            // default = SF_7
 2393              		.loc 1 320 7 view .LVU638
 320:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_7;            // default = SF_7
 2394              		.loc 1 320 36 is_stmt 0 view .LVU639
 2395 04c6 5148     		ldr	r0, .L166
 2396 04c8 40F2B113 		movw	r3, #433
 2397 04cc 0362     		str	r3, [r0, #32]
 321:Core/Src/main.c ****       myLoRa.bandWidth             = BW_41_7KHz;       // default = BW_125KHz
 2398              		.loc 1 321 7 is_stmt 1 view .LVU640
 321:Core/Src/main.c ****       myLoRa.bandWidth             = BW_41_7KHz;       // default = BW_125KHz
 2399              		.loc 1 321 37 is_stmt 0 view .LVU641
 2400 04ce 0723     		movs	r3, #7
 2401 04d0 80F82430 		strb	r3, [r0, #36]
 322:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2402              		.loc 1 322 7 is_stmt 1 view .LVU642
 322:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2403              		.loc 1 322 36 is_stmt 0 view .LVU643
 2404 04d4 0523     		movs	r3, #5
 2405 04d6 80F82530 		strb	r3, [r0, #37]
 323:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2406              		.loc 1 323 7 is_stmt 1 view .LVU644
 323:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2407              		.loc 1 323 36 is_stmt 0 view .LVU645
 2408 04da 0123     		movs	r3, #1
 2409 04dc 80F82630 		strb	r3, [r0, #38]
 324:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2410              		.loc 1 324 7 is_stmt 1 view .LVU646
 324:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2411              		.loc 1 324 36 is_stmt 0 view .LVU647
 2412 04e0 FF23     		movs	r3, #255
 2413 04e2 80F82A30 		strb	r3, [r0, #42]
 325:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2414              		.loc 1 325 7 is_stmt 1 view .LVU648
 325:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2415              		.loc 1 325 36 is_stmt 0 view .LVU649
 2416 04e6 6423     		movs	r3, #100
 2417 04e8 80F82B30 		strb	r3, [r0, #43]
 326:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2418              		.loc 1 326 7 is_stmt 1 view .LVU650
 326:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2419              		.loc 1 326 36 is_stmt 0 view .LVU651
 2420 04ec 0823     		movs	r3, #8
 2421 04ee 0385     		strh	r3, [r0, #40]	@ movhi
 327:Core/Src/main.c ****       break;
 2422              		.loc 1 327 7 is_stmt 1 view .LVU652
 2423 04f0 FFF7FEFF 		bl	LoRa_init
 2424              	.LVL160:
 328:Core/Src/main.c **** 
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 86


 2425              		.loc 1 328 7 view .LVU653
 2426 04f4 F5E6     		b	.L95
 2427              	.L150:
 332:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_7;            // default = SF_7
 2428              		.loc 1 332 7 view .LVU654
 332:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_7;            // default = SF_7
 2429              		.loc 1 332 36 is_stmt 0 view .LVU655
 2430 04f6 4548     		ldr	r0, .L166
 2431 04f8 40F2B113 		movw	r3, #433
 2432 04fc 0362     		str	r3, [r0, #32]
 333:Core/Src/main.c ****       myLoRa.bandWidth             = BW_62_5KHz;       // default = BW_125KHz
 2433              		.loc 1 333 7 is_stmt 1 view .LVU656
 333:Core/Src/main.c ****       myLoRa.bandWidth             = BW_62_5KHz;       // default = BW_125KHz
 2434              		.loc 1 333 37 is_stmt 0 view .LVU657
 2435 04fe 0723     		movs	r3, #7
 2436 0500 80F82430 		strb	r3, [r0, #36]
 334:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2437              		.loc 1 334 7 is_stmt 1 view .LVU658
 334:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2438              		.loc 1 334 36 is_stmt 0 view .LVU659
 2439 0504 0623     		movs	r3, #6
 2440 0506 80F82530 		strb	r3, [r0, #37]
 335:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2441              		.loc 1 335 7 is_stmt 1 view .LVU660
 335:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2442              		.loc 1 335 36 is_stmt 0 view .LVU661
 2443 050a 0123     		movs	r3, #1
 2444 050c 80F82630 		strb	r3, [r0, #38]
 336:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2445              		.loc 1 336 7 is_stmt 1 view .LVU662
 336:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2446              		.loc 1 336 36 is_stmt 0 view .LVU663
 2447 0510 FF23     		movs	r3, #255
 2448 0512 80F82A30 		strb	r3, [r0, #42]
 337:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2449              		.loc 1 337 7 is_stmt 1 view .LVU664
 337:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2450              		.loc 1 337 36 is_stmt 0 view .LVU665
 2451 0516 6423     		movs	r3, #100
 2452 0518 80F82B30 		strb	r3, [r0, #43]
 338:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2453              		.loc 1 338 7 is_stmt 1 view .LVU666
 338:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2454              		.loc 1 338 36 is_stmt 0 view .LVU667
 2455 051c 0823     		movs	r3, #8
 2456 051e 0385     		strh	r3, [r0, #40]	@ movhi
 339:Core/Src/main.c ****       break;
 2457              		.loc 1 339 7 is_stmt 1 view .LVU668
 2458 0520 FFF7FEFF 		bl	LoRa_init
 2459              	.LVL161:
 340:Core/Src/main.c **** 
 2460              		.loc 1 340 7 view .LVU669
 2461 0524 DDE6     		b	.L95
 2462              	.L149:
 344:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_7;            // default = SF_7
 2463              		.loc 1 344 7 view .LVU670
 344:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_7;            // default = SF_7
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 87


 2464              		.loc 1 344 36 is_stmt 0 view .LVU671
 2465 0526 3948     		ldr	r0, .L166
 2466 0528 40F2B113 		movw	r3, #433
 2467 052c 0362     		str	r3, [r0, #32]
 345:Core/Src/main.c ****       myLoRa.bandWidth             = BW_125KHz;       // default = BW_125KHz
 2468              		.loc 1 345 7 is_stmt 1 view .LVU672
 345:Core/Src/main.c ****       myLoRa.bandWidth             = BW_125KHz;       // default = BW_125KHz
 2469              		.loc 1 345 37 is_stmt 0 view .LVU673
 2470 052e 0723     		movs	r3, #7
 2471 0530 80F82430 		strb	r3, [r0, #36]
 346:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2472              		.loc 1 346 7 is_stmt 1 view .LVU674
 346:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2473              		.loc 1 346 36 is_stmt 0 view .LVU675
 2474 0534 80F82530 		strb	r3, [r0, #37]
 347:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2475              		.loc 1 347 7 is_stmt 1 view .LVU676
 347:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2476              		.loc 1 347 36 is_stmt 0 view .LVU677
 2477 0538 0123     		movs	r3, #1
 2478 053a 80F82630 		strb	r3, [r0, #38]
 348:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2479              		.loc 1 348 7 is_stmt 1 view .LVU678
 348:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2480              		.loc 1 348 36 is_stmt 0 view .LVU679
 2481 053e FF23     		movs	r3, #255
 2482 0540 80F82A30 		strb	r3, [r0, #42]
 349:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2483              		.loc 1 349 7 is_stmt 1 view .LVU680
 349:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2484              		.loc 1 349 36 is_stmt 0 view .LVU681
 2485 0544 6423     		movs	r3, #100
 2486 0546 80F82B30 		strb	r3, [r0, #43]
 350:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2487              		.loc 1 350 7 is_stmt 1 view .LVU682
 350:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2488              		.loc 1 350 36 is_stmt 0 view .LVU683
 2489 054a 0823     		movs	r3, #8
 2490 054c 0385     		strh	r3, [r0, #40]	@ movhi
 351:Core/Src/main.c ****       break;
 2491              		.loc 1 351 7 is_stmt 1 view .LVU684
 2492 054e FFF7FEFF 		bl	LoRa_init
 2493              	.LVL162:
 352:Core/Src/main.c **** 
 2494              		.loc 1 352 7 view .LVU685
 2495 0552 C6E6     		b	.L95
 2496              	.L148:
 356:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_7;            // default = SF_7
 2497              		.loc 1 356 7 view .LVU686
 356:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_7;            // default = SF_7
 2498              		.loc 1 356 36 is_stmt 0 view .LVU687
 2499 0554 2D48     		ldr	r0, .L166
 2500 0556 40F2B113 		movw	r3, #433
 2501 055a 0362     		str	r3, [r0, #32]
 357:Core/Src/main.c ****       myLoRa.bandWidth             = BW_250KHz;       // default = BW_125KHz
 2502              		.loc 1 357 7 is_stmt 1 view .LVU688
 357:Core/Src/main.c ****       myLoRa.bandWidth             = BW_250KHz;       // default = BW_125KHz
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 88


 2503              		.loc 1 357 37 is_stmt 0 view .LVU689
 2504 055c 0723     		movs	r3, #7
 2505 055e 80F82430 		strb	r3, [r0, #36]
 358:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2506              		.loc 1 358 7 is_stmt 1 view .LVU690
 358:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2507              		.loc 1 358 36 is_stmt 0 view .LVU691
 2508 0562 0823     		movs	r3, #8
 2509 0564 80F82530 		strb	r3, [r0, #37]
 359:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2510              		.loc 1 359 7 is_stmt 1 view .LVU692
 359:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2511              		.loc 1 359 36 is_stmt 0 view .LVU693
 2512 0568 0122     		movs	r2, #1
 2513 056a 80F82620 		strb	r2, [r0, #38]
 360:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2514              		.loc 1 360 7 is_stmt 1 view .LVU694
 360:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2515              		.loc 1 360 36 is_stmt 0 view .LVU695
 2516 056e FF22     		movs	r2, #255
 2517 0570 80F82A20 		strb	r2, [r0, #42]
 361:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2518              		.loc 1 361 7 is_stmt 1 view .LVU696
 361:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2519              		.loc 1 361 36 is_stmt 0 view .LVU697
 2520 0574 6422     		movs	r2, #100
 2521 0576 80F82B20 		strb	r2, [r0, #43]
 362:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2522              		.loc 1 362 7 is_stmt 1 view .LVU698
 362:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2523              		.loc 1 362 36 is_stmt 0 view .LVU699
 2524 057a 0385     		strh	r3, [r0, #40]	@ movhi
 363:Core/Src/main.c ****       break;
 2525              		.loc 1 363 7 is_stmt 1 view .LVU700
 2526 057c FFF7FEFF 		bl	LoRa_init
 2527              	.LVL163:
 364:Core/Src/main.c **** 
 2528              		.loc 1 364 7 view .LVU701
 2529 0580 AFE6     		b	.L95
 2530              	.L147:
 368:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_7;            // default = SF_7
 2531              		.loc 1 368 7 view .LVU702
 368:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_7;            // default = SF_7
 2532              		.loc 1 368 36 is_stmt 0 view .LVU703
 2533 0582 2248     		ldr	r0, .L166
 2534 0584 40F2B113 		movw	r3, #433
 2535 0588 0362     		str	r3, [r0, #32]
 369:Core/Src/main.c ****       myLoRa.bandWidth             = BW_500KHz;       // default = BW_125KHz
 2536              		.loc 1 369 7 is_stmt 1 view .LVU704
 369:Core/Src/main.c ****       myLoRa.bandWidth             = BW_500KHz;       // default = BW_125KHz
 2537              		.loc 1 369 37 is_stmt 0 view .LVU705
 2538 058a 0723     		movs	r3, #7
 2539 058c 80F82430 		strb	r3, [r0, #36]
 370:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2540              		.loc 1 370 7 is_stmt 1 view .LVU706
 370:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2541              		.loc 1 370 36 is_stmt 0 view .LVU707
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 89


 2542 0590 0923     		movs	r3, #9
 2543 0592 80F82530 		strb	r3, [r0, #37]
 371:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2544              		.loc 1 371 7 is_stmt 1 view .LVU708
 371:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2545              		.loc 1 371 36 is_stmt 0 view .LVU709
 2546 0596 0123     		movs	r3, #1
 2547 0598 80F82630 		strb	r3, [r0, #38]
 372:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2548              		.loc 1 372 7 is_stmt 1 view .LVU710
 372:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2549              		.loc 1 372 36 is_stmt 0 view .LVU711
 2550 059c FF23     		movs	r3, #255
 2551 059e 80F82A30 		strb	r3, [r0, #42]
 373:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2552              		.loc 1 373 7 is_stmt 1 view .LVU712
 373:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2553              		.loc 1 373 36 is_stmt 0 view .LVU713
 2554 05a2 6423     		movs	r3, #100
 2555 05a4 80F82B30 		strb	r3, [r0, #43]
 374:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2556              		.loc 1 374 7 is_stmt 1 view .LVU714
 374:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2557              		.loc 1 374 36 is_stmt 0 view .LVU715
 2558 05a8 0823     		movs	r3, #8
 2559 05aa 0385     		strh	r3, [r0, #40]	@ movhi
 375:Core/Src/main.c ****       break;
 2560              		.loc 1 375 7 is_stmt 1 view .LVU716
 2561 05ac FFF7FEFF 		bl	LoRa_init
 2562              	.LVL164:
 376:Core/Src/main.c ****     
 2563              		.loc 1 376 7 view .LVU717
 2564 05b0 97E6     		b	.L95
 2565              	.L146:
 380:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_8;            // default = SF_7
 2566              		.loc 1 380 7 view .LVU718
 380:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_8;            // default = SF_7
 2567              		.loc 1 380 36 is_stmt 0 view .LVU719
 2568 05b2 1648     		ldr	r0, .L166
 2569 05b4 40F2B113 		movw	r3, #433
 2570 05b8 0362     		str	r3, [r0, #32]
 381:Core/Src/main.c ****       myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 2571              		.loc 1 381 7 is_stmt 1 view .LVU720
 381:Core/Src/main.c ****       myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 2572              		.loc 1 381 37 is_stmt 0 view .LVU721
 2573 05ba 0823     		movs	r3, #8
 2574 05bc 80F82430 		strb	r3, [r0, #36]
 382:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2575              		.loc 1 382 7 is_stmt 1 view .LVU722
 382:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2576              		.loc 1 382 36 is_stmt 0 view .LVU723
 2577 05c0 0022     		movs	r2, #0
 2578 05c2 80F82520 		strb	r2, [r0, #37]
 383:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2579              		.loc 1 383 7 is_stmt 1 view .LVU724
 383:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2580              		.loc 1 383 36 is_stmt 0 view .LVU725
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 90


 2581 05c6 0122     		movs	r2, #1
 2582 05c8 80F82620 		strb	r2, [r0, #38]
 384:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2583              		.loc 1 384 7 is_stmt 1 view .LVU726
 384:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2584              		.loc 1 384 36 is_stmt 0 view .LVU727
 2585 05cc FF22     		movs	r2, #255
 2586 05ce 80F82A20 		strb	r2, [r0, #42]
 385:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2587              		.loc 1 385 7 is_stmt 1 view .LVU728
 385:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2588              		.loc 1 385 36 is_stmt 0 view .LVU729
 2589 05d2 6422     		movs	r2, #100
 2590 05d4 80F82B20 		strb	r2, [r0, #43]
 386:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2591              		.loc 1 386 7 is_stmt 1 view .LVU730
 386:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2592              		.loc 1 386 36 is_stmt 0 view .LVU731
 2593 05d8 0385     		strh	r3, [r0, #40]	@ movhi
 387:Core/Src/main.c ****       break;
 2594              		.loc 1 387 7 is_stmt 1 view .LVU732
 2595 05da FFF7FEFF 		bl	LoRa_init
 2596              	.LVL165:
 388:Core/Src/main.c **** 
 2597              		.loc 1 388 7 view .LVU733
 2598 05de 80E6     		b	.L95
 2599              	.L145:
 392:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_8;            // default = SF_7
 2600              		.loc 1 392 7 view .LVU734
 392:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_8;            // default = SF_7
 2601              		.loc 1 392 36 is_stmt 0 view .LVU735
 2602 05e0 0A48     		ldr	r0, .L166
 2603 05e2 40F2B113 		movw	r3, #433
 2604 05e6 0362     		str	r3, [r0, #32]
 393:Core/Src/main.c ****       myLoRa.bandWidth             = BW_10_4KHz;       // default = BW_125KHz
 2605              		.loc 1 393 7 is_stmt 1 view .LVU736
 393:Core/Src/main.c ****       myLoRa.bandWidth             = BW_10_4KHz;       // default = BW_125KHz
 2606              		.loc 1 393 37 is_stmt 0 view .LVU737
 2607 05e8 0823     		movs	r3, #8
 2608 05ea 80F82430 		strb	r3, [r0, #36]
 394:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2609              		.loc 1 394 7 is_stmt 1 view .LVU738
 394:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2610              		.loc 1 394 36 is_stmt 0 view .LVU739
 2611 05ee 0122     		movs	r2, #1
 2612 05f0 80F82520 		strb	r2, [r0, #37]
 395:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2613              		.loc 1 395 7 is_stmt 1 view .LVU740
 395:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2614              		.loc 1 395 36 is_stmt 0 view .LVU741
 2615 05f4 80F82620 		strb	r2, [r0, #38]
 396:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2616              		.loc 1 396 7 is_stmt 1 view .LVU742
 396:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2617              		.loc 1 396 36 is_stmt 0 view .LVU743
 2618 05f8 FF22     		movs	r2, #255
 2619 05fa 80F82A20 		strb	r2, [r0, #42]
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 91


 397:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2620              		.loc 1 397 7 is_stmt 1 view .LVU744
 397:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2621              		.loc 1 397 36 is_stmt 0 view .LVU745
 2622 05fe 6422     		movs	r2, #100
 2623 0600 80F82B20 		strb	r2, [r0, #43]
 398:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2624              		.loc 1 398 7 is_stmt 1 view .LVU746
 398:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2625              		.loc 1 398 36 is_stmt 0 view .LVU747
 2626 0604 0385     		strh	r3, [r0, #40]	@ movhi
 399:Core/Src/main.c ****       break;
 2627              		.loc 1 399 7 is_stmt 1 view .LVU748
 2628 0606 FFF7FEFF 		bl	LoRa_init
 2629              	.LVL166:
 400:Core/Src/main.c **** 
 2630              		.loc 1 400 7 view .LVU749
 2631 060a 6AE6     		b	.L95
 2632              	.L167:
 2633              		.align	2
 2634              	.L166:
 2635 060c 00000000 		.word	myLoRa
 2636 0610 00000000 		.word	bModeChanged
 2637 0614 00000000 		.word	gps_raw
 2638 0618 00000000 		.word	huart1
 2639 061c 00000000 		.word	beginRead
 2640 0620 00000000 		.word	iMode
 2641              	.L144:
 404:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_8;            // default = SF_7
 2642              		.loc 1 404 7 view .LVU750
 404:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_8;            // default = SF_7
 2643              		.loc 1 404 36 is_stmt 0 view .LVU751
 2644 0624 D148     		ldr	r0, .L168
 2645 0626 40F2B113 		movw	r3, #433
 2646 062a 0362     		str	r3, [r0, #32]
 405:Core/Src/main.c ****       myLoRa.bandWidth             = BW_15_6KHz;       // default = BW_125KHz
 2647              		.loc 1 405 7 is_stmt 1 view .LVU752
 405:Core/Src/main.c ****       myLoRa.bandWidth             = BW_15_6KHz;       // default = BW_125KHz
 2648              		.loc 1 405 37 is_stmt 0 view .LVU753
 2649 062c 0823     		movs	r3, #8
 2650 062e 80F82430 		strb	r3, [r0, #36]
 406:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2651              		.loc 1 406 7 is_stmt 1 view .LVU754
 406:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2652              		.loc 1 406 36 is_stmt 0 view .LVU755
 2653 0632 0222     		movs	r2, #2
 2654 0634 80F82520 		strb	r2, [r0, #37]
 407:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2655              		.loc 1 407 7 is_stmt 1 view .LVU756
 407:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2656              		.loc 1 407 36 is_stmt 0 view .LVU757
 2657 0638 0122     		movs	r2, #1
 2658 063a 80F82620 		strb	r2, [r0, #38]
 408:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2659              		.loc 1 408 7 is_stmt 1 view .LVU758
 408:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2660              		.loc 1 408 36 is_stmt 0 view .LVU759
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 92


 2661 063e FF22     		movs	r2, #255
 2662 0640 80F82A20 		strb	r2, [r0, #42]
 409:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2663              		.loc 1 409 7 is_stmt 1 view .LVU760
 409:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2664              		.loc 1 409 36 is_stmt 0 view .LVU761
 2665 0644 6422     		movs	r2, #100
 2666 0646 80F82B20 		strb	r2, [r0, #43]
 410:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2667              		.loc 1 410 7 is_stmt 1 view .LVU762
 410:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2668              		.loc 1 410 36 is_stmt 0 view .LVU763
 2669 064a 0385     		strh	r3, [r0, #40]	@ movhi
 411:Core/Src/main.c ****       break;
 2670              		.loc 1 411 7 is_stmt 1 view .LVU764
 2671 064c FFF7FEFF 		bl	LoRa_init
 2672              	.LVL167:
 412:Core/Src/main.c **** 
 2673              		.loc 1 412 7 view .LVU765
 2674 0650 47E6     		b	.L95
 2675              	.L143:
 416:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_8;            // default = SF_7
 2676              		.loc 1 416 7 view .LVU766
 416:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_8;            // default = SF_7
 2677              		.loc 1 416 36 is_stmt 0 view .LVU767
 2678 0652 C648     		ldr	r0, .L168
 2679 0654 40F2B113 		movw	r3, #433
 2680 0658 0362     		str	r3, [r0, #32]
 417:Core/Src/main.c ****       myLoRa.bandWidth             = BW_20_8KHz;       // default = BW_125KHz
 2681              		.loc 1 417 7 is_stmt 1 view .LVU768
 417:Core/Src/main.c ****       myLoRa.bandWidth             = BW_20_8KHz;       // default = BW_125KHz
 2682              		.loc 1 417 37 is_stmt 0 view .LVU769
 2683 065a 0823     		movs	r3, #8
 2684 065c 80F82430 		strb	r3, [r0, #36]
 418:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2685              		.loc 1 418 7 is_stmt 1 view .LVU770
 418:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2686              		.loc 1 418 36 is_stmt 0 view .LVU771
 2687 0660 0322     		movs	r2, #3
 2688 0662 80F82520 		strb	r2, [r0, #37]
 419:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2689              		.loc 1 419 7 is_stmt 1 view .LVU772
 419:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2690              		.loc 1 419 36 is_stmt 0 view .LVU773
 2691 0666 0122     		movs	r2, #1
 2692 0668 80F82620 		strb	r2, [r0, #38]
 420:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2693              		.loc 1 420 7 is_stmt 1 view .LVU774
 420:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2694              		.loc 1 420 36 is_stmt 0 view .LVU775
 2695 066c FF22     		movs	r2, #255
 2696 066e 80F82A20 		strb	r2, [r0, #42]
 421:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2697              		.loc 1 421 7 is_stmt 1 view .LVU776
 421:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2698              		.loc 1 421 36 is_stmt 0 view .LVU777
 2699 0672 6422     		movs	r2, #100
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 93


 2700 0674 80F82B20 		strb	r2, [r0, #43]
 422:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2701              		.loc 1 422 7 is_stmt 1 view .LVU778
 422:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2702              		.loc 1 422 36 is_stmt 0 view .LVU779
 2703 0678 0385     		strh	r3, [r0, #40]	@ movhi
 423:Core/Src/main.c ****       break;
 2704              		.loc 1 423 7 is_stmt 1 view .LVU780
 2705 067a FFF7FEFF 		bl	LoRa_init
 2706              	.LVL168:
 424:Core/Src/main.c **** 
 2707              		.loc 1 424 7 view .LVU781
 2708 067e 30E6     		b	.L95
 2709              	.L142:
 428:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_8;            // default = SF_7
 2710              		.loc 1 428 7 view .LVU782
 428:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_8;            // default = SF_7
 2711              		.loc 1 428 36 is_stmt 0 view .LVU783
 2712 0680 BA48     		ldr	r0, .L168
 2713 0682 40F2B113 		movw	r3, #433
 2714 0686 0362     		str	r3, [r0, #32]
 429:Core/Src/main.c ****       myLoRa.bandWidth             = BW_31_25KHz;       // default = BW_125KHz
 2715              		.loc 1 429 7 is_stmt 1 view .LVU784
 429:Core/Src/main.c ****       myLoRa.bandWidth             = BW_31_25KHz;       // default = BW_125KHz
 2716              		.loc 1 429 37 is_stmt 0 view .LVU785
 2717 0688 0823     		movs	r3, #8
 2718 068a 80F82430 		strb	r3, [r0, #36]
 430:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2719              		.loc 1 430 7 is_stmt 1 view .LVU786
 430:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2720              		.loc 1 430 36 is_stmt 0 view .LVU787
 2721 068e 0422     		movs	r2, #4
 2722 0690 80F82520 		strb	r2, [r0, #37]
 431:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2723              		.loc 1 431 7 is_stmt 1 view .LVU788
 431:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2724              		.loc 1 431 36 is_stmt 0 view .LVU789
 2725 0694 0122     		movs	r2, #1
 2726 0696 80F82620 		strb	r2, [r0, #38]
 432:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2727              		.loc 1 432 7 is_stmt 1 view .LVU790
 432:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2728              		.loc 1 432 36 is_stmt 0 view .LVU791
 2729 069a FF22     		movs	r2, #255
 2730 069c 80F82A20 		strb	r2, [r0, #42]
 433:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2731              		.loc 1 433 7 is_stmt 1 view .LVU792
 433:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2732              		.loc 1 433 36 is_stmt 0 view .LVU793
 2733 06a0 6422     		movs	r2, #100
 2734 06a2 80F82B20 		strb	r2, [r0, #43]
 434:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2735              		.loc 1 434 7 is_stmt 1 view .LVU794
 434:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2736              		.loc 1 434 36 is_stmt 0 view .LVU795
 2737 06a6 0385     		strh	r3, [r0, #40]	@ movhi
 435:Core/Src/main.c ****       break;
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 94


 2738              		.loc 1 435 7 is_stmt 1 view .LVU796
 2739 06a8 FFF7FEFF 		bl	LoRa_init
 2740              	.LVL169:
 436:Core/Src/main.c **** 
 2741              		.loc 1 436 7 view .LVU797
 2742 06ac 19E6     		b	.L95
 2743              	.L141:
 440:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_8;            // default = SF_7
 2744              		.loc 1 440 7 view .LVU798
 440:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_8;            // default = SF_7
 2745              		.loc 1 440 36 is_stmt 0 view .LVU799
 2746 06ae AF48     		ldr	r0, .L168
 2747 06b0 40F2B113 		movw	r3, #433
 2748 06b4 0362     		str	r3, [r0, #32]
 441:Core/Src/main.c ****       myLoRa.bandWidth             = BW_41_7KHz;       // default = BW_125KHz
 2749              		.loc 1 441 7 is_stmt 1 view .LVU800
 441:Core/Src/main.c ****       myLoRa.bandWidth             = BW_41_7KHz;       // default = BW_125KHz
 2750              		.loc 1 441 37 is_stmt 0 view .LVU801
 2751 06b6 0823     		movs	r3, #8
 2752 06b8 80F82430 		strb	r3, [r0, #36]
 442:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2753              		.loc 1 442 7 is_stmt 1 view .LVU802
 442:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2754              		.loc 1 442 36 is_stmt 0 view .LVU803
 2755 06bc 0522     		movs	r2, #5
 2756 06be 80F82520 		strb	r2, [r0, #37]
 443:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2757              		.loc 1 443 7 is_stmt 1 view .LVU804
 443:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2758              		.loc 1 443 36 is_stmt 0 view .LVU805
 2759 06c2 0122     		movs	r2, #1
 2760 06c4 80F82620 		strb	r2, [r0, #38]
 444:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2761              		.loc 1 444 7 is_stmt 1 view .LVU806
 444:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2762              		.loc 1 444 36 is_stmt 0 view .LVU807
 2763 06c8 FF22     		movs	r2, #255
 2764 06ca 80F82A20 		strb	r2, [r0, #42]
 445:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2765              		.loc 1 445 7 is_stmt 1 view .LVU808
 445:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2766              		.loc 1 445 36 is_stmt 0 view .LVU809
 2767 06ce 6422     		movs	r2, #100
 2768 06d0 80F82B20 		strb	r2, [r0, #43]
 446:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2769              		.loc 1 446 7 is_stmt 1 view .LVU810
 446:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2770              		.loc 1 446 36 is_stmt 0 view .LVU811
 2771 06d4 0385     		strh	r3, [r0, #40]	@ movhi
 447:Core/Src/main.c ****       break;
 2772              		.loc 1 447 7 is_stmt 1 view .LVU812
 2773 06d6 FFF7FEFF 		bl	LoRa_init
 2774              	.LVL170:
 448:Core/Src/main.c **** 
 2775              		.loc 1 448 7 view .LVU813
 2776 06da 02E6     		b	.L95
 2777              	.L140:
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 95


 452:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_8;            // default = SF_7
 2778              		.loc 1 452 7 view .LVU814
 452:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_8;            // default = SF_7
 2779              		.loc 1 452 36 is_stmt 0 view .LVU815
 2780 06dc A348     		ldr	r0, .L168
 2781 06de 40F2B113 		movw	r3, #433
 2782 06e2 0362     		str	r3, [r0, #32]
 453:Core/Src/main.c ****       myLoRa.bandWidth             = BW_62_5KHz;       // default = BW_125KHz
 2783              		.loc 1 453 7 is_stmt 1 view .LVU816
 453:Core/Src/main.c ****       myLoRa.bandWidth             = BW_62_5KHz;       // default = BW_125KHz
 2784              		.loc 1 453 37 is_stmt 0 view .LVU817
 2785 06e4 0823     		movs	r3, #8
 2786 06e6 80F82430 		strb	r3, [r0, #36]
 454:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2787              		.loc 1 454 7 is_stmt 1 view .LVU818
 454:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2788              		.loc 1 454 36 is_stmt 0 view .LVU819
 2789 06ea 0622     		movs	r2, #6
 2790 06ec 80F82520 		strb	r2, [r0, #37]
 455:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2791              		.loc 1 455 7 is_stmt 1 view .LVU820
 455:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2792              		.loc 1 455 36 is_stmt 0 view .LVU821
 2793 06f0 0122     		movs	r2, #1
 2794 06f2 80F82620 		strb	r2, [r0, #38]
 456:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2795              		.loc 1 456 7 is_stmt 1 view .LVU822
 456:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2796              		.loc 1 456 36 is_stmt 0 view .LVU823
 2797 06f6 FF22     		movs	r2, #255
 2798 06f8 80F82A20 		strb	r2, [r0, #42]
 457:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2799              		.loc 1 457 7 is_stmt 1 view .LVU824
 457:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2800              		.loc 1 457 36 is_stmt 0 view .LVU825
 2801 06fc 6422     		movs	r2, #100
 2802 06fe 80F82B20 		strb	r2, [r0, #43]
 458:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2803              		.loc 1 458 7 is_stmt 1 view .LVU826
 458:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2804              		.loc 1 458 36 is_stmt 0 view .LVU827
 2805 0702 0385     		strh	r3, [r0, #40]	@ movhi
 459:Core/Src/main.c ****       break;
 2806              		.loc 1 459 7 is_stmt 1 view .LVU828
 2807 0704 FFF7FEFF 		bl	LoRa_init
 2808              	.LVL171:
 460:Core/Src/main.c **** 
 2809              		.loc 1 460 7 view .LVU829
 2810 0708 EBE5     		b	.L95
 2811              	.L139:
 464:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_8;            // default = SF_7
 2812              		.loc 1 464 7 view .LVU830
 464:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_8;            // default = SF_7
 2813              		.loc 1 464 36 is_stmt 0 view .LVU831
 2814 070a 9848     		ldr	r0, .L168
 2815 070c 40F2B113 		movw	r3, #433
 2816 0710 0362     		str	r3, [r0, #32]
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 96


 465:Core/Src/main.c ****       myLoRa.bandWidth             = BW_125KHz;       // default = BW_125KHz
 2817              		.loc 1 465 7 is_stmt 1 view .LVU832
 465:Core/Src/main.c ****       myLoRa.bandWidth             = BW_125KHz;       // default = BW_125KHz
 2818              		.loc 1 465 37 is_stmt 0 view .LVU833
 2819 0712 0823     		movs	r3, #8
 2820 0714 80F82430 		strb	r3, [r0, #36]
 466:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2821              		.loc 1 466 7 is_stmt 1 view .LVU834
 466:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2822              		.loc 1 466 36 is_stmt 0 view .LVU835
 2823 0718 0722     		movs	r2, #7
 2824 071a 80F82520 		strb	r2, [r0, #37]
 467:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2825              		.loc 1 467 7 is_stmt 1 view .LVU836
 467:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2826              		.loc 1 467 36 is_stmt 0 view .LVU837
 2827 071e 0122     		movs	r2, #1
 2828 0720 80F82620 		strb	r2, [r0, #38]
 468:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2829              		.loc 1 468 7 is_stmt 1 view .LVU838
 468:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2830              		.loc 1 468 36 is_stmt 0 view .LVU839
 2831 0724 FF22     		movs	r2, #255
 2832 0726 80F82A20 		strb	r2, [r0, #42]
 469:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2833              		.loc 1 469 7 is_stmt 1 view .LVU840
 469:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2834              		.loc 1 469 36 is_stmt 0 view .LVU841
 2835 072a 6422     		movs	r2, #100
 2836 072c 80F82B20 		strb	r2, [r0, #43]
 470:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2837              		.loc 1 470 7 is_stmt 1 view .LVU842
 470:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2838              		.loc 1 470 36 is_stmt 0 view .LVU843
 2839 0730 0385     		strh	r3, [r0, #40]	@ movhi
 471:Core/Src/main.c ****       break;
 2840              		.loc 1 471 7 is_stmt 1 view .LVU844
 2841 0732 FFF7FEFF 		bl	LoRa_init
 2842              	.LVL172:
 472:Core/Src/main.c **** 
 2843              		.loc 1 472 7 view .LVU845
 2844 0736 D4E5     		b	.L95
 2845              	.L138:
 476:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_8;            // default = SF_7
 2846              		.loc 1 476 7 view .LVU846
 476:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_8;            // default = SF_7
 2847              		.loc 1 476 36 is_stmt 0 view .LVU847
 2848 0738 8C48     		ldr	r0, .L168
 2849 073a 40F2B113 		movw	r3, #433
 2850 073e 0362     		str	r3, [r0, #32]
 477:Core/Src/main.c ****       myLoRa.bandWidth             = BW_250KHz;       // default = BW_125KHz
 2851              		.loc 1 477 7 is_stmt 1 view .LVU848
 477:Core/Src/main.c ****       myLoRa.bandWidth             = BW_250KHz;       // default = BW_125KHz
 2852              		.loc 1 477 37 is_stmt 0 view .LVU849
 2853 0740 0823     		movs	r3, #8
 2854 0742 80F82430 		strb	r3, [r0, #36]
 478:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 97


 2855              		.loc 1 478 7 is_stmt 1 view .LVU850
 478:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2856              		.loc 1 478 36 is_stmt 0 view .LVU851
 2857 0746 80F82530 		strb	r3, [r0, #37]
 479:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2858              		.loc 1 479 7 is_stmt 1 view .LVU852
 479:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2859              		.loc 1 479 36 is_stmt 0 view .LVU853
 2860 074a 0122     		movs	r2, #1
 2861 074c 80F82620 		strb	r2, [r0, #38]
 480:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2862              		.loc 1 480 7 is_stmt 1 view .LVU854
 480:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2863              		.loc 1 480 36 is_stmt 0 view .LVU855
 2864 0750 FF22     		movs	r2, #255
 2865 0752 80F82A20 		strb	r2, [r0, #42]
 481:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2866              		.loc 1 481 7 is_stmt 1 view .LVU856
 481:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2867              		.loc 1 481 36 is_stmt 0 view .LVU857
 2868 0756 6422     		movs	r2, #100
 2869 0758 80F82B20 		strb	r2, [r0, #43]
 482:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2870              		.loc 1 482 7 is_stmt 1 view .LVU858
 482:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2871              		.loc 1 482 36 is_stmt 0 view .LVU859
 2872 075c 0385     		strh	r3, [r0, #40]	@ movhi
 483:Core/Src/main.c ****       break;
 2873              		.loc 1 483 7 is_stmt 1 view .LVU860
 2874 075e FFF7FEFF 		bl	LoRa_init
 2875              	.LVL173:
 484:Core/Src/main.c **** 
 2876              		.loc 1 484 7 view .LVU861
 2877 0762 BEE5     		b	.L95
 2878              	.L137:
 488:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_8;            // default = SF_7
 2879              		.loc 1 488 7 view .LVU862
 488:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_8;            // default = SF_7
 2880              		.loc 1 488 36 is_stmt 0 view .LVU863
 2881 0764 8148     		ldr	r0, .L168
 2882 0766 40F2B113 		movw	r3, #433
 2883 076a 0362     		str	r3, [r0, #32]
 489:Core/Src/main.c ****       myLoRa.bandWidth             = BW_500KHz;       // default = BW_125KHz
 2884              		.loc 1 489 7 is_stmt 1 view .LVU864
 489:Core/Src/main.c ****       myLoRa.bandWidth             = BW_500KHz;       // default = BW_125KHz
 2885              		.loc 1 489 37 is_stmt 0 view .LVU865
 2886 076c 0823     		movs	r3, #8
 2887 076e 80F82430 		strb	r3, [r0, #36]
 490:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2888              		.loc 1 490 7 is_stmt 1 view .LVU866
 490:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2889              		.loc 1 490 36 is_stmt 0 view .LVU867
 2890 0772 0922     		movs	r2, #9
 2891 0774 80F82520 		strb	r2, [r0, #37]
 491:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2892              		.loc 1 491 7 is_stmt 1 view .LVU868
 491:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 98


 2893              		.loc 1 491 36 is_stmt 0 view .LVU869
 2894 0778 0122     		movs	r2, #1
 2895 077a 80F82620 		strb	r2, [r0, #38]
 492:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2896              		.loc 1 492 7 is_stmt 1 view .LVU870
 492:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2897              		.loc 1 492 36 is_stmt 0 view .LVU871
 2898 077e FF22     		movs	r2, #255
 2899 0780 80F82A20 		strb	r2, [r0, #42]
 493:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2900              		.loc 1 493 7 is_stmt 1 view .LVU872
 493:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2901              		.loc 1 493 36 is_stmt 0 view .LVU873
 2902 0784 6422     		movs	r2, #100
 2903 0786 80F82B20 		strb	r2, [r0, #43]
 494:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2904              		.loc 1 494 7 is_stmt 1 view .LVU874
 494:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2905              		.loc 1 494 36 is_stmt 0 view .LVU875
 2906 078a 0385     		strh	r3, [r0, #40]	@ movhi
 495:Core/Src/main.c ****       break;
 2907              		.loc 1 495 7 is_stmt 1 view .LVU876
 2908 078c FFF7FEFF 		bl	LoRa_init
 2909              	.LVL174:
 496:Core/Src/main.c **** 
 2910              		.loc 1 496 7 view .LVU877
 2911 0790 A7E5     		b	.L95
 2912              	.L136:
 500:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_9;            // default = SF_7
 2913              		.loc 1 500 7 view .LVU878
 500:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_9;            // default = SF_7
 2914              		.loc 1 500 36 is_stmt 0 view .LVU879
 2915 0792 7648     		ldr	r0, .L168
 2916 0794 40F2B113 		movw	r3, #433
 2917 0798 0362     		str	r3, [r0, #32]
 501:Core/Src/main.c ****       myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 2918              		.loc 1 501 7 is_stmt 1 view .LVU880
 501:Core/Src/main.c ****       myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 2919              		.loc 1 501 37 is_stmt 0 view .LVU881
 2920 079a 0923     		movs	r3, #9
 2921 079c 80F82430 		strb	r3, [r0, #36]
 502:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2922              		.loc 1 502 7 is_stmt 1 view .LVU882
 502:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2923              		.loc 1 502 36 is_stmt 0 view .LVU883
 2924 07a0 0023     		movs	r3, #0
 2925 07a2 80F82530 		strb	r3, [r0, #37]
 503:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2926              		.loc 1 503 7 is_stmt 1 view .LVU884
 503:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2927              		.loc 1 503 36 is_stmt 0 view .LVU885
 2928 07a6 0123     		movs	r3, #1
 2929 07a8 80F82630 		strb	r3, [r0, #38]
 504:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2930              		.loc 1 504 7 is_stmt 1 view .LVU886
 504:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2931              		.loc 1 504 36 is_stmt 0 view .LVU887
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 99


 2932 07ac FF23     		movs	r3, #255
 2933 07ae 80F82A30 		strb	r3, [r0, #42]
 505:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2934              		.loc 1 505 7 is_stmt 1 view .LVU888
 505:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2935              		.loc 1 505 36 is_stmt 0 view .LVU889
 2936 07b2 6423     		movs	r3, #100
 2937 07b4 80F82B30 		strb	r3, [r0, #43]
 506:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2938              		.loc 1 506 7 is_stmt 1 view .LVU890
 506:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2939              		.loc 1 506 36 is_stmt 0 view .LVU891
 2940 07b8 0823     		movs	r3, #8
 2941 07ba 0385     		strh	r3, [r0, #40]	@ movhi
 507:Core/Src/main.c ****       break;
 2942              		.loc 1 507 7 is_stmt 1 view .LVU892
 2943 07bc FFF7FEFF 		bl	LoRa_init
 2944              	.LVL175:
 508:Core/Src/main.c **** 
 2945              		.loc 1 508 7 view .LVU893
 2946 07c0 8FE5     		b	.L95
 2947              	.L135:
 512:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_9;            // default = SF_7
 2948              		.loc 1 512 7 view .LVU894
 512:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_9;            // default = SF_7
 2949              		.loc 1 512 36 is_stmt 0 view .LVU895
 2950 07c2 6A48     		ldr	r0, .L168
 2951 07c4 40F2B113 		movw	r3, #433
 2952 07c8 0362     		str	r3, [r0, #32]
 513:Core/Src/main.c ****       myLoRa.bandWidth             = BW_10_4KHz;       // default = BW_125KHz
 2953              		.loc 1 513 7 is_stmt 1 view .LVU896
 513:Core/Src/main.c ****       myLoRa.bandWidth             = BW_10_4KHz;       // default = BW_125KHz
 2954              		.loc 1 513 37 is_stmt 0 view .LVU897
 2955 07ca 0923     		movs	r3, #9
 2956 07cc 80F82430 		strb	r3, [r0, #36]
 514:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2957              		.loc 1 514 7 is_stmt 1 view .LVU898
 514:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2958              		.loc 1 514 36 is_stmt 0 view .LVU899
 2959 07d0 0123     		movs	r3, #1
 2960 07d2 80F82530 		strb	r3, [r0, #37]
 515:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2961              		.loc 1 515 7 is_stmt 1 view .LVU900
 515:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2962              		.loc 1 515 36 is_stmt 0 view .LVU901
 2963 07d6 80F82630 		strb	r3, [r0, #38]
 516:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2964              		.loc 1 516 7 is_stmt 1 view .LVU902
 516:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2965              		.loc 1 516 36 is_stmt 0 view .LVU903
 2966 07da FF23     		movs	r3, #255
 2967 07dc 80F82A30 		strb	r3, [r0, #42]
 517:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2968              		.loc 1 517 7 is_stmt 1 view .LVU904
 517:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2969              		.loc 1 517 36 is_stmt 0 view .LVU905
 2970 07e0 6423     		movs	r3, #100
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 100


 2971 07e2 80F82B30 		strb	r3, [r0, #43]
 518:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2972              		.loc 1 518 7 is_stmt 1 view .LVU906
 518:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2973              		.loc 1 518 36 is_stmt 0 view .LVU907
 2974 07e6 0823     		movs	r3, #8
 2975 07e8 0385     		strh	r3, [r0, #40]	@ movhi
 519:Core/Src/main.c ****       break;
 2976              		.loc 1 519 7 is_stmt 1 view .LVU908
 2977 07ea FFF7FEFF 		bl	LoRa_init
 2978              	.LVL176:
 520:Core/Src/main.c **** 
 2979              		.loc 1 520 7 view .LVU909
 2980 07ee 78E5     		b	.L95
 2981              	.L134:
 524:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_9;            // default = SF_7
 2982              		.loc 1 524 7 view .LVU910
 524:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_9;            // default = SF_7
 2983              		.loc 1 524 36 is_stmt 0 view .LVU911
 2984 07f0 5E48     		ldr	r0, .L168
 2985 07f2 40F2B113 		movw	r3, #433
 2986 07f6 0362     		str	r3, [r0, #32]
 525:Core/Src/main.c ****       myLoRa.bandWidth             = BW_15_6KHz;       // default = BW_125KHz
 2987              		.loc 1 525 7 is_stmt 1 view .LVU912
 525:Core/Src/main.c ****       myLoRa.bandWidth             = BW_15_6KHz;       // default = BW_125KHz
 2988              		.loc 1 525 37 is_stmt 0 view .LVU913
 2989 07f8 0923     		movs	r3, #9
 2990 07fa 80F82430 		strb	r3, [r0, #36]
 526:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2991              		.loc 1 526 7 is_stmt 1 view .LVU914
 526:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2992              		.loc 1 526 36 is_stmt 0 view .LVU915
 2993 07fe 0223     		movs	r3, #2
 2994 0800 80F82530 		strb	r3, [r0, #37]
 527:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2995              		.loc 1 527 7 is_stmt 1 view .LVU916
 527:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2996              		.loc 1 527 36 is_stmt 0 view .LVU917
 2997 0804 0123     		movs	r3, #1
 2998 0806 80F82630 		strb	r3, [r0, #38]
 528:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2999              		.loc 1 528 7 is_stmt 1 view .LVU918
 528:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3000              		.loc 1 528 36 is_stmt 0 view .LVU919
 3001 080a FF23     		movs	r3, #255
 3002 080c 80F82A30 		strb	r3, [r0, #42]
 529:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3003              		.loc 1 529 7 is_stmt 1 view .LVU920
 529:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3004              		.loc 1 529 36 is_stmt 0 view .LVU921
 3005 0810 6423     		movs	r3, #100
 3006 0812 80F82B30 		strb	r3, [r0, #43]
 530:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3007              		.loc 1 530 7 is_stmt 1 view .LVU922
 530:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3008              		.loc 1 530 36 is_stmt 0 view .LVU923
 3009 0816 0823     		movs	r3, #8
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 101


 3010 0818 0385     		strh	r3, [r0, #40]	@ movhi
 531:Core/Src/main.c ****       break;
 3011              		.loc 1 531 7 is_stmt 1 view .LVU924
 3012 081a FFF7FEFF 		bl	LoRa_init
 3013              	.LVL177:
 532:Core/Src/main.c **** 
 3014              		.loc 1 532 7 view .LVU925
 3015 081e 60E5     		b	.L95
 3016              	.L133:
 536:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_9;            // default = SF_7
 3017              		.loc 1 536 7 view .LVU926
 536:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_9;            // default = SF_7
 3018              		.loc 1 536 36 is_stmt 0 view .LVU927
 3019 0820 5248     		ldr	r0, .L168
 3020 0822 40F2B113 		movw	r3, #433
 3021 0826 0362     		str	r3, [r0, #32]
 537:Core/Src/main.c ****       myLoRa.bandWidth             = BW_20_8KHz;       // default = BW_125KHz
 3022              		.loc 1 537 7 is_stmt 1 view .LVU928
 537:Core/Src/main.c ****       myLoRa.bandWidth             = BW_20_8KHz;       // default = BW_125KHz
 3023              		.loc 1 537 37 is_stmt 0 view .LVU929
 3024 0828 0923     		movs	r3, #9
 3025 082a 80F82430 		strb	r3, [r0, #36]
 538:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3026              		.loc 1 538 7 is_stmt 1 view .LVU930
 538:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3027              		.loc 1 538 36 is_stmt 0 view .LVU931
 3028 082e 0323     		movs	r3, #3
 3029 0830 80F82530 		strb	r3, [r0, #37]
 539:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3030              		.loc 1 539 7 is_stmt 1 view .LVU932
 539:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3031              		.loc 1 539 36 is_stmt 0 view .LVU933
 3032 0834 0123     		movs	r3, #1
 3033 0836 80F82630 		strb	r3, [r0, #38]
 540:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3034              		.loc 1 540 7 is_stmt 1 view .LVU934
 540:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3035              		.loc 1 540 36 is_stmt 0 view .LVU935
 3036 083a FF23     		movs	r3, #255
 3037 083c 80F82A30 		strb	r3, [r0, #42]
 541:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3038              		.loc 1 541 7 is_stmt 1 view .LVU936
 541:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3039              		.loc 1 541 36 is_stmt 0 view .LVU937
 3040 0840 6423     		movs	r3, #100
 3041 0842 80F82B30 		strb	r3, [r0, #43]
 542:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3042              		.loc 1 542 7 is_stmt 1 view .LVU938
 542:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3043              		.loc 1 542 36 is_stmt 0 view .LVU939
 3044 0846 0823     		movs	r3, #8
 3045 0848 0385     		strh	r3, [r0, #40]	@ movhi
 543:Core/Src/main.c ****       break;
 3046              		.loc 1 543 7 is_stmt 1 view .LVU940
 3047 084a FFF7FEFF 		bl	LoRa_init
 3048              	.LVL178:
 544:Core/Src/main.c **** 
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 102


 3049              		.loc 1 544 7 view .LVU941
 3050 084e 48E5     		b	.L95
 3051              	.L132:
 548:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_9;            // default = SF_7
 3052              		.loc 1 548 7 view .LVU942
 548:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_9;            // default = SF_7
 3053              		.loc 1 548 36 is_stmt 0 view .LVU943
 3054 0850 4648     		ldr	r0, .L168
 3055 0852 40F2B113 		movw	r3, #433
 3056 0856 0362     		str	r3, [r0, #32]
 549:Core/Src/main.c ****       myLoRa.bandWidth             = BW_31_25KHz;       // default = BW_125KHz
 3057              		.loc 1 549 7 is_stmt 1 view .LVU944
 549:Core/Src/main.c ****       myLoRa.bandWidth             = BW_31_25KHz;       // default = BW_125KHz
 3058              		.loc 1 549 37 is_stmt 0 view .LVU945
 3059 0858 0923     		movs	r3, #9
 3060 085a 80F82430 		strb	r3, [r0, #36]
 550:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3061              		.loc 1 550 7 is_stmt 1 view .LVU946
 550:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3062              		.loc 1 550 36 is_stmt 0 view .LVU947
 3063 085e 0423     		movs	r3, #4
 3064 0860 80F82530 		strb	r3, [r0, #37]
 551:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3065              		.loc 1 551 7 is_stmt 1 view .LVU948
 551:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3066              		.loc 1 551 36 is_stmt 0 view .LVU949
 3067 0864 0123     		movs	r3, #1
 3068 0866 80F82630 		strb	r3, [r0, #38]
 552:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3069              		.loc 1 552 7 is_stmt 1 view .LVU950
 552:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3070              		.loc 1 552 36 is_stmt 0 view .LVU951
 3071 086a FF23     		movs	r3, #255
 3072 086c 80F82A30 		strb	r3, [r0, #42]
 553:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3073              		.loc 1 553 7 is_stmt 1 view .LVU952
 553:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3074              		.loc 1 553 36 is_stmt 0 view .LVU953
 3075 0870 6423     		movs	r3, #100
 3076 0872 80F82B30 		strb	r3, [r0, #43]
 554:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3077              		.loc 1 554 7 is_stmt 1 view .LVU954
 554:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3078              		.loc 1 554 36 is_stmt 0 view .LVU955
 3079 0876 0823     		movs	r3, #8
 3080 0878 0385     		strh	r3, [r0, #40]	@ movhi
 555:Core/Src/main.c ****       break;
 3081              		.loc 1 555 7 is_stmt 1 view .LVU956
 3082 087a FFF7FEFF 		bl	LoRa_init
 3083              	.LVL179:
 556:Core/Src/main.c **** 
 3084              		.loc 1 556 7 view .LVU957
 3085 087e 30E5     		b	.L95
 3086              	.L131:
 560:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_9;            // default = SF_7
 3087              		.loc 1 560 7 view .LVU958
 560:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_9;            // default = SF_7
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 103


 3088              		.loc 1 560 36 is_stmt 0 view .LVU959
 3089 0880 3A48     		ldr	r0, .L168
 3090 0882 40F2B113 		movw	r3, #433
 3091 0886 0362     		str	r3, [r0, #32]
 561:Core/Src/main.c ****       myLoRa.bandWidth             = BW_41_7KHz;       // default = BW_125KHz
 3092              		.loc 1 561 7 is_stmt 1 view .LVU960
 561:Core/Src/main.c ****       myLoRa.bandWidth             = BW_41_7KHz;       // default = BW_125KHz
 3093              		.loc 1 561 37 is_stmt 0 view .LVU961
 3094 0888 0923     		movs	r3, #9
 3095 088a 80F82430 		strb	r3, [r0, #36]
 562:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3096              		.loc 1 562 7 is_stmt 1 view .LVU962
 562:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3097              		.loc 1 562 36 is_stmt 0 view .LVU963
 3098 088e 0523     		movs	r3, #5
 3099 0890 80F82530 		strb	r3, [r0, #37]
 563:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3100              		.loc 1 563 7 is_stmt 1 view .LVU964
 563:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3101              		.loc 1 563 36 is_stmt 0 view .LVU965
 3102 0894 0123     		movs	r3, #1
 3103 0896 80F82630 		strb	r3, [r0, #38]
 564:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3104              		.loc 1 564 7 is_stmt 1 view .LVU966
 564:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3105              		.loc 1 564 36 is_stmt 0 view .LVU967
 3106 089a FF23     		movs	r3, #255
 3107 089c 80F82A30 		strb	r3, [r0, #42]
 565:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3108              		.loc 1 565 7 is_stmt 1 view .LVU968
 565:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3109              		.loc 1 565 36 is_stmt 0 view .LVU969
 3110 08a0 6423     		movs	r3, #100
 3111 08a2 80F82B30 		strb	r3, [r0, #43]
 566:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3112              		.loc 1 566 7 is_stmt 1 view .LVU970
 566:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3113              		.loc 1 566 36 is_stmt 0 view .LVU971
 3114 08a6 0823     		movs	r3, #8
 3115 08a8 0385     		strh	r3, [r0, #40]	@ movhi
 567:Core/Src/main.c ****       break;
 3116              		.loc 1 567 7 is_stmt 1 view .LVU972
 3117 08aa FFF7FEFF 		bl	LoRa_init
 3118              	.LVL180:
 568:Core/Src/main.c **** 
 3119              		.loc 1 568 7 view .LVU973
 3120 08ae 18E5     		b	.L95
 3121              	.L130:
 572:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_9;            // default = SF_7
 3122              		.loc 1 572 7 view .LVU974
 572:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_9;            // default = SF_7
 3123              		.loc 1 572 36 is_stmt 0 view .LVU975
 3124 08b0 2E48     		ldr	r0, .L168
 3125 08b2 40F2B113 		movw	r3, #433
 3126 08b6 0362     		str	r3, [r0, #32]
 573:Core/Src/main.c ****       myLoRa.bandWidth             = BW_62_5KHz;       // default = BW_125KHz
 3127              		.loc 1 573 7 is_stmt 1 view .LVU976
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 104


 573:Core/Src/main.c ****       myLoRa.bandWidth             = BW_62_5KHz;       // default = BW_125KHz
 3128              		.loc 1 573 37 is_stmt 0 view .LVU977
 3129 08b8 0923     		movs	r3, #9
 3130 08ba 80F82430 		strb	r3, [r0, #36]
 574:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3131              		.loc 1 574 7 is_stmt 1 view .LVU978
 574:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3132              		.loc 1 574 36 is_stmt 0 view .LVU979
 3133 08be 0623     		movs	r3, #6
 3134 08c0 80F82530 		strb	r3, [r0, #37]
 575:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3135              		.loc 1 575 7 is_stmt 1 view .LVU980
 575:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3136              		.loc 1 575 36 is_stmt 0 view .LVU981
 3137 08c4 0123     		movs	r3, #1
 3138 08c6 80F82630 		strb	r3, [r0, #38]
 576:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3139              		.loc 1 576 7 is_stmt 1 view .LVU982
 576:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3140              		.loc 1 576 36 is_stmt 0 view .LVU983
 3141 08ca FF23     		movs	r3, #255
 3142 08cc 80F82A30 		strb	r3, [r0, #42]
 577:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3143              		.loc 1 577 7 is_stmt 1 view .LVU984
 577:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3144              		.loc 1 577 36 is_stmt 0 view .LVU985
 3145 08d0 6423     		movs	r3, #100
 3146 08d2 80F82B30 		strb	r3, [r0, #43]
 578:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3147              		.loc 1 578 7 is_stmt 1 view .LVU986
 578:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3148              		.loc 1 578 36 is_stmt 0 view .LVU987
 3149 08d6 0823     		movs	r3, #8
 3150 08d8 0385     		strh	r3, [r0, #40]	@ movhi
 579:Core/Src/main.c ****       break;
 3151              		.loc 1 579 7 is_stmt 1 view .LVU988
 3152 08da FFF7FEFF 		bl	LoRa_init
 3153              	.LVL181:
 580:Core/Src/main.c **** 
 3154              		.loc 1 580 7 view .LVU989
 3155 08de 00E5     		b	.L95
 3156              	.L129:
 584:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_9;            // default = SF_7
 3157              		.loc 1 584 7 view .LVU990
 584:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_9;            // default = SF_7
 3158              		.loc 1 584 36 is_stmt 0 view .LVU991
 3159 08e0 2248     		ldr	r0, .L168
 3160 08e2 40F2B113 		movw	r3, #433
 3161 08e6 0362     		str	r3, [r0, #32]
 585:Core/Src/main.c ****       myLoRa.bandWidth             = BW_125KHz;       // default = BW_125KHz
 3162              		.loc 1 585 7 is_stmt 1 view .LVU992
 585:Core/Src/main.c ****       myLoRa.bandWidth             = BW_125KHz;       // default = BW_125KHz
 3163              		.loc 1 585 37 is_stmt 0 view .LVU993
 3164 08e8 0923     		movs	r3, #9
 3165 08ea 80F82430 		strb	r3, [r0, #36]
 586:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3166              		.loc 1 586 7 is_stmt 1 view .LVU994
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 105


 586:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3167              		.loc 1 586 36 is_stmt 0 view .LVU995
 3168 08ee 0723     		movs	r3, #7
 3169 08f0 80F82530 		strb	r3, [r0, #37]
 587:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3170              		.loc 1 587 7 is_stmt 1 view .LVU996
 587:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3171              		.loc 1 587 36 is_stmt 0 view .LVU997
 3172 08f4 0123     		movs	r3, #1
 3173 08f6 80F82630 		strb	r3, [r0, #38]
 588:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3174              		.loc 1 588 7 is_stmt 1 view .LVU998
 588:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3175              		.loc 1 588 36 is_stmt 0 view .LVU999
 3176 08fa FF23     		movs	r3, #255
 3177 08fc 80F82A30 		strb	r3, [r0, #42]
 589:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3178              		.loc 1 589 7 is_stmt 1 view .LVU1000
 589:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3179              		.loc 1 589 36 is_stmt 0 view .LVU1001
 3180 0900 6423     		movs	r3, #100
 3181 0902 80F82B30 		strb	r3, [r0, #43]
 590:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3182              		.loc 1 590 7 is_stmt 1 view .LVU1002
 590:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3183              		.loc 1 590 36 is_stmt 0 view .LVU1003
 3184 0906 0823     		movs	r3, #8
 3185 0908 0385     		strh	r3, [r0, #40]	@ movhi
 591:Core/Src/main.c ****       break;
 3186              		.loc 1 591 7 is_stmt 1 view .LVU1004
 3187 090a FFF7FEFF 		bl	LoRa_init
 3188              	.LVL182:
 592:Core/Src/main.c **** 
 3189              		.loc 1 592 7 view .LVU1005
 3190 090e E8E4     		b	.L95
 3191              	.L128:
 596:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_9;            // default = SF_7
 3192              		.loc 1 596 7 view .LVU1006
 596:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_9;            // default = SF_7
 3193              		.loc 1 596 36 is_stmt 0 view .LVU1007
 3194 0910 1648     		ldr	r0, .L168
 3195 0912 40F2B113 		movw	r3, #433
 3196 0916 0362     		str	r3, [r0, #32]
 597:Core/Src/main.c ****       myLoRa.bandWidth             = BW_250KHz;       // default = BW_125KHz
 3197              		.loc 1 597 7 is_stmt 1 view .LVU1008
 597:Core/Src/main.c ****       myLoRa.bandWidth             = BW_250KHz;       // default = BW_125KHz
 3198              		.loc 1 597 37 is_stmt 0 view .LVU1009
 3199 0918 0923     		movs	r3, #9
 3200 091a 80F82430 		strb	r3, [r0, #36]
 598:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3201              		.loc 1 598 7 is_stmt 1 view .LVU1010
 598:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3202              		.loc 1 598 36 is_stmt 0 view .LVU1011
 3203 091e 0823     		movs	r3, #8
 3204 0920 80F82530 		strb	r3, [r0, #37]
 599:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3205              		.loc 1 599 7 is_stmt 1 view .LVU1012
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 106


 599:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3206              		.loc 1 599 36 is_stmt 0 view .LVU1013
 3207 0924 0122     		movs	r2, #1
 3208 0926 80F82620 		strb	r2, [r0, #38]
 600:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3209              		.loc 1 600 7 is_stmt 1 view .LVU1014
 600:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3210              		.loc 1 600 36 is_stmt 0 view .LVU1015
 3211 092a FF22     		movs	r2, #255
 3212 092c 80F82A20 		strb	r2, [r0, #42]
 601:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3213              		.loc 1 601 7 is_stmt 1 view .LVU1016
 601:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3214              		.loc 1 601 36 is_stmt 0 view .LVU1017
 3215 0930 6422     		movs	r2, #100
 3216 0932 80F82B20 		strb	r2, [r0, #43]
 602:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3217              		.loc 1 602 7 is_stmt 1 view .LVU1018
 602:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3218              		.loc 1 602 36 is_stmt 0 view .LVU1019
 3219 0936 0385     		strh	r3, [r0, #40]	@ movhi
 603:Core/Src/main.c ****       break;
 3220              		.loc 1 603 7 is_stmt 1 view .LVU1020
 3221 0938 FFF7FEFF 		bl	LoRa_init
 3222              	.LVL183:
 604:Core/Src/main.c **** 
 3223              		.loc 1 604 7 view .LVU1021
 3224 093c D1E4     		b	.L95
 3225              	.L127:
 608:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_9;            // default = SF_7
 3226              		.loc 1 608 7 view .LVU1022
 608:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_9;            // default = SF_7
 3227              		.loc 1 608 36 is_stmt 0 view .LVU1023
 3228 093e 0B48     		ldr	r0, .L168
 3229 0940 40F2B113 		movw	r3, #433
 3230 0944 0362     		str	r3, [r0, #32]
 609:Core/Src/main.c ****       myLoRa.bandWidth             = BW_500KHz;       // default = BW_125KHz
 3231              		.loc 1 609 7 is_stmt 1 view .LVU1024
 609:Core/Src/main.c ****       myLoRa.bandWidth             = BW_500KHz;       // default = BW_125KHz
 3232              		.loc 1 609 37 is_stmt 0 view .LVU1025
 3233 0946 0923     		movs	r3, #9
 3234 0948 80F82430 		strb	r3, [r0, #36]
 610:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3235              		.loc 1 610 7 is_stmt 1 view .LVU1026
 610:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3236              		.loc 1 610 36 is_stmt 0 view .LVU1027
 3237 094c 80F82530 		strb	r3, [r0, #37]
 611:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3238              		.loc 1 611 7 is_stmt 1 view .LVU1028
 611:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3239              		.loc 1 611 36 is_stmt 0 view .LVU1029
 3240 0950 0123     		movs	r3, #1
 3241 0952 80F82630 		strb	r3, [r0, #38]
 612:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3242              		.loc 1 612 7 is_stmt 1 view .LVU1030
 612:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3243              		.loc 1 612 36 is_stmt 0 view .LVU1031
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 107


 3244 0956 FF23     		movs	r3, #255
 3245 0958 80F82A30 		strb	r3, [r0, #42]
 613:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3246              		.loc 1 613 7 is_stmt 1 view .LVU1032
 613:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3247              		.loc 1 613 36 is_stmt 0 view .LVU1033
 3248 095c 6423     		movs	r3, #100
 3249 095e 80F82B30 		strb	r3, [r0, #43]
 614:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3250              		.loc 1 614 7 is_stmt 1 view .LVU1034
 614:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3251              		.loc 1 614 36 is_stmt 0 view .LVU1035
 3252 0962 0823     		movs	r3, #8
 3253 0964 0385     		strh	r3, [r0, #40]	@ movhi
 615:Core/Src/main.c ****       break;
 3254              		.loc 1 615 7 is_stmt 1 view .LVU1036
 3255 0966 FFF7FEFF 		bl	LoRa_init
 3256              	.LVL184:
 616:Core/Src/main.c **** 
 3257              		.loc 1 616 7 view .LVU1037
 3258 096a BAE4     		b	.L95
 3259              	.L169:
 3260              		.align	2
 3261              	.L168:
 3262 096c 00000000 		.word	myLoRa
 3263              	.L126:
 620:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_10;            // default = SF_7
 3264              		.loc 1 620 7 view .LVU1038
 620:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_10;            // default = SF_7
 3265              		.loc 1 620 36 is_stmt 0 view .LVU1039
 3266 0970 DB48     		ldr	r0, .L170
 3267 0972 40F2B113 		movw	r3, #433
 3268 0976 0362     		str	r3, [r0, #32]
 621:Core/Src/main.c ****       myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 3269              		.loc 1 621 7 is_stmt 1 view .LVU1040
 621:Core/Src/main.c ****       myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 3270              		.loc 1 621 37 is_stmt 0 view .LVU1041
 3271 0978 0A23     		movs	r3, #10
 3272 097a 80F82430 		strb	r3, [r0, #36]
 622:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3273              		.loc 1 622 7 is_stmt 1 view .LVU1042
 622:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3274              		.loc 1 622 36 is_stmt 0 view .LVU1043
 3275 097e 0023     		movs	r3, #0
 3276 0980 80F82530 		strb	r3, [r0, #37]
 623:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3277              		.loc 1 623 7 is_stmt 1 view .LVU1044
 623:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3278              		.loc 1 623 36 is_stmt 0 view .LVU1045
 3279 0984 0123     		movs	r3, #1
 3280 0986 80F82630 		strb	r3, [r0, #38]
 624:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3281              		.loc 1 624 7 is_stmt 1 view .LVU1046
 624:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3282              		.loc 1 624 36 is_stmt 0 view .LVU1047
 3283 098a FF23     		movs	r3, #255
 3284 098c 80F82A30 		strb	r3, [r0, #42]
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 108


 625:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3285              		.loc 1 625 7 is_stmt 1 view .LVU1048
 625:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3286              		.loc 1 625 36 is_stmt 0 view .LVU1049
 3287 0990 6423     		movs	r3, #100
 3288 0992 80F82B30 		strb	r3, [r0, #43]
 626:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3289              		.loc 1 626 7 is_stmt 1 view .LVU1050
 626:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3290              		.loc 1 626 36 is_stmt 0 view .LVU1051
 3291 0996 0823     		movs	r3, #8
 3292 0998 0385     		strh	r3, [r0, #40]	@ movhi
 627:Core/Src/main.c ****       break;
 3293              		.loc 1 627 7 is_stmt 1 view .LVU1052
 3294 099a FFF7FEFF 		bl	LoRa_init
 3295              	.LVL185:
 628:Core/Src/main.c **** 
 3296              		.loc 1 628 7 view .LVU1053
 3297 099e A0E4     		b	.L95
 3298              	.L125:
 632:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_10;            // default = SF_7
 3299              		.loc 1 632 7 view .LVU1054
 632:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_10;            // default = SF_7
 3300              		.loc 1 632 36 is_stmt 0 view .LVU1055
 3301 09a0 CF48     		ldr	r0, .L170
 3302 09a2 40F2B113 		movw	r3, #433
 3303 09a6 0362     		str	r3, [r0, #32]
 633:Core/Src/main.c ****       myLoRa.bandWidth             = BW_10_4KHz;       // default = BW_125KHz
 3304              		.loc 1 633 7 is_stmt 1 view .LVU1056
 633:Core/Src/main.c ****       myLoRa.bandWidth             = BW_10_4KHz;       // default = BW_125KHz
 3305              		.loc 1 633 37 is_stmt 0 view .LVU1057
 3306 09a8 0A23     		movs	r3, #10
 3307 09aa 80F82430 		strb	r3, [r0, #36]
 634:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3308              		.loc 1 634 7 is_stmt 1 view .LVU1058
 634:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3309              		.loc 1 634 36 is_stmt 0 view .LVU1059
 3310 09ae 0123     		movs	r3, #1
 3311 09b0 80F82530 		strb	r3, [r0, #37]
 635:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3312              		.loc 1 635 7 is_stmt 1 view .LVU1060
 635:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3313              		.loc 1 635 36 is_stmt 0 view .LVU1061
 3314 09b4 80F82630 		strb	r3, [r0, #38]
 636:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3315              		.loc 1 636 7 is_stmt 1 view .LVU1062
 636:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3316              		.loc 1 636 36 is_stmt 0 view .LVU1063
 3317 09b8 FF23     		movs	r3, #255
 3318 09ba 80F82A30 		strb	r3, [r0, #42]
 637:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3319              		.loc 1 637 7 is_stmt 1 view .LVU1064
 637:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3320              		.loc 1 637 36 is_stmt 0 view .LVU1065
 3321 09be 6423     		movs	r3, #100
 3322 09c0 80F82B30 		strb	r3, [r0, #43]
 638:Core/Src/main.c ****       LoRa_init(&myLoRa);
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 109


 3323              		.loc 1 638 7 is_stmt 1 view .LVU1066
 638:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3324              		.loc 1 638 36 is_stmt 0 view .LVU1067
 3325 09c4 0823     		movs	r3, #8
 3326 09c6 0385     		strh	r3, [r0, #40]	@ movhi
 639:Core/Src/main.c ****       break;
 3327              		.loc 1 639 7 is_stmt 1 view .LVU1068
 3328 09c8 FFF7FEFF 		bl	LoRa_init
 3329              	.LVL186:
 640:Core/Src/main.c **** 
 3330              		.loc 1 640 7 view .LVU1069
 3331 09cc 89E4     		b	.L95
 3332              	.L124:
 644:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_10;            // default = SF_7
 3333              		.loc 1 644 7 view .LVU1070
 644:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_10;            // default = SF_7
 3334              		.loc 1 644 36 is_stmt 0 view .LVU1071
 3335 09ce C448     		ldr	r0, .L170
 3336 09d0 40F2B113 		movw	r3, #433
 3337 09d4 0362     		str	r3, [r0, #32]
 645:Core/Src/main.c ****       myLoRa.bandWidth             = BW_15_6KHz;       // default = BW_125KHz
 3338              		.loc 1 645 7 is_stmt 1 view .LVU1072
 645:Core/Src/main.c ****       myLoRa.bandWidth             = BW_15_6KHz;       // default = BW_125KHz
 3339              		.loc 1 645 37 is_stmt 0 view .LVU1073
 3340 09d6 0A23     		movs	r3, #10
 3341 09d8 80F82430 		strb	r3, [r0, #36]
 646:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3342              		.loc 1 646 7 is_stmt 1 view .LVU1074
 646:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3343              		.loc 1 646 36 is_stmt 0 view .LVU1075
 3344 09dc 0223     		movs	r3, #2
 3345 09de 80F82530 		strb	r3, [r0, #37]
 647:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3346              		.loc 1 647 7 is_stmt 1 view .LVU1076
 647:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3347              		.loc 1 647 36 is_stmt 0 view .LVU1077
 3348 09e2 0123     		movs	r3, #1
 3349 09e4 80F82630 		strb	r3, [r0, #38]
 648:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3350              		.loc 1 648 7 is_stmt 1 view .LVU1078
 648:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3351              		.loc 1 648 36 is_stmt 0 view .LVU1079
 3352 09e8 FF23     		movs	r3, #255
 3353 09ea 80F82A30 		strb	r3, [r0, #42]
 649:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3354              		.loc 1 649 7 is_stmt 1 view .LVU1080
 649:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3355              		.loc 1 649 36 is_stmt 0 view .LVU1081
 3356 09ee 6423     		movs	r3, #100
 3357 09f0 80F82B30 		strb	r3, [r0, #43]
 650:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3358              		.loc 1 650 7 is_stmt 1 view .LVU1082
 650:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3359              		.loc 1 650 36 is_stmt 0 view .LVU1083
 3360 09f4 0823     		movs	r3, #8
 3361 09f6 0385     		strh	r3, [r0, #40]	@ movhi
 651:Core/Src/main.c ****       break;
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 110


 3362              		.loc 1 651 7 is_stmt 1 view .LVU1084
 3363 09f8 FFF7FEFF 		bl	LoRa_init
 3364              	.LVL187:
 652:Core/Src/main.c **** 
 3365              		.loc 1 652 7 view .LVU1085
 3366 09fc 71E4     		b	.L95
 3367              	.L123:
 656:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_10;            // default = SF_7
 3368              		.loc 1 656 7 view .LVU1086
 656:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_10;            // default = SF_7
 3369              		.loc 1 656 36 is_stmt 0 view .LVU1087
 3370 09fe B848     		ldr	r0, .L170
 3371 0a00 40F2B113 		movw	r3, #433
 3372 0a04 0362     		str	r3, [r0, #32]
 657:Core/Src/main.c ****       myLoRa.bandWidth             = BW_20_8KHz;       // default = BW_125KHz
 3373              		.loc 1 657 7 is_stmt 1 view .LVU1088
 657:Core/Src/main.c ****       myLoRa.bandWidth             = BW_20_8KHz;       // default = BW_125KHz
 3374              		.loc 1 657 37 is_stmt 0 view .LVU1089
 3375 0a06 0A23     		movs	r3, #10
 3376 0a08 80F82430 		strb	r3, [r0, #36]
 658:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3377              		.loc 1 658 7 is_stmt 1 view .LVU1090
 658:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3378              		.loc 1 658 36 is_stmt 0 view .LVU1091
 3379 0a0c 0323     		movs	r3, #3
 3380 0a0e 80F82530 		strb	r3, [r0, #37]
 659:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3381              		.loc 1 659 7 is_stmt 1 view .LVU1092
 659:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3382              		.loc 1 659 36 is_stmt 0 view .LVU1093
 3383 0a12 0123     		movs	r3, #1
 3384 0a14 80F82630 		strb	r3, [r0, #38]
 660:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3385              		.loc 1 660 7 is_stmt 1 view .LVU1094
 660:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3386              		.loc 1 660 36 is_stmt 0 view .LVU1095
 3387 0a18 FF23     		movs	r3, #255
 3388 0a1a 80F82A30 		strb	r3, [r0, #42]
 661:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3389              		.loc 1 661 7 is_stmt 1 view .LVU1096
 661:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3390              		.loc 1 661 36 is_stmt 0 view .LVU1097
 3391 0a1e 6423     		movs	r3, #100
 3392 0a20 80F82B30 		strb	r3, [r0, #43]
 662:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3393              		.loc 1 662 7 is_stmt 1 view .LVU1098
 662:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3394              		.loc 1 662 36 is_stmt 0 view .LVU1099
 3395 0a24 0823     		movs	r3, #8
 3396 0a26 0385     		strh	r3, [r0, #40]	@ movhi
 663:Core/Src/main.c ****       break;
 3397              		.loc 1 663 7 is_stmt 1 view .LVU1100
 3398 0a28 FFF7FEFF 		bl	LoRa_init
 3399              	.LVL188:
 664:Core/Src/main.c **** 
 3400              		.loc 1 664 7 view .LVU1101
 3401 0a2c 59E4     		b	.L95
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 111


 3402              	.L122:
 668:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_10;            // default = SF_7
 3403              		.loc 1 668 7 view .LVU1102
 668:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_10;            // default = SF_7
 3404              		.loc 1 668 36 is_stmt 0 view .LVU1103
 3405 0a2e AC48     		ldr	r0, .L170
 3406 0a30 40F2B113 		movw	r3, #433
 3407 0a34 0362     		str	r3, [r0, #32]
 669:Core/Src/main.c ****       myLoRa.bandWidth             = BW_31_25KHz;       // default = BW_125KHz
 3408              		.loc 1 669 7 is_stmt 1 view .LVU1104
 669:Core/Src/main.c ****       myLoRa.bandWidth             = BW_31_25KHz;       // default = BW_125KHz
 3409              		.loc 1 669 37 is_stmt 0 view .LVU1105
 3410 0a36 0A23     		movs	r3, #10
 3411 0a38 80F82430 		strb	r3, [r0, #36]
 670:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3412              		.loc 1 670 7 is_stmt 1 view .LVU1106
 670:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3413              		.loc 1 670 36 is_stmt 0 view .LVU1107
 3414 0a3c 0423     		movs	r3, #4
 3415 0a3e 80F82530 		strb	r3, [r0, #37]
 671:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3416              		.loc 1 671 7 is_stmt 1 view .LVU1108
 671:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3417              		.loc 1 671 36 is_stmt 0 view .LVU1109
 3418 0a42 0123     		movs	r3, #1
 3419 0a44 80F82630 		strb	r3, [r0, #38]
 672:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3420              		.loc 1 672 7 is_stmt 1 view .LVU1110
 672:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3421              		.loc 1 672 36 is_stmt 0 view .LVU1111
 3422 0a48 FF23     		movs	r3, #255
 3423 0a4a 80F82A30 		strb	r3, [r0, #42]
 673:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3424              		.loc 1 673 7 is_stmt 1 view .LVU1112
 673:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3425              		.loc 1 673 36 is_stmt 0 view .LVU1113
 3426 0a4e 6423     		movs	r3, #100
 3427 0a50 80F82B30 		strb	r3, [r0, #43]
 674:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3428              		.loc 1 674 7 is_stmt 1 view .LVU1114
 674:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3429              		.loc 1 674 36 is_stmt 0 view .LVU1115
 3430 0a54 0823     		movs	r3, #8
 3431 0a56 0385     		strh	r3, [r0, #40]	@ movhi
 675:Core/Src/main.c ****       break;
 3432              		.loc 1 675 7 is_stmt 1 view .LVU1116
 3433 0a58 FFF7FEFF 		bl	LoRa_init
 3434              	.LVL189:
 676:Core/Src/main.c **** 
 3435              		.loc 1 676 7 view .LVU1117
 3436 0a5c 41E4     		b	.L95
 3437              	.L121:
 680:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_10;            // default = SF_7
 3438              		.loc 1 680 7 view .LVU1118
 680:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_10;            // default = SF_7
 3439              		.loc 1 680 36 is_stmt 0 view .LVU1119
 3440 0a5e A048     		ldr	r0, .L170
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 112


 3441 0a60 40F2B113 		movw	r3, #433
 3442 0a64 0362     		str	r3, [r0, #32]
 681:Core/Src/main.c ****       myLoRa.bandWidth             = BW_41_7KHz;       // default = BW_125KHz
 3443              		.loc 1 681 7 is_stmt 1 view .LVU1120
 681:Core/Src/main.c ****       myLoRa.bandWidth             = BW_41_7KHz;       // default = BW_125KHz
 3444              		.loc 1 681 37 is_stmt 0 view .LVU1121
 3445 0a66 0A23     		movs	r3, #10
 3446 0a68 80F82430 		strb	r3, [r0, #36]
 682:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3447              		.loc 1 682 7 is_stmt 1 view .LVU1122
 682:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3448              		.loc 1 682 36 is_stmt 0 view .LVU1123
 3449 0a6c 0523     		movs	r3, #5
 3450 0a6e 80F82530 		strb	r3, [r0, #37]
 683:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3451              		.loc 1 683 7 is_stmt 1 view .LVU1124
 683:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3452              		.loc 1 683 36 is_stmt 0 view .LVU1125
 3453 0a72 0123     		movs	r3, #1
 3454 0a74 80F82630 		strb	r3, [r0, #38]
 684:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3455              		.loc 1 684 7 is_stmt 1 view .LVU1126
 684:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3456              		.loc 1 684 36 is_stmt 0 view .LVU1127
 3457 0a78 FF23     		movs	r3, #255
 3458 0a7a 80F82A30 		strb	r3, [r0, #42]
 685:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3459              		.loc 1 685 7 is_stmt 1 view .LVU1128
 685:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3460              		.loc 1 685 36 is_stmt 0 view .LVU1129
 3461 0a7e 6423     		movs	r3, #100
 3462 0a80 80F82B30 		strb	r3, [r0, #43]
 686:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3463              		.loc 1 686 7 is_stmt 1 view .LVU1130
 686:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3464              		.loc 1 686 36 is_stmt 0 view .LVU1131
 3465 0a84 0823     		movs	r3, #8
 3466 0a86 0385     		strh	r3, [r0, #40]	@ movhi
 687:Core/Src/main.c ****       break;
 3467              		.loc 1 687 7 is_stmt 1 view .LVU1132
 3468 0a88 FFF7FEFF 		bl	LoRa_init
 3469              	.LVL190:
 688:Core/Src/main.c **** 
 3470              		.loc 1 688 7 view .LVU1133
 3471 0a8c 29E4     		b	.L95
 3472              	.L120:
 692:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_10;            // default = SF_7
 3473              		.loc 1 692 7 view .LVU1134
 692:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_10;            // default = SF_7
 3474              		.loc 1 692 36 is_stmt 0 view .LVU1135
 3475 0a8e 9448     		ldr	r0, .L170
 3476 0a90 40F2B113 		movw	r3, #433
 3477 0a94 0362     		str	r3, [r0, #32]
 693:Core/Src/main.c ****       myLoRa.bandWidth             = BW_62_5KHz;       // default = BW_125KHz
 3478              		.loc 1 693 7 is_stmt 1 view .LVU1136
 693:Core/Src/main.c ****       myLoRa.bandWidth             = BW_62_5KHz;       // default = BW_125KHz
 3479              		.loc 1 693 37 is_stmt 0 view .LVU1137
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 113


 3480 0a96 0A23     		movs	r3, #10
 3481 0a98 80F82430 		strb	r3, [r0, #36]
 694:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3482              		.loc 1 694 7 is_stmt 1 view .LVU1138
 694:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3483              		.loc 1 694 36 is_stmt 0 view .LVU1139
 3484 0a9c 0623     		movs	r3, #6
 3485 0a9e 80F82530 		strb	r3, [r0, #37]
 695:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3486              		.loc 1 695 7 is_stmt 1 view .LVU1140
 695:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3487              		.loc 1 695 36 is_stmt 0 view .LVU1141
 3488 0aa2 0123     		movs	r3, #1
 3489 0aa4 80F82630 		strb	r3, [r0, #38]
 696:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3490              		.loc 1 696 7 is_stmt 1 view .LVU1142
 696:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3491              		.loc 1 696 36 is_stmt 0 view .LVU1143
 3492 0aa8 FF23     		movs	r3, #255
 3493 0aaa 80F82A30 		strb	r3, [r0, #42]
 697:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3494              		.loc 1 697 7 is_stmt 1 view .LVU1144
 697:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3495              		.loc 1 697 36 is_stmt 0 view .LVU1145
 3496 0aae 6423     		movs	r3, #100
 3497 0ab0 80F82B30 		strb	r3, [r0, #43]
 698:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3498              		.loc 1 698 7 is_stmt 1 view .LVU1146
 698:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3499              		.loc 1 698 36 is_stmt 0 view .LVU1147
 3500 0ab4 0823     		movs	r3, #8
 3501 0ab6 0385     		strh	r3, [r0, #40]	@ movhi
 699:Core/Src/main.c ****       break;
 3502              		.loc 1 699 7 is_stmt 1 view .LVU1148
 3503 0ab8 FFF7FEFF 		bl	LoRa_init
 3504              	.LVL191:
 700:Core/Src/main.c **** 
 3505              		.loc 1 700 7 view .LVU1149
 3506 0abc 11E4     		b	.L95
 3507              	.L119:
 704:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_10;            // default = SF_7
 3508              		.loc 1 704 7 view .LVU1150
 704:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_10;            // default = SF_7
 3509              		.loc 1 704 36 is_stmt 0 view .LVU1151
 3510 0abe 8848     		ldr	r0, .L170
 3511 0ac0 40F2B113 		movw	r3, #433
 3512 0ac4 0362     		str	r3, [r0, #32]
 705:Core/Src/main.c ****       myLoRa.bandWidth             = BW_125KHz;       // default = BW_125KHz
 3513              		.loc 1 705 7 is_stmt 1 view .LVU1152
 705:Core/Src/main.c ****       myLoRa.bandWidth             = BW_125KHz;       // default = BW_125KHz
 3514              		.loc 1 705 37 is_stmt 0 view .LVU1153
 3515 0ac6 0A23     		movs	r3, #10
 3516 0ac8 80F82430 		strb	r3, [r0, #36]
 706:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3517              		.loc 1 706 7 is_stmt 1 view .LVU1154
 706:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3518              		.loc 1 706 36 is_stmt 0 view .LVU1155
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 114


 3519 0acc 0723     		movs	r3, #7
 3520 0ace 80F82530 		strb	r3, [r0, #37]
 707:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3521              		.loc 1 707 7 is_stmt 1 view .LVU1156
 707:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3522              		.loc 1 707 36 is_stmt 0 view .LVU1157
 3523 0ad2 0123     		movs	r3, #1
 3524 0ad4 80F82630 		strb	r3, [r0, #38]
 708:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3525              		.loc 1 708 7 is_stmt 1 view .LVU1158
 708:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3526              		.loc 1 708 36 is_stmt 0 view .LVU1159
 3527 0ad8 FF23     		movs	r3, #255
 3528 0ada 80F82A30 		strb	r3, [r0, #42]
 709:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3529              		.loc 1 709 7 is_stmt 1 view .LVU1160
 709:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3530              		.loc 1 709 36 is_stmt 0 view .LVU1161
 3531 0ade 6423     		movs	r3, #100
 3532 0ae0 80F82B30 		strb	r3, [r0, #43]
 710:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3533              		.loc 1 710 7 is_stmt 1 view .LVU1162
 710:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3534              		.loc 1 710 36 is_stmt 0 view .LVU1163
 3535 0ae4 0823     		movs	r3, #8
 3536 0ae6 0385     		strh	r3, [r0, #40]	@ movhi
 711:Core/Src/main.c ****       break;
 3537              		.loc 1 711 7 is_stmt 1 view .LVU1164
 3538 0ae8 FFF7FEFF 		bl	LoRa_init
 3539              	.LVL192:
 712:Core/Src/main.c **** 
 3540              		.loc 1 712 7 view .LVU1165
 3541 0aec FFF7F9BB 		b	.L95
 3542              	.L118:
 716:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_10;            // default = SF_7
 3543              		.loc 1 716 7 view .LVU1166
 716:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_10;            // default = SF_7
 3544              		.loc 1 716 36 is_stmt 0 view .LVU1167
 3545 0af0 7B48     		ldr	r0, .L170
 3546 0af2 40F2B113 		movw	r3, #433
 3547 0af6 0362     		str	r3, [r0, #32]
 717:Core/Src/main.c ****       myLoRa.bandWidth             = BW_250KHz;       // default = BW_125KHz
 3548              		.loc 1 717 7 is_stmt 1 view .LVU1168
 717:Core/Src/main.c ****       myLoRa.bandWidth             = BW_250KHz;       // default = BW_125KHz
 3549              		.loc 1 717 37 is_stmt 0 view .LVU1169
 3550 0af8 0A23     		movs	r3, #10
 3551 0afa 80F82430 		strb	r3, [r0, #36]
 718:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3552              		.loc 1 718 7 is_stmt 1 view .LVU1170
 718:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3553              		.loc 1 718 36 is_stmt 0 view .LVU1171
 3554 0afe 0823     		movs	r3, #8
 3555 0b00 80F82530 		strb	r3, [r0, #37]
 719:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3556              		.loc 1 719 7 is_stmt 1 view .LVU1172
 719:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3557              		.loc 1 719 36 is_stmt 0 view .LVU1173
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 115


 3558 0b04 0122     		movs	r2, #1
 3559 0b06 80F82620 		strb	r2, [r0, #38]
 720:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3560              		.loc 1 720 7 is_stmt 1 view .LVU1174
 720:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3561              		.loc 1 720 36 is_stmt 0 view .LVU1175
 3562 0b0a FF22     		movs	r2, #255
 3563 0b0c 80F82A20 		strb	r2, [r0, #42]
 721:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3564              		.loc 1 721 7 is_stmt 1 view .LVU1176
 721:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3565              		.loc 1 721 36 is_stmt 0 view .LVU1177
 3566 0b10 6422     		movs	r2, #100
 3567 0b12 80F82B20 		strb	r2, [r0, #43]
 722:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3568              		.loc 1 722 7 is_stmt 1 view .LVU1178
 722:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3569              		.loc 1 722 36 is_stmt 0 view .LVU1179
 3570 0b16 0385     		strh	r3, [r0, #40]	@ movhi
 723:Core/Src/main.c ****       break;
 3571              		.loc 1 723 7 is_stmt 1 view .LVU1180
 3572 0b18 FFF7FEFF 		bl	LoRa_init
 3573              	.LVL193:
 724:Core/Src/main.c **** 
 3574              		.loc 1 724 7 view .LVU1181
 3575 0b1c FFF7E1BB 		b	.L95
 3576              	.L117:
 728:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_10;            // default = SF_7
 3577              		.loc 1 728 7 view .LVU1182
 728:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_10;            // default = SF_7
 3578              		.loc 1 728 36 is_stmt 0 view .LVU1183
 3579 0b20 6F48     		ldr	r0, .L170
 3580 0b22 40F2B113 		movw	r3, #433
 3581 0b26 0362     		str	r3, [r0, #32]
 729:Core/Src/main.c ****       myLoRa.bandWidth             = BW_500KHz;       // default = BW_125KHz
 3582              		.loc 1 729 7 is_stmt 1 view .LVU1184
 729:Core/Src/main.c ****       myLoRa.bandWidth             = BW_500KHz;       // default = BW_125KHz
 3583              		.loc 1 729 37 is_stmt 0 view .LVU1185
 3584 0b28 0A23     		movs	r3, #10
 3585 0b2a 80F82430 		strb	r3, [r0, #36]
 730:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3586              		.loc 1 730 7 is_stmt 1 view .LVU1186
 730:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3587              		.loc 1 730 36 is_stmt 0 view .LVU1187
 3588 0b2e 0923     		movs	r3, #9
 3589 0b30 80F82530 		strb	r3, [r0, #37]
 731:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3590              		.loc 1 731 7 is_stmt 1 view .LVU1188
 731:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3591              		.loc 1 731 36 is_stmt 0 view .LVU1189
 3592 0b34 0123     		movs	r3, #1
 3593 0b36 80F82630 		strb	r3, [r0, #38]
 732:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3594              		.loc 1 732 7 is_stmt 1 view .LVU1190
 732:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3595              		.loc 1 732 36 is_stmt 0 view .LVU1191
 3596 0b3a FF23     		movs	r3, #255
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 116


 3597 0b3c 80F82A30 		strb	r3, [r0, #42]
 733:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3598              		.loc 1 733 7 is_stmt 1 view .LVU1192
 733:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3599              		.loc 1 733 36 is_stmt 0 view .LVU1193
 3600 0b40 6423     		movs	r3, #100
 3601 0b42 80F82B30 		strb	r3, [r0, #43]
 734:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3602              		.loc 1 734 7 is_stmt 1 view .LVU1194
 734:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3603              		.loc 1 734 36 is_stmt 0 view .LVU1195
 3604 0b46 0823     		movs	r3, #8
 3605 0b48 0385     		strh	r3, [r0, #40]	@ movhi
 735:Core/Src/main.c ****       break;
 3606              		.loc 1 735 7 is_stmt 1 view .LVU1196
 3607 0b4a FFF7FEFF 		bl	LoRa_init
 3608              	.LVL194:
 736:Core/Src/main.c **** 
 3609              		.loc 1 736 7 view .LVU1197
 3610 0b4e FFF7C8BB 		b	.L95
 3611              	.L116:
 740:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_11;            // default = SF_7
 3612              		.loc 1 740 7 view .LVU1198
 740:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_11;            // default = SF_7
 3613              		.loc 1 740 36 is_stmt 0 view .LVU1199
 3614 0b52 6348     		ldr	r0, .L170
 3615 0b54 40F2B113 		movw	r3, #433
 3616 0b58 0362     		str	r3, [r0, #32]
 741:Core/Src/main.c ****       myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 3617              		.loc 1 741 7 is_stmt 1 view .LVU1200
 741:Core/Src/main.c ****       myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 3618              		.loc 1 741 37 is_stmt 0 view .LVU1201
 3619 0b5a 0B23     		movs	r3, #11
 3620 0b5c 80F82430 		strb	r3, [r0, #36]
 742:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3621              		.loc 1 742 7 is_stmt 1 view .LVU1202
 742:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3622              		.loc 1 742 36 is_stmt 0 view .LVU1203
 3623 0b60 0023     		movs	r3, #0
 3624 0b62 80F82530 		strb	r3, [r0, #37]
 743:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3625              		.loc 1 743 7 is_stmt 1 view .LVU1204
 743:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3626              		.loc 1 743 36 is_stmt 0 view .LVU1205
 3627 0b66 0123     		movs	r3, #1
 3628 0b68 80F82630 		strb	r3, [r0, #38]
 744:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3629              		.loc 1 744 7 is_stmt 1 view .LVU1206
 744:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3630              		.loc 1 744 36 is_stmt 0 view .LVU1207
 3631 0b6c FF23     		movs	r3, #255
 3632 0b6e 80F82A30 		strb	r3, [r0, #42]
 745:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3633              		.loc 1 745 7 is_stmt 1 view .LVU1208
 745:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3634              		.loc 1 745 36 is_stmt 0 view .LVU1209
 3635 0b72 6423     		movs	r3, #100
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 117


 3636 0b74 80F82B30 		strb	r3, [r0, #43]
 746:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3637              		.loc 1 746 7 is_stmt 1 view .LVU1210
 746:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3638              		.loc 1 746 36 is_stmt 0 view .LVU1211
 3639 0b78 0823     		movs	r3, #8
 3640 0b7a 0385     		strh	r3, [r0, #40]	@ movhi
 747:Core/Src/main.c ****       break;
 3641              		.loc 1 747 7 is_stmt 1 view .LVU1212
 3642 0b7c FFF7FEFF 		bl	LoRa_init
 3643              	.LVL195:
 748:Core/Src/main.c **** 
 3644              		.loc 1 748 7 view .LVU1213
 3645 0b80 FFF7AFBB 		b	.L95
 3646              	.L115:
 752:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_11;            // default = SF_7
 3647              		.loc 1 752 7 view .LVU1214
 752:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_11;            // default = SF_7
 3648              		.loc 1 752 36 is_stmt 0 view .LVU1215
 3649 0b84 5648     		ldr	r0, .L170
 3650 0b86 40F2B113 		movw	r3, #433
 3651 0b8a 0362     		str	r3, [r0, #32]
 753:Core/Src/main.c ****       myLoRa.bandWidth             = BW_10_4KHz;       // default = BW_125KHz
 3652              		.loc 1 753 7 is_stmt 1 view .LVU1216
 753:Core/Src/main.c ****       myLoRa.bandWidth             = BW_10_4KHz;       // default = BW_125KHz
 3653              		.loc 1 753 37 is_stmt 0 view .LVU1217
 3654 0b8c 0B23     		movs	r3, #11
 3655 0b8e 80F82430 		strb	r3, [r0, #36]
 754:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3656              		.loc 1 754 7 is_stmt 1 view .LVU1218
 754:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3657              		.loc 1 754 36 is_stmt 0 view .LVU1219
 3658 0b92 0123     		movs	r3, #1
 3659 0b94 80F82530 		strb	r3, [r0, #37]
 755:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3660              		.loc 1 755 7 is_stmt 1 view .LVU1220
 755:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3661              		.loc 1 755 36 is_stmt 0 view .LVU1221
 3662 0b98 80F82630 		strb	r3, [r0, #38]
 756:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3663              		.loc 1 756 7 is_stmt 1 view .LVU1222
 756:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3664              		.loc 1 756 36 is_stmt 0 view .LVU1223
 3665 0b9c FF23     		movs	r3, #255
 3666 0b9e 80F82A30 		strb	r3, [r0, #42]
 757:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3667              		.loc 1 757 7 is_stmt 1 view .LVU1224
 757:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3668              		.loc 1 757 36 is_stmt 0 view .LVU1225
 3669 0ba2 6423     		movs	r3, #100
 3670 0ba4 80F82B30 		strb	r3, [r0, #43]
 758:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3671              		.loc 1 758 7 is_stmt 1 view .LVU1226
 758:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3672              		.loc 1 758 36 is_stmt 0 view .LVU1227
 3673 0ba8 0823     		movs	r3, #8
 3674 0baa 0385     		strh	r3, [r0, #40]	@ movhi
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 118


 759:Core/Src/main.c ****       break;
 3675              		.loc 1 759 7 is_stmt 1 view .LVU1228
 3676 0bac FFF7FEFF 		bl	LoRa_init
 3677              	.LVL196:
 760:Core/Src/main.c **** 
 3678              		.loc 1 760 7 view .LVU1229
 3679 0bb0 FFF797BB 		b	.L95
 3680              	.L114:
 764:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_11;            // default = SF_7
 3681              		.loc 1 764 7 view .LVU1230
 764:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_11;            // default = SF_7
 3682              		.loc 1 764 36 is_stmt 0 view .LVU1231
 3683 0bb4 4A48     		ldr	r0, .L170
 3684 0bb6 40F2B113 		movw	r3, #433
 3685 0bba 0362     		str	r3, [r0, #32]
 765:Core/Src/main.c ****       myLoRa.bandWidth             = BW_15_6KHz;       // default = BW_125KHz
 3686              		.loc 1 765 7 is_stmt 1 view .LVU1232
 765:Core/Src/main.c ****       myLoRa.bandWidth             = BW_15_6KHz;       // default = BW_125KHz
 3687              		.loc 1 765 37 is_stmt 0 view .LVU1233
 3688 0bbc 0B23     		movs	r3, #11
 3689 0bbe 80F82430 		strb	r3, [r0, #36]
 766:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3690              		.loc 1 766 7 is_stmt 1 view .LVU1234
 766:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3691              		.loc 1 766 36 is_stmt 0 view .LVU1235
 3692 0bc2 0223     		movs	r3, #2
 3693 0bc4 80F82530 		strb	r3, [r0, #37]
 767:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3694              		.loc 1 767 7 is_stmt 1 view .LVU1236
 767:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3695              		.loc 1 767 36 is_stmt 0 view .LVU1237
 3696 0bc8 0123     		movs	r3, #1
 3697 0bca 80F82630 		strb	r3, [r0, #38]
 768:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3698              		.loc 1 768 7 is_stmt 1 view .LVU1238
 768:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3699              		.loc 1 768 36 is_stmt 0 view .LVU1239
 3700 0bce FF23     		movs	r3, #255
 3701 0bd0 80F82A30 		strb	r3, [r0, #42]
 769:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3702              		.loc 1 769 7 is_stmt 1 view .LVU1240
 769:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3703              		.loc 1 769 36 is_stmt 0 view .LVU1241
 3704 0bd4 6423     		movs	r3, #100
 3705 0bd6 80F82B30 		strb	r3, [r0, #43]
 770:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3706              		.loc 1 770 7 is_stmt 1 view .LVU1242
 770:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3707              		.loc 1 770 36 is_stmt 0 view .LVU1243
 3708 0bda 0823     		movs	r3, #8
 3709 0bdc 0385     		strh	r3, [r0, #40]	@ movhi
 771:Core/Src/main.c ****       break;
 3710              		.loc 1 771 7 is_stmt 1 view .LVU1244
 3711 0bde FFF7FEFF 		bl	LoRa_init
 3712              	.LVL197:
 772:Core/Src/main.c **** 
 3713              		.loc 1 772 7 view .LVU1245
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 119


 3714 0be2 FFF77EBB 		b	.L95
 3715              	.L113:
 776:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_11;            // default = SF_7
 3716              		.loc 1 776 7 view .LVU1246
 776:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_11;            // default = SF_7
 3717              		.loc 1 776 36 is_stmt 0 view .LVU1247
 3718 0be6 3E48     		ldr	r0, .L170
 3719 0be8 40F2B113 		movw	r3, #433
 3720 0bec 0362     		str	r3, [r0, #32]
 777:Core/Src/main.c ****       myLoRa.bandWidth             = BW_20_8KHz;       // default = BW_125KHz
 3721              		.loc 1 777 7 is_stmt 1 view .LVU1248
 777:Core/Src/main.c ****       myLoRa.bandWidth             = BW_20_8KHz;       // default = BW_125KHz
 3722              		.loc 1 777 37 is_stmt 0 view .LVU1249
 3723 0bee 0B23     		movs	r3, #11
 3724 0bf0 80F82430 		strb	r3, [r0, #36]
 778:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3725              		.loc 1 778 7 is_stmt 1 view .LVU1250
 778:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3726              		.loc 1 778 36 is_stmt 0 view .LVU1251
 3727 0bf4 0323     		movs	r3, #3
 3728 0bf6 80F82530 		strb	r3, [r0, #37]
 779:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3729              		.loc 1 779 7 is_stmt 1 view .LVU1252
 779:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3730              		.loc 1 779 36 is_stmt 0 view .LVU1253
 3731 0bfa 0123     		movs	r3, #1
 3732 0bfc 80F82630 		strb	r3, [r0, #38]
 780:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3733              		.loc 1 780 7 is_stmt 1 view .LVU1254
 780:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3734              		.loc 1 780 36 is_stmt 0 view .LVU1255
 3735 0c00 FF23     		movs	r3, #255
 3736 0c02 80F82A30 		strb	r3, [r0, #42]
 781:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3737              		.loc 1 781 7 is_stmt 1 view .LVU1256
 781:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3738              		.loc 1 781 36 is_stmt 0 view .LVU1257
 3739 0c06 6423     		movs	r3, #100
 3740 0c08 80F82B30 		strb	r3, [r0, #43]
 782:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3741              		.loc 1 782 7 is_stmt 1 view .LVU1258
 782:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3742              		.loc 1 782 36 is_stmt 0 view .LVU1259
 3743 0c0c 0823     		movs	r3, #8
 3744 0c0e 0385     		strh	r3, [r0, #40]	@ movhi
 783:Core/Src/main.c ****       break;
 3745              		.loc 1 783 7 is_stmt 1 view .LVU1260
 3746 0c10 FFF7FEFF 		bl	LoRa_init
 3747              	.LVL198:
 784:Core/Src/main.c **** 
 3748              		.loc 1 784 7 view .LVU1261
 3749 0c14 FFF765BB 		b	.L95
 3750              	.L112:
 788:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_11;            // default = SF_7
 3751              		.loc 1 788 7 view .LVU1262
 788:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_11;            // default = SF_7
 3752              		.loc 1 788 36 is_stmt 0 view .LVU1263
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 120


 3753 0c18 3148     		ldr	r0, .L170
 3754 0c1a 40F2B113 		movw	r3, #433
 3755 0c1e 0362     		str	r3, [r0, #32]
 789:Core/Src/main.c ****       myLoRa.bandWidth             = BW_31_25KHz;       // default = BW_125KHz
 3756              		.loc 1 789 7 is_stmt 1 view .LVU1264
 789:Core/Src/main.c ****       myLoRa.bandWidth             = BW_31_25KHz;       // default = BW_125KHz
 3757              		.loc 1 789 37 is_stmt 0 view .LVU1265
 3758 0c20 0B23     		movs	r3, #11
 3759 0c22 80F82430 		strb	r3, [r0, #36]
 790:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3760              		.loc 1 790 7 is_stmt 1 view .LVU1266
 790:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3761              		.loc 1 790 36 is_stmt 0 view .LVU1267
 3762 0c26 0423     		movs	r3, #4
 3763 0c28 80F82530 		strb	r3, [r0, #37]
 791:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3764              		.loc 1 791 7 is_stmt 1 view .LVU1268
 791:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3765              		.loc 1 791 36 is_stmt 0 view .LVU1269
 3766 0c2c 0123     		movs	r3, #1
 3767 0c2e 80F82630 		strb	r3, [r0, #38]
 792:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3768              		.loc 1 792 7 is_stmt 1 view .LVU1270
 792:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3769              		.loc 1 792 36 is_stmt 0 view .LVU1271
 3770 0c32 FF23     		movs	r3, #255
 3771 0c34 80F82A30 		strb	r3, [r0, #42]
 793:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3772              		.loc 1 793 7 is_stmt 1 view .LVU1272
 793:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3773              		.loc 1 793 36 is_stmt 0 view .LVU1273
 3774 0c38 6423     		movs	r3, #100
 3775 0c3a 80F82B30 		strb	r3, [r0, #43]
 794:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3776              		.loc 1 794 7 is_stmt 1 view .LVU1274
 794:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3777              		.loc 1 794 36 is_stmt 0 view .LVU1275
 3778 0c3e 0823     		movs	r3, #8
 3779 0c40 0385     		strh	r3, [r0, #40]	@ movhi
 795:Core/Src/main.c ****       break;
 3780              		.loc 1 795 7 is_stmt 1 view .LVU1276
 3781 0c42 FFF7FEFF 		bl	LoRa_init
 3782              	.LVL199:
 796:Core/Src/main.c **** 
 3783              		.loc 1 796 7 view .LVU1277
 3784 0c46 FFF74CBB 		b	.L95
 3785              	.L111:
 800:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_11;            // default = SF_7
 3786              		.loc 1 800 7 view .LVU1278
 800:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_11;            // default = SF_7
 3787              		.loc 1 800 36 is_stmt 0 view .LVU1279
 3788 0c4a 2548     		ldr	r0, .L170
 3789 0c4c 40F2B113 		movw	r3, #433
 3790 0c50 0362     		str	r3, [r0, #32]
 801:Core/Src/main.c ****       myLoRa.bandWidth             = BW_41_7KHz;       // default = BW_125KHz
 3791              		.loc 1 801 7 is_stmt 1 view .LVU1280
 801:Core/Src/main.c ****       myLoRa.bandWidth             = BW_41_7KHz;       // default = BW_125KHz
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 121


 3792              		.loc 1 801 37 is_stmt 0 view .LVU1281
 3793 0c52 0B23     		movs	r3, #11
 3794 0c54 80F82430 		strb	r3, [r0, #36]
 802:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3795              		.loc 1 802 7 is_stmt 1 view .LVU1282
 802:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3796              		.loc 1 802 36 is_stmt 0 view .LVU1283
 3797 0c58 0523     		movs	r3, #5
 3798 0c5a 80F82530 		strb	r3, [r0, #37]
 803:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3799              		.loc 1 803 7 is_stmt 1 view .LVU1284
 803:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3800              		.loc 1 803 36 is_stmt 0 view .LVU1285
 3801 0c5e 0123     		movs	r3, #1
 3802 0c60 80F82630 		strb	r3, [r0, #38]
 804:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3803              		.loc 1 804 7 is_stmt 1 view .LVU1286
 804:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3804              		.loc 1 804 36 is_stmt 0 view .LVU1287
 3805 0c64 FF23     		movs	r3, #255
 3806 0c66 80F82A30 		strb	r3, [r0, #42]
 805:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3807              		.loc 1 805 7 is_stmt 1 view .LVU1288
 805:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3808              		.loc 1 805 36 is_stmt 0 view .LVU1289
 3809 0c6a 6423     		movs	r3, #100
 3810 0c6c 80F82B30 		strb	r3, [r0, #43]
 806:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3811              		.loc 1 806 7 is_stmt 1 view .LVU1290
 806:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3812              		.loc 1 806 36 is_stmt 0 view .LVU1291
 3813 0c70 0823     		movs	r3, #8
 3814 0c72 0385     		strh	r3, [r0, #40]	@ movhi
 807:Core/Src/main.c ****       break;
 3815              		.loc 1 807 7 is_stmt 1 view .LVU1292
 3816 0c74 FFF7FEFF 		bl	LoRa_init
 3817              	.LVL200:
 808:Core/Src/main.c **** 
 3818              		.loc 1 808 7 view .LVU1293
 3819 0c78 FFF733BB 		b	.L95
 3820              	.L110:
 812:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_11;            // default = SF_7
 3821              		.loc 1 812 7 view .LVU1294
 812:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_11;            // default = SF_7
 3822              		.loc 1 812 36 is_stmt 0 view .LVU1295
 3823 0c7c 1848     		ldr	r0, .L170
 3824 0c7e 40F2B113 		movw	r3, #433
 3825 0c82 0362     		str	r3, [r0, #32]
 813:Core/Src/main.c ****       myLoRa.bandWidth             = BW_62_5KHz;       // default = BW_125KHz
 3826              		.loc 1 813 7 is_stmt 1 view .LVU1296
 813:Core/Src/main.c ****       myLoRa.bandWidth             = BW_62_5KHz;       // default = BW_125KHz
 3827              		.loc 1 813 37 is_stmt 0 view .LVU1297
 3828 0c84 0B23     		movs	r3, #11
 3829 0c86 80F82430 		strb	r3, [r0, #36]
 814:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3830              		.loc 1 814 7 is_stmt 1 view .LVU1298
 814:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 122


 3831              		.loc 1 814 36 is_stmt 0 view .LVU1299
 3832 0c8a 0623     		movs	r3, #6
 3833 0c8c 80F82530 		strb	r3, [r0, #37]
 815:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3834              		.loc 1 815 7 is_stmt 1 view .LVU1300
 815:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3835              		.loc 1 815 36 is_stmt 0 view .LVU1301
 3836 0c90 0123     		movs	r3, #1
 3837 0c92 80F82630 		strb	r3, [r0, #38]
 816:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3838              		.loc 1 816 7 is_stmt 1 view .LVU1302
 816:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3839              		.loc 1 816 36 is_stmt 0 view .LVU1303
 3840 0c96 FF23     		movs	r3, #255
 3841 0c98 80F82A30 		strb	r3, [r0, #42]
 817:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3842              		.loc 1 817 7 is_stmt 1 view .LVU1304
 817:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3843              		.loc 1 817 36 is_stmt 0 view .LVU1305
 3844 0c9c 6423     		movs	r3, #100
 3845 0c9e 80F82B30 		strb	r3, [r0, #43]
 818:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3846              		.loc 1 818 7 is_stmt 1 view .LVU1306
 818:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3847              		.loc 1 818 36 is_stmt 0 view .LVU1307
 3848 0ca2 0823     		movs	r3, #8
 3849 0ca4 0385     		strh	r3, [r0, #40]	@ movhi
 819:Core/Src/main.c ****       break;
 3850              		.loc 1 819 7 is_stmt 1 view .LVU1308
 3851 0ca6 FFF7FEFF 		bl	LoRa_init
 3852              	.LVL201:
 820:Core/Src/main.c **** 
 3853              		.loc 1 820 7 view .LVU1309
 3854 0caa FFF71ABB 		b	.L95
 3855              	.L109:
 824:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_11;            // default = SF_7
 3856              		.loc 1 824 7 view .LVU1310
 824:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_11;            // default = SF_7
 3857              		.loc 1 824 36 is_stmt 0 view .LVU1311
 3858 0cae 0C48     		ldr	r0, .L170
 3859 0cb0 40F2B113 		movw	r3, #433
 3860 0cb4 0362     		str	r3, [r0, #32]
 825:Core/Src/main.c ****       myLoRa.bandWidth             = BW_125KHz;       // default = BW_125KHz
 3861              		.loc 1 825 7 is_stmt 1 view .LVU1312
 825:Core/Src/main.c ****       myLoRa.bandWidth             = BW_125KHz;       // default = BW_125KHz
 3862              		.loc 1 825 37 is_stmt 0 view .LVU1313
 3863 0cb6 0B23     		movs	r3, #11
 3864 0cb8 80F82430 		strb	r3, [r0, #36]
 826:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3865              		.loc 1 826 7 is_stmt 1 view .LVU1314
 826:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3866              		.loc 1 826 36 is_stmt 0 view .LVU1315
 3867 0cbc 0723     		movs	r3, #7
 3868 0cbe 80F82530 		strb	r3, [r0, #37]
 827:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3869              		.loc 1 827 7 is_stmt 1 view .LVU1316
 827:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 123


 3870              		.loc 1 827 36 is_stmt 0 view .LVU1317
 3871 0cc2 0123     		movs	r3, #1
 3872 0cc4 80F82630 		strb	r3, [r0, #38]
 828:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3873              		.loc 1 828 7 is_stmt 1 view .LVU1318
 828:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3874              		.loc 1 828 36 is_stmt 0 view .LVU1319
 3875 0cc8 FF23     		movs	r3, #255
 3876 0cca 80F82A30 		strb	r3, [r0, #42]
 829:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3877              		.loc 1 829 7 is_stmt 1 view .LVU1320
 829:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3878              		.loc 1 829 36 is_stmt 0 view .LVU1321
 3879 0cce 6423     		movs	r3, #100
 3880 0cd0 80F82B30 		strb	r3, [r0, #43]
 830:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3881              		.loc 1 830 7 is_stmt 1 view .LVU1322
 830:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3882              		.loc 1 830 36 is_stmt 0 view .LVU1323
 3883 0cd4 0823     		movs	r3, #8
 3884 0cd6 0385     		strh	r3, [r0, #40]	@ movhi
 831:Core/Src/main.c ****       break;
 3885              		.loc 1 831 7 is_stmt 1 view .LVU1324
 3886 0cd8 FFF7FEFF 		bl	LoRa_init
 3887              	.LVL202:
 832:Core/Src/main.c **** 
 3888              		.loc 1 832 7 view .LVU1325
 3889 0cdc FFF701BB 		b	.L95
 3890              	.L171:
 3891              		.align	2
 3892              	.L170:
 3893 0ce0 00000000 		.word	myLoRa
 3894              	.L108:
 836:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_11;            // default = SF_7
 3895              		.loc 1 836 7 view .LVU1326
 836:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_11;            // default = SF_7
 3896              		.loc 1 836 36 is_stmt 0 view .LVU1327
 3897 0ce4 9448     		ldr	r0, .L172
 3898 0ce6 40F2B113 		movw	r3, #433
 3899 0cea 0362     		str	r3, [r0, #32]
 837:Core/Src/main.c ****       myLoRa.bandWidth             = BW_250KHz;       // default = BW_125KHz
 3900              		.loc 1 837 7 is_stmt 1 view .LVU1328
 837:Core/Src/main.c ****       myLoRa.bandWidth             = BW_250KHz;       // default = BW_125KHz
 3901              		.loc 1 837 37 is_stmt 0 view .LVU1329
 3902 0cec 0B23     		movs	r3, #11
 3903 0cee 80F82430 		strb	r3, [r0, #36]
 838:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3904              		.loc 1 838 7 is_stmt 1 view .LVU1330
 838:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3905              		.loc 1 838 36 is_stmt 0 view .LVU1331
 3906 0cf2 0823     		movs	r3, #8
 3907 0cf4 80F82530 		strb	r3, [r0, #37]
 839:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3908              		.loc 1 839 7 is_stmt 1 view .LVU1332
 839:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3909              		.loc 1 839 36 is_stmt 0 view .LVU1333
 3910 0cf8 0122     		movs	r2, #1
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 124


 3911 0cfa 80F82620 		strb	r2, [r0, #38]
 840:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3912              		.loc 1 840 7 is_stmt 1 view .LVU1334
 840:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3913              		.loc 1 840 36 is_stmt 0 view .LVU1335
 3914 0cfe FF22     		movs	r2, #255
 3915 0d00 80F82A20 		strb	r2, [r0, #42]
 841:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3916              		.loc 1 841 7 is_stmt 1 view .LVU1336
 841:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3917              		.loc 1 841 36 is_stmt 0 view .LVU1337
 3918 0d04 6422     		movs	r2, #100
 3919 0d06 80F82B20 		strb	r2, [r0, #43]
 842:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3920              		.loc 1 842 7 is_stmt 1 view .LVU1338
 842:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3921              		.loc 1 842 36 is_stmt 0 view .LVU1339
 3922 0d0a 0385     		strh	r3, [r0, #40]	@ movhi
 843:Core/Src/main.c ****       break;
 3923              		.loc 1 843 7 is_stmt 1 view .LVU1340
 3924 0d0c FFF7FEFF 		bl	LoRa_init
 3925              	.LVL203:
 844:Core/Src/main.c **** 
 3926              		.loc 1 844 7 view .LVU1341
 3927 0d10 FFF7E7BA 		b	.L95
 3928              	.L107:
 848:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_11;            // default = SF_7
 3929              		.loc 1 848 7 view .LVU1342
 848:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_11;            // default = SF_7
 3930              		.loc 1 848 36 is_stmt 0 view .LVU1343
 3931 0d14 8848     		ldr	r0, .L172
 3932 0d16 40F2B113 		movw	r3, #433
 3933 0d1a 0362     		str	r3, [r0, #32]
 849:Core/Src/main.c ****       myLoRa.bandWidth             = BW_500KHz;       // default = BW_125KHz
 3934              		.loc 1 849 7 is_stmt 1 view .LVU1344
 849:Core/Src/main.c ****       myLoRa.bandWidth             = BW_500KHz;       // default = BW_125KHz
 3935              		.loc 1 849 37 is_stmt 0 view .LVU1345
 3936 0d1c 0B23     		movs	r3, #11
 3937 0d1e 80F82430 		strb	r3, [r0, #36]
 850:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3938              		.loc 1 850 7 is_stmt 1 view .LVU1346
 850:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3939              		.loc 1 850 36 is_stmt 0 view .LVU1347
 3940 0d22 0923     		movs	r3, #9
 3941 0d24 80F82530 		strb	r3, [r0, #37]
 851:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3942              		.loc 1 851 7 is_stmt 1 view .LVU1348
 851:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3943              		.loc 1 851 36 is_stmt 0 view .LVU1349
 3944 0d28 0123     		movs	r3, #1
 3945 0d2a 80F82630 		strb	r3, [r0, #38]
 852:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3946              		.loc 1 852 7 is_stmt 1 view .LVU1350
 852:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3947              		.loc 1 852 36 is_stmt 0 view .LVU1351
 3948 0d2e FF23     		movs	r3, #255
 3949 0d30 80F82A30 		strb	r3, [r0, #42]
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 125


 853:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3950              		.loc 1 853 7 is_stmt 1 view .LVU1352
 853:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3951              		.loc 1 853 36 is_stmt 0 view .LVU1353
 3952 0d34 6423     		movs	r3, #100
 3953 0d36 80F82B30 		strb	r3, [r0, #43]
 854:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3954              		.loc 1 854 7 is_stmt 1 view .LVU1354
 854:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3955              		.loc 1 854 36 is_stmt 0 view .LVU1355
 3956 0d3a 0823     		movs	r3, #8
 3957 0d3c 0385     		strh	r3, [r0, #40]	@ movhi
 855:Core/Src/main.c ****       break;
 3958              		.loc 1 855 7 is_stmt 1 view .LVU1356
 3959 0d3e FFF7FEFF 		bl	LoRa_init
 3960              	.LVL204:
 856:Core/Src/main.c **** 
 3961              		.loc 1 856 7 view .LVU1357
 3962 0d42 FFF7CEBA 		b	.L95
 3963              	.L106:
 860:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_12;            // default = SF_7
 3964              		.loc 1 860 7 view .LVU1358
 860:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_12;            // default = SF_7
 3965              		.loc 1 860 36 is_stmt 0 view .LVU1359
 3966 0d46 7C48     		ldr	r0, .L172
 3967 0d48 40F2B113 		movw	r3, #433
 3968 0d4c 0362     		str	r3, [r0, #32]
 861:Core/Src/main.c ****       myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 3969              		.loc 1 861 7 is_stmt 1 view .LVU1360
 861:Core/Src/main.c ****       myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 3970              		.loc 1 861 37 is_stmt 0 view .LVU1361
 3971 0d4e 0C23     		movs	r3, #12
 3972 0d50 80F82430 		strb	r3, [r0, #36]
 862:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3973              		.loc 1 862 7 is_stmt 1 view .LVU1362
 862:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3974              		.loc 1 862 36 is_stmt 0 view .LVU1363
 3975 0d54 0023     		movs	r3, #0
 3976 0d56 80F82530 		strb	r3, [r0, #37]
 863:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3977              		.loc 1 863 7 is_stmt 1 view .LVU1364
 863:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3978              		.loc 1 863 36 is_stmt 0 view .LVU1365
 3979 0d5a 0123     		movs	r3, #1
 3980 0d5c 80F82630 		strb	r3, [r0, #38]
 864:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3981              		.loc 1 864 7 is_stmt 1 view .LVU1366
 864:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3982              		.loc 1 864 36 is_stmt 0 view .LVU1367
 3983 0d60 FF23     		movs	r3, #255
 3984 0d62 80F82A30 		strb	r3, [r0, #42]
 865:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3985              		.loc 1 865 7 is_stmt 1 view .LVU1368
 865:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3986              		.loc 1 865 36 is_stmt 0 view .LVU1369
 3987 0d66 6423     		movs	r3, #100
 3988 0d68 80F82B30 		strb	r3, [r0, #43]
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 126


 866:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3989              		.loc 1 866 7 is_stmt 1 view .LVU1370
 866:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3990              		.loc 1 866 36 is_stmt 0 view .LVU1371
 3991 0d6c 0823     		movs	r3, #8
 3992 0d6e 0385     		strh	r3, [r0, #40]	@ movhi
 867:Core/Src/main.c ****       break;
 3993              		.loc 1 867 7 is_stmt 1 view .LVU1372
 3994 0d70 FFF7FEFF 		bl	LoRa_init
 3995              	.LVL205:
 868:Core/Src/main.c **** 
 3996              		.loc 1 868 7 view .LVU1373
 3997 0d74 FFF7B5BA 		b	.L95
 3998              	.L105:
 872:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_12;            // default = SF_7
 3999              		.loc 1 872 7 view .LVU1374
 872:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_12;            // default = SF_7
 4000              		.loc 1 872 36 is_stmt 0 view .LVU1375
 4001 0d78 6F48     		ldr	r0, .L172
 4002 0d7a 40F2B113 		movw	r3, #433
 4003 0d7e 0362     		str	r3, [r0, #32]
 873:Core/Src/main.c ****       myLoRa.bandWidth             = BW_10_4KHz;       // default = BW_125KHz
 4004              		.loc 1 873 7 is_stmt 1 view .LVU1376
 873:Core/Src/main.c ****       myLoRa.bandWidth             = BW_10_4KHz;       // default = BW_125KHz
 4005              		.loc 1 873 37 is_stmt 0 view .LVU1377
 4006 0d80 0C23     		movs	r3, #12
 4007 0d82 80F82430 		strb	r3, [r0, #36]
 874:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 4008              		.loc 1 874 7 is_stmt 1 view .LVU1378
 874:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 4009              		.loc 1 874 36 is_stmt 0 view .LVU1379
 4010 0d86 0123     		movs	r3, #1
 4011 0d88 80F82530 		strb	r3, [r0, #37]
 875:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 4012              		.loc 1 875 7 is_stmt 1 view .LVU1380
 875:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 4013              		.loc 1 875 36 is_stmt 0 view .LVU1381
 4014 0d8c 80F82630 		strb	r3, [r0, #38]
 876:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 4015              		.loc 1 876 7 is_stmt 1 view .LVU1382
 876:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 4016              		.loc 1 876 36 is_stmt 0 view .LVU1383
 4017 0d90 FF23     		movs	r3, #255
 4018 0d92 80F82A30 		strb	r3, [r0, #42]
 877:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 4019              		.loc 1 877 7 is_stmt 1 view .LVU1384
 877:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 4020              		.loc 1 877 36 is_stmt 0 view .LVU1385
 4021 0d96 6423     		movs	r3, #100
 4022 0d98 80F82B30 		strb	r3, [r0, #43]
 878:Core/Src/main.c ****       LoRa_init(&myLoRa);
 4023              		.loc 1 878 7 is_stmt 1 view .LVU1386
 878:Core/Src/main.c ****       LoRa_init(&myLoRa);
 4024              		.loc 1 878 36 is_stmt 0 view .LVU1387
 4025 0d9c 0823     		movs	r3, #8
 4026 0d9e 0385     		strh	r3, [r0, #40]	@ movhi
 879:Core/Src/main.c ****       break;
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 127


 4027              		.loc 1 879 7 is_stmt 1 view .LVU1388
 4028 0da0 FFF7FEFF 		bl	LoRa_init
 4029              	.LVL206:
 880:Core/Src/main.c **** 
 4030              		.loc 1 880 7 view .LVU1389
 4031 0da4 FFF79DBA 		b	.L95
 4032              	.L104:
 884:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_12;            // default = SF_7
 4033              		.loc 1 884 7 view .LVU1390
 884:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_12;            // default = SF_7
 4034              		.loc 1 884 36 is_stmt 0 view .LVU1391
 4035 0da8 6348     		ldr	r0, .L172
 4036 0daa 40F2B113 		movw	r3, #433
 4037 0dae 0362     		str	r3, [r0, #32]
 885:Core/Src/main.c ****       myLoRa.bandWidth             = BW_15_6KHz;       // default = BW_125KHz
 4038              		.loc 1 885 7 is_stmt 1 view .LVU1392
 885:Core/Src/main.c ****       myLoRa.bandWidth             = BW_15_6KHz;       // default = BW_125KHz
 4039              		.loc 1 885 37 is_stmt 0 view .LVU1393
 4040 0db0 0C23     		movs	r3, #12
 4041 0db2 80F82430 		strb	r3, [r0, #36]
 886:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 4042              		.loc 1 886 7 is_stmt 1 view .LVU1394
 886:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 4043              		.loc 1 886 36 is_stmt 0 view .LVU1395
 4044 0db6 0223     		movs	r3, #2
 4045 0db8 80F82530 		strb	r3, [r0, #37]
 887:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 4046              		.loc 1 887 7 is_stmt 1 view .LVU1396
 887:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 4047              		.loc 1 887 36 is_stmt 0 view .LVU1397
 4048 0dbc 0123     		movs	r3, #1
 4049 0dbe 80F82630 		strb	r3, [r0, #38]
 888:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 4050              		.loc 1 888 7 is_stmt 1 view .LVU1398
 888:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 4051              		.loc 1 888 36 is_stmt 0 view .LVU1399
 4052 0dc2 FF23     		movs	r3, #255
 4053 0dc4 80F82A30 		strb	r3, [r0, #42]
 889:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 4054              		.loc 1 889 7 is_stmt 1 view .LVU1400
 889:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 4055              		.loc 1 889 36 is_stmt 0 view .LVU1401
 4056 0dc8 6423     		movs	r3, #100
 4057 0dca 80F82B30 		strb	r3, [r0, #43]
 890:Core/Src/main.c ****       LoRa_init(&myLoRa);
 4058              		.loc 1 890 7 is_stmt 1 view .LVU1402
 890:Core/Src/main.c ****       LoRa_init(&myLoRa);
 4059              		.loc 1 890 36 is_stmt 0 view .LVU1403
 4060 0dce 0823     		movs	r3, #8
 4061 0dd0 0385     		strh	r3, [r0, #40]	@ movhi
 891:Core/Src/main.c ****       break;
 4062              		.loc 1 891 7 is_stmt 1 view .LVU1404
 4063 0dd2 FFF7FEFF 		bl	LoRa_init
 4064              	.LVL207:
 892:Core/Src/main.c **** 
 4065              		.loc 1 892 7 view .LVU1405
 4066 0dd6 FFF784BA 		b	.L95
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 128


 4067              	.L103:
 896:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_12;            // default = SF_7
 4068              		.loc 1 896 7 view .LVU1406
 896:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_12;            // default = SF_7
 4069              		.loc 1 896 36 is_stmt 0 view .LVU1407
 4070 0dda 5748     		ldr	r0, .L172
 4071 0ddc 40F2B113 		movw	r3, #433
 4072 0de0 0362     		str	r3, [r0, #32]
 897:Core/Src/main.c ****       myLoRa.bandWidth             = BW_20_8KHz;       // default = BW_125KHz
 4073              		.loc 1 897 7 is_stmt 1 view .LVU1408
 897:Core/Src/main.c ****       myLoRa.bandWidth             = BW_20_8KHz;       // default = BW_125KHz
 4074              		.loc 1 897 37 is_stmt 0 view .LVU1409
 4075 0de2 0C23     		movs	r3, #12
 4076 0de4 80F82430 		strb	r3, [r0, #36]
 898:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 4077              		.loc 1 898 7 is_stmt 1 view .LVU1410
 898:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 4078              		.loc 1 898 36 is_stmt 0 view .LVU1411
 4079 0de8 0323     		movs	r3, #3
 4080 0dea 80F82530 		strb	r3, [r0, #37]
 899:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 4081              		.loc 1 899 7 is_stmt 1 view .LVU1412
 899:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 4082              		.loc 1 899 36 is_stmt 0 view .LVU1413
 4083 0dee 0123     		movs	r3, #1
 4084 0df0 80F82630 		strb	r3, [r0, #38]
 900:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 4085              		.loc 1 900 7 is_stmt 1 view .LVU1414
 900:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 4086              		.loc 1 900 36 is_stmt 0 view .LVU1415
 4087 0df4 FF23     		movs	r3, #255
 4088 0df6 80F82A30 		strb	r3, [r0, #42]
 901:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 4089              		.loc 1 901 7 is_stmt 1 view .LVU1416
 901:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 4090              		.loc 1 901 36 is_stmt 0 view .LVU1417
 4091 0dfa 6423     		movs	r3, #100
 4092 0dfc 80F82B30 		strb	r3, [r0, #43]
 902:Core/Src/main.c ****       LoRa_init(&myLoRa);
 4093              		.loc 1 902 7 is_stmt 1 view .LVU1418
 902:Core/Src/main.c ****       LoRa_init(&myLoRa);
 4094              		.loc 1 902 36 is_stmt 0 view .LVU1419
 4095 0e00 0823     		movs	r3, #8
 4096 0e02 0385     		strh	r3, [r0, #40]	@ movhi
 903:Core/Src/main.c ****       break;
 4097              		.loc 1 903 7 is_stmt 1 view .LVU1420
 4098 0e04 FFF7FEFF 		bl	LoRa_init
 4099              	.LVL208:
 904:Core/Src/main.c **** 
 4100              		.loc 1 904 7 view .LVU1421
 4101 0e08 FFF76BBA 		b	.L95
 4102              	.L102:
 908:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_12;            // default = SF_7
 4103              		.loc 1 908 7 view .LVU1422
 908:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_12;            // default = SF_7
 4104              		.loc 1 908 36 is_stmt 0 view .LVU1423
 4105 0e0c 4A48     		ldr	r0, .L172
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 129


 4106 0e0e 40F2B113 		movw	r3, #433
 4107 0e12 0362     		str	r3, [r0, #32]
 909:Core/Src/main.c ****       myLoRa.bandWidth             = BW_31_25KHz;       // default = BW_125KHz
 4108              		.loc 1 909 7 is_stmt 1 view .LVU1424
 909:Core/Src/main.c ****       myLoRa.bandWidth             = BW_31_25KHz;       // default = BW_125KHz
 4109              		.loc 1 909 37 is_stmt 0 view .LVU1425
 4110 0e14 0C23     		movs	r3, #12
 4111 0e16 80F82430 		strb	r3, [r0, #36]
 910:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 4112              		.loc 1 910 7 is_stmt 1 view .LVU1426
 910:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 4113              		.loc 1 910 36 is_stmt 0 view .LVU1427
 4114 0e1a 0423     		movs	r3, #4
 4115 0e1c 80F82530 		strb	r3, [r0, #37]
 911:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 4116              		.loc 1 911 7 is_stmt 1 view .LVU1428
 911:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 4117              		.loc 1 911 36 is_stmt 0 view .LVU1429
 4118 0e20 0123     		movs	r3, #1
 4119 0e22 80F82630 		strb	r3, [r0, #38]
 912:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 4120              		.loc 1 912 7 is_stmt 1 view .LVU1430
 912:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 4121              		.loc 1 912 36 is_stmt 0 view .LVU1431
 4122 0e26 FF23     		movs	r3, #255
 4123 0e28 80F82A30 		strb	r3, [r0, #42]
 913:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 4124              		.loc 1 913 7 is_stmt 1 view .LVU1432
 913:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 4125              		.loc 1 913 36 is_stmt 0 view .LVU1433
 4126 0e2c 6423     		movs	r3, #100
 4127 0e2e 80F82B30 		strb	r3, [r0, #43]
 914:Core/Src/main.c ****       LoRa_init(&myLoRa);
 4128              		.loc 1 914 7 is_stmt 1 view .LVU1434
 914:Core/Src/main.c ****       LoRa_init(&myLoRa);
 4129              		.loc 1 914 36 is_stmt 0 view .LVU1435
 4130 0e32 0823     		movs	r3, #8
 4131 0e34 0385     		strh	r3, [r0, #40]	@ movhi
 915:Core/Src/main.c ****       break;
 4132              		.loc 1 915 7 is_stmt 1 view .LVU1436
 4133 0e36 FFF7FEFF 		bl	LoRa_init
 4134              	.LVL209:
 916:Core/Src/main.c **** 
 4135              		.loc 1 916 7 view .LVU1437
 4136 0e3a FFF752BA 		b	.L95
 4137              	.L101:
 920:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_12;            // default = SF_7
 4138              		.loc 1 920 7 view .LVU1438
 920:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_12;            // default = SF_7
 4139              		.loc 1 920 36 is_stmt 0 view .LVU1439
 4140 0e3e 3E48     		ldr	r0, .L172
 4141 0e40 40F2B113 		movw	r3, #433
 4142 0e44 0362     		str	r3, [r0, #32]
 921:Core/Src/main.c ****       myLoRa.bandWidth             = BW_41_7KHz;       // default = BW_125KHz
 4143              		.loc 1 921 7 is_stmt 1 view .LVU1440
 921:Core/Src/main.c ****       myLoRa.bandWidth             = BW_41_7KHz;       // default = BW_125KHz
 4144              		.loc 1 921 37 is_stmt 0 view .LVU1441
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 130


 4145 0e46 0C23     		movs	r3, #12
 4146 0e48 80F82430 		strb	r3, [r0, #36]
 922:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 4147              		.loc 1 922 7 is_stmt 1 view .LVU1442
 922:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 4148              		.loc 1 922 36 is_stmt 0 view .LVU1443
 4149 0e4c 0523     		movs	r3, #5
 4150 0e4e 80F82530 		strb	r3, [r0, #37]
 923:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 4151              		.loc 1 923 7 is_stmt 1 view .LVU1444
 923:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 4152              		.loc 1 923 36 is_stmt 0 view .LVU1445
 4153 0e52 0123     		movs	r3, #1
 4154 0e54 80F82630 		strb	r3, [r0, #38]
 924:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 4155              		.loc 1 924 7 is_stmt 1 view .LVU1446
 924:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 4156              		.loc 1 924 36 is_stmt 0 view .LVU1447
 4157 0e58 FF23     		movs	r3, #255
 4158 0e5a 80F82A30 		strb	r3, [r0, #42]
 925:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 4159              		.loc 1 925 7 is_stmt 1 view .LVU1448
 925:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 4160              		.loc 1 925 36 is_stmt 0 view .LVU1449
 4161 0e5e 6423     		movs	r3, #100
 4162 0e60 80F82B30 		strb	r3, [r0, #43]
 926:Core/Src/main.c ****       LoRa_init(&myLoRa);
 4163              		.loc 1 926 7 is_stmt 1 view .LVU1450
 926:Core/Src/main.c ****       LoRa_init(&myLoRa);
 4164              		.loc 1 926 36 is_stmt 0 view .LVU1451
 4165 0e64 0823     		movs	r3, #8
 4166 0e66 0385     		strh	r3, [r0, #40]	@ movhi
 927:Core/Src/main.c ****       break;
 4167              		.loc 1 927 7 is_stmt 1 view .LVU1452
 4168 0e68 FFF7FEFF 		bl	LoRa_init
 4169              	.LVL210:
 928:Core/Src/main.c **** 
 4170              		.loc 1 928 7 view .LVU1453
 4171 0e6c FFF739BA 		b	.L95
 4172              	.L100:
 932:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_12;            // default = SF_7
 4173              		.loc 1 932 7 view .LVU1454
 932:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_12;            // default = SF_7
 4174              		.loc 1 932 36 is_stmt 0 view .LVU1455
 4175 0e70 3148     		ldr	r0, .L172
 4176 0e72 40F2B113 		movw	r3, #433
 4177 0e76 0362     		str	r3, [r0, #32]
 933:Core/Src/main.c ****       myLoRa.bandWidth             = BW_62_5KHz;       // default = BW_125KHz
 4178              		.loc 1 933 7 is_stmt 1 view .LVU1456
 933:Core/Src/main.c ****       myLoRa.bandWidth             = BW_62_5KHz;       // default = BW_125KHz
 4179              		.loc 1 933 37 is_stmt 0 view .LVU1457
 4180 0e78 0C23     		movs	r3, #12
 4181 0e7a 80F82430 		strb	r3, [r0, #36]
 934:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 4182              		.loc 1 934 7 is_stmt 1 view .LVU1458
 934:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 4183              		.loc 1 934 36 is_stmt 0 view .LVU1459
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 131


 4184 0e7e 0623     		movs	r3, #6
 4185 0e80 80F82530 		strb	r3, [r0, #37]
 935:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 4186              		.loc 1 935 7 is_stmt 1 view .LVU1460
 935:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 4187              		.loc 1 935 36 is_stmt 0 view .LVU1461
 4188 0e84 0123     		movs	r3, #1
 4189 0e86 80F82630 		strb	r3, [r0, #38]
 936:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 4190              		.loc 1 936 7 is_stmt 1 view .LVU1462
 936:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 4191              		.loc 1 936 36 is_stmt 0 view .LVU1463
 4192 0e8a FF23     		movs	r3, #255
 4193 0e8c 80F82A30 		strb	r3, [r0, #42]
 937:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 4194              		.loc 1 937 7 is_stmt 1 view .LVU1464
 937:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 4195              		.loc 1 937 36 is_stmt 0 view .LVU1465
 4196 0e90 6423     		movs	r3, #100
 4197 0e92 80F82B30 		strb	r3, [r0, #43]
 938:Core/Src/main.c ****       LoRa_init(&myLoRa);
 4198              		.loc 1 938 7 is_stmt 1 view .LVU1466
 938:Core/Src/main.c ****       LoRa_init(&myLoRa);
 4199              		.loc 1 938 36 is_stmt 0 view .LVU1467
 4200 0e96 0823     		movs	r3, #8
 4201 0e98 0385     		strh	r3, [r0, #40]	@ movhi
 939:Core/Src/main.c ****       break;
 4202              		.loc 1 939 7 is_stmt 1 view .LVU1468
 4203 0e9a FFF7FEFF 		bl	LoRa_init
 4204              	.LVL211:
 940:Core/Src/main.c **** 
 4205              		.loc 1 940 7 view .LVU1469
 4206 0e9e FFF720BA 		b	.L95
 4207              	.L99:
 944:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_12;            // default = SF_7
 4208              		.loc 1 944 7 view .LVU1470
 944:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_12;            // default = SF_7
 4209              		.loc 1 944 36 is_stmt 0 view .LVU1471
 4210 0ea2 2548     		ldr	r0, .L172
 4211 0ea4 40F2B113 		movw	r3, #433
 4212 0ea8 0362     		str	r3, [r0, #32]
 945:Core/Src/main.c ****       myLoRa.bandWidth             = BW_125KHz;       // default = BW_125KHz
 4213              		.loc 1 945 7 is_stmt 1 view .LVU1472
 945:Core/Src/main.c ****       myLoRa.bandWidth             = BW_125KHz;       // default = BW_125KHz
 4214              		.loc 1 945 37 is_stmt 0 view .LVU1473
 4215 0eaa 0C23     		movs	r3, #12
 4216 0eac 80F82430 		strb	r3, [r0, #36]
 946:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 4217              		.loc 1 946 7 is_stmt 1 view .LVU1474
 946:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 4218              		.loc 1 946 36 is_stmt 0 view .LVU1475
 4219 0eb0 0723     		movs	r3, #7
 4220 0eb2 80F82530 		strb	r3, [r0, #37]
 947:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 4221              		.loc 1 947 7 is_stmt 1 view .LVU1476
 947:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 4222              		.loc 1 947 36 is_stmt 0 view .LVU1477
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 132


 4223 0eb6 0123     		movs	r3, #1
 4224 0eb8 80F82630 		strb	r3, [r0, #38]
 948:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 4225              		.loc 1 948 7 is_stmt 1 view .LVU1478
 948:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 4226              		.loc 1 948 36 is_stmt 0 view .LVU1479
 4227 0ebc FF23     		movs	r3, #255
 4228 0ebe 80F82A30 		strb	r3, [r0, #42]
 949:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 4229              		.loc 1 949 7 is_stmt 1 view .LVU1480
 949:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 4230              		.loc 1 949 36 is_stmt 0 view .LVU1481
 4231 0ec2 6423     		movs	r3, #100
 4232 0ec4 80F82B30 		strb	r3, [r0, #43]
 950:Core/Src/main.c ****       LoRa_init(&myLoRa);
 4233              		.loc 1 950 7 is_stmt 1 view .LVU1482
 950:Core/Src/main.c ****       LoRa_init(&myLoRa);
 4234              		.loc 1 950 36 is_stmt 0 view .LVU1483
 4235 0ec8 0823     		movs	r3, #8
 4236 0eca 0385     		strh	r3, [r0, #40]	@ movhi
 951:Core/Src/main.c ****       break;
 4237              		.loc 1 951 7 is_stmt 1 view .LVU1484
 4238 0ecc FFF7FEFF 		bl	LoRa_init
 4239              	.LVL212:
 952:Core/Src/main.c **** 
 4240              		.loc 1 952 7 view .LVU1485
 4241 0ed0 FFF707BA 		b	.L95
 4242              	.L98:
 956:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_12;            // default = SF_7
 4243              		.loc 1 956 7 view .LVU1486
 956:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_12;            // default = SF_7
 4244              		.loc 1 956 36 is_stmt 0 view .LVU1487
 4245 0ed4 1848     		ldr	r0, .L172
 4246 0ed6 40F2B113 		movw	r3, #433
 4247 0eda 0362     		str	r3, [r0, #32]
 957:Core/Src/main.c ****       myLoRa.bandWidth             = BW_250KHz;       // default = BW_125KHz
 4248              		.loc 1 957 7 is_stmt 1 view .LVU1488
 957:Core/Src/main.c ****       myLoRa.bandWidth             = BW_250KHz;       // default = BW_125KHz
 4249              		.loc 1 957 37 is_stmt 0 view .LVU1489
 4250 0edc 0C23     		movs	r3, #12
 4251 0ede 80F82430 		strb	r3, [r0, #36]
 958:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 4252              		.loc 1 958 7 is_stmt 1 view .LVU1490
 958:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 4253              		.loc 1 958 36 is_stmt 0 view .LVU1491
 4254 0ee2 0823     		movs	r3, #8
 4255 0ee4 80F82530 		strb	r3, [r0, #37]
 959:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 4256              		.loc 1 959 7 is_stmt 1 view .LVU1492
 959:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 4257              		.loc 1 959 36 is_stmt 0 view .LVU1493
 4258 0ee8 0122     		movs	r2, #1
 4259 0eea 80F82620 		strb	r2, [r0, #38]
 960:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 4260              		.loc 1 960 7 is_stmt 1 view .LVU1494
 960:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 4261              		.loc 1 960 36 is_stmt 0 view .LVU1495
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 133


 4262 0eee FF22     		movs	r2, #255
 4263 0ef0 80F82A20 		strb	r2, [r0, #42]
 961:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 4264              		.loc 1 961 7 is_stmt 1 view .LVU1496
 961:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 4265              		.loc 1 961 36 is_stmt 0 view .LVU1497
 4266 0ef4 6422     		movs	r2, #100
 4267 0ef6 80F82B20 		strb	r2, [r0, #43]
 962:Core/Src/main.c ****       LoRa_init(&myLoRa);
 4268              		.loc 1 962 7 is_stmt 1 view .LVU1498
 962:Core/Src/main.c ****       LoRa_init(&myLoRa);
 4269              		.loc 1 962 36 is_stmt 0 view .LVU1499
 4270 0efa 0385     		strh	r3, [r0, #40]	@ movhi
 963:Core/Src/main.c ****       break;
 4271              		.loc 1 963 7 is_stmt 1 view .LVU1500
 4272 0efc FFF7FEFF 		bl	LoRa_init
 4273              	.LVL213:
 964:Core/Src/main.c **** 
 4274              		.loc 1 964 7 view .LVU1501
 4275 0f00 FFF7EFB9 		b	.L95
 4276              	.L96:
 968:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_12;            // default = SF_7
 4277              		.loc 1 968 7 view .LVU1502
 968:Core/Src/main.c ****       myLoRa.spreadingFactor        = SF_12;            // default = SF_7
 4278              		.loc 1 968 36 is_stmt 0 view .LVU1503
 4279 0f04 0C48     		ldr	r0, .L172
 4280 0f06 40F2B113 		movw	r3, #433
 4281 0f0a 0362     		str	r3, [r0, #32]
 969:Core/Src/main.c ****       myLoRa.bandWidth             = BW_500KHz;       // default = BW_125KHz
 4282              		.loc 1 969 7 is_stmt 1 view .LVU1504
 969:Core/Src/main.c ****       myLoRa.bandWidth             = BW_500KHz;       // default = BW_125KHz
 4283              		.loc 1 969 37 is_stmt 0 view .LVU1505
 4284 0f0c 0C23     		movs	r3, #12
 4285 0f0e 80F82430 		strb	r3, [r0, #36]
 970:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 4286              		.loc 1 970 7 is_stmt 1 view .LVU1506
 970:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 4287              		.loc 1 970 36 is_stmt 0 view .LVU1507
 4288 0f12 0923     		movs	r3, #9
 4289 0f14 80F82530 		strb	r3, [r0, #37]
 971:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 4290              		.loc 1 971 7 is_stmt 1 view .LVU1508
 971:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 4291              		.loc 1 971 36 is_stmt 0 view .LVU1509
 4292 0f18 0123     		movs	r3, #1
 4293 0f1a 80F82630 		strb	r3, [r0, #38]
 972:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 4294              		.loc 1 972 7 is_stmt 1 view .LVU1510
 972:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 4295              		.loc 1 972 36 is_stmt 0 view .LVU1511
 4296 0f1e FF23     		movs	r3, #255
 4297 0f20 80F82A30 		strb	r3, [r0, #42]
 973:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 4298              		.loc 1 973 7 is_stmt 1 view .LVU1512
 973:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 4299              		.loc 1 973 36 is_stmt 0 view .LVU1513
 4300 0f24 6423     		movs	r3, #100
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 134


 4301 0f26 80F82B30 		strb	r3, [r0, #43]
 974:Core/Src/main.c ****       LoRa_init(&myLoRa);
 4302              		.loc 1 974 7 is_stmt 1 view .LVU1514
 974:Core/Src/main.c ****       LoRa_init(&myLoRa);
 4303              		.loc 1 974 36 is_stmt 0 view .LVU1515
 4304 0f2a 0823     		movs	r3, #8
 4305 0f2c 0385     		strh	r3, [r0, #40]	@ movhi
 975:Core/Src/main.c ****       break;
 4306              		.loc 1 975 7 is_stmt 1 view .LVU1516
 4307 0f2e FFF7FEFF 		bl	LoRa_init
 4308              	.LVL214:
 976:Core/Src/main.c **** 
 4309              		.loc 1 976 7 view .LVU1517
 4310 0f32 FFF7D6B9 		b	.L95
 4311              	.L173:
 4312 0f36 00BF     		.align	2
 4313              	.L172:
 4314 0f38 00000000 		.word	myLoRa
 4315              		.cfi_endproc
 4316              	.LFE138:
 4318              		.global	Data
 4319              		.section	.bss.Data,"aw",%nobits
 4320              		.align	2
 4323              	Data:
 4324 0000 00000000 		.space	256
 4324      00000000 
 4324      00000000 
 4324      00000000 
 4324      00000000 
 4325              		.global	size
 4326              		.section	.bss.size,"aw",%nobits
 4327              		.align	2
 4330              	size:
 4331 0000 00000000 		.space	4
 4332              		.global	sAltitude
 4333              		.section	.bss.sAltitude,"aw",%nobits
 4334              		.align	2
 4337              	sAltitude:
 4338 0000 00000000 		.space	128
 4338      00000000 
 4338      00000000 
 4338      00000000 
 4338      00000000 
 4339              		.global	sHumidity
 4340              		.section	.bss.sHumidity,"aw",%nobits
 4341              		.align	2
 4344              	sHumidity:
 4345 0000 00000000 		.space	128
 4345      00000000 
 4345      00000000 
 4345      00000000 
 4345      00000000 
 4346              		.global	sTemperature
 4347              		.section	.bss.sTemperature,"aw",%nobits
 4348              		.align	2
 4351              	sTemperature:
 4352 0000 00000000 		.space	128
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 135


 4352      00000000 
 4352      00000000 
 4352      00000000 
 4352      00000000 
 4353              		.global	sPressure
 4354              		.section	.bss.sPressure,"aw",%nobits
 4355              		.align	2
 4358              	sPressure:
 4359 0000 00000000 		.space	128
 4359      00000000 
 4359      00000000 
 4359      00000000 
 4359      00000000 
 4360              		.global	humidity
 4361              		.section	.bss.humidity,"aw",%nobits
 4362              		.align	2
 4365              	humidity:
 4366 0000 00000000 		.space	4
 4367              		.global	temperature
 4368              		.section	.bss.temperature,"aw",%nobits
 4369              		.align	2
 4372              	temperature:
 4373 0000 00000000 		.space	4
 4374              		.global	pressure
 4375              		.section	.bss.pressure,"aw",%nobits
 4376              		.align	2
 4379              	pressure:
 4380 0000 00000000 		.space	4
 4381              		.global	bmp280
 4382              		.section	.bss.bmp280,"aw",%nobits
 4383              		.align	2
 4386              	bmp280:
 4387 0000 00000000 		.space	52
 4387      00000000 
 4387      00000000 
 4387      00000000 
 4387      00000000 
 4388              		.global	altitude
 4389              		.section	.bss.altitude,"aw",%nobits
 4390              		.align	2
 4393              	altitude:
 4394 0000 00000000 		.space	4
 4395              		.global	P_b
 4396              		.section	.data.P_b,"aw"
 4397              		.align	2
 4400              	P_b:
 4401 0000 80E6C547 		.word	1204151936
 4402              		.global	packetSize
 4403              		.section	.bss.packetSize,"aw",%nobits
 4404              		.align	1
 4407              	packetSize:
 4408 0000 0000     		.space	2
 4409              		.global	beginRead
 4410              		.section	.bss.beginRead,"aw",%nobits
 4413              	beginRead:
 4414 0000 00       		.space	1
 4415              		.global	sendData
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 136


 4416              		.section	.bss.sendData,"aw",%nobits
 4419              	sendData:
 4420 0000 00       		.space	1
 4421              		.global	bModeChanged
 4422              		.section	.data.bModeChanged,"aw"
 4425              	bModeChanged:
 4426 0000 01       		.byte	1
 4427              		.global	sMode
 4428              		.section	.bss.sMode,"aw",%nobits
 4429              		.align	2
 4432              	sMode:
 4433 0000 00000000 		.space	10
 4433      00000000 
 4433      0000
 4434              		.global	iMode
 4435              		.section	.data.iMode,"aw"
 4436              		.align	2
 4439              	iMode:
 4440 0000 01000000 		.word	1
 4441              		.global	currentTicks
 4442              		.section	.bss.currentTicks,"aw",%nobits
 4443              		.align	2
 4446              	currentTicks:
 4447 0000 00000000 		.space	4
 4448              		.global	preTicks
 4449              		.section	.bss.preTicks,"aw",%nobits
 4450              		.align	2
 4453              	preTicks:
 4454 0000 00000000 		.space	4
 4455              		.global	isLoraReady
 4456              		.section	.data.isLoraReady,"aw"
 4459              	isLoraReady:
 4460 0000 01       		.byte	1
 4461              		.global	myLoRa
 4462              		.section	.bss.myLoRa,"aw",%nobits
 4463              		.align	2
 4466              	myLoRa:
 4467 0000 00000000 		.space	48
 4467      00000000 
 4467      00000000 
 4467      00000000 
 4467      00000000 
 4468              		.global	transmit_data
 4469              		.section	.bss.transmit_data,"aw",%nobits
 4470              		.align	2
 4473              	transmit_data:
 4474 0000 00000000 		.space	256
 4474      00000000 
 4474      00000000 
 4474      00000000 
 4474      00000000 
 4475              		.global	bme280p
 4476              		.section	.bss.bme280p,"aw",%nobits
 4479              	bme280p:
 4480 0000 00       		.space	1
 4481              		.global	line
 4482              		.section	.bss.line,"aw",%nobits
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 137


 4483              		.align	2
 4486              	line:
 4487 0000 00000000 		.space	512
 4487      00000000 
 4487      00000000 
 4487      00000000 
 4487      00000000 
 4488              		.global	line_out
 4489              		.section	.bss.line_out,"aw",%nobits
 4490              		.align	2
 4493              	line_out:
 4494 0000 00000000 		.space	512
 4494      00000000 
 4494      00000000 
 4494      00000000 
 4494      00000000 
 4495              		.global	flag
 4496              		.section	.bss.flag,"aw",%nobits
 4499              	flag:
 4500 0000 00       		.space	1
 4501              		.global	gps_raw
 4502              		.section	.bss.gps_raw,"aw",%nobits
 4503              		.align	2
 4506              	gps_raw:
 4507 0000 00000000 		.space	512
 4507      00000000 
 4507      00000000 
 4507      00000000 
 4507      00000000 
 4508              		.global	huart2
 4509              		.section	.bss.huart2,"aw",%nobits
 4510              		.align	2
 4513              	huart2:
 4514 0000 00000000 		.space	68
 4514      00000000 
 4514      00000000 
 4514      00000000 
 4514      00000000 
 4515              		.global	huart1
 4516              		.section	.bss.huart1,"aw",%nobits
 4517              		.align	2
 4520              	huart1:
 4521 0000 00000000 		.space	68
 4521      00000000 
 4521      00000000 
 4521      00000000 
 4521      00000000 
 4522              		.global	htim3
 4523              		.section	.bss.htim3,"aw",%nobits
 4524              		.align	2
 4527              	htim3:
 4528 0000 00000000 		.space	72
 4528      00000000 
 4528      00000000 
 4528      00000000 
 4528      00000000 
 4529              		.global	hspi3
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 138


 4530              		.section	.bss.hspi3,"aw",%nobits
 4531              		.align	2
 4534              	hspi3:
 4535 0000 00000000 		.space	88
 4535      00000000 
 4535      00000000 
 4535      00000000 
 4535      00000000 
 4536              		.global	hi2c2
 4537              		.section	.bss.hi2c2,"aw",%nobits
 4538              		.align	2
 4541              	hi2c2:
 4542 0000 00000000 		.space	84
 4542      00000000 
 4542      00000000 
 4542      00000000 
 4542      00000000 
 4543              		.global	hi2c1
 4544              		.section	.bss.hi2c1,"aw",%nobits
 4545              		.align	2
 4548              	hi2c1:
 4549 0000 00000000 		.space	84
 4549      00000000 
 4549      00000000 
 4549      00000000 
 4549      00000000 
 4550              		.text
 4551              	.Letext0:
 4552              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 4553              		.file 5 "/Users/roryschram/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscod
 4554              		.file 6 "/Users/roryschram/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscod
 4555              		.file 7 "/Users/roryschram/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscod
 4556              		.file 8 "/Users/roryschram/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscod
 4557              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 4558              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 4559              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 4560              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 4561              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 4562              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 4563              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 4564              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 4565              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 4566              		.file 18 "Core/Inc/bmp280.h"
 4567              		.file 19 "Core/Inc/LoRa.h"
 4568              		.file 20 "Core/Inc/fonts.h"
 4569              		.file 21 "Core/Inc/ssd1306.h"
 4570              		.file 22 "/Users/roryschram/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vsco
 4571              		.file 23 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 4572              		.file 24 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 4573              		.file 25 "/Users/roryschram/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vsco
 4574              		.file 26 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 4575              		.file 27 "/Users/roryschram/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vsco
 4576              		.file 28 "<built-in>"
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 139


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:21     .text.minmea_rescale:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:26     .text.minmea_rescale:00000000 minmea_rescale
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:97     .text.MX_GPIO_Init:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:102    .text.MX_GPIO_Init:00000000 MX_GPIO_Init
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:326    .text.MX_GPIO_Init:0000011c $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:334    .rodata.buildDataPacket.str1.4:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:354    .text.buildDataPacket:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:360    .text.buildDataPacket:00000000 buildDataPacket
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:604    .text.buildDataPacket:00000198 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:4473   .bss.transmit_data:00000000 transmit_data
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:4506   .bss.gps_raw:00000000 gps_raw
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:4486   .bss.line:00000000 line
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:4330   .bss.size:00000000 size
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:4365   .bss.humidity:00000000 humidity
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:4379   .bss.pressure:00000000 pressure
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:4372   .bss.temperature:00000000 temperature
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:4386   .bss.bmp280:00000000 bmp280
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:4400   .data.P_b:00000000 P_b
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:4393   .bss.altitude:00000000 altitude
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:4358   .bss.sPressure:00000000 sPressure
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:4351   .bss.sTemperature:00000000 sTemperature
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:4344   .bss.sHumidity:00000000 sHumidity
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:4337   .bss.sAltitude:00000000 sAltitude
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:632    .rodata.HAL_GPIO_EXTI_Callback.str1.4:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:645    .text.HAL_GPIO_EXTI_Callback:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:651    .text.HAL_GPIO_EXTI_Callback:00000000 HAL_GPIO_EXTI_Callback
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:970    .text.HAL_GPIO_EXTI_Callback:000001dc $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:4446   .bss.currentTicks:00000000 currentTicks
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:4453   .bss.preTicks:00000000 preTicks
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:4513   .bss.huart2:00000000 huart2
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:4425   .data.bModeChanged:00000000 bModeChanged
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:4439   .data.iMode:00000000 iMode
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:4432   .bss.sMode:00000000 sMode
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:4541   .bss.hi2c2:00000000 hi2c2
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:987    .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:993    .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:1020   .text.HAL_TIM_PeriodElapsedCallback:00000010 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:4527   .bss.htim3:00000000 htim3
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:4413   .bss.beginRead:00000000 beginRead
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:1026   .text.Error_Handler:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:1032   .text.Error_Handler:00000000 Error_Handler
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:1064   .text.MX_USART1_UART_Init:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:1069   .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:1123   .text.MX_USART1_UART_Init:0000002c $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:4520   .bss.huart1:00000000 huart1
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:1129   .text.MX_USART2_UART_Init:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:1134   .text.MX_USART2_UART_Init:00000000 MX_USART2_UART_Init
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:1188   .text.MX_USART2_UART_Init:0000002c $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:1194   .text.MX_I2C1_Init:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:1199   .text.MX_I2C1_Init:00000000 MX_I2C1_Init
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:1256   .text.MX_I2C1_Init:0000002c $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:4548   .bss.hi2c1:00000000 hi2c1
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:1263   .text.MX_SPI3_Init:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:1268   .text.MX_SPI3_Init:00000000 MX_SPI3_Init
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:1335   .text.MX_SPI3_Init:00000038 $d
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 140


/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:4534   .bss.hspi3:00000000 hspi3
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:1341   .text.MX_I2C2_Init:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:1346   .text.MX_I2C2_Init:00000000 MX_I2C2_Init
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:1403   .text.MX_I2C2_Init:0000002c $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:1410   .text.MX_TIM3_Init:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:1415   .text.MX_TIM3_Init:00000000 MX_TIM3_Init
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:1514   .text.MX_TIM3_Init:00000064 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:1520   .text.SystemClock_Config:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:1526   .text.SystemClock_Config:00000000 SystemClock_Config
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:1650   .text.SystemClock_Config:00000080 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:1656   .rodata.main.str1.4:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:1685   .text.main:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:1691   .text.main:00000000 main
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:2086   .text.main:0000023c $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:4323   .bss.Data:00000000 Data
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:4466   .bss.myLoRa:00000000 myLoRa
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:4407   .bss.packetSize:00000000 packetSize
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:2120   .text.main:000002b4 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:2192   .text.main:00000318 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:2252   .text.main:00000408 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:2635   .text.main:0000060c $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:2644   .text.main:00000624 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:3262   .text.main:0000096c $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:3266   .text.main:00000970 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:3893   .text.main:00000ce0 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:3897   .text.main:00000ce4 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:4314   .text.main:00000f38 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:4320   .bss.Data:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:4327   .bss.size:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:4334   .bss.sAltitude:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:4341   .bss.sHumidity:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:4348   .bss.sTemperature:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:4355   .bss.sPressure:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:4362   .bss.humidity:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:4369   .bss.temperature:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:4376   .bss.pressure:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:4383   .bss.bmp280:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:4390   .bss.altitude:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:4397   .data.P_b:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:4404   .bss.packetSize:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:4414   .bss.beginRead:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:4419   .bss.sendData:00000000 sendData
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:4420   .bss.sendData:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:4429   .bss.sMode:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:4436   .data.iMode:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:4443   .bss.currentTicks:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:4450   .bss.preTicks:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:4459   .data.isLoraReady:00000000 isLoraReady
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:4463   .bss.myLoRa:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:4470   .bss.transmit_data:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:4479   .bss.bme280p:00000000 bme280p
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:4480   .bss.bme280p:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:4483   .bss.line:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:4493   .bss.line_out:00000000 line_out
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:4490   .bss.line_out:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:4499   .bss.flag:00000000 flag
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:4500   .bss.flag:00000000 $d
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s 			page 141


/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:4503   .bss.gps_raw:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:4510   .bss.huart2:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:4517   .bss.huart1:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:4524   .bss.htim3:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:4531   .bss.hspi3:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:4538   .bss.hi2c2:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccuVySre.s:4545   .bss.hi2c1:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
__aeabi_f2d
__aeabi_dsub
__aeabi_dmul
__aeabi_d2f
memset
strtok
strcpy
minmea_parse_rmc
strlen
sprintf
bmp280_read_float
pow
gcvt
HAL_GetTick
HAL_UART_Transmit
ssd1306_SetCursor
ssd1306_WriteString
ssd1306_UpdateScreen
Font_16x26
HAL_UART_Init
HAL_I2C_Init
HAL_SPI_Init
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_TIM_Base_Start_IT
bmp280_init_default_params
HAL_Delay
bmp280_init
newLoRa
LoRa_init
snprintf
HAL_UART_Transmit_IT
ssd1306_Init
LoRa_transmit
HAL_UARTEx_ReceiveToIdle
HAL_UARTEx_ReceiveToIdle_IT
