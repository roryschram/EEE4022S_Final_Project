ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.minmea_rescale,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	minmea_rescale:
  27              	.LVL0:
  28              	.LFB134:
  29              		.file 2 "Core/Inc/minmea.h"
   1:Core/Inc/minmea.h **** /*
   2:Core/Inc/minmea.h ****  * Copyright Â© 2014 Kosma Moczek <kosma@cloudyourcar.com>
   3:Core/Inc/minmea.h ****  * This program is free software. It comes without any warranty, to the extent
   4:Core/Inc/minmea.h ****  * permitted by applicable law. You can redistribute it and/or modify it under
   5:Core/Inc/minmea.h ****  * the terms of the Do What The Fuck You Want To Public License, Version 2, as
   6:Core/Inc/minmea.h ****  * published by Sam Hocevar. See the COPYING file for more details.
   7:Core/Inc/minmea.h ****  */
   8:Core/Inc/minmea.h **** 
   9:Core/Inc/minmea.h **** #ifndef MINMEA_H
  10:Core/Inc/minmea.h **** #define MINMEA_H
  11:Core/Inc/minmea.h **** 
  12:Core/Inc/minmea.h **** #ifdef __cplusplus
  13:Core/Inc/minmea.h **** extern "C" {
  14:Core/Inc/minmea.h **** #endif
  15:Core/Inc/minmea.h **** 
  16:Core/Inc/minmea.h **** #include <ctype.h>
  17:Core/Inc/minmea.h **** #include <stdint.h>
  18:Core/Inc/minmea.h **** #include <stdbool.h>
  19:Core/Inc/minmea.h **** #include <time.h>
  20:Core/Inc/minmea.h **** #include <math.h>
  21:Core/Inc/minmea.h **** #ifdef MINMEA_INCLUDE_COMPAT
  22:Core/Inc/minmea.h **** #include <minmea_compat.h>
  23:Core/Inc/minmea.h **** #endif
  24:Core/Inc/minmea.h **** 
  25:Core/Inc/minmea.h **** #ifndef MINMEA_MAX_SENTENCE_LENGTH
  26:Core/Inc/minmea.h **** #define MINMEA_MAX_SENTENCE_LENGTH 80
  27:Core/Inc/minmea.h **** #endif
  28:Core/Inc/minmea.h **** 
  29:Core/Inc/minmea.h **** enum minmea_sentence_id {
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 2


  30:Core/Inc/minmea.h ****     MINMEA_INVALID = -1,
  31:Core/Inc/minmea.h ****     MINMEA_UNKNOWN = 0,
  32:Core/Inc/minmea.h ****     MINMEA_SENTENCE_GBS,
  33:Core/Inc/minmea.h ****     MINMEA_SENTENCE_GGA,
  34:Core/Inc/minmea.h ****     MINMEA_SENTENCE_GLL,
  35:Core/Inc/minmea.h ****     MINMEA_SENTENCE_GSA,
  36:Core/Inc/minmea.h ****     MINMEA_SENTENCE_GST,
  37:Core/Inc/minmea.h ****     MINMEA_SENTENCE_GSV,
  38:Core/Inc/minmea.h ****     MINMEA_SENTENCE_RMC,
  39:Core/Inc/minmea.h ****     MINMEA_SENTENCE_VTG,
  40:Core/Inc/minmea.h ****     MINMEA_SENTENCE_ZDA,
  41:Core/Inc/minmea.h **** };
  42:Core/Inc/minmea.h **** 
  43:Core/Inc/minmea.h **** struct minmea_float {
  44:Core/Inc/minmea.h ****     int_least32_t value;
  45:Core/Inc/minmea.h ****     int_least32_t scale;
  46:Core/Inc/minmea.h **** };
  47:Core/Inc/minmea.h **** 
  48:Core/Inc/minmea.h **** struct minmea_date {
  49:Core/Inc/minmea.h ****     int day;
  50:Core/Inc/minmea.h ****     int month;
  51:Core/Inc/minmea.h ****     int year;
  52:Core/Inc/minmea.h **** };
  53:Core/Inc/minmea.h **** 
  54:Core/Inc/minmea.h **** struct minmea_time {
  55:Core/Inc/minmea.h ****     int hours;
  56:Core/Inc/minmea.h ****     int minutes;
  57:Core/Inc/minmea.h ****     int seconds;
  58:Core/Inc/minmea.h ****     int microseconds;
  59:Core/Inc/minmea.h **** };
  60:Core/Inc/minmea.h **** 
  61:Core/Inc/minmea.h **** struct minmea_sentence_gbs {
  62:Core/Inc/minmea.h ****     struct minmea_time time;
  63:Core/Inc/minmea.h ****     struct minmea_float err_latitude;
  64:Core/Inc/minmea.h ****     struct minmea_float err_longitude;
  65:Core/Inc/minmea.h ****     struct minmea_float err_altitude;
  66:Core/Inc/minmea.h ****     int svid;
  67:Core/Inc/minmea.h ****     struct minmea_float prob;
  68:Core/Inc/minmea.h ****     struct minmea_float bias;
  69:Core/Inc/minmea.h ****     struct minmea_float stddev;
  70:Core/Inc/minmea.h **** };
  71:Core/Inc/minmea.h **** 
  72:Core/Inc/minmea.h **** struct minmea_sentence_rmc {
  73:Core/Inc/minmea.h ****     struct minmea_time time;
  74:Core/Inc/minmea.h ****     bool valid;
  75:Core/Inc/minmea.h ****     struct minmea_float latitude;
  76:Core/Inc/minmea.h ****     struct minmea_float longitude;
  77:Core/Inc/minmea.h ****     struct minmea_float speed;
  78:Core/Inc/minmea.h ****     struct minmea_float course;
  79:Core/Inc/minmea.h ****     struct minmea_date date;
  80:Core/Inc/minmea.h ****     struct minmea_float variation;
  81:Core/Inc/minmea.h **** };
  82:Core/Inc/minmea.h **** 
  83:Core/Inc/minmea.h **** struct minmea_sentence_gga {
  84:Core/Inc/minmea.h ****     struct minmea_time time;
  85:Core/Inc/minmea.h ****     struct minmea_float latitude;
  86:Core/Inc/minmea.h ****     struct minmea_float longitude;
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 3


  87:Core/Inc/minmea.h ****     int fix_quality;
  88:Core/Inc/minmea.h ****     int satellites_tracked;
  89:Core/Inc/minmea.h ****     struct minmea_float hdop;
  90:Core/Inc/minmea.h ****     struct minmea_float altitude; char altitude_units;
  91:Core/Inc/minmea.h ****     struct minmea_float height; char height_units;
  92:Core/Inc/minmea.h ****     struct minmea_float dgps_age;
  93:Core/Inc/minmea.h **** };
  94:Core/Inc/minmea.h **** 
  95:Core/Inc/minmea.h **** enum minmea_gll_status {
  96:Core/Inc/minmea.h ****     MINMEA_GLL_STATUS_DATA_VALID = 'A',
  97:Core/Inc/minmea.h ****     MINMEA_GLL_STATUS_DATA_NOT_VALID = 'V',
  98:Core/Inc/minmea.h **** };
  99:Core/Inc/minmea.h **** 
 100:Core/Inc/minmea.h **** // FAA mode added to some fields in NMEA 2.3.
 101:Core/Inc/minmea.h **** enum minmea_faa_mode {
 102:Core/Inc/minmea.h ****     MINMEA_FAA_MODE_AUTONOMOUS = 'A',
 103:Core/Inc/minmea.h ****     MINMEA_FAA_MODE_DIFFERENTIAL = 'D',
 104:Core/Inc/minmea.h ****     MINMEA_FAA_MODE_ESTIMATED = 'E',
 105:Core/Inc/minmea.h ****     MINMEA_FAA_MODE_MANUAL = 'M',
 106:Core/Inc/minmea.h ****     MINMEA_FAA_MODE_SIMULATED = 'S',
 107:Core/Inc/minmea.h ****     MINMEA_FAA_MODE_NOT_VALID = 'N',
 108:Core/Inc/minmea.h ****     MINMEA_FAA_MODE_PRECISE = 'P',
 109:Core/Inc/minmea.h **** };
 110:Core/Inc/minmea.h **** 
 111:Core/Inc/minmea.h **** struct minmea_sentence_gll {
 112:Core/Inc/minmea.h ****     struct minmea_float latitude;
 113:Core/Inc/minmea.h ****     struct minmea_float longitude;
 114:Core/Inc/minmea.h ****     struct minmea_time time;
 115:Core/Inc/minmea.h ****     char status;
 116:Core/Inc/minmea.h ****     char mode;
 117:Core/Inc/minmea.h **** };
 118:Core/Inc/minmea.h **** 
 119:Core/Inc/minmea.h **** struct minmea_sentence_gst {
 120:Core/Inc/minmea.h ****     struct minmea_time time;
 121:Core/Inc/minmea.h ****     struct minmea_float rms_deviation;
 122:Core/Inc/minmea.h ****     struct minmea_float semi_major_deviation;
 123:Core/Inc/minmea.h ****     struct minmea_float semi_minor_deviation;
 124:Core/Inc/minmea.h ****     struct minmea_float semi_major_orientation;
 125:Core/Inc/minmea.h ****     struct minmea_float latitude_error_deviation;
 126:Core/Inc/minmea.h ****     struct minmea_float longitude_error_deviation;
 127:Core/Inc/minmea.h ****     struct minmea_float altitude_error_deviation;
 128:Core/Inc/minmea.h **** };
 129:Core/Inc/minmea.h **** 
 130:Core/Inc/minmea.h **** enum minmea_gsa_mode {
 131:Core/Inc/minmea.h ****     MINMEA_GPGSA_MODE_AUTO = 'A',
 132:Core/Inc/minmea.h ****     MINMEA_GPGSA_MODE_FORCED = 'M',
 133:Core/Inc/minmea.h **** };
 134:Core/Inc/minmea.h **** 
 135:Core/Inc/minmea.h **** enum minmea_gsa_fix_type {
 136:Core/Inc/minmea.h ****     MINMEA_GPGSA_FIX_NONE = 1,
 137:Core/Inc/minmea.h ****     MINMEA_GPGSA_FIX_2D = 2,
 138:Core/Inc/minmea.h ****     MINMEA_GPGSA_FIX_3D = 3,
 139:Core/Inc/minmea.h **** };
 140:Core/Inc/minmea.h **** 
 141:Core/Inc/minmea.h **** struct minmea_sentence_gsa {
 142:Core/Inc/minmea.h ****     char mode;
 143:Core/Inc/minmea.h ****     int fix_type;
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 4


 144:Core/Inc/minmea.h ****     int sats[12];
 145:Core/Inc/minmea.h ****     struct minmea_float pdop;
 146:Core/Inc/minmea.h ****     struct minmea_float hdop;
 147:Core/Inc/minmea.h ****     struct minmea_float vdop;
 148:Core/Inc/minmea.h **** };
 149:Core/Inc/minmea.h **** 
 150:Core/Inc/minmea.h **** struct minmea_sat_info {
 151:Core/Inc/minmea.h ****     int nr;
 152:Core/Inc/minmea.h ****     int elevation;
 153:Core/Inc/minmea.h ****     int azimuth;
 154:Core/Inc/minmea.h ****     int snr;
 155:Core/Inc/minmea.h **** };
 156:Core/Inc/minmea.h **** 
 157:Core/Inc/minmea.h **** struct minmea_sentence_gsv {
 158:Core/Inc/minmea.h ****     int total_msgs;
 159:Core/Inc/minmea.h ****     int msg_nr;
 160:Core/Inc/minmea.h ****     int total_sats;
 161:Core/Inc/minmea.h ****     struct minmea_sat_info sats[4];
 162:Core/Inc/minmea.h **** };
 163:Core/Inc/minmea.h **** 
 164:Core/Inc/minmea.h **** struct minmea_sentence_vtg {
 165:Core/Inc/minmea.h ****     struct minmea_float true_track_degrees;
 166:Core/Inc/minmea.h ****     struct minmea_float magnetic_track_degrees;
 167:Core/Inc/minmea.h ****     struct minmea_float speed_knots;
 168:Core/Inc/minmea.h ****     struct minmea_float speed_kph;
 169:Core/Inc/minmea.h ****     enum minmea_faa_mode faa_mode;
 170:Core/Inc/minmea.h **** };
 171:Core/Inc/minmea.h **** 
 172:Core/Inc/minmea.h **** struct minmea_sentence_zda {
 173:Core/Inc/minmea.h ****     struct minmea_time time;
 174:Core/Inc/minmea.h ****     struct minmea_date date;
 175:Core/Inc/minmea.h ****     int hour_offset;
 176:Core/Inc/minmea.h ****     int minute_offset;
 177:Core/Inc/minmea.h **** };
 178:Core/Inc/minmea.h **** 
 179:Core/Inc/minmea.h **** /**
 180:Core/Inc/minmea.h ****  * Calculate raw sentence checksum. Does not check sentence integrity.
 181:Core/Inc/minmea.h ****  */
 182:Core/Inc/minmea.h **** uint8_t minmea_checksum(const char *sentence);
 183:Core/Inc/minmea.h **** 
 184:Core/Inc/minmea.h **** /**
 185:Core/Inc/minmea.h ****  * Check sentence validity and checksum. Returns true for valid sentences.
 186:Core/Inc/minmea.h ****  */
 187:Core/Inc/minmea.h **** bool minmea_check(const char *sentence, bool strict);
 188:Core/Inc/minmea.h **** 
 189:Core/Inc/minmea.h **** /**
 190:Core/Inc/minmea.h ****  * Determine talker identifier.
 191:Core/Inc/minmea.h ****  */
 192:Core/Inc/minmea.h **** bool minmea_talker_id(char talker[3], const char *sentence);
 193:Core/Inc/minmea.h **** 
 194:Core/Inc/minmea.h **** /**
 195:Core/Inc/minmea.h ****  * Determine sentence identifier.
 196:Core/Inc/minmea.h ****  */
 197:Core/Inc/minmea.h **** enum minmea_sentence_id minmea_sentence_id(const char *sentence, bool strict);
 198:Core/Inc/minmea.h **** 
 199:Core/Inc/minmea.h **** /**
 200:Core/Inc/minmea.h ****  * Scanf-like processor for NMEA sentences. Supports the following formats:
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 5


 201:Core/Inc/minmea.h ****  * c - single character (char *)
 202:Core/Inc/minmea.h ****  * d - direction, returned as 1/-1, default 0 (int *)
 203:Core/Inc/minmea.h ****  * f - fractional, returned as value + scale (struct minmea_float *)
 204:Core/Inc/minmea.h ****  * i - decimal, default zero (int *)
 205:Core/Inc/minmea.h ****  * s - string (char *)
 206:Core/Inc/minmea.h ****  * t - talker identifier and type (char *)
 207:Core/Inc/minmea.h ****  * D - date (struct minmea_date *)
 208:Core/Inc/minmea.h ****  * T - time stamp (struct minmea_time *)
 209:Core/Inc/minmea.h ****  * _ - ignore this field
 210:Core/Inc/minmea.h ****  * ; - following fields are optional
 211:Core/Inc/minmea.h ****  * Returns true on success. See library source code for details.
 212:Core/Inc/minmea.h ****  */
 213:Core/Inc/minmea.h **** bool minmea_scan(const char *sentence, const char *format, ...);
 214:Core/Inc/minmea.h **** 
 215:Core/Inc/minmea.h **** /*
 216:Core/Inc/minmea.h ****  * Parse a specific type of sentence. Return true on success.
 217:Core/Inc/minmea.h ****  */
 218:Core/Inc/minmea.h **** bool minmea_parse_gbs(struct minmea_sentence_gbs *frame, const char *sentence);
 219:Core/Inc/minmea.h **** bool minmea_parse_rmc(struct minmea_sentence_rmc *frame, const char *sentence);
 220:Core/Inc/minmea.h **** bool minmea_parse_gga(struct minmea_sentence_gga *frame, const char *sentence);
 221:Core/Inc/minmea.h **** bool minmea_parse_gsa(struct minmea_sentence_gsa *frame, const char *sentence);
 222:Core/Inc/minmea.h **** bool minmea_parse_gll(struct minmea_sentence_gll *frame, const char *sentence);
 223:Core/Inc/minmea.h **** bool minmea_parse_gst(struct minmea_sentence_gst *frame, const char *sentence);
 224:Core/Inc/minmea.h **** bool minmea_parse_gsv(struct minmea_sentence_gsv *frame, const char *sentence);
 225:Core/Inc/minmea.h **** bool minmea_parse_vtg(struct minmea_sentence_vtg *frame, const char *sentence);
 226:Core/Inc/minmea.h **** bool minmea_parse_zda(struct minmea_sentence_zda *frame, const char *sentence);
 227:Core/Inc/minmea.h **** 
 228:Core/Inc/minmea.h **** /**
 229:Core/Inc/minmea.h ****  * Convert GPS UTC date/time representation to a UNIX calendar time.
 230:Core/Inc/minmea.h ****  */
 231:Core/Inc/minmea.h **** int minmea_getdatetime(struct tm *tm, const struct minmea_date *date, const struct minmea_time *tim
 232:Core/Inc/minmea.h **** 
 233:Core/Inc/minmea.h **** /**
 234:Core/Inc/minmea.h ****  * Convert GPS UTC date/time representation to a UNIX timestamp.
 235:Core/Inc/minmea.h ****  */
 236:Core/Inc/minmea.h **** int minmea_gettime(struct timespec *ts, const struct minmea_date *date, const struct minmea_time *t
 237:Core/Inc/minmea.h **** 
 238:Core/Inc/minmea.h **** /**
 239:Core/Inc/minmea.h ****  * Rescale a fixed-point value to a different scale. Rounds towards zero.
 240:Core/Inc/minmea.h ****  */
 241:Core/Inc/minmea.h **** static inline int_least32_t minmea_rescale(const struct minmea_float *f, int_least32_t new_scale)
 242:Core/Inc/minmea.h **** {
  30              		.loc 2 242 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              		.loc 2 242 1 is_stmt 0 view .LVU1
  36 0000 0346     		mov	r3, r0
 243:Core/Inc/minmea.h ****     if (f->scale == 0)
  37              		.loc 2 243 5 is_stmt 1 view .LVU2
  38              		.loc 2 243 10 is_stmt 0 view .LVU3
  39 0002 4068     		ldr	r0, [r0, #4]
  40              	.LVL1:
  41              		.loc 2 243 8 view .LVU4
  42 0004 F0B1     		cbz	r0, .L1
 244:Core/Inc/minmea.h ****         return 0;
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 6


 245:Core/Inc/minmea.h ****     if (f->scale == new_scale)
  43              		.loc 2 245 5 is_stmt 1 view .LVU5
  44              		.loc 2 245 8 is_stmt 0 view .LVU6
  45 0006 8842     		cmp	r0, r1
  46 0008 15D0     		beq	.L5
 246:Core/Inc/minmea.h ****         return f->value;
 247:Core/Inc/minmea.h ****     if (f->scale > new_scale)
  47              		.loc 2 247 5 is_stmt 1 view .LVU7
  48              		.loc 2 247 8 is_stmt 0 view .LVU8
  49 000a 8842     		cmp	r0, r1
  50 000c 15DD     		ble	.L4
 248:Core/Inc/minmea.h ****         return (f->value + ((f->value > 0) - (f->value < 0)) * f->scale/new_scale/2) / (f->scale/ne
  51              		.loc 2 248 9 is_stmt 1 view .LVU9
  52              		.loc 2 248 18 is_stmt 0 view .LVU10
  53 000e 1A68     		ldr	r2, [r3]
  54              		.loc 2 248 56 view .LVU11
  55 0010 D30F     		lsrs	r3, r2, #31
  56              	.LVL2:
  57              		.loc 2 248 44 view .LVU12
  58 0012 002A     		cmp	r2, #0
  59 0014 D4BF     		ite	le
  60 0016 5B42     		rsble	r3, r3, #0
  61 0018 C3F10103 		rsbgt	r3, r3, #1
  62              		.loc 2 248 62 view .LVU13
  63 001c 00FB03F3 		mul	r3, r0, r3
  64              		.loc 2 248 72 view .LVU14
  65 0020 93FBF1F3 		sdiv	r3, r3, r1
  66              		.loc 2 248 82 view .LVU15
  67 0024 03EBD373 		add	r3, r3, r3, lsr #31
  68              		.loc 2 248 26 view .LVU16
  69 0028 02EB6302 		add	r2, r2, r3, asr #1
  70              		.loc 2 248 97 view .LVU17
  71 002c 90FBF1F0 		sdiv	r0, r0, r1
  72              		.loc 2 248 86 view .LVU18
  73 0030 92FBF0F0 		sdiv	r0, r2, r0
  74 0034 7047     		bx	lr
  75              	.LVL3:
  76              	.L5:
 246:Core/Inc/minmea.h ****         return f->value;
  77              		.loc 2 246 9 is_stmt 1 view .LVU19
 246:Core/Inc/minmea.h ****         return f->value;
  78              		.loc 2 246 17 is_stmt 0 view .LVU20
  79 0036 1868     		ldr	r0, [r3]
  80 0038 7047     		bx	lr
  81              	.L4:
 249:Core/Inc/minmea.h ****     else
 250:Core/Inc/minmea.h ****         return f->value * (new_scale/f->scale);
  82              		.loc 2 250 9 is_stmt 1 view .LVU21
  83              		.loc 2 250 17 is_stmt 0 view .LVU22
  84 003a 1B68     		ldr	r3, [r3]
  85              	.LVL4:
  86              		.loc 2 250 37 view .LVU23
  87 003c 91FBF0F0 		sdiv	r0, r1, r0
  88              		.loc 2 250 25 view .LVU24
  89 0040 03FB00F0 		mul	r0, r3, r0
  90              	.L1:
 251:Core/Inc/minmea.h **** }
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 7


  91              		.loc 2 251 1 view .LVU25
  92 0044 7047     		bx	lr
  93              		.cfi_endproc
  94              	.LFE134:
  96              		.section	.text.MX_GPIO_Init,"ax",%progbits
  97              		.align	1
  98              		.syntax unified
  99              		.thumb
 100              		.thumb_func
 102              	MX_GPIO_Init:
 103              	.LFB145:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include <stdio.h>
  25:Core/Src/main.c **** #include "minmea.h"
  26:Core/Src/main.c **** #include <stdlib.h>
  27:Core/Src/main.c **** #include <string.h>
  28:Core/Src/main.c **** #include <stdint.h>
  29:Core/Src/main.c **** #include "bmp280.h"
  30:Core/Src/main.c **** #include <float.h>
  31:Core/Src/main.c **** #include <math.h>
  32:Core/Src/main.c **** #include <LoRa.h>
  33:Core/Src/main.c **** #include "ssd1306.h"
  34:Core/Src/main.c **** #include "fonts.h"
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* USER CODE END Includes */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* USER CODE END PTD */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  45:Core/Src/main.c **** /* USER CODE BEGIN PD */
  46:Core/Src/main.c **** #define INDENT_SPACES "  "
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 8


  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* USER CODE END PD */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  51:Core/Src/main.c **** /* USER CODE BEGIN PM */
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* USER CODE END PM */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  56:Core/Src/main.c **** I2C_HandleTypeDef hi2c1;
  57:Core/Src/main.c **** I2C_HandleTypeDef hi2c2;
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** SPI_HandleTypeDef hspi3;
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** UART_HandleTypeDef huart1;
  62:Core/Src/main.c **** UART_HandleTypeDef huart2;
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** /* USER CODE BEGIN PV */
  65:Core/Src/main.c **** uint8_t gps_raw[512] = {"\0"};
  66:Core/Src/main.c **** uint8_t flag = 0;
  67:Core/Src/main.c **** char line_out[512] = {"\0"};
  68:Core/Src/main.c **** char line[512] = {"\0"};
  69:Core/Src/main.c **** bool bme280p;
  70:Core/Src/main.c **** uint8_t transmit_data[256] = {"\0"};
  71:Core/Src/main.c **** LoRa myLoRa;
  72:Core/Src/main.c **** bool isLoraReady = true;
  73:Core/Src/main.c **** int preTicks = 0;
  74:Core/Src/main.c **** int currentTicks = 0;
  75:Core/Src/main.c **** int iMode = 1;
  76:Core/Src/main.c **** char sMode[10];
  77:Core/Src/main.c **** bool bModeChanged = false;
  78:Core/Src/main.c **** uint32_t timeNow = 0;
  79:Core/Src/main.c **** uint32_t timePre = 0;
  80:Core/Src/main.c **** 
  81:Core/Src/main.c **** //Variables to work out altitude
  82:Core/Src/main.c **** 
  83:Core/Src/main.c **** //Pressure at sea level
  84:Core/Src/main.c **** float P_b = 101325;
  85:Core/Src/main.c **** 
  86:Core/Src/main.c **** //Height that we are calculating
  87:Core/Src/main.c **** float altitude = 0;
  88:Core/Src/main.c **** 
  89:Core/Src/main.c **** 
  90:Core/Src/main.c **** BMP280_HandleTypedef bmp280;
  91:Core/Src/main.c **** 
  92:Core/Src/main.c **** float pressure, temperature, humidity;
  93:Core/Src/main.c **** char sPressure[128] = {"\0"};
  94:Core/Src/main.c **** char sTemperature[128] = {"\0"};
  95:Core/Src/main.c **** char sHumidity[128] = {"\0"};
  96:Core/Src/main.c **** char sAltitude[128] = {"\0"};
  97:Core/Src/main.c **** 
  98:Core/Src/main.c **** size_t size;
  99:Core/Src/main.c **** uint8_t Data[256] = {"\0"};
 100:Core/Src/main.c **** 
 101:Core/Src/main.c **** 
 102:Core/Src/main.c **** /* USER CODE END PV */
 103:Core/Src/main.c **** 
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 9


 104:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
 105:Core/Src/main.c **** void SystemClock_Config(void);
 106:Core/Src/main.c **** static void MX_GPIO_Init(void);
 107:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
 108:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
 109:Core/Src/main.c **** static void MX_I2C1_Init(void);
 110:Core/Src/main.c **** static void MX_SPI3_Init(void);
 111:Core/Src/main.c **** static void MX_I2C2_Init(void);
 112:Core/Src/main.c **** /* USER CODE BEGIN PFP */
 113:Core/Src/main.c **** 
 114:Core/Src/main.c **** 
 115:Core/Src/main.c **** /* USER CODE END PFP */
 116:Core/Src/main.c **** 
 117:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 118:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 119:Core/Src/main.c **** 
 120:Core/Src/main.c **** /* USER CODE END 0 */
 121:Core/Src/main.c **** 
 122:Core/Src/main.c **** /**
 123:Core/Src/main.c ****   * @brief  The application entry point.
 124:Core/Src/main.c ****   * @retval int
 125:Core/Src/main.c ****   */
 126:Core/Src/main.c **** int main(void)
 127:Core/Src/main.c **** {
 128:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 129:Core/Src/main.c **** 
 130:Core/Src/main.c ****   /* USER CODE END 1 */
 131:Core/Src/main.c **** 
 132:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 133:Core/Src/main.c **** 
 134:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 135:Core/Src/main.c ****   HAL_Init();
 136:Core/Src/main.c **** 
 137:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 138:Core/Src/main.c **** 
 139:Core/Src/main.c ****   /* USER CODE END Init */
 140:Core/Src/main.c **** 
 141:Core/Src/main.c ****   /* Configure the system clock */
 142:Core/Src/main.c ****   SystemClock_Config();
 143:Core/Src/main.c **** 
 144:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 145:Core/Src/main.c **** 
 146:Core/Src/main.c ****   /* USER CODE END SysInit */
 147:Core/Src/main.c **** 
 148:Core/Src/main.c ****   /* Initialize all configured peripherals */
 149:Core/Src/main.c ****   MX_GPIO_Init();
 150:Core/Src/main.c ****   MX_USART1_UART_Init();
 151:Core/Src/main.c ****   MX_USART2_UART_Init();
 152:Core/Src/main.c ****   MX_I2C1_Init();
 153:Core/Src/main.c ****   MX_SPI3_Init();
 154:Core/Src/main.c ****   MX_I2C2_Init();
 155:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 156:Core/Src/main.c **** 
 157:Core/Src/main.c ****   bmp280_init_default_params(&bmp280.params);
 158:Core/Src/main.c **** 	bmp280.addr = 0x77;
 159:Core/Src/main.c **** 	bmp280.i2c = &hi2c1;
 160:Core/Src/main.c **** 
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 10


 161:Core/Src/main.c **** 	while (!bmp280_init(&bmp280, &bmp280.params)) {
 162:Core/Src/main.c **** 		size = sprintf((char *)Data, "BMP280 initialization failed\n");
 163:Core/Src/main.c **** 		HAL_UART_Transmit(&huart2, Data, size, 1000);
 164:Core/Src/main.c **** 		HAL_Delay(2000);
 165:Core/Src/main.c **** 	}
 166:Core/Src/main.c **** 	bool bme280p = bmp280.id == BME280_CHIP_ID;
 167:Core/Src/main.c **** 	size = sprintf((char *)Data, "\nBMP280: found %s\n", bme280p ? "BME280" : "BMP280");
 168:Core/Src/main.c **** 	HAL_UART_Transmit(&huart2, Data, size, 1000);
 169:Core/Src/main.c **** 
 170:Core/Src/main.c ****   myLoRa = newLoRa();
 171:Core/Src/main.c ****   myLoRa.CS_port         = GPIOA;
 172:Core/Src/main.c ****   myLoRa.CS_pin          = GPIO_PIN_4;
 173:Core/Src/main.c ****   myLoRa.reset_port      = GPIOB;
 174:Core/Src/main.c ****   myLoRa.reset_pin       = GPIO_PIN_8;
 175:Core/Src/main.c ****   myLoRa.DIO0_port       = GPIOB;
 176:Core/Src/main.c ****   myLoRa.DIO0_pin        = GPIO_PIN_9;
 177:Core/Src/main.c ****   myLoRa.hSPIx           = &hspi3;
 178:Core/Src/main.c **** 
 179:Core/Src/main.c ****   myLoRa.frequency             = 433;             // default = 433 MHz
 180:Core/Src/main.c ****   myLoRa.spredingFactor        = SF_7;            // default = SF_7
 181:Core/Src/main.c ****   myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 182:Core/Src/main.c ****   myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 183:Core/Src/main.c ****   myLoRa.power                 = POWER_20db;      // default = 20db
 184:Core/Src/main.c ****   myLoRa.overCurrentProtection = 100;             // default = 100 mA
 185:Core/Src/main.c ****   myLoRa.preamble              = 8;              // default = 8;
 186:Core/Src/main.c **** 
 187:Core/Src/main.c ****   uint16_t ret = LoRa_init(&myLoRa);
 188:Core/Src/main.c ****   uint8_t buff[128] = {"\0"};
 189:Core/Src/main.c ****   
 190:Core/Src/main.c **** 
 191:Core/Src/main.c **** if (ret==LORA_OK){
 192:Core/Src/main.c ****   snprintf(buff,sizeof(buff),"LoRa is running... :) \n\r");
 193:Core/Src/main.c ****   size = strlen(&buff);
 194:Core/Src/main.c ****   LoRa_transmit(&myLoRa, (uint8_t*)buff, size, 100);
 195:Core/Src/main.c ****   HAL_UART_Transmit(&huart2, buff, size, 1000);
 196:Core/Src/main.c **** }
 197:Core/Src/main.c **** else{
 198:Core/Src/main.c ****   snprintf(buff,sizeof(buff),"\n\r LoRa failed :( \n\r Error code: %d \n\r", ret);
 199:Core/Src/main.c ****   size = strlen(&buff);
 200:Core/Src/main.c ****   HAL_UART_Transmit(&huart2, buff, size, 1000);
 201:Core/Src/main.c **** }
 202:Core/Src/main.c **** 
 203:Core/Src/main.c **** 
 204:Core/Src/main.c **** ssd1306_Init(&hi2c2);
 205:Core/Src/main.c **** 
 206:Core/Src/main.c **** // Set cursors and write the word "mode"
 207:Core/Src/main.c **** ssd1306_SetCursor(0, 0);
 208:Core/Src/main.c **** ssd1306_WriteString("Mode:", Font_16x26, White);
 209:Core/Src/main.c **** 
 210:Core/Src/main.c **** ssd1306_SetCursor(0, 35);
 211:Core/Src/main.c **** sprintf(sMode, "%d", iMode);
 212:Core/Src/main.c **** ssd1306_WriteString(sMode, Font_16x26, White);
 213:Core/Src/main.c **** 
 214:Core/Src/main.c **** // Copy all data from local screenbuffer to the screen
 215:Core/Src/main.c **** ssd1306_UpdateScreen(&hi2c2);
 216:Core/Src/main.c **** 
 217:Core/Src/main.c ****   /* USER CODE END 2 */
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 11


 218:Core/Src/main.c **** 
 219:Core/Src/main.c ****   /* Infinite loop */
 220:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 221:Core/Src/main.c ****   while (1)
 222:Core/Src/main.c ****   {
 223:Core/Src/main.c ****     //HAL_UARTEx_ReceiveToIdle_DMA(&huart1,(uint8_t*)gps_raw,512);
 224:Core/Src/main.c ****     timeNow = HAL_GetTick();
 225:Core/Src/main.c ****     if ((timeNow-timePre) >= 2000) {
 226:Core/Src/main.c ****       
 227:Core/Src/main.c **** 
 228:Core/Src/main.c ****     if (isLoraReady){
 229:Core/Src/main.c ****       HAL_UARTEx_ReceiveToIdle_IT(&huart1,(uint8_t*)gps_raw,512);
 230:Core/Src/main.c ****       if (flag == 1) {
 231:Core/Src/main.c ****       size = strlen(&transmit_data);
 232:Core/Src/main.c ****       LoRa_transmit(&myLoRa, (uint8_t*)"H", 1, 100);
 233:Core/Src/main.c ****       size = strlen(&transmit_data);
 234:Core/Src/main.c **** 	    HAL_UART_Transmit(&huart2, transmit_data, size, 1000);
 235:Core/Src/main.c ****       flag = 0;
 236:Core/Src/main.c ****       memset(transmit_data, '\0', sizeof(transmit_data));
 237:Core/Src/main.c ****     }
 238:Core/Src/main.c **** 
 239:Core/Src/main.c ****     if (bModeChanged) {
 240:Core/Src/main.c **** switch (iMode) {
 241:Core/Src/main.c ****     case 1:
 242:Core/Src/main.c ****       // statements
 243:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 244:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_7;            // default = SF_7
 245:Core/Src/main.c ****       myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 246:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 247:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 248:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 249:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 250:Core/Src/main.c ****       LoRa_init(&myLoRa);
 251:Core/Src/main.c ****       break;
 252:Core/Src/main.c **** 
 253:Core/Src/main.c ****     case 2:
 254:Core/Src/main.c ****       // statements
 255:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 256:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_7;            // default = SF_7
 257:Core/Src/main.c ****       myLoRa.bandWidth             = BW_10_4KHz;       // default = BW_125KHz
 258:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 259:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 260:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 261:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 262:Core/Src/main.c ****       LoRa_init(&myLoRa);
 263:Core/Src/main.c ****       break;
 264:Core/Src/main.c **** 
 265:Core/Src/main.c ****     case 3:
 266:Core/Src/main.c ****       // statements
 267:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 268:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_7;            // default = SF_7
 269:Core/Src/main.c ****       myLoRa.bandWidth             = BW_15_6KHz;       // default = BW_125KHz
 270:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 271:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 272:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 273:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 274:Core/Src/main.c ****       LoRa_init(&myLoRa);
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 12


 275:Core/Src/main.c ****       break;
 276:Core/Src/main.c **** 
 277:Core/Src/main.c ****     case 4:
 278:Core/Src/main.c ****       // statements
 279:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 280:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_7;            // default = SF_7
 281:Core/Src/main.c ****       myLoRa.bandWidth             = BW_20_8KHz;       // default = BW_125KHz
 282:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 283:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 284:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 285:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 286:Core/Src/main.c ****       LoRa_init(&myLoRa);
 287:Core/Src/main.c ****       break;
 288:Core/Src/main.c **** 
 289:Core/Src/main.c ****     case 5:
 290:Core/Src/main.c ****       // statements
 291:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 292:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_7;            // default = SF_7
 293:Core/Src/main.c ****       myLoRa.bandWidth             = BW_31_25KHz;       // default = BW_125KHz
 294:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 295:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 296:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 297:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 298:Core/Src/main.c ****       LoRa_init(&myLoRa);
 299:Core/Src/main.c ****       break;
 300:Core/Src/main.c **** 
 301:Core/Src/main.c ****     case 6:
 302:Core/Src/main.c ****       // statements
 303:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 304:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_7;            // default = SF_7
 305:Core/Src/main.c ****       myLoRa.bandWidth             = BW_41_7KHz;       // default = BW_125KHz
 306:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 307:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 308:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 309:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 310:Core/Src/main.c ****       LoRa_init(&myLoRa);
 311:Core/Src/main.c ****       break;
 312:Core/Src/main.c **** 
 313:Core/Src/main.c ****     case 7:
 314:Core/Src/main.c ****       // statements
 315:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 316:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_7;            // default = SF_7
 317:Core/Src/main.c ****       myLoRa.bandWidth             = BW_62_5KHz;       // default = BW_125KHz
 318:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 319:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 320:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 321:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 322:Core/Src/main.c ****       LoRa_init(&myLoRa);
 323:Core/Src/main.c ****       break;
 324:Core/Src/main.c **** 
 325:Core/Src/main.c ****     case 8:
 326:Core/Src/main.c ****       // statements
 327:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 328:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_7;            // default = SF_7
 329:Core/Src/main.c ****       myLoRa.bandWidth             = BW_125KHz;       // default = BW_125KHz
 330:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 331:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 13


 332:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 333:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 334:Core/Src/main.c ****       LoRa_init(&myLoRa);
 335:Core/Src/main.c ****       break;
 336:Core/Src/main.c **** 
 337:Core/Src/main.c ****     case 9:
 338:Core/Src/main.c ****       // statements
 339:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 340:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_7;            // default = SF_7
 341:Core/Src/main.c ****       myLoRa.bandWidth             = BW_250KHz;       // default = BW_125KHz
 342:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 343:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 344:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 345:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 346:Core/Src/main.c ****       LoRa_init(&myLoRa);
 347:Core/Src/main.c ****       break;
 348:Core/Src/main.c **** 
 349:Core/Src/main.c ****     case 10:
 350:Core/Src/main.c ****       // statements
 351:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 352:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_7;            // default = SF_7
 353:Core/Src/main.c ****       myLoRa.bandWidth             = BW_500KHz;       // default = BW_125KHz
 354:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 355:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 356:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 357:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 358:Core/Src/main.c ****       LoRa_init(&myLoRa);
 359:Core/Src/main.c ****       break;
 360:Core/Src/main.c ****     
 361:Core/Src/main.c ****     case 11:
 362:Core/Src/main.c ****       // statements
 363:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 364:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_8;            // default = SF_7
 365:Core/Src/main.c ****       myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 366:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 367:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 368:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 369:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 370:Core/Src/main.c ****       LoRa_init(&myLoRa);
 371:Core/Src/main.c ****       break;
 372:Core/Src/main.c **** 
 373:Core/Src/main.c ****     case 12:
 374:Core/Src/main.c ****       // statements
 375:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 376:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_8;            // default = SF_7
 377:Core/Src/main.c ****       myLoRa.bandWidth             = BW_10_4KHz;       // default = BW_125KHz
 378:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 379:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 380:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 381:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 382:Core/Src/main.c ****       LoRa_init(&myLoRa);
 383:Core/Src/main.c ****       break;
 384:Core/Src/main.c **** 
 385:Core/Src/main.c ****     case 13:
 386:Core/Src/main.c ****       // statements
 387:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 388:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_8;            // default = SF_7
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 14


 389:Core/Src/main.c ****       myLoRa.bandWidth             = BW_15_6KHz;       // default = BW_125KHz
 390:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 391:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 392:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 393:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 394:Core/Src/main.c ****       LoRa_init(&myLoRa);
 395:Core/Src/main.c ****       break;
 396:Core/Src/main.c **** 
 397:Core/Src/main.c ****     case 14:
 398:Core/Src/main.c ****       // statements
 399:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 400:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_8;            // default = SF_7
 401:Core/Src/main.c ****       myLoRa.bandWidth             = BW_20_8KHz;       // default = BW_125KHz
 402:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 403:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 404:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 405:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 406:Core/Src/main.c ****       LoRa_init(&myLoRa);
 407:Core/Src/main.c ****       break;
 408:Core/Src/main.c **** 
 409:Core/Src/main.c ****     case 15:
 410:Core/Src/main.c ****       // statements
 411:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 412:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_8;            // default = SF_7
 413:Core/Src/main.c ****       myLoRa.bandWidth             = BW_31_25KHz;       // default = BW_125KHz
 414:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 415:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 416:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 417:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 418:Core/Src/main.c ****       LoRa_init(&myLoRa);
 419:Core/Src/main.c ****       break;
 420:Core/Src/main.c **** 
 421:Core/Src/main.c ****     case 16:
 422:Core/Src/main.c ****       // statements
 423:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 424:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_8;            // default = SF_7
 425:Core/Src/main.c ****       myLoRa.bandWidth             = BW_41_7KHz;       // default = BW_125KHz
 426:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 427:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 428:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 429:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 430:Core/Src/main.c ****       LoRa_init(&myLoRa);
 431:Core/Src/main.c ****       break;
 432:Core/Src/main.c **** 
 433:Core/Src/main.c ****     case 17:
 434:Core/Src/main.c ****       // statements
 435:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 436:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_8;            // default = SF_7
 437:Core/Src/main.c ****       myLoRa.bandWidth             = BW_62_5KHz;       // default = BW_125KHz
 438:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 439:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 440:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 441:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 442:Core/Src/main.c ****       LoRa_init(&myLoRa);
 443:Core/Src/main.c ****       break;
 444:Core/Src/main.c **** 
 445:Core/Src/main.c ****     case 18:
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 15


 446:Core/Src/main.c ****       // statements
 447:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 448:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_8;            // default = SF_7
 449:Core/Src/main.c ****       myLoRa.bandWidth             = BW_125KHz;       // default = BW_125KHz
 450:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 451:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 452:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 453:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 454:Core/Src/main.c ****       LoRa_init(&myLoRa);
 455:Core/Src/main.c ****       break;
 456:Core/Src/main.c **** 
 457:Core/Src/main.c ****     case 19:
 458:Core/Src/main.c ****       // statements
 459:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 460:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_8;            // default = SF_7
 461:Core/Src/main.c ****       myLoRa.bandWidth             = BW_250KHz;       // default = BW_125KHz
 462:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 463:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 464:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 465:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 466:Core/Src/main.c ****       LoRa_init(&myLoRa);
 467:Core/Src/main.c ****       break;
 468:Core/Src/main.c **** 
 469:Core/Src/main.c ****     case 20:
 470:Core/Src/main.c ****       // statements
 471:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 472:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_8;            // default = SF_7
 473:Core/Src/main.c ****       myLoRa.bandWidth             = BW_500KHz;       // default = BW_125KHz
 474:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 475:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 476:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 477:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 478:Core/Src/main.c ****       LoRa_init(&myLoRa);
 479:Core/Src/main.c ****       break;
 480:Core/Src/main.c **** 
 481:Core/Src/main.c ****     case 21:
 482:Core/Src/main.c ****       // statements
 483:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 484:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_9;            // default = SF_7
 485:Core/Src/main.c ****       myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 486:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 487:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 488:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 489:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 490:Core/Src/main.c ****       LoRa_init(&myLoRa);
 491:Core/Src/main.c ****       break;
 492:Core/Src/main.c **** 
 493:Core/Src/main.c ****     case 22:
 494:Core/Src/main.c ****       // statements
 495:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 496:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_9;            // default = SF_7
 497:Core/Src/main.c ****       myLoRa.bandWidth             = BW_10_4KHz;       // default = BW_125KHz
 498:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 499:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 500:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 501:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 502:Core/Src/main.c ****       LoRa_init(&myLoRa);
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 16


 503:Core/Src/main.c ****       break;
 504:Core/Src/main.c **** 
 505:Core/Src/main.c ****     case 23:
 506:Core/Src/main.c ****       // statements
 507:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 508:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_9;            // default = SF_7
 509:Core/Src/main.c ****       myLoRa.bandWidth             = BW_15_6KHz;       // default = BW_125KHz
 510:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 511:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 512:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 513:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 514:Core/Src/main.c ****       LoRa_init(&myLoRa);
 515:Core/Src/main.c ****       break;
 516:Core/Src/main.c **** 
 517:Core/Src/main.c ****     case 24:
 518:Core/Src/main.c ****       // statements
 519:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 520:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_9;            // default = SF_7
 521:Core/Src/main.c ****       myLoRa.bandWidth             = BW_20_8KHz;       // default = BW_125KHz
 522:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 523:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 524:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 525:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 526:Core/Src/main.c ****       LoRa_init(&myLoRa);
 527:Core/Src/main.c ****       break;
 528:Core/Src/main.c **** 
 529:Core/Src/main.c ****     case 25:
 530:Core/Src/main.c ****       // statements
 531:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 532:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_9;            // default = SF_7
 533:Core/Src/main.c ****       myLoRa.bandWidth             = BW_31_25KHz;       // default = BW_125KHz
 534:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 535:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 536:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 537:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 538:Core/Src/main.c ****       LoRa_init(&myLoRa);
 539:Core/Src/main.c ****       break;
 540:Core/Src/main.c **** 
 541:Core/Src/main.c ****     case 26:
 542:Core/Src/main.c ****       // statements
 543:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 544:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_9;            // default = SF_7
 545:Core/Src/main.c ****       myLoRa.bandWidth             = BW_41_7KHz;       // default = BW_125KHz
 546:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 547:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 548:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 549:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 550:Core/Src/main.c ****       LoRa_init(&myLoRa);
 551:Core/Src/main.c ****       break;
 552:Core/Src/main.c **** 
 553:Core/Src/main.c ****     case 27:
 554:Core/Src/main.c ****       // statements
 555:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 556:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_9;            // default = SF_7
 557:Core/Src/main.c ****       myLoRa.bandWidth             = BW_62_5KHz;       // default = BW_125KHz
 558:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 559:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 17


 560:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 561:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 562:Core/Src/main.c ****       LoRa_init(&myLoRa);
 563:Core/Src/main.c ****       break;
 564:Core/Src/main.c **** 
 565:Core/Src/main.c ****     case 28:
 566:Core/Src/main.c ****       // statements
 567:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 568:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_9;            // default = SF_7
 569:Core/Src/main.c ****       myLoRa.bandWidth             = BW_125KHz;       // default = BW_125KHz
 570:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 571:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 572:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 573:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 574:Core/Src/main.c ****       LoRa_init(&myLoRa);
 575:Core/Src/main.c ****       break;
 576:Core/Src/main.c **** 
 577:Core/Src/main.c ****     case 29:
 578:Core/Src/main.c ****       // statements
 579:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 580:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_9;            // default = SF_7
 581:Core/Src/main.c ****       myLoRa.bandWidth             = BW_250KHz;       // default = BW_125KHz
 582:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 583:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 584:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 585:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 586:Core/Src/main.c ****       LoRa_init(&myLoRa);
 587:Core/Src/main.c ****       break;
 588:Core/Src/main.c **** 
 589:Core/Src/main.c ****     case 30:
 590:Core/Src/main.c ****       // statements
 591:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 592:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_9;            // default = SF_7
 593:Core/Src/main.c ****       myLoRa.bandWidth             = BW_500KHz;       // default = BW_125KHz
 594:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 595:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 596:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 597:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 598:Core/Src/main.c ****       LoRa_init(&myLoRa);
 599:Core/Src/main.c ****       break;
 600:Core/Src/main.c **** 
 601:Core/Src/main.c ****     case 31:
 602:Core/Src/main.c ****       // statements
 603:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 604:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_10;            // default = SF_7
 605:Core/Src/main.c ****       myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 606:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 607:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 608:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 609:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 610:Core/Src/main.c ****       LoRa_init(&myLoRa);
 611:Core/Src/main.c ****       break;
 612:Core/Src/main.c **** 
 613:Core/Src/main.c ****     case 32:
 614:Core/Src/main.c ****       // statements
 615:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 616:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_10;            // default = SF_7
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 18


 617:Core/Src/main.c ****       myLoRa.bandWidth             = BW_10_4KHz;       // default = BW_125KHz
 618:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 619:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 620:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 621:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 622:Core/Src/main.c ****       LoRa_init(&myLoRa);
 623:Core/Src/main.c ****       break;
 624:Core/Src/main.c **** 
 625:Core/Src/main.c ****     case 33:
 626:Core/Src/main.c ****       // statements
 627:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 628:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_10;            // default = SF_7
 629:Core/Src/main.c ****       myLoRa.bandWidth             = BW_15_6KHz;       // default = BW_125KHz
 630:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 631:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 632:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 633:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 634:Core/Src/main.c ****       LoRa_init(&myLoRa);
 635:Core/Src/main.c ****       break;
 636:Core/Src/main.c **** 
 637:Core/Src/main.c ****     case 34:
 638:Core/Src/main.c ****       // statements
 639:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 640:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_10;            // default = SF_7
 641:Core/Src/main.c ****       myLoRa.bandWidth             = BW_20_8KHz;       // default = BW_125KHz
 642:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 643:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 644:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 645:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 646:Core/Src/main.c ****       LoRa_init(&myLoRa);
 647:Core/Src/main.c ****       break;
 648:Core/Src/main.c **** 
 649:Core/Src/main.c ****     case 35:
 650:Core/Src/main.c ****       // statements
 651:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 652:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_10;            // default = SF_7
 653:Core/Src/main.c ****       myLoRa.bandWidth             = BW_31_25KHz;       // default = BW_125KHz
 654:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 655:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 656:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 657:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 658:Core/Src/main.c ****       LoRa_init(&myLoRa);
 659:Core/Src/main.c ****       break;
 660:Core/Src/main.c **** 
 661:Core/Src/main.c ****     case 36:
 662:Core/Src/main.c ****       // statements
 663:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 664:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_10;            // default = SF_7
 665:Core/Src/main.c ****       myLoRa.bandWidth             = BW_41_7KHz;       // default = BW_125KHz
 666:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 667:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 668:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 669:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 670:Core/Src/main.c ****       LoRa_init(&myLoRa);
 671:Core/Src/main.c ****       break;
 672:Core/Src/main.c **** 
 673:Core/Src/main.c ****     case 37:
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 19


 674:Core/Src/main.c ****       // statements
 675:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 676:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_10;            // default = SF_7
 677:Core/Src/main.c ****       myLoRa.bandWidth             = BW_62_5KHz;       // default = BW_125KHz
 678:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 679:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 680:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 681:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 682:Core/Src/main.c ****       LoRa_init(&myLoRa);
 683:Core/Src/main.c ****       break;
 684:Core/Src/main.c **** 
 685:Core/Src/main.c ****     case 38:
 686:Core/Src/main.c ****       // statements
 687:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 688:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_10;            // default = SF_7
 689:Core/Src/main.c ****       myLoRa.bandWidth             = BW_125KHz;       // default = BW_125KHz
 690:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 691:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 692:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 693:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 694:Core/Src/main.c ****       LoRa_init(&myLoRa);
 695:Core/Src/main.c ****       break;
 696:Core/Src/main.c **** 
 697:Core/Src/main.c ****     case 39:
 698:Core/Src/main.c ****       // statements
 699:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 700:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_10;            // default = SF_7
 701:Core/Src/main.c ****       myLoRa.bandWidth             = BW_250KHz;       // default = BW_125KHz
 702:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 703:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 704:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 705:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 706:Core/Src/main.c ****       LoRa_init(&myLoRa);
 707:Core/Src/main.c ****       break;
 708:Core/Src/main.c **** 
 709:Core/Src/main.c ****     case 40:
 710:Core/Src/main.c ****       // statements
 711:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 712:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_10;            // default = SF_7
 713:Core/Src/main.c ****       myLoRa.bandWidth             = BW_500KHz;       // default = BW_125KHz
 714:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 715:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 716:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 717:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 718:Core/Src/main.c ****       LoRa_init(&myLoRa);
 719:Core/Src/main.c ****       break;
 720:Core/Src/main.c **** 
 721:Core/Src/main.c ****     case 41:
 722:Core/Src/main.c ****       // statements
 723:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 724:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_11;            // default = SF_7
 725:Core/Src/main.c ****       myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 726:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 727:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 728:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 729:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 730:Core/Src/main.c ****       LoRa_init(&myLoRa);
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 20


 731:Core/Src/main.c ****       break;
 732:Core/Src/main.c **** 
 733:Core/Src/main.c ****     case 42:
 734:Core/Src/main.c ****       // statements
 735:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 736:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_11;            // default = SF_7
 737:Core/Src/main.c ****       myLoRa.bandWidth             = BW_10_4KHz;       // default = BW_125KHz
 738:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 739:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 740:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 741:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 742:Core/Src/main.c ****       LoRa_init(&myLoRa);
 743:Core/Src/main.c ****       break;
 744:Core/Src/main.c **** 
 745:Core/Src/main.c ****     case 43:
 746:Core/Src/main.c ****       // statements
 747:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 748:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_11;            // default = SF_7
 749:Core/Src/main.c ****       myLoRa.bandWidth             = BW_15_6KHz;       // default = BW_125KHz
 750:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 751:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 752:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 753:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 754:Core/Src/main.c ****       LoRa_init(&myLoRa);
 755:Core/Src/main.c ****       break;
 756:Core/Src/main.c **** 
 757:Core/Src/main.c ****     case 44:
 758:Core/Src/main.c ****       // statements
 759:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 760:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_11;            // default = SF_7
 761:Core/Src/main.c ****       myLoRa.bandWidth             = BW_20_8KHz;       // default = BW_125KHz
 762:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 763:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 764:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 765:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 766:Core/Src/main.c ****       LoRa_init(&myLoRa);
 767:Core/Src/main.c ****       break;
 768:Core/Src/main.c **** 
 769:Core/Src/main.c ****     case 45:
 770:Core/Src/main.c ****       // statements
 771:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 772:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_11;            // default = SF_7
 773:Core/Src/main.c ****       myLoRa.bandWidth             = BW_31_25KHz;       // default = BW_125KHz
 774:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 775:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 776:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 777:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 778:Core/Src/main.c ****       LoRa_init(&myLoRa);
 779:Core/Src/main.c ****       break;
 780:Core/Src/main.c **** 
 781:Core/Src/main.c ****     case 46:
 782:Core/Src/main.c ****       // statements
 783:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 784:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_11;            // default = SF_7
 785:Core/Src/main.c ****       myLoRa.bandWidth             = BW_41_7KHz;       // default = BW_125KHz
 786:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 787:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 21


 788:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 789:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 790:Core/Src/main.c ****       LoRa_init(&myLoRa);
 791:Core/Src/main.c ****       break;
 792:Core/Src/main.c **** 
 793:Core/Src/main.c ****     case 47:
 794:Core/Src/main.c ****       // statements
 795:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 796:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_11;            // default = SF_7
 797:Core/Src/main.c ****       myLoRa.bandWidth             = BW_62_5KHz;       // default = BW_125KHz
 798:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 799:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 800:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 801:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 802:Core/Src/main.c ****       LoRa_init(&myLoRa);
 803:Core/Src/main.c ****       break;
 804:Core/Src/main.c **** 
 805:Core/Src/main.c ****     case 48:
 806:Core/Src/main.c ****       // statements
 807:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 808:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_11;            // default = SF_7
 809:Core/Src/main.c ****       myLoRa.bandWidth             = BW_125KHz;       // default = BW_125KHz
 810:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 811:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 812:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 813:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 814:Core/Src/main.c ****       LoRa_init(&myLoRa);
 815:Core/Src/main.c ****       break;
 816:Core/Src/main.c **** 
 817:Core/Src/main.c ****     case 49:
 818:Core/Src/main.c ****       // statements
 819:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 820:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_11;            // default = SF_7
 821:Core/Src/main.c ****       myLoRa.bandWidth             = BW_250KHz;       // default = BW_125KHz
 822:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 823:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 824:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 825:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 826:Core/Src/main.c ****       LoRa_init(&myLoRa);
 827:Core/Src/main.c ****       break;
 828:Core/Src/main.c **** 
 829:Core/Src/main.c ****     case 50:
 830:Core/Src/main.c ****       // statements
 831:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 832:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_11;            // default = SF_7
 833:Core/Src/main.c ****       myLoRa.bandWidth             = BW_500KHz;       // default = BW_125KHz
 834:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 835:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 836:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 837:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 838:Core/Src/main.c ****       LoRa_init(&myLoRa);
 839:Core/Src/main.c ****       break;
 840:Core/Src/main.c **** 
 841:Core/Src/main.c ****     case 51:
 842:Core/Src/main.c ****       // statements
 843:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 844:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_12;            // default = SF_7
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 22


 845:Core/Src/main.c ****       myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 846:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 847:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 848:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 849:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 850:Core/Src/main.c ****       LoRa_init(&myLoRa);
 851:Core/Src/main.c ****       break;
 852:Core/Src/main.c **** 
 853:Core/Src/main.c ****     case 52:
 854:Core/Src/main.c ****       // statements
 855:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 856:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_12;            // default = SF_7
 857:Core/Src/main.c ****       myLoRa.bandWidth             = BW_10_4KHz;       // default = BW_125KHz
 858:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 859:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 860:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 861:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 862:Core/Src/main.c ****       LoRa_init(&myLoRa);
 863:Core/Src/main.c ****       break;
 864:Core/Src/main.c **** 
 865:Core/Src/main.c ****     case 53:
 866:Core/Src/main.c ****       // statements
 867:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 868:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_12;            // default = SF_7
 869:Core/Src/main.c ****       myLoRa.bandWidth             = BW_15_6KHz;       // default = BW_125KHz
 870:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 871:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 872:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 873:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 874:Core/Src/main.c ****       LoRa_init(&myLoRa);
 875:Core/Src/main.c ****       break;
 876:Core/Src/main.c **** 
 877:Core/Src/main.c ****     case 54:
 878:Core/Src/main.c ****       // statements
 879:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 880:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_12;            // default = SF_7
 881:Core/Src/main.c ****       myLoRa.bandWidth             = BW_20_8KHz;       // default = BW_125KHz
 882:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 883:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 884:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 885:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 886:Core/Src/main.c ****       LoRa_init(&myLoRa);
 887:Core/Src/main.c ****       break;
 888:Core/Src/main.c **** 
 889:Core/Src/main.c ****     case 55:
 890:Core/Src/main.c ****       // statements
 891:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 892:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_12;            // default = SF_7
 893:Core/Src/main.c ****       myLoRa.bandWidth             = BW_31_25KHz;       // default = BW_125KHz
 894:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 895:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 896:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 897:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 898:Core/Src/main.c ****       LoRa_init(&myLoRa);
 899:Core/Src/main.c ****       break;
 900:Core/Src/main.c **** 
 901:Core/Src/main.c ****     case 56:
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 23


 902:Core/Src/main.c ****       // statements
 903:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 904:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_12;            // default = SF_7
 905:Core/Src/main.c ****       myLoRa.bandWidth             = BW_41_7KHz;       // default = BW_125KHz
 906:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 907:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 908:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 909:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 910:Core/Src/main.c ****       LoRa_init(&myLoRa);
 911:Core/Src/main.c ****       break;
 912:Core/Src/main.c **** 
 913:Core/Src/main.c ****     case 57:
 914:Core/Src/main.c ****       // statements
 915:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 916:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_12;            // default = SF_7
 917:Core/Src/main.c ****       myLoRa.bandWidth             = BW_62_5KHz;       // default = BW_125KHz
 918:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 919:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 920:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 921:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 922:Core/Src/main.c ****       LoRa_init(&myLoRa);
 923:Core/Src/main.c ****       break;
 924:Core/Src/main.c **** 
 925:Core/Src/main.c ****     case 58:
 926:Core/Src/main.c ****       // statements
 927:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 928:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_12;            // default = SF_7
 929:Core/Src/main.c ****       myLoRa.bandWidth             = BW_125KHz;       // default = BW_125KHz
 930:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 931:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 932:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 933:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 934:Core/Src/main.c ****       LoRa_init(&myLoRa);
 935:Core/Src/main.c ****       break;
 936:Core/Src/main.c **** 
 937:Core/Src/main.c ****     case 59:
 938:Core/Src/main.c ****       // statements
 939:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 940:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_12;            // default = SF_7
 941:Core/Src/main.c ****       myLoRa.bandWidth             = BW_250KHz;       // default = BW_125KHz
 942:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 943:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 944:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 945:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 946:Core/Src/main.c ****       LoRa_init(&myLoRa);
 947:Core/Src/main.c ****       break;
 948:Core/Src/main.c **** 
 949:Core/Src/main.c ****     case 60:
 950:Core/Src/main.c ****       // statements
 951:Core/Src/main.c ****       myLoRa.frequency             = 433;             // default = 433 MHz
 952:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_12;            // default = SF_7
 953:Core/Src/main.c ****       myLoRa.bandWidth             = BW_500KHz;       // default = BW_125KHz
 954:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 955:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 956:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 957:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 958:Core/Src/main.c ****       LoRa_init(&myLoRa);
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 24


 959:Core/Src/main.c ****       break;
 960:Core/Src/main.c **** 
 961:Core/Src/main.c ****     default:
 962:Core/Src/main.c ****       // default statements
 963:Core/Src/main.c **** }
 964:Core/Src/main.c ****       bModeChanged = false;
 965:Core/Src/main.c ****     }
 966:Core/Src/main.c ****     }
 967:Core/Src/main.c ****     }
 968:Core/Src/main.c ****     
 969:Core/Src/main.c ****     
 970:Core/Src/main.c ****     
 971:Core/Src/main.c ****     /* USER CODE END WHILE */
 972:Core/Src/main.c **** 
 973:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 974:Core/Src/main.c ****     //HAL_UART_Transmit_IT(&huart2, (uint8_t *)Gpsdata, sizeof(Gpsdata));
 975:Core/Src/main.c ****     //HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13);
 976:Core/Src/main.c **** 
 977:Core/Src/main.c ****     //HAL_Delay(1000); 
 978:Core/Src/main.c ****     timePre = timeNow;
 979:Core/Src/main.c **** 
 980:Core/Src/main.c ****   }
 981:Core/Src/main.c ****   /* USER CODE END 3 */
 982:Core/Src/main.c **** }
 983:Core/Src/main.c **** 
 984:Core/Src/main.c **** /**
 985:Core/Src/main.c ****   * @brief System Clock Configuration
 986:Core/Src/main.c ****   * @retval None
 987:Core/Src/main.c ****   */
 988:Core/Src/main.c **** void SystemClock_Config(void)
 989:Core/Src/main.c **** {
 990:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 991:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 992:Core/Src/main.c **** 
 993:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 994:Core/Src/main.c ****   */
 995:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 996:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 997:Core/Src/main.c **** 
 998:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 999:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
1000:Core/Src/main.c ****   */
1001:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
1002:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
1003:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
1004:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
1005:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
1006:Core/Src/main.c ****   {
1007:Core/Src/main.c ****     Error_Handler();
1008:Core/Src/main.c ****   }
1009:Core/Src/main.c **** 
1010:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
1011:Core/Src/main.c ****   */
1012:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
1013:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
1014:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
1015:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 25


1016:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
1017:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
1018:Core/Src/main.c **** 
1019:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
1020:Core/Src/main.c ****   {
1021:Core/Src/main.c ****     Error_Handler();
1022:Core/Src/main.c ****   }
1023:Core/Src/main.c **** }
1024:Core/Src/main.c **** 
1025:Core/Src/main.c **** /**
1026:Core/Src/main.c ****   * @brief I2C1 Initialization Function
1027:Core/Src/main.c ****   * @param None
1028:Core/Src/main.c ****   * @retval None
1029:Core/Src/main.c ****   */
1030:Core/Src/main.c **** static void MX_I2C1_Init(void)
1031:Core/Src/main.c **** {
1032:Core/Src/main.c **** 
1033:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 0 */
1034:Core/Src/main.c **** 
1035:Core/Src/main.c ****   /* USER CODE END I2C1_Init 0 */
1036:Core/Src/main.c **** 
1037:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 1 */
1038:Core/Src/main.c **** 
1039:Core/Src/main.c ****   /* USER CODE END I2C1_Init 1 */
1040:Core/Src/main.c ****   hi2c1.Instance = I2C1;
1041:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
1042:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
1043:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
1044:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
1045:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
1046:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
1047:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
1048:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
1049:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
1050:Core/Src/main.c ****   {
1051:Core/Src/main.c ****     Error_Handler();
1052:Core/Src/main.c ****   }
1053:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 2 */
1054:Core/Src/main.c **** 
1055:Core/Src/main.c ****   /* USER CODE END I2C1_Init 2 */
1056:Core/Src/main.c **** 
1057:Core/Src/main.c **** }
1058:Core/Src/main.c **** 
1059:Core/Src/main.c **** /**
1060:Core/Src/main.c ****   * @brief I2C2 Initialization Function
1061:Core/Src/main.c ****   * @param None
1062:Core/Src/main.c ****   * @retval None
1063:Core/Src/main.c ****   */
1064:Core/Src/main.c **** static void MX_I2C2_Init(void)
1065:Core/Src/main.c **** {
1066:Core/Src/main.c **** 
1067:Core/Src/main.c ****   /* USER CODE BEGIN I2C2_Init 0 */
1068:Core/Src/main.c **** 
1069:Core/Src/main.c ****   /* USER CODE END I2C2_Init 0 */
1070:Core/Src/main.c **** 
1071:Core/Src/main.c ****   /* USER CODE BEGIN I2C2_Init 1 */
1072:Core/Src/main.c **** 
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 26


1073:Core/Src/main.c ****   /* USER CODE END I2C2_Init 1 */
1074:Core/Src/main.c ****   hi2c2.Instance = I2C2;
1075:Core/Src/main.c ****   hi2c2.Init.ClockSpeed = 100000;
1076:Core/Src/main.c ****   hi2c2.Init.DutyCycle = I2C_DUTYCYCLE_2;
1077:Core/Src/main.c ****   hi2c2.Init.OwnAddress1 = 0;
1078:Core/Src/main.c ****   hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
1079:Core/Src/main.c ****   hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
1080:Core/Src/main.c ****   hi2c2.Init.OwnAddress2 = 0;
1081:Core/Src/main.c ****   hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
1082:Core/Src/main.c ****   hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
1083:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c2) != HAL_OK)
1084:Core/Src/main.c ****   {
1085:Core/Src/main.c ****     Error_Handler();
1086:Core/Src/main.c ****   }
1087:Core/Src/main.c ****   /* USER CODE BEGIN I2C2_Init 2 */
1088:Core/Src/main.c **** 
1089:Core/Src/main.c ****   /* USER CODE END I2C2_Init 2 */
1090:Core/Src/main.c **** 
1091:Core/Src/main.c **** }
1092:Core/Src/main.c **** 
1093:Core/Src/main.c **** /**
1094:Core/Src/main.c ****   * @brief SPI3 Initialization Function
1095:Core/Src/main.c ****   * @param None
1096:Core/Src/main.c ****   * @retval None
1097:Core/Src/main.c ****   */
1098:Core/Src/main.c **** static void MX_SPI3_Init(void)
1099:Core/Src/main.c **** {
1100:Core/Src/main.c **** 
1101:Core/Src/main.c ****   /* USER CODE BEGIN SPI3_Init 0 */
1102:Core/Src/main.c **** 
1103:Core/Src/main.c ****   /* USER CODE END SPI3_Init 0 */
1104:Core/Src/main.c **** 
1105:Core/Src/main.c ****   /* USER CODE BEGIN SPI3_Init 1 */
1106:Core/Src/main.c **** 
1107:Core/Src/main.c ****   /* USER CODE END SPI3_Init 1 */
1108:Core/Src/main.c ****   /* SPI3 parameter configuration*/
1109:Core/Src/main.c ****   hspi3.Instance = SPI3;
1110:Core/Src/main.c ****   hspi3.Init.Mode = SPI_MODE_MASTER;
1111:Core/Src/main.c ****   hspi3.Init.Direction = SPI_DIRECTION_2LINES;
1112:Core/Src/main.c ****   hspi3.Init.DataSize = SPI_DATASIZE_8BIT;
1113:Core/Src/main.c ****   hspi3.Init.CLKPolarity = SPI_POLARITY_LOW;
1114:Core/Src/main.c ****   hspi3.Init.CLKPhase = SPI_PHASE_1EDGE;
1115:Core/Src/main.c ****   hspi3.Init.NSS = SPI_NSS_SOFT;
1116:Core/Src/main.c ****   hspi3.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
1117:Core/Src/main.c ****   hspi3.Init.FirstBit = SPI_FIRSTBIT_MSB;
1118:Core/Src/main.c ****   hspi3.Init.TIMode = SPI_TIMODE_DISABLE;
1119:Core/Src/main.c ****   hspi3.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
1120:Core/Src/main.c ****   hspi3.Init.CRCPolynomial = 10;
1121:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi3) != HAL_OK)
1122:Core/Src/main.c ****   {
1123:Core/Src/main.c ****     Error_Handler();
1124:Core/Src/main.c ****   }
1125:Core/Src/main.c ****   /* USER CODE BEGIN SPI3_Init 2 */
1126:Core/Src/main.c **** 
1127:Core/Src/main.c ****   /* USER CODE END SPI3_Init 2 */
1128:Core/Src/main.c **** 
1129:Core/Src/main.c **** }
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 27


1130:Core/Src/main.c **** 
1131:Core/Src/main.c **** /**
1132:Core/Src/main.c ****   * @brief USART1 Initialization Function
1133:Core/Src/main.c ****   * @param None
1134:Core/Src/main.c ****   * @retval None
1135:Core/Src/main.c ****   */
1136:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
1137:Core/Src/main.c **** {
1138:Core/Src/main.c **** 
1139:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
1140:Core/Src/main.c **** 
1141:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
1142:Core/Src/main.c **** 
1143:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
1144:Core/Src/main.c **** 
1145:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
1146:Core/Src/main.c ****   huart1.Instance = USART1;
1147:Core/Src/main.c ****   huart1.Init.BaudRate = 9600;
1148:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
1149:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
1150:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
1151:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
1152:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
1153:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
1154:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
1155:Core/Src/main.c ****   {
1156:Core/Src/main.c ****     Error_Handler();
1157:Core/Src/main.c ****   }
1158:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
1159:Core/Src/main.c **** 
1160:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
1161:Core/Src/main.c **** 
1162:Core/Src/main.c **** }
1163:Core/Src/main.c **** 
1164:Core/Src/main.c **** /**
1165:Core/Src/main.c ****   * @brief USART2 Initialization Function
1166:Core/Src/main.c ****   * @param None
1167:Core/Src/main.c ****   * @retval None
1168:Core/Src/main.c ****   */
1169:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
1170:Core/Src/main.c **** {
1171:Core/Src/main.c **** 
1172:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
1173:Core/Src/main.c **** 
1174:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
1175:Core/Src/main.c **** 
1176:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
1177:Core/Src/main.c **** 
1178:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
1179:Core/Src/main.c ****   huart2.Instance = USART2;
1180:Core/Src/main.c ****   huart2.Init.BaudRate = 230400;
1181:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
1182:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
1183:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
1184:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
1185:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
1186:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 28


1187:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
1188:Core/Src/main.c ****   {
1189:Core/Src/main.c ****     Error_Handler();
1190:Core/Src/main.c ****   }
1191:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
1192:Core/Src/main.c **** 
1193:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
1194:Core/Src/main.c **** 
1195:Core/Src/main.c **** }
1196:Core/Src/main.c **** 
1197:Core/Src/main.c **** /**
1198:Core/Src/main.c ****   * @brief GPIO Initialization Function
1199:Core/Src/main.c ****   * @param None
1200:Core/Src/main.c ****   * @retval None
1201:Core/Src/main.c ****   */
1202:Core/Src/main.c **** static void MX_GPIO_Init(void)
1203:Core/Src/main.c **** {
 104              		.loc 1 1203 1 is_stmt 1 view -0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 32
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 109              		.cfi_def_cfa_offset 28
 110              		.cfi_offset 4, -28
 111              		.cfi_offset 5, -24
 112              		.cfi_offset 6, -20
 113              		.cfi_offset 7, -16
 114              		.cfi_offset 8, -12
 115              		.cfi_offset 9, -8
 116              		.cfi_offset 14, -4
 117 0004 89B0     		sub	sp, sp, #36
 118              		.cfi_def_cfa_offset 64
1204:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 119              		.loc 1 1204 3 view .LVU27
 120              		.loc 1 1204 20 is_stmt 0 view .LVU28
 121 0006 0024     		movs	r4, #0
 122 0008 0394     		str	r4, [sp, #12]
 123 000a 0494     		str	r4, [sp, #16]
 124 000c 0594     		str	r4, [sp, #20]
 125 000e 0694     		str	r4, [sp, #24]
 126 0010 0794     		str	r4, [sp, #28]
1205:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
1206:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
1207:Core/Src/main.c **** 
1208:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
1209:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 127              		.loc 1 1209 3 is_stmt 1 view .LVU29
 128              	.LBB4:
 129              		.loc 1 1209 3 view .LVU30
 130 0012 0094     		str	r4, [sp]
 131              		.loc 1 1209 3 view .LVU31
 132 0014 414B     		ldr	r3, .L8
 133 0016 1A6B     		ldr	r2, [r3, #48]
 134 0018 42F00402 		orr	r2, r2, #4
 135 001c 1A63     		str	r2, [r3, #48]
 136              		.loc 1 1209 3 view .LVU32
 137 001e 1A6B     		ldr	r2, [r3, #48]
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 29


 138 0020 02F00402 		and	r2, r2, #4
 139 0024 0092     		str	r2, [sp]
 140              		.loc 1 1209 3 view .LVU33
 141 0026 009A     		ldr	r2, [sp]
 142              	.LBE4:
 143              		.loc 1 1209 3 view .LVU34
1210:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 144              		.loc 1 1210 3 view .LVU35
 145              	.LBB5:
 146              		.loc 1 1210 3 view .LVU36
 147 0028 0194     		str	r4, [sp, #4]
 148              		.loc 1 1210 3 view .LVU37
 149 002a 1A6B     		ldr	r2, [r3, #48]
 150 002c 42F00102 		orr	r2, r2, #1
 151 0030 1A63     		str	r2, [r3, #48]
 152              		.loc 1 1210 3 view .LVU38
 153 0032 1A6B     		ldr	r2, [r3, #48]
 154 0034 02F00102 		and	r2, r2, #1
 155 0038 0192     		str	r2, [sp, #4]
 156              		.loc 1 1210 3 view .LVU39
 157 003a 019A     		ldr	r2, [sp, #4]
 158              	.LBE5:
 159              		.loc 1 1210 3 view .LVU40
1211:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 160              		.loc 1 1211 3 view .LVU41
 161              	.LBB6:
 162              		.loc 1 1211 3 view .LVU42
 163 003c 0294     		str	r4, [sp, #8]
 164              		.loc 1 1211 3 view .LVU43
 165 003e 1A6B     		ldr	r2, [r3, #48]
 166 0040 42F00202 		orr	r2, r2, #2
 167 0044 1A63     		str	r2, [r3, #48]
 168              		.loc 1 1211 3 view .LVU44
 169 0046 1B6B     		ldr	r3, [r3, #48]
 170 0048 03F00203 		and	r3, r3, #2
 171 004c 0293     		str	r3, [sp, #8]
 172              		.loc 1 1211 3 view .LVU45
 173 004e 029B     		ldr	r3, [sp, #8]
 174              	.LBE6:
 175              		.loc 1 1211 3 view .LVU46
1212:Core/Src/main.c **** 
1213:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
1214:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
 176              		.loc 1 1214 3 view .LVU47
 177 0050 DFF8D480 		ldr	r8, .L8+12
 178 0054 2246     		mov	r2, r4
 179 0056 4FF40051 		mov	r1, #8192
 180 005a 4046     		mov	r0, r8
 181 005c FFF7FEFF 		bl	HAL_GPIO_WritePin
 182              	.LVL5:
1215:Core/Src/main.c **** 
1216:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
1217:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_4, GPIO_PIN_SET);
 183              		.loc 1 1217 3 view .LVU48
 184 0060 2F4F     		ldr	r7, .L8+4
 185 0062 0122     		movs	r2, #1
 186 0064 1021     		movs	r1, #16
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 30


 187 0066 3846     		mov	r0, r7
 188 0068 FFF7FEFF 		bl	HAL_GPIO_WritePin
 189              	.LVL6:
1218:Core/Src/main.c **** 
1219:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
1220:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_8, GPIO_PIN_SET);
 190              		.loc 1 1220 3 view .LVU49
 191 006c 2D4E     		ldr	r6, .L8+8
 192 006e 0122     		movs	r2, #1
 193 0070 4FF48071 		mov	r1, #256
 194 0074 3046     		mov	r0, r6
 195 0076 FFF7FEFF 		bl	HAL_GPIO_WritePin
 196              	.LVL7:
1221:Core/Src/main.c **** 
1222:Core/Src/main.c ****   /*Configure GPIO pin : PC13 */
1223:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_13;
 197              		.loc 1 1223 3 view .LVU50
 198              		.loc 1 1223 23 is_stmt 0 view .LVU51
 199 007a 4FF40059 		mov	r9, #8192
 200 007e CDF80C90 		str	r9, [sp, #12]
1224:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 201              		.loc 1 1224 3 is_stmt 1 view .LVU52
 202              		.loc 1 1224 24 is_stmt 0 view .LVU53
 203 0082 0125     		movs	r5, #1
 204 0084 0495     		str	r5, [sp, #16]
1225:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 205              		.loc 1 1225 3 is_stmt 1 view .LVU54
 206              		.loc 1 1225 24 is_stmt 0 view .LVU55
 207 0086 0594     		str	r4, [sp, #20]
1226:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 208              		.loc 1 1226 3 is_stmt 1 view .LVU56
 209              		.loc 1 1226 25 is_stmt 0 view .LVU57
 210 0088 0694     		str	r4, [sp, #24]
1227:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 211              		.loc 1 1227 3 is_stmt 1 view .LVU58
 212 008a 03A9     		add	r1, sp, #12
 213 008c 4046     		mov	r0, r8
 214 008e FFF7FEFF 		bl	HAL_GPIO_Init
 215              	.LVL8:
1228:Core/Src/main.c **** 
1229:Core/Src/main.c ****   /*Configure GPIO pin : PA4 */
1230:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_4;
 216              		.loc 1 1230 3 view .LVU59
 217              		.loc 1 1230 23 is_stmt 0 view .LVU60
 218 0092 1023     		movs	r3, #16
 219 0094 0393     		str	r3, [sp, #12]
1231:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 220              		.loc 1 1231 3 is_stmt 1 view .LVU61
 221              		.loc 1 1231 24 is_stmt 0 view .LVU62
 222 0096 0495     		str	r5, [sp, #16]
1232:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 223              		.loc 1 1232 3 is_stmt 1 view .LVU63
 224              		.loc 1 1232 24 is_stmt 0 view .LVU64
 225 0098 0594     		str	r4, [sp, #20]
1233:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 226              		.loc 1 1233 3 is_stmt 1 view .LVU65
 227              		.loc 1 1233 25 is_stmt 0 view .LVU66
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 31


 228 009a 0694     		str	r4, [sp, #24]
1234:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 229              		.loc 1 1234 3 is_stmt 1 view .LVU67
 230 009c 03A9     		add	r1, sp, #12
 231 009e 3846     		mov	r0, r7
 232 00a0 FFF7FEFF 		bl	HAL_GPIO_Init
 233              	.LVL9:
1235:Core/Src/main.c **** 
1236:Core/Src/main.c ****   /*Configure GPIO pin : rightButton_Pin */
1237:Core/Src/main.c ****   GPIO_InitStruct.Pin = rightButton_Pin;
 234              		.loc 1 1237 3 view .LVU68
 235              		.loc 1 1237 23 is_stmt 0 view .LVU69
 236 00a4 2023     		movs	r3, #32
 237 00a6 0393     		str	r3, [sp, #12]
1238:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 238              		.loc 1 1238 3 is_stmt 1 view .LVU70
 239              		.loc 1 1238 24 is_stmt 0 view .LVU71
 240 00a8 4FF40418 		mov	r8, #2162688
 241 00ac CDF81080 		str	r8, [sp, #16]
1239:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 242              		.loc 1 1239 3 is_stmt 1 view .LVU72
 243              		.loc 1 1239 24 is_stmt 0 view .LVU73
 244 00b0 0595     		str	r5, [sp, #20]
1240:Core/Src/main.c ****   HAL_GPIO_Init(rightButton_GPIO_Port, &GPIO_InitStruct);
 245              		.loc 1 1240 3 is_stmt 1 view .LVU74
 246 00b2 03A9     		add	r1, sp, #12
 247 00b4 3846     		mov	r0, r7
 248 00b6 FFF7FEFF 		bl	HAL_GPIO_Init
 249              	.LVL10:
1241:Core/Src/main.c **** 
1242:Core/Src/main.c ****   /*Configure GPIO pin : leftButton_Pin */
1243:Core/Src/main.c ****   GPIO_InitStruct.Pin = leftButton_Pin;
 250              		.loc 1 1243 3 view .LVU75
 251              		.loc 1 1243 23 is_stmt 0 view .LVU76
 252 00ba CDF80C90 		str	r9, [sp, #12]
1244:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 253              		.loc 1 1244 3 is_stmt 1 view .LVU77
 254              		.loc 1 1244 24 is_stmt 0 view .LVU78
 255 00be CDF81080 		str	r8, [sp, #16]
1245:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 256              		.loc 1 1245 3 is_stmt 1 view .LVU79
 257              		.loc 1 1245 24 is_stmt 0 view .LVU80
 258 00c2 0595     		str	r5, [sp, #20]
1246:Core/Src/main.c ****   HAL_GPIO_Init(leftButton_GPIO_Port, &GPIO_InitStruct);
 259              		.loc 1 1246 3 is_stmt 1 view .LVU81
 260 00c4 03A9     		add	r1, sp, #12
 261 00c6 3046     		mov	r0, r6
 262 00c8 FFF7FEFF 		bl	HAL_GPIO_Init
 263              	.LVL11:
1247:Core/Src/main.c **** 
1248:Core/Src/main.c ****   /*Configure GPIO pin : PB8 */
1249:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_8;
 264              		.loc 1 1249 3 view .LVU82
 265              		.loc 1 1249 23 is_stmt 0 view .LVU83
 266 00cc 4FF48073 		mov	r3, #256
 267 00d0 0393     		str	r3, [sp, #12]
1250:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 32


 268              		.loc 1 1250 3 is_stmt 1 view .LVU84
 269              		.loc 1 1250 24 is_stmt 0 view .LVU85
 270 00d2 0495     		str	r5, [sp, #16]
1251:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 271              		.loc 1 1251 3 is_stmt 1 view .LVU86
 272              		.loc 1 1251 24 is_stmt 0 view .LVU87
 273 00d4 0594     		str	r4, [sp, #20]
1252:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 274              		.loc 1 1252 3 is_stmt 1 view .LVU88
 275              		.loc 1 1252 25 is_stmt 0 view .LVU89
 276 00d6 0694     		str	r4, [sp, #24]
1253:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 277              		.loc 1 1253 3 is_stmt 1 view .LVU90
 278 00d8 03A9     		add	r1, sp, #12
 279 00da 3046     		mov	r0, r6
 280 00dc FFF7FEFF 		bl	HAL_GPIO_Init
 281              	.LVL12:
1254:Core/Src/main.c **** 
1255:Core/Src/main.c ****   /*Configure GPIO pin : PB9 */
1256:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_9;
 282              		.loc 1 1256 3 view .LVU91
 283              		.loc 1 1256 23 is_stmt 0 view .LVU92
 284 00e0 4FF40073 		mov	r3, #512
 285 00e4 0393     		str	r3, [sp, #12]
1257:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 286              		.loc 1 1257 3 is_stmt 1 view .LVU93
 287              		.loc 1 1257 24 is_stmt 0 view .LVU94
 288 00e6 4FF48813 		mov	r3, #1114112
 289 00ea 0493     		str	r3, [sp, #16]
1258:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 290              		.loc 1 1258 3 is_stmt 1 view .LVU95
 291              		.loc 1 1258 24 is_stmt 0 view .LVU96
 292 00ec 0594     		str	r4, [sp, #20]
1259:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 293              		.loc 1 1259 3 is_stmt 1 view .LVU97
 294 00ee 03A9     		add	r1, sp, #12
 295 00f0 3046     		mov	r0, r6
 296 00f2 FFF7FEFF 		bl	HAL_GPIO_Init
 297              	.LVL13:
1260:Core/Src/main.c **** 
1261:Core/Src/main.c ****   /* EXTI interrupt init*/
1262:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI9_5_IRQn, 2, 0);
 298              		.loc 1 1262 3 view .LVU98
 299 00f6 2246     		mov	r2, r4
 300 00f8 0221     		movs	r1, #2
 301 00fa 1720     		movs	r0, #23
 302 00fc FFF7FEFF 		bl	HAL_NVIC_SetPriority
 303              	.LVL14:
1263:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 304              		.loc 1 1263 3 view .LVU99
 305 0100 1720     		movs	r0, #23
 306 0102 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 307              	.LVL15:
1264:Core/Src/main.c **** 
1265:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI15_10_IRQn, 2, 0);
 308              		.loc 1 1265 3 view .LVU100
 309 0106 2246     		mov	r2, r4
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 33


 310 0108 0221     		movs	r1, #2
 311 010a 2820     		movs	r0, #40
 312 010c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 313              	.LVL16:
1266:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 314              		.loc 1 1266 3 view .LVU101
 315 0110 2820     		movs	r0, #40
 316 0112 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 317              	.LVL17:
1267:Core/Src/main.c **** 
1268:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
1269:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
1270:Core/Src/main.c **** }
 318              		.loc 1 1270 1 is_stmt 0 view .LVU102
 319 0116 09B0     		add	sp, sp, #36
 320              		.cfi_def_cfa_offset 28
 321              		@ sp needed
 322 0118 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 323              	.L9:
 324              		.align	2
 325              	.L8:
 326 011c 00380240 		.word	1073887232
 327 0120 00000240 		.word	1073872896
 328 0124 00040240 		.word	1073873920
 329 0128 00080240 		.word	1073874944
 330              		.cfi_endproc
 331              	.LFE145:
 333              		.section	.rodata.HAL_UARTEx_RxEventCallback.str1.4,"aMS",%progbits,1
 334              		.align	2
 335              	.LC0:
 336 0000 0A00     		.ascii	"\012\000"
 337 0002 0000     		.align	2
 338              	.LC1:
 339 0004 25643A25 		.ascii	"%d:%d:%d,\000"
 339      643A2564 
 339      2C00
 340 000e 0000     		.align	2
 341              	.LC2:
 342 0010 2825642C 		.ascii	"(%d,%d),\000"
 342      2564292C 
 342      00
 343 0019 000000   		.align	2
 344              	.LC3:
 345 001c 54656D70 		.ascii	"Temperature/pressure reading failed\012\000"
 345      65726174 
 345      7572652F 
 345      70726573 
 345      73757265 
 346              		.global	__aeabi_f2d
 347              		.global	__aeabi_dsub
 348              		.global	__aeabi_dmul
 349              		.global	__aeabi_d2f
 350 0041 000000   		.align	2
 351              	.LC4:
 352 0044 25732C25 		.ascii	"%s,%s,%s,%s\000"
 352      732C2573 
 352      2C257300 
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 34


 353              		.section	.text.HAL_UARTEx_RxEventCallback,"ax",%progbits
 354              		.align	1
 355              		.global	HAL_UARTEx_RxEventCallback
 356              		.syntax unified
 357              		.thumb
 358              		.thumb_func
 360              	HAL_UARTEx_RxEventCallback:
 361              	.LVL18:
 362              	.LFB146:
1271:Core/Src/main.c **** 
1272:Core/Src/main.c **** /* USER CODE BEGIN 4 */
1273:Core/Src/main.c **** void HAL_UARTEx_RxEventCallback(UART_HandleTypeDef *huart, uint16_t Size) {
 363              		.loc 1 1273 75 is_stmt 1 view -0
 364              		.cfi_startproc
 365              		@ args = 0, pretend = 0, frame = 72
 366              		@ frame_needed = 0, uses_anonymous_args = 0
 367              		.loc 1 1273 75 is_stmt 0 view .LVU104
 368 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 369              		.cfi_def_cfa_offset 24
 370              		.cfi_offset 4, -24
 371              		.cfi_offset 5, -20
 372              		.cfi_offset 6, -16
 373              		.cfi_offset 7, -12
 374              		.cfi_offset 8, -8
 375              		.cfi_offset 14, -4
 376 0004 94B0     		sub	sp, sp, #80
 377              		.cfi_def_cfa_offset 104
1274:Core/Src/main.c ****   //Set a flag high when the GPS sends data
1275:Core/Src/main.c ****   flag = 1;
 378              		.loc 1 1275 3 is_stmt 1 view .LVU105
 379              		.loc 1 1275 8 is_stmt 0 view .LVU106
 380 0006 664B     		ldr	r3, .L18+16
 381 0008 0122     		movs	r2, #1
 382 000a 1A70     		strb	r2, [r3]
1276:Core/Src/main.c **** 
1277:Core/Src/main.c ****   //Set memory of line_out to emtpy
1278:Core/Src/main.c ****   //memset(line_out, '\0', sizeof(line_out));
1279:Core/Src/main.c ****   memset(transmit_data, '\0', sizeof(transmit_data));
 383              		.loc 1 1279 3 is_stmt 1 view .LVU107
 384 000c 4FF48072 		mov	r2, #256
 385 0010 0021     		movs	r1, #0
 386              	.LVL19:
 387              		.loc 1 1279 3 is_stmt 0 view .LVU108
 388 0012 6448     		ldr	r0, .L18+20
 389              	.LVL20:
 390              		.loc 1 1279 3 view .LVU109
 391 0014 FFF7FEFF 		bl	memset
 392              	.LVL21:
1280:Core/Src/main.c **** 
1281:Core/Src/main.c ****   //Copy a new line character to line_out
1282:Core/Src/main.c ****   //memcpy(line_out, "\r\n\n", sizeof("\r\n\n"));
1283:Core/Src/main.c ****   //memcpy(transmit_data, "\r\n\n", sizeof("\r\n\n"));
1284:Core/Src/main.c **** 
1285:Core/Src/main.c ****   //Transmit the data over uart2
1286:Core/Src/main.c ****   //HAL_UART_Transmit(&huart2, (uint8_t*)line_out, sizeof(line_out)/sizeof(line_out[0]), 1000);
1287:Core/Src/main.c **** 
1288:Core/Src/main.c **** 
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 35


1289:Core/Src/main.c ****   
1290:Core/Src/main.c ****   //Search for the \n character
1291:Core/Src/main.c ****   uint8_t *token = strtok(gps_raw, "\n");
 393              		.loc 1 1291 3 is_stmt 1 view .LVU110
 394              		.loc 1 1291 20 is_stmt 0 view .LVU111
 395 0018 6349     		ldr	r1, .L18+24
 396 001a 6448     		ldr	r0, .L18+28
 397 001c FFF7FEFF 		bl	strtok
 398              	.LVL22:
1292:Core/Src/main.c **** 
1293:Core/Src/main.c ****   if (token == NULL) {
 399              		.loc 1 1293 3 is_stmt 1 view .LVU112
 400              		.loc 1 1293 6 is_stmt 0 view .LVU113
 401 0020 48B1     		cbz	r0, .L11
 402 0022 0146     		mov	r1, r0
 403              	.LBB7:
1294:Core/Src/main.c ****     //break
1295:Core/Src/main.c ****   } else {
1296:Core/Src/main.c ****     //memset(line, '\0', sizeof(line));
1297:Core/Src/main.c ****     strcpy(line, token);
 404              		.loc 1 1297 5 is_stmt 1 view .LVU114
 405 0024 624C     		ldr	r4, .L18+32
 406 0026 2046     		mov	r0, r4
 407              	.LVL23:
 408              		.loc 1 1297 5 is_stmt 0 view .LVU115
 409 0028 FFF7FEFF 		bl	strcpy
 410              	.LVL24:
1298:Core/Src/main.c ****     struct minmea_sentence_rmc frame;
 411              		.loc 1 1298 5 is_stmt 1 view .LVU116
1299:Core/Src/main.c ****     if (minmea_parse_rmc(&frame, line)) {
 412              		.loc 1 1299 5 view .LVU117
 413              		.loc 1 1299 9 is_stmt 0 view .LVU118
 414 002c 2146     		mov	r1, r4
 415 002e 02A8     		add	r0, sp, #8
 416 0030 FFF7FEFF 		bl	minmea_parse_rmc
 417              	.LVL25:
 418              		.loc 1 1299 8 view .LVU119
 419 0034 30B9     		cbnz	r0, .L17
 420              	.L11:
 421              	.LBE7:
1300:Core/Src/main.c ****       //memset(line_out, '\0', sizeof(line_out));
1301:Core/Src/main.c ****       sprintf(transmit_data + strlen(transmit_data),"%d:%d:%d,",frame.time.hours, frame.time.minute
1302:Core/Src/main.c ****       //HAL_UART_Transmit(&huart2, (uint8_t*)line_out, sizeof(line_out)/sizeof(line_out[0]), 1000);
1303:Core/Src/main.c **** 
1304:Core/Src/main.c ****       //memset(line_out, '\0', sizeof(line_out));
1305:Core/Src/main.c ****       sprintf(transmit_data + strlen(transmit_data), "(%d,%d),",minmea_rescale(&frame.latitude, 100
1306:Core/Src/main.c ****       //HAL_UART_Transmit(&huart2, (uint8_t*)line_out, sizeof(line_out)/sizeof(line_out[0]), 1000);
1307:Core/Src/main.c ****       
1308:Core/Src/main.c ****     }
1309:Core/Src/main.c ****   }
1310:Core/Src/main.c **** 
1311:Core/Src/main.c ****   //Set gps_raw data register to empty
1312:Core/Src/main.c ****   memset(gps_raw, '\0', sizeof(gps_raw));
 422              		.loc 1 1312 3 is_stmt 1 view .LVU120
 423 0036 4FF40072 		mov	r2, #512
 424 003a 0021     		movs	r1, #0
 425 003c 5B48     		ldr	r0, .L18+28
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 36


 426 003e FFF7FEFF 		bl	memset
 427              	.LVL26:
1313:Core/Src/main.c **** 
1314:Core/Src/main.c **** 
1315:Core/Src/main.c **** 
1316:Core/Src/main.c ****   	//HAL_Delay(100);
1317:Core/Src/main.c **** 	while (!bmp280_read_float(&bmp280, &temperature, &pressure, &humidity)) {
 428              		.loc 1 1317 2 view .LVU121
 429              		.loc 1 1317 8 is_stmt 0 view .LVU122
 430 0042 42E0     		b	.L13
 431              	.L17:
 432              	.LBB8:
1301:Core/Src/main.c ****       //HAL_UART_Transmit(&huart2, (uint8_t*)line_out, sizeof(line_out)/sizeof(line_out[0]), 1000);
 433              		.loc 1 1301 7 is_stmt 1 view .LVU123
1301:Core/Src/main.c ****       //HAL_UART_Transmit(&huart2, (uint8_t*)line_out, sizeof(line_out)/sizeof(line_out[0]), 1000);
 434              		.loc 1 1301 31 is_stmt 0 view .LVU124
 435 0044 574C     		ldr	r4, .L18+20
 436 0046 2046     		mov	r0, r4
 437 0048 FFF7FEFF 		bl	strlen
 438              	.LVL27:
1301:Core/Src/main.c ****       //HAL_UART_Transmit(&huart2, (uint8_t*)line_out, sizeof(line_out)/sizeof(line_out[0]), 1000);
 439              		.loc 1 1301 7 view .LVU125
 440 004c 049B     		ldr	r3, [sp, #16]
 441 004e 0093     		str	r3, [sp]
 442 0050 039B     		ldr	r3, [sp, #12]
 443 0052 029A     		ldr	r2, [sp, #8]
 444 0054 5749     		ldr	r1, .L18+36
 445 0056 2044     		add	r0, r0, r4
 446 0058 FFF7FEFF 		bl	sprintf
 447              	.LVL28:
1305:Core/Src/main.c ****       //HAL_UART_Transmit(&huart2, (uint8_t*)line_out, sizeof(line_out)/sizeof(line_out[0]), 1000);
 448              		.loc 1 1305 7 is_stmt 1 view .LVU126
1305:Core/Src/main.c ****       //HAL_UART_Transmit(&huart2, (uint8_t*)line_out, sizeof(line_out)/sizeof(line_out[0]), 1000);
 449              		.loc 1 1305 31 is_stmt 0 view .LVU127
 450 005c 2046     		mov	r0, r4
 451 005e FFF7FEFF 		bl	strlen
 452              	.LVL29:
 453 0062 0546     		mov	r5, r0
1305:Core/Src/main.c ****       //HAL_UART_Transmit(&huart2, (uint8_t*)line_out, sizeof(line_out)/sizeof(line_out[0]), 1000);
 454              		.loc 1 1305 7 view .LVU128
 455 0064 4FF47A71 		mov	r1, #1000
 456 0068 07A8     		add	r0, sp, #28
 457 006a FFF7FEFF 		bl	minmea_rescale
 458              	.LVL30:
 459 006e 0646     		mov	r6, r0
 460 0070 4FF47A71 		mov	r1, #1000
 461 0074 09A8     		add	r0, sp, #36
 462 0076 FFF7FEFF 		bl	minmea_rescale
 463              	.LVL31:
 464 007a 0346     		mov	r3, r0
 465 007c 3246     		mov	r2, r6
 466 007e 4E49     		ldr	r1, .L18+40
 467 0080 6019     		adds	r0, r4, r5
 468 0082 FFF7FEFF 		bl	sprintf
 469              	.LVL32:
 470 0086 D6E7     		b	.L11
 471              	.L15:
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 37


 472              	.LBE8:
1318:Core/Src/main.c **** 	  size = sprintf(transmit_data + strlen(transmit_data),"Temperature/pressure reading failed\n");
 473              		.loc 1 1318 4 is_stmt 1 view .LVU129
 474              		.loc 1 1318 35 is_stmt 0 view .LVU130
 475 0088 464C     		ldr	r4, .L18+20
 476 008a 2046     		mov	r0, r4
 477 008c FFF7FEFF 		bl	strlen
 478              	.LVL33:
 479              		.loc 1 1318 11 view .LVU131
 480 0090 4A4D     		ldr	r5, .L18+44
 481 0092 04EB000C 		add	ip, r4, r0
 482 0096 05F1200E 		add	lr, r5, #32
 483              	.L14:
 484 009a 2C46     		mov	r4, r5
 485 009c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 486 009e CCF80000 		str	r0, [ip]	@ unaligned
 487 00a2 CCF80410 		str	r1, [ip, #4]	@ unaligned
 488 00a6 CCF80820 		str	r2, [ip, #8]	@ unaligned
 489 00aa CCF80C30 		str	r3, [ip, #12]	@ unaligned
 490 00ae 2546     		mov	r5, r4
 491 00b0 0CF1100C 		add	ip, ip, #16
 492 00b4 7445     		cmp	r4, lr
 493 00b6 F0D1     		bne	.L14
 494 00b8 2068     		ldr	r0, [r4]
 495 00ba CCF80000 		str	r0, [ip]	@ unaligned
 496 00be 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 497 00c0 8CF80430 		strb	r3, [ip, #4]
 498              		.loc 1 1318 9 view .LVU132
 499 00c4 2422     		movs	r2, #36
 500 00c6 3E4B     		ldr	r3, .L18+48
 501 00c8 1A60     		str	r2, [r3]
 502              	.L13:
1317:Core/Src/main.c **** 	  size = sprintf(transmit_data + strlen(transmit_data),"Temperature/pressure reading failed\n");
 503              		.loc 1 1317 9 is_stmt 1 view .LVU133
1317:Core/Src/main.c **** 	  size = sprintf(transmit_data + strlen(transmit_data),"Temperature/pressure reading failed\n");
 504              		.loc 1 1317 10 is_stmt 0 view .LVU134
 505 00ca 3E4B     		ldr	r3, .L18+52
 506 00cc 3E4A     		ldr	r2, .L18+56
 507 00ce 3F49     		ldr	r1, .L18+60
 508 00d0 3F48     		ldr	r0, .L18+64
 509 00d2 FFF7FEFF 		bl	bmp280_read_float
 510              	.LVL34:
1317:Core/Src/main.c **** 	  size = sprintf(transmit_data + strlen(transmit_data),"Temperature/pressure reading failed\n");
 511              		.loc 1 1317 9 view .LVU135
 512 00d6 0028     		cmp	r0, #0
 513 00d8 D6D0     		beq	.L15
1319:Core/Src/main.c **** 	  //HAL_UART_Transmit(&huart2, Data, size, 1000);
1320:Core/Src/main.c **** 	}
1321:Core/Src/main.c **** 
1322:Core/Src/main.c **** 
1323:Core/Src/main.c **** 
1324:Core/Src/main.c **** 
1325:Core/Src/main.c ****   //altitude = H_b + (T_b/L_b)*(pow((pressure/P_b),(-1*R*L_b)/(G_0*M))-1);
1326:Core/Src/main.c **** 
1327:Core/Src/main.c ****   altitude = 44330*(1-pow((pressure/P_b),(1/5.255)));
 514              		.loc 1 1327 3 is_stmt 1 view .LVU136
 515              		.loc 1 1327 36 is_stmt 0 view .LVU137
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 38


 516 00da 3B4C     		ldr	r4, .L18+56
 517 00dc 94ED007A 		vldr.32	s14, [r4]
 518 00e0 3C4B     		ldr	r3, .L18+68
 519 00e2 D3ED007A 		vldr.32	s15, [r3]
 520              		.loc 1 1327 23 view .LVU138
 521 00e6 C7EE277A 		vdiv.f32	s15, s14, s15
 522 00ea 17EE900A 		vmov	r0, s15
 523 00ee FFF7FEFF 		bl	__aeabi_f2d
 524              	.LVL35:
 525 00f2 9FED271B 		vldr.64	d1, .L18
 526 00f6 41EC100B 		vmov	d0, r0, r1
 527 00fa FFF7FEFF 		bl	pow
 528              	.LVL36:
 529 00fe 53EC102B 		vmov	r2, r3, d0
 530              		.loc 1 1327 22 view .LVU139
 531 0102 0020     		movs	r0, #0
 532 0104 3449     		ldr	r1, .L18+72
 533 0106 FFF7FEFF 		bl	__aeabi_dsub
 534              	.LVL37:
 535              		.loc 1 1327 19 view .LVU140
 536 010a 23A3     		adr	r3, .L18+8
 537 010c D3E90023 		ldrd	r2, [r3]
 538 0110 FFF7FEFF 		bl	__aeabi_dmul
 539              	.LVL38:
 540 0114 FFF7FEFF 		bl	__aeabi_d2f
 541              	.LVL39:
 542              		.loc 1 1327 12 view .LVU141
 543 0118 304B     		ldr	r3, .L18+76
 544 011a 1860     		str	r0, [r3]	@ float
1328:Core/Src/main.c **** 
1329:Core/Src/main.c ****   gcvt(altitude, 6, sAltitude);
 545              		.loc 1 1329 3 is_stmt 1 view .LVU142
 546 011c DFF8D080 		ldr	r8, .L18+96
 547 0120 FFF7FEFF 		bl	__aeabi_f2d
 548              	.LVL40:
 549 0124 41EC100B 		vmov	d0, r0, r1
 550 0128 4146     		mov	r1, r8
 551 012a 0620     		movs	r0, #6
 552 012c FFF7FEFF 		bl	gcvt
 553              	.LVL41:
1330:Core/Src/main.c ****   gcvt(pressure, 8, sPressure);
 554              		.loc 1 1330 3 view .LVU143
 555 0130 2B4D     		ldr	r5, .L18+80
 556 0132 2068     		ldr	r0, [r4]	@ float
 557 0134 FFF7FEFF 		bl	__aeabi_f2d
 558              	.LVL42:
 559 0138 41EC100B 		vmov	d0, r0, r1
 560 013c 2946     		mov	r1, r5
 561 013e 0820     		movs	r0, #8
 562 0140 FFF7FEFF 		bl	gcvt
 563              	.LVL43:
1331:Core/Src/main.c ****   gcvt(temperature, 4, sTemperature);
 564              		.loc 1 1331 3 view .LVU144
 565 0144 274E     		ldr	r6, .L18+84
 566 0146 214B     		ldr	r3, .L18+60
 567 0148 1868     		ldr	r0, [r3]	@ float
 568 014a FFF7FEFF 		bl	__aeabi_f2d
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 39


 569              	.LVL44:
 570 014e 41EC100B 		vmov	d0, r0, r1
 571 0152 3146     		mov	r1, r6
 572 0154 0420     		movs	r0, #4
 573 0156 FFF7FEFF 		bl	gcvt
 574              	.LVL45:
1332:Core/Src/main.c ****   gcvt(humidity, 4, sHumidity);
 575              		.loc 1 1332 3 view .LVU145
 576 015a 234F     		ldr	r7, .L18+88
 577 015c 194B     		ldr	r3, .L18+52
 578 015e 1868     		ldr	r0, [r3]	@ float
 579 0160 FFF7FEFF 		bl	__aeabi_f2d
 580              	.LVL46:
 581 0164 41EC100B 		vmov	d0, r0, r1
 582 0168 3946     		mov	r1, r7
 583 016a 0420     		movs	r0, #4
 584 016c FFF7FEFF 		bl	gcvt
 585              	.LVL47:
1333:Core/Src/main.c **** 
1334:Core/Src/main.c **** 	sprintf(transmit_data + strlen(transmit_data),"%s,%s,%s,%s",sPressure, sTemperature, sHumidity, sA
 586              		.loc 1 1334 2 view .LVU146
 587              		.loc 1 1334 26 is_stmt 0 view .LVU147
 588 0170 0C4C     		ldr	r4, .L18+20
 589 0172 2046     		mov	r0, r4
 590 0174 FFF7FEFF 		bl	strlen
 591              	.LVL48:
 592              		.loc 1 1334 2 view .LVU148
 593 0178 CDF80480 		str	r8, [sp, #4]
 594 017c 0097     		str	r7, [sp]
 595 017e 3346     		mov	r3, r6
 596 0180 2A46     		mov	r2, r5
 597 0182 1A49     		ldr	r1, .L18+92
 598 0184 2044     		add	r0, r0, r4
 599 0186 FFF7FEFF 		bl	sprintf
 600              	.LVL49:
1335:Core/Src/main.c **** 
1336:Core/Src/main.c **** 
1337:Core/Src/main.c **** 
1338:Core/Src/main.c ****   //Set flag low to indicate that data transfer is done
1339:Core/Src/main.c ****   
1340:Core/Src/main.c ****   //Send interrupt when data from GPS is sent again
1341:Core/Src/main.c ****   //HAL_UARTEx_ReceiveToIdle_IT(&huart1,(uint8_t*)gps_raw, 512);
1342:Core/Src/main.c **** 
1343:Core/Src/main.c **** }
 601              		.loc 1 1343 1 view .LVU149
 602 018a 14B0     		add	sp, sp, #80
 603              		.cfi_def_cfa_offset 24
 604              		@ sp needed
 605 018c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 606              	.L19:
 607              		.align	3
 608              	.L18:
 609 0190 6C45D9CC 		.word	-858176148
 610 0194 955BC83F 		.word	1070095253
 611 0198 00000000 		.word	0
 612 019c 40A5E540 		.word	1088791872
 613 01a0 00000000 		.word	flag
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 40


 614 01a4 00000000 		.word	transmit_data
 615 01a8 00000000 		.word	.LC0
 616 01ac 00000000 		.word	gps_raw
 617 01b0 00000000 		.word	line
 618 01b4 04000000 		.word	.LC1
 619 01b8 10000000 		.word	.LC2
 620 01bc 1C000000 		.word	.LC3
 621 01c0 00000000 		.word	size
 622 01c4 00000000 		.word	humidity
 623 01c8 00000000 		.word	pressure
 624 01cc 00000000 		.word	temperature
 625 01d0 00000000 		.word	bmp280
 626 01d4 00000000 		.word	P_b
 627 01d8 0000F03F 		.word	1072693248
 628 01dc 00000000 		.word	altitude
 629 01e0 00000000 		.word	sPressure
 630 01e4 00000000 		.word	sTemperature
 631 01e8 00000000 		.word	sHumidity
 632 01ec 44000000 		.word	.LC4
 633 01f0 00000000 		.word	sAltitude
 634              		.cfi_endproc
 635              	.LFE146:
 637              		.section	.rodata.HAL_GPIO_EXTI_Callback.str1.4,"aMS",%progbits,1
 638              		.align	2
 639              	.LC5:
 640 0000 0A4C6566 		.ascii	"\012Left Button Pushed\000"
 640      74204275 
 640      74746F6E 
 640      20507573 
 640      68656400 
 641              		.align	2
 642              	.LC6:
 643 0014 4D6F6465 		.ascii	"Mode:\000"
 643      3A00
 644 001a 0000     		.align	2
 645              	.LC7:
 646 001c 25642020 		.ascii	"%d        \000"
 646      20202020 
 646      202000
 647 0027 00       		.align	2
 648              	.LC8:
 649 0028 0A526967 		.ascii	"\012Right Button Pushed\000"
 649      68742042 
 649      7574746F 
 649      6E205075 
 649      73686564 
 650              		.section	.text.HAL_GPIO_EXTI_Callback,"ax",%progbits
 651              		.align	1
 652              		.global	HAL_GPIO_EXTI_Callback
 653              		.syntax unified
 654              		.thumb
 655              		.thumb_func
 657              	HAL_GPIO_EXTI_Callback:
 658              	.LVL50:
 659              	.LFB147:
1344:Core/Src/main.c **** 
1345:Core/Src/main.c **** 
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 41


1346:Core/Src/main.c **** void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
1347:Core/Src/main.c **** {
 660              		.loc 1 1347 1 is_stmt 1 view -0
 661              		.cfi_startproc
 662              		@ args = 0, pretend = 0, frame = 0
 663              		@ frame_needed = 0, uses_anonymous_args = 0
 664              		.loc 1 1347 1 is_stmt 0 view .LVU151
 665 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 666              		.cfi_def_cfa_offset 24
 667              		.cfi_offset 4, -24
 668              		.cfi_offset 5, -20
 669              		.cfi_offset 6, -16
 670              		.cfi_offset 7, -12
 671              		.cfi_offset 8, -8
 672              		.cfi_offset 14, -4
 673 0004 0446     		mov	r4, r0
1348:Core/Src/main.c ****   if(GPIO_Pin == GPIO_PIN_13) // Left button pushed
 674              		.loc 1 1348 3 is_stmt 1 view .LVU152
 675              		.loc 1 1348 5 is_stmt 0 view .LVU153
 676 0006 B0F5005F 		cmp	r0, #8192
 677 000a 07D0     		beq	.L26
 678              	.LVL51:
 679              	.L21:
1349:Core/Src/main.c ****     {
1350:Core/Src/main.c ****       //get the current time
1351:Core/Src/main.c ****       currentTicks = HAL_GetTick();
1352:Core/Src/main.c ****       if ((currentTicks-preTicks)>200) {
1353:Core/Src/main.c ****         memset(transmit_data, '\0', sizeof(transmit_data));
1354:Core/Src/main.c ****         sprintf(transmit_data,"%s","\nLeft Button Pushed");
1355:Core/Src/main.c **** 	      HAL_UART_Transmit(&huart2, transmit_data, sizeof(transmit_data)/sizeof(transmit_data[0]),100
1356:Core/Src/main.c ****         memset(transmit_data, '\0', sizeof(transmit_data));
1357:Core/Src/main.c ****         bModeChanged = true;
1358:Core/Src/main.c **** 
1359:Core/Src/main.c ****         if (iMode == 1) {
1360:Core/Src/main.c ****           iMode = 60;
1361:Core/Src/main.c ****           // Set cursors and write the word "mode"
1362:Core/Src/main.c ****           ssd1306_SetCursor(0, 0);
1363:Core/Src/main.c ****           ssd1306_WriteString("Mode:", Font_16x26, White);
1364:Core/Src/main.c **** 
1365:Core/Src/main.c ****           ssd1306_SetCursor(0, 35);
1366:Core/Src/main.c ****           sprintf(sMode, "%d        ", iMode);
1367:Core/Src/main.c ****           ssd1306_WriteString(sMode, Font_16x26, White);
1368:Core/Src/main.c **** 
1369:Core/Src/main.c ****           // Copy all data from local screenbuffer to the screen
1370:Core/Src/main.c ****           ssd1306_UpdateScreen(&hi2c2);
1371:Core/Src/main.c ****         } else {
1372:Core/Src/main.c ****           iMode = iMode - 1;
1373:Core/Src/main.c ****           // Set cursors and write the word "mode"
1374:Core/Src/main.c ****           ssd1306_SetCursor(0, 0);
1375:Core/Src/main.c ****           ssd1306_WriteString("Mode:", Font_16x26, White);
1376:Core/Src/main.c **** 
1377:Core/Src/main.c ****           ssd1306_SetCursor(0, 35);
1378:Core/Src/main.c ****           sprintf(sMode, "%d        ", iMode);
1379:Core/Src/main.c ****           ssd1306_WriteString(sMode, Font_16x26, White);
1380:Core/Src/main.c **** 
1381:Core/Src/main.c ****           // Copy all data from local screenbuffer to the screen
1382:Core/Src/main.c ****           ssd1306_UpdateScreen(&hi2c2);
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 42


1383:Core/Src/main.c **** 
1384:Core/Src/main.c ****         }
1385:Core/Src/main.c **** 
1386:Core/Src/main.c **** 
1387:Core/Src/main.c **** 
1388:Core/Src/main.c ****       } else {
1389:Core/Src/main.c ****         //break
1390:Core/Src/main.c ****       }
 680              		.loc 1 1390 7 is_stmt 1 view .LVU154
1391:Core/Src/main.c ****     }
1392:Core/Src/main.c **** 
1393:Core/Src/main.c ****   if(GPIO_Pin == GPIO_PIN_5) // Right button pushed
 681              		.loc 1 1393 3 view .LVU155
 682              		.loc 1 1393 5 is_stmt 0 view .LVU156
 683 000c 202C     		cmp	r4, #32
 684 000e 73D0     		beq	.L27
 685              	.L23:
1394:Core/Src/main.c ****     {
1395:Core/Src/main.c ****       //get the current time
1396:Core/Src/main.c ****       currentTicks = HAL_GetTick();
1397:Core/Src/main.c ****       if ((currentTicks-preTicks)>200) {
1398:Core/Src/main.c ****         memset(transmit_data, '\0', sizeof(transmit_data));
1399:Core/Src/main.c ****         sprintf(transmit_data,"%s","\nRight Button Pushed");
1400:Core/Src/main.c **** 	      HAL_UART_Transmit(&huart2, transmit_data, sizeof(transmit_data)/sizeof(transmit_data[0]),100
1401:Core/Src/main.c ****         memset(transmit_data, '\0', sizeof(transmit_data));
1402:Core/Src/main.c ****         bModeChanged = true;
1403:Core/Src/main.c ****         
1404:Core/Src/main.c ****         if (iMode == 60) {
1405:Core/Src/main.c ****           iMode = 1;
1406:Core/Src/main.c ****           // Set cursors and write the word "mode"
1407:Core/Src/main.c ****           ssd1306_SetCursor(0, 0);
1408:Core/Src/main.c ****           ssd1306_WriteString("Mode:", Font_16x26, White);
1409:Core/Src/main.c **** 
1410:Core/Src/main.c ****           ssd1306_SetCursor(0, 35);
1411:Core/Src/main.c ****           sprintf(sMode, "%d        ", iMode);
1412:Core/Src/main.c ****           ssd1306_WriteString(sMode, Font_16x26, White);
1413:Core/Src/main.c **** 
1414:Core/Src/main.c ****           // Copy all data from local screenbuffer to the screen
1415:Core/Src/main.c ****           ssd1306_UpdateScreen(&hi2c2);
1416:Core/Src/main.c ****         } else {
1417:Core/Src/main.c ****           iMode = iMode + 1;
1418:Core/Src/main.c ****           // Set cursors and write the word "mode"
1419:Core/Src/main.c ****           ssd1306_SetCursor(0, 0);
1420:Core/Src/main.c ****           ssd1306_WriteString("Mode:", Font_16x26, White);
1421:Core/Src/main.c **** 
1422:Core/Src/main.c ****           ssd1306_SetCursor(0, 35);
1423:Core/Src/main.c ****           sprintf(sMode, "%d        ", iMode);
1424:Core/Src/main.c ****           ssd1306_WriteString(sMode, Font_16x26, White);
1425:Core/Src/main.c **** 
1426:Core/Src/main.c ****           // Copy all data from local screenbuffer to the screen
1427:Core/Src/main.c ****           ssd1306_UpdateScreen(&hi2c2);
1428:Core/Src/main.c **** 
1429:Core/Src/main.c ****         }
1430:Core/Src/main.c **** 
1431:Core/Src/main.c **** 
1432:Core/Src/main.c ****       } else {
1433:Core/Src/main.c ****         //break
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 43


1434:Core/Src/main.c ****       }
 686              		.loc 1 1434 7 is_stmt 1 view .LVU157
1435:Core/Src/main.c ****     }  
1436:Core/Src/main.c ****   preTicks = currentTicks;
 687              		.loc 1 1436 3 view .LVU158
 688              		.loc 1 1436 12 is_stmt 0 view .LVU159
 689 0010 724B     		ldr	r3, .L30
 690 0012 1A68     		ldr	r2, [r3]
 691 0014 724B     		ldr	r3, .L30+4
 692 0016 1A60     		str	r2, [r3]
1437:Core/Src/main.c **** }
 693              		.loc 1 1437 1 view .LVU160
 694 0018 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 695              	.LVL52:
 696              	.L26:
1351:Core/Src/main.c ****       if ((currentTicks-preTicks)>200) {
 697              		.loc 1 1351 7 is_stmt 1 view .LVU161
1351:Core/Src/main.c ****       if ((currentTicks-preTicks)>200) {
 698              		.loc 1 1351 22 is_stmt 0 view .LVU162
 699 001c FFF7FEFF 		bl	HAL_GetTick
 700              	.LVL53:
1351:Core/Src/main.c ****       if ((currentTicks-preTicks)>200) {
 701              		.loc 1 1351 20 view .LVU163
 702 0020 6E4B     		ldr	r3, .L30
 703 0022 1860     		str	r0, [r3]
1352:Core/Src/main.c ****         memset(transmit_data, '\0', sizeof(transmit_data));
 704              		.loc 1 1352 7 is_stmt 1 view .LVU164
1352:Core/Src/main.c ****         memset(transmit_data, '\0', sizeof(transmit_data));
 705              		.loc 1 1352 24 is_stmt 0 view .LVU165
 706 0024 6E4B     		ldr	r3, .L30+4
 707 0026 1B68     		ldr	r3, [r3]
 708 0028 C01A     		subs	r0, r0, r3
1352:Core/Src/main.c ****         memset(transmit_data, '\0', sizeof(transmit_data));
 709              		.loc 1 1352 10 view .LVU166
 710 002a C828     		cmp	r0, #200
 711 002c EEDD     		ble	.L21
1353:Core/Src/main.c ****         sprintf(transmit_data,"%s","\nLeft Button Pushed");
 712              		.loc 1 1353 9 is_stmt 1 view .LVU167
 713 002e 6D4F     		ldr	r7, .L30+8
 714 0030 4FF48078 		mov	r8, #256
 715 0034 4246     		mov	r2, r8
 716 0036 0021     		movs	r1, #0
 717 0038 3846     		mov	r0, r7
 718 003a FFF7FEFF 		bl	memset
 719              	.LVL54:
1354:Core/Src/main.c **** 	      HAL_UART_Transmit(&huart2, transmit_data, sizeof(transmit_data)/sizeof(transmit_data[0]),100
 720              		.loc 1 1354 9 view .LVU168
 721 003e 3D46     		mov	r5, r7
 722 0040 694E     		ldr	r6, .L30+12
 723 0042 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 724 0044 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 725 0046 3368     		ldr	r3, [r6]
 726 0048 2B60     		str	r3, [r5]
1355:Core/Src/main.c ****         memset(transmit_data, '\0', sizeof(transmit_data));
 727              		.loc 1 1355 8 view .LVU169
 728 004a 4FF47A73 		mov	r3, #1000
 729 004e 4246     		mov	r2, r8
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 44


 730 0050 3946     		mov	r1, r7
 731 0052 6648     		ldr	r0, .L30+16
 732 0054 FFF7FEFF 		bl	HAL_UART_Transmit
 733              	.LVL55:
1356:Core/Src/main.c ****         bModeChanged = true;
 734              		.loc 1 1356 9 view .LVU170
 735 0058 4246     		mov	r2, r8
 736 005a 0021     		movs	r1, #0
 737 005c 3846     		mov	r0, r7
 738 005e FFF7FEFF 		bl	memset
 739              	.LVL56:
1357:Core/Src/main.c **** 
 740              		.loc 1 1357 9 view .LVU171
1357:Core/Src/main.c **** 
 741              		.loc 1 1357 22 is_stmt 0 view .LVU172
 742 0062 634B     		ldr	r3, .L30+20
 743 0064 0122     		movs	r2, #1
 744 0066 1A70     		strb	r2, [r3]
1359:Core/Src/main.c ****           iMode = 60;
 745              		.loc 1 1359 9 is_stmt 1 view .LVU173
1359:Core/Src/main.c ****           iMode = 60;
 746              		.loc 1 1359 19 is_stmt 0 view .LVU174
 747 0068 624B     		ldr	r3, .L30+24
 748 006a 1B68     		ldr	r3, [r3]
1359:Core/Src/main.c ****           iMode = 60;
 749              		.loc 1 1359 12 view .LVU175
 750 006c 9342     		cmp	r3, r2
 751 006e 21D0     		beq	.L28
1372:Core/Src/main.c ****           // Set cursors and write the word "mode"
 752              		.loc 1 1372 11 is_stmt 1 view .LVU176
1372:Core/Src/main.c ****           // Set cursors and write the word "mode"
 753              		.loc 1 1372 25 is_stmt 0 view .LVU177
 754 0070 013B     		subs	r3, r3, #1
1372:Core/Src/main.c ****           // Set cursors and write the word "mode"
 755              		.loc 1 1372 17 view .LVU178
 756 0072 604F     		ldr	r7, .L30+24
 757 0074 3B60     		str	r3, [r7]
1374:Core/Src/main.c ****           ssd1306_WriteString("Mode:", Font_16x26, White);
 758              		.loc 1 1374 11 is_stmt 1 view .LVU179
 759 0076 0021     		movs	r1, #0
 760 0078 0846     		mov	r0, r1
 761 007a FFF7FEFF 		bl	ssd1306_SetCursor
 762              	.LVL57:
1375:Core/Src/main.c **** 
 763              		.loc 1 1375 11 view .LVU180
 764 007e 5E4D     		ldr	r5, .L30+28
 765 0080 0123     		movs	r3, #1
 766 0082 95E80600 		ldm	r5, {r1, r2}
 767 0086 5D48     		ldr	r0, .L30+32
 768 0088 FFF7FEFF 		bl	ssd1306_WriteString
 769              	.LVL58:
1377:Core/Src/main.c ****           sprintf(sMode, "%d        ", iMode);
 770              		.loc 1 1377 11 view .LVU181
 771 008c 2321     		movs	r1, #35
 772 008e 0020     		movs	r0, #0
 773 0090 FFF7FEFF 		bl	ssd1306_SetCursor
 774              	.LVL59:
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 45


1378:Core/Src/main.c ****           ssd1306_WriteString(sMode, Font_16x26, White);
 775              		.loc 1 1378 11 view .LVU182
 776 0094 5A4E     		ldr	r6, .L30+36
 777 0096 3A68     		ldr	r2, [r7]
 778 0098 5A49     		ldr	r1, .L30+40
 779 009a 3046     		mov	r0, r6
 780 009c FFF7FEFF 		bl	sprintf
 781              	.LVL60:
1379:Core/Src/main.c **** 
 782              		.loc 1 1379 11 view .LVU183
 783 00a0 0123     		movs	r3, #1
 784 00a2 95E80600 		ldm	r5, {r1, r2}
 785 00a6 3046     		mov	r0, r6
 786 00a8 FFF7FEFF 		bl	ssd1306_WriteString
 787              	.LVL61:
1382:Core/Src/main.c **** 
 788              		.loc 1 1382 11 view .LVU184
 789 00ac 5648     		ldr	r0, .L30+44
 790 00ae FFF7FEFF 		bl	ssd1306_UpdateScreen
 791              	.LVL62:
 792 00b2 ABE7     		b	.L21
 793              	.L28:
1360:Core/Src/main.c ****           // Set cursors and write the word "mode"
 794              		.loc 1 1360 11 view .LVU185
1360:Core/Src/main.c ****           // Set cursors and write the word "mode"
 795              		.loc 1 1360 17 is_stmt 0 view .LVU186
 796 00b4 4F4F     		ldr	r7, .L30+24
 797 00b6 3C23     		movs	r3, #60
 798 00b8 3B60     		str	r3, [r7]
1362:Core/Src/main.c ****           ssd1306_WriteString("Mode:", Font_16x26, White);
 799              		.loc 1 1362 11 is_stmt 1 view .LVU187
 800 00ba 0021     		movs	r1, #0
 801 00bc 0846     		mov	r0, r1
 802 00be FFF7FEFF 		bl	ssd1306_SetCursor
 803              	.LVL63:
1363:Core/Src/main.c **** 
 804              		.loc 1 1363 11 view .LVU188
 805 00c2 4D4D     		ldr	r5, .L30+28
 806 00c4 0123     		movs	r3, #1
 807 00c6 95E80600 		ldm	r5, {r1, r2}
 808 00ca 4C48     		ldr	r0, .L30+32
 809 00cc FFF7FEFF 		bl	ssd1306_WriteString
 810              	.LVL64:
1365:Core/Src/main.c ****           sprintf(sMode, "%d        ", iMode);
 811              		.loc 1 1365 11 view .LVU189
 812 00d0 2321     		movs	r1, #35
 813 00d2 0020     		movs	r0, #0
 814 00d4 FFF7FEFF 		bl	ssd1306_SetCursor
 815              	.LVL65:
1366:Core/Src/main.c ****           ssd1306_WriteString(sMode, Font_16x26, White);
 816              		.loc 1 1366 11 view .LVU190
 817 00d8 494E     		ldr	r6, .L30+36
 818 00da 3A68     		ldr	r2, [r7]
 819 00dc 4949     		ldr	r1, .L30+40
 820 00de 3046     		mov	r0, r6
 821 00e0 FFF7FEFF 		bl	sprintf
 822              	.LVL66:
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 46


1367:Core/Src/main.c **** 
 823              		.loc 1 1367 11 view .LVU191
 824 00e4 0123     		movs	r3, #1
 825 00e6 95E80600 		ldm	r5, {r1, r2}
 826 00ea 3046     		mov	r0, r6
 827 00ec FFF7FEFF 		bl	ssd1306_WriteString
 828              	.LVL67:
1370:Core/Src/main.c ****         } else {
 829              		.loc 1 1370 11 view .LVU192
 830 00f0 4548     		ldr	r0, .L30+44
 831 00f2 FFF7FEFF 		bl	ssd1306_UpdateScreen
 832              	.LVL68:
 833 00f6 89E7     		b	.L21
 834              	.L27:
1396:Core/Src/main.c ****       if ((currentTicks-preTicks)>200) {
 835              		.loc 1 1396 7 view .LVU193
1396:Core/Src/main.c ****       if ((currentTicks-preTicks)>200) {
 836              		.loc 1 1396 22 is_stmt 0 view .LVU194
 837 00f8 FFF7FEFF 		bl	HAL_GetTick
 838              	.LVL69:
1396:Core/Src/main.c ****       if ((currentTicks-preTicks)>200) {
 839              		.loc 1 1396 20 view .LVU195
 840 00fc 374B     		ldr	r3, .L30
 841 00fe 1860     		str	r0, [r3]
1397:Core/Src/main.c ****         memset(transmit_data, '\0', sizeof(transmit_data));
 842              		.loc 1 1397 7 is_stmt 1 view .LVU196
1397:Core/Src/main.c ****         memset(transmit_data, '\0', sizeof(transmit_data));
 843              		.loc 1 1397 24 is_stmt 0 view .LVU197
 844 0100 374B     		ldr	r3, .L30+4
 845 0102 1B68     		ldr	r3, [r3]
 846 0104 C01A     		subs	r0, r0, r3
1397:Core/Src/main.c ****         memset(transmit_data, '\0', sizeof(transmit_data));
 847              		.loc 1 1397 10 view .LVU198
 848 0106 C828     		cmp	r0, #200
 849 0108 82DD     		ble	.L23
1398:Core/Src/main.c ****         sprintf(transmit_data,"%s","\nRight Button Pushed");
 850              		.loc 1 1398 9 is_stmt 1 view .LVU199
 851 010a 364E     		ldr	r6, .L30+8
 852 010c 4FF48077 		mov	r7, #256
 853 0110 3A46     		mov	r2, r7
 854 0112 0021     		movs	r1, #0
 855 0114 3046     		mov	r0, r6
 856 0116 FFF7FEFF 		bl	memset
 857              	.LVL70:
1399:Core/Src/main.c **** 	      HAL_UART_Transmit(&huart2, transmit_data, sizeof(transmit_data)/sizeof(transmit_data[0]),100
 858              		.loc 1 1399 9 view .LVU200
 859 011a 3446     		mov	r4, r6
 860 011c 3B4D     		ldr	r5, .L30+48
 861 011e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 862 0120 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 863 0122 95E80300 		ldm	r5, {r0, r1}
 864 0126 44F8040B 		str	r0, [r4], #4
 865 012a 2170     		strb	r1, [r4]
1400:Core/Src/main.c ****         memset(transmit_data, '\0', sizeof(transmit_data));
 866              		.loc 1 1400 8 view .LVU201
 867 012c 4FF47A73 		mov	r3, #1000
 868 0130 3A46     		mov	r2, r7
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 47


 869 0132 3146     		mov	r1, r6
 870 0134 2D48     		ldr	r0, .L30+16
 871 0136 FFF7FEFF 		bl	HAL_UART_Transmit
 872              	.LVL71:
1401:Core/Src/main.c ****         bModeChanged = true;
 873              		.loc 1 1401 9 view .LVU202
 874 013a 3A46     		mov	r2, r7
 875 013c 0021     		movs	r1, #0
 876 013e 3046     		mov	r0, r6
 877 0140 FFF7FEFF 		bl	memset
 878              	.LVL72:
1402:Core/Src/main.c ****         
 879              		.loc 1 1402 9 view .LVU203
1402:Core/Src/main.c ****         
 880              		.loc 1 1402 22 is_stmt 0 view .LVU204
 881 0144 2A4B     		ldr	r3, .L30+20
 882 0146 0122     		movs	r2, #1
 883 0148 1A70     		strb	r2, [r3]
1404:Core/Src/main.c ****           iMode = 1;
 884              		.loc 1 1404 9 is_stmt 1 view .LVU205
1404:Core/Src/main.c ****           iMode = 1;
 885              		.loc 1 1404 19 is_stmt 0 view .LVU206
 886 014a 2A4B     		ldr	r3, .L30+24
 887 014c 1B68     		ldr	r3, [r3]
1404:Core/Src/main.c ****           iMode = 1;
 888              		.loc 1 1404 12 view .LVU207
 889 014e 3C2B     		cmp	r3, #60
 890 0150 21D0     		beq	.L29
1417:Core/Src/main.c ****           // Set cursors and write the word "mode"
 891              		.loc 1 1417 11 is_stmt 1 view .LVU208
1417:Core/Src/main.c ****           // Set cursors and write the word "mode"
 892              		.loc 1 1417 25 is_stmt 0 view .LVU209
 893 0152 0133     		adds	r3, r3, #1
1417:Core/Src/main.c ****           // Set cursors and write the word "mode"
 894              		.loc 1 1417 17 view .LVU210
 895 0154 274E     		ldr	r6, .L30+24
 896 0156 3360     		str	r3, [r6]
1419:Core/Src/main.c ****           ssd1306_WriteString("Mode:", Font_16x26, White);
 897              		.loc 1 1419 11 is_stmt 1 view .LVU211
 898 0158 0021     		movs	r1, #0
 899 015a 0846     		mov	r0, r1
 900 015c FFF7FEFF 		bl	ssd1306_SetCursor
 901              	.LVL73:
1420:Core/Src/main.c **** 
 902              		.loc 1 1420 11 view .LVU212
 903 0160 254C     		ldr	r4, .L30+28
 904 0162 0123     		movs	r3, #1
 905 0164 94E80600 		ldm	r4, {r1, r2}
 906 0168 2448     		ldr	r0, .L30+32
 907 016a FFF7FEFF 		bl	ssd1306_WriteString
 908              	.LVL74:
1422:Core/Src/main.c ****           sprintf(sMode, "%d        ", iMode);
 909              		.loc 1 1422 11 view .LVU213
 910 016e 2321     		movs	r1, #35
 911 0170 0020     		movs	r0, #0
 912 0172 FFF7FEFF 		bl	ssd1306_SetCursor
 913              	.LVL75:
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 48


1423:Core/Src/main.c ****           ssd1306_WriteString(sMode, Font_16x26, White);
 914              		.loc 1 1423 11 view .LVU214
 915 0176 224D     		ldr	r5, .L30+36
 916 0178 3268     		ldr	r2, [r6]
 917 017a 2249     		ldr	r1, .L30+40
 918 017c 2846     		mov	r0, r5
 919 017e FFF7FEFF 		bl	sprintf
 920              	.LVL76:
1424:Core/Src/main.c **** 
 921              		.loc 1 1424 11 view .LVU215
 922 0182 0123     		movs	r3, #1
 923 0184 94E80600 		ldm	r4, {r1, r2}
 924 0188 2846     		mov	r0, r5
 925 018a FFF7FEFF 		bl	ssd1306_WriteString
 926              	.LVL77:
1427:Core/Src/main.c **** 
 927              		.loc 1 1427 11 view .LVU216
 928 018e 1E48     		ldr	r0, .L30+44
 929 0190 FFF7FEFF 		bl	ssd1306_UpdateScreen
 930              	.LVL78:
 931 0194 3CE7     		b	.L23
 932              	.L29:
1405:Core/Src/main.c ****           // Set cursors and write the word "mode"
 933              		.loc 1 1405 11 view .LVU217
1405:Core/Src/main.c ****           // Set cursors and write the word "mode"
 934              		.loc 1 1405 17 is_stmt 0 view .LVU218
 935 0196 174F     		ldr	r7, .L30+24
 936 0198 1546     		mov	r5, r2
 937 019a 3A60     		str	r2, [r7]
1407:Core/Src/main.c ****           ssd1306_WriteString("Mode:", Font_16x26, White);
 938              		.loc 1 1407 11 is_stmt 1 view .LVU219
 939 019c 0021     		movs	r1, #0
 940 019e 0846     		mov	r0, r1
 941 01a0 FFF7FEFF 		bl	ssd1306_SetCursor
 942              	.LVL79:
1408:Core/Src/main.c **** 
 943              		.loc 1 1408 11 view .LVU220
 944 01a4 144C     		ldr	r4, .L30+28
 945 01a6 2B46     		mov	r3, r5
 946 01a8 94E80600 		ldm	r4, {r1, r2}
 947 01ac 1348     		ldr	r0, .L30+32
 948 01ae FFF7FEFF 		bl	ssd1306_WriteString
 949              	.LVL80:
1410:Core/Src/main.c ****           sprintf(sMode, "%d        ", iMode);
 950              		.loc 1 1410 11 view .LVU221
 951 01b2 2321     		movs	r1, #35
 952 01b4 0020     		movs	r0, #0
 953 01b6 FFF7FEFF 		bl	ssd1306_SetCursor
 954              	.LVL81:
1411:Core/Src/main.c ****           ssd1306_WriteString(sMode, Font_16x26, White);
 955              		.loc 1 1411 11 view .LVU222
 956 01ba 114E     		ldr	r6, .L30+36
 957 01bc 3A68     		ldr	r2, [r7]
 958 01be 1149     		ldr	r1, .L30+40
 959 01c0 3046     		mov	r0, r6
 960 01c2 FFF7FEFF 		bl	sprintf
 961              	.LVL82:
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 49


1412:Core/Src/main.c **** 
 962              		.loc 1 1412 11 view .LVU223
 963 01c6 2B46     		mov	r3, r5
 964 01c8 94E80600 		ldm	r4, {r1, r2}
 965 01cc 3046     		mov	r0, r6
 966 01ce FFF7FEFF 		bl	ssd1306_WriteString
 967              	.LVL83:
1415:Core/Src/main.c ****         } else {
 968              		.loc 1 1415 11 view .LVU224
 969 01d2 0D48     		ldr	r0, .L30+44
 970 01d4 FFF7FEFF 		bl	ssd1306_UpdateScreen
 971              	.LVL84:
 972 01d8 1AE7     		b	.L23
 973              	.L31:
 974 01da 00BF     		.align	2
 975              	.L30:
 976 01dc 00000000 		.word	currentTicks
 977 01e0 00000000 		.word	preTicks
 978 01e4 00000000 		.word	transmit_data
 979 01e8 00000000 		.word	.LC5
 980 01ec 00000000 		.word	huart2
 981 01f0 00000000 		.word	bModeChanged
 982 01f4 00000000 		.word	iMode
 983 01f8 00000000 		.word	Font_16x26
 984 01fc 14000000 		.word	.LC6
 985 0200 00000000 		.word	sMode
 986 0204 1C000000 		.word	.LC7
 987 0208 00000000 		.word	hi2c2
 988 020c 28000000 		.word	.LC8
 989              		.cfi_endproc
 990              	.LFE147:
 992              		.section	.text.Error_Handler,"ax",%progbits
 993              		.align	1
 994              		.global	Error_Handler
 995              		.syntax unified
 996              		.thumb
 997              		.thumb_func
 999              	Error_Handler:
 1000              	.LFB148:
1438:Core/Src/main.c **** 
1439:Core/Src/main.c **** /* USER CODE END 4 */
1440:Core/Src/main.c **** 
1441:Core/Src/main.c **** /**
1442:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
1443:Core/Src/main.c ****   * @retval None
1444:Core/Src/main.c ****   */
1445:Core/Src/main.c **** void Error_Handler(void)
1446:Core/Src/main.c **** {
 1001              		.loc 1 1446 1 view -0
 1002              		.cfi_startproc
 1003              		@ Volatile: function does not return.
 1004              		@ args = 0, pretend = 0, frame = 0
 1005              		@ frame_needed = 0, uses_anonymous_args = 0
 1006              		@ link register save eliminated.
1447:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
1448:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
1449:Core/Src/main.c ****   __disable_irq();
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 50


 1007              		.loc 1 1449 3 view .LVU226
 1008              	.LBB9:
 1009              	.LBI9:
 1010              		.file 3 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 51


  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 52


 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 1011              		.loc 3 140 27 view .LVU227
 1012              	.LBB10:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 1013              		.loc 3 142 3 view .LVU228
 1014              		.syntax unified
 1015              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1016 0000 72B6     		cpsid i
 1017              	@ 0 "" 2
 1018              		.thumb
 1019              		.syntax unified
 1020              	.L33:
 1021              	.LBE10:
 1022              	.LBE9:
1450:Core/Src/main.c ****   while (1)
 1023              		.loc 1 1450 3 discriminator 1 view .LVU229
1451:Core/Src/main.c ****   {
1452:Core/Src/main.c ****   }
 1024              		.loc 1 1452 3 discriminator 1 view .LVU230
1450:Core/Src/main.c ****   while (1)
 1025              		.loc 1 1450 9 discriminator 1 view .LVU231
 1026 0002 FEE7     		b	.L33
 1027              		.cfi_endproc
 1028              	.LFE148:
 1030              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 1031              		.align	1
 1032              		.syntax unified
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 53


 1033              		.thumb
 1034              		.thumb_func
 1036              	MX_USART1_UART_Init:
 1037              	.LFB143:
1137:Core/Src/main.c **** 
 1038              		.loc 1 1137 1 view -0
 1039              		.cfi_startproc
 1040              		@ args = 0, pretend = 0, frame = 0
 1041              		@ frame_needed = 0, uses_anonymous_args = 0
 1042 0000 08B5     		push	{r3, lr}
 1043              		.cfi_def_cfa_offset 8
 1044              		.cfi_offset 3, -8
 1045              		.cfi_offset 14, -4
1146:Core/Src/main.c ****   huart1.Init.BaudRate = 9600;
 1046              		.loc 1 1146 3 view .LVU233
1146:Core/Src/main.c ****   huart1.Init.BaudRate = 9600;
 1047              		.loc 1 1146 19 is_stmt 0 view .LVU234
 1048 0002 0A48     		ldr	r0, .L38
 1049 0004 0A4B     		ldr	r3, .L38+4
 1050 0006 0360     		str	r3, [r0]
1147:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 1051              		.loc 1 1147 3 is_stmt 1 view .LVU235
1147:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 1052              		.loc 1 1147 24 is_stmt 0 view .LVU236
 1053 0008 4FF41653 		mov	r3, #9600
 1054 000c 4360     		str	r3, [r0, #4]
1148:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 1055              		.loc 1 1148 3 is_stmt 1 view .LVU237
1148:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 1056              		.loc 1 1148 26 is_stmt 0 view .LVU238
 1057 000e 0023     		movs	r3, #0
 1058 0010 8360     		str	r3, [r0, #8]
1149:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 1059              		.loc 1 1149 3 is_stmt 1 view .LVU239
1149:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 1060              		.loc 1 1149 24 is_stmt 0 view .LVU240
 1061 0012 C360     		str	r3, [r0, #12]
1150:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 1062              		.loc 1 1150 3 is_stmt 1 view .LVU241
1150:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 1063              		.loc 1 1150 22 is_stmt 0 view .LVU242
 1064 0014 0361     		str	r3, [r0, #16]
1151:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1065              		.loc 1 1151 3 is_stmt 1 view .LVU243
1151:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1066              		.loc 1 1151 20 is_stmt 0 view .LVU244
 1067 0016 0C22     		movs	r2, #12
 1068 0018 4261     		str	r2, [r0, #20]
1152:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 1069              		.loc 1 1152 3 is_stmt 1 view .LVU245
1152:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 1070              		.loc 1 1152 25 is_stmt 0 view .LVU246
 1071 001a 8361     		str	r3, [r0, #24]
1153:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 1072              		.loc 1 1153 3 is_stmt 1 view .LVU247
1153:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 1073              		.loc 1 1153 28 is_stmt 0 view .LVU248
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 54


 1074 001c C361     		str	r3, [r0, #28]
1154:Core/Src/main.c ****   {
 1075              		.loc 1 1154 3 is_stmt 1 view .LVU249
1154:Core/Src/main.c ****   {
 1076              		.loc 1 1154 7 is_stmt 0 view .LVU250
 1077 001e FFF7FEFF 		bl	HAL_UART_Init
 1078              	.LVL85:
1154:Core/Src/main.c ****   {
 1079              		.loc 1 1154 6 view .LVU251
 1080 0022 00B9     		cbnz	r0, .L37
1162:Core/Src/main.c **** 
 1081              		.loc 1 1162 1 view .LVU252
 1082 0024 08BD     		pop	{r3, pc}
 1083              	.L37:
1156:Core/Src/main.c ****   }
 1084              		.loc 1 1156 5 is_stmt 1 view .LVU253
 1085 0026 FFF7FEFF 		bl	Error_Handler
 1086              	.LVL86:
 1087              	.L39:
 1088 002a 00BF     		.align	2
 1089              	.L38:
 1090 002c 00000000 		.word	huart1
 1091 0030 00100140 		.word	1073811456
 1092              		.cfi_endproc
 1093              	.LFE143:
 1095              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 1096              		.align	1
 1097              		.syntax unified
 1098              		.thumb
 1099              		.thumb_func
 1101              	MX_USART2_UART_Init:
 1102              	.LFB144:
1170:Core/Src/main.c **** 
 1103              		.loc 1 1170 1 view -0
 1104              		.cfi_startproc
 1105              		@ args = 0, pretend = 0, frame = 0
 1106              		@ frame_needed = 0, uses_anonymous_args = 0
 1107 0000 08B5     		push	{r3, lr}
 1108              		.cfi_def_cfa_offset 8
 1109              		.cfi_offset 3, -8
 1110              		.cfi_offset 14, -4
1179:Core/Src/main.c ****   huart2.Init.BaudRate = 230400;
 1111              		.loc 1 1179 3 view .LVU255
1179:Core/Src/main.c ****   huart2.Init.BaudRate = 230400;
 1112              		.loc 1 1179 19 is_stmt 0 view .LVU256
 1113 0002 0A48     		ldr	r0, .L44
 1114 0004 0A4B     		ldr	r3, .L44+4
 1115 0006 0360     		str	r3, [r0]
1180:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 1116              		.loc 1 1180 3 is_stmt 1 view .LVU257
1180:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 1117              		.loc 1 1180 24 is_stmt 0 view .LVU258
 1118 0008 4FF46133 		mov	r3, #230400
 1119 000c 4360     		str	r3, [r0, #4]
1181:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 1120              		.loc 1 1181 3 is_stmt 1 view .LVU259
1181:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 55


 1121              		.loc 1 1181 26 is_stmt 0 view .LVU260
 1122 000e 0023     		movs	r3, #0
 1123 0010 8360     		str	r3, [r0, #8]
1182:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 1124              		.loc 1 1182 3 is_stmt 1 view .LVU261
1182:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 1125              		.loc 1 1182 24 is_stmt 0 view .LVU262
 1126 0012 C360     		str	r3, [r0, #12]
1183:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 1127              		.loc 1 1183 3 is_stmt 1 view .LVU263
1183:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 1128              		.loc 1 1183 22 is_stmt 0 view .LVU264
 1129 0014 0361     		str	r3, [r0, #16]
1184:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1130              		.loc 1 1184 3 is_stmt 1 view .LVU265
1184:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1131              		.loc 1 1184 20 is_stmt 0 view .LVU266
 1132 0016 0C22     		movs	r2, #12
 1133 0018 4261     		str	r2, [r0, #20]
1185:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 1134              		.loc 1 1185 3 is_stmt 1 view .LVU267
1185:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 1135              		.loc 1 1185 25 is_stmt 0 view .LVU268
 1136 001a 8361     		str	r3, [r0, #24]
1186:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 1137              		.loc 1 1186 3 is_stmt 1 view .LVU269
1186:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 1138              		.loc 1 1186 28 is_stmt 0 view .LVU270
 1139 001c C361     		str	r3, [r0, #28]
1187:Core/Src/main.c ****   {
 1140              		.loc 1 1187 3 is_stmt 1 view .LVU271
1187:Core/Src/main.c ****   {
 1141              		.loc 1 1187 7 is_stmt 0 view .LVU272
 1142 001e FFF7FEFF 		bl	HAL_UART_Init
 1143              	.LVL87:
1187:Core/Src/main.c ****   {
 1144              		.loc 1 1187 6 view .LVU273
 1145 0022 00B9     		cbnz	r0, .L43
1195:Core/Src/main.c **** 
 1146              		.loc 1 1195 1 view .LVU274
 1147 0024 08BD     		pop	{r3, pc}
 1148              	.L43:
1189:Core/Src/main.c ****   }
 1149              		.loc 1 1189 5 is_stmt 1 view .LVU275
 1150 0026 FFF7FEFF 		bl	Error_Handler
 1151              	.LVL88:
 1152              	.L45:
 1153 002a 00BF     		.align	2
 1154              	.L44:
 1155 002c 00000000 		.word	huart2
 1156 0030 00440040 		.word	1073759232
 1157              		.cfi_endproc
 1158              	.LFE144:
 1160              		.section	.text.MX_I2C1_Init,"ax",%progbits
 1161              		.align	1
 1162              		.syntax unified
 1163              		.thumb
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 56


 1164              		.thumb_func
 1166              	MX_I2C1_Init:
 1167              	.LFB140:
1031:Core/Src/main.c **** 
 1168              		.loc 1 1031 1 view -0
 1169              		.cfi_startproc
 1170              		@ args = 0, pretend = 0, frame = 0
 1171              		@ frame_needed = 0, uses_anonymous_args = 0
 1172 0000 08B5     		push	{r3, lr}
 1173              		.cfi_def_cfa_offset 8
 1174              		.cfi_offset 3, -8
 1175              		.cfi_offset 14, -4
1040:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 1176              		.loc 1 1040 3 view .LVU277
1040:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 1177              		.loc 1 1040 18 is_stmt 0 view .LVU278
 1178 0002 0A48     		ldr	r0, .L50
 1179 0004 0A4B     		ldr	r3, .L50+4
 1180 0006 0360     		str	r3, [r0]
1041:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 1181              		.loc 1 1041 3 is_stmt 1 view .LVU279
1041:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 1182              		.loc 1 1041 25 is_stmt 0 view .LVU280
 1183 0008 0A4B     		ldr	r3, .L50+8
 1184 000a 4360     		str	r3, [r0, #4]
1042:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 1185              		.loc 1 1042 3 is_stmt 1 view .LVU281
1042:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 1186              		.loc 1 1042 24 is_stmt 0 view .LVU282
 1187 000c 0023     		movs	r3, #0
 1188 000e 8360     		str	r3, [r0, #8]
1043:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 1189              		.loc 1 1043 3 is_stmt 1 view .LVU283
1043:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 1190              		.loc 1 1043 26 is_stmt 0 view .LVU284
 1191 0010 C360     		str	r3, [r0, #12]
1044:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 1192              		.loc 1 1044 3 is_stmt 1 view .LVU285
1044:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 1193              		.loc 1 1044 29 is_stmt 0 view .LVU286
 1194 0012 4FF48042 		mov	r2, #16384
 1195 0016 0261     		str	r2, [r0, #16]
1045:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 1196              		.loc 1 1045 3 is_stmt 1 view .LVU287
1045:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 1197              		.loc 1 1045 30 is_stmt 0 view .LVU288
 1198 0018 4361     		str	r3, [r0, #20]
1046:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 1199              		.loc 1 1046 3 is_stmt 1 view .LVU289
1046:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 1200              		.loc 1 1046 26 is_stmt 0 view .LVU290
 1201 001a 8361     		str	r3, [r0, #24]
1047:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 1202              		.loc 1 1047 3 is_stmt 1 view .LVU291
1047:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 1203              		.loc 1 1047 30 is_stmt 0 view .LVU292
 1204 001c C361     		str	r3, [r0, #28]
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 57


1048:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 1205              		.loc 1 1048 3 is_stmt 1 view .LVU293
1048:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 1206              		.loc 1 1048 28 is_stmt 0 view .LVU294
 1207 001e 0362     		str	r3, [r0, #32]
1049:Core/Src/main.c ****   {
 1208              		.loc 1 1049 3 is_stmt 1 view .LVU295
1049:Core/Src/main.c ****   {
 1209              		.loc 1 1049 7 is_stmt 0 view .LVU296
 1210 0020 FFF7FEFF 		bl	HAL_I2C_Init
 1211              	.LVL89:
1049:Core/Src/main.c ****   {
 1212              		.loc 1 1049 6 view .LVU297
 1213 0024 00B9     		cbnz	r0, .L49
1057:Core/Src/main.c **** 
 1214              		.loc 1 1057 1 view .LVU298
 1215 0026 08BD     		pop	{r3, pc}
 1216              	.L49:
1051:Core/Src/main.c ****   }
 1217              		.loc 1 1051 5 is_stmt 1 view .LVU299
 1218 0028 FFF7FEFF 		bl	Error_Handler
 1219              	.LVL90:
 1220              	.L51:
 1221              		.align	2
 1222              	.L50:
 1223 002c 00000000 		.word	hi2c1
 1224 0030 00540040 		.word	1073763328
 1225 0034 A0860100 		.word	100000
 1226              		.cfi_endproc
 1227              	.LFE140:
 1229              		.section	.text.MX_SPI3_Init,"ax",%progbits
 1230              		.align	1
 1231              		.syntax unified
 1232              		.thumb
 1233              		.thumb_func
 1235              	MX_SPI3_Init:
 1236              	.LFB142:
1099:Core/Src/main.c **** 
 1237              		.loc 1 1099 1 view -0
 1238              		.cfi_startproc
 1239              		@ args = 0, pretend = 0, frame = 0
 1240              		@ frame_needed = 0, uses_anonymous_args = 0
 1241 0000 08B5     		push	{r3, lr}
 1242              		.cfi_def_cfa_offset 8
 1243              		.cfi_offset 3, -8
 1244              		.cfi_offset 14, -4
1109:Core/Src/main.c ****   hspi3.Init.Mode = SPI_MODE_MASTER;
 1245              		.loc 1 1109 3 view .LVU301
1109:Core/Src/main.c ****   hspi3.Init.Mode = SPI_MODE_MASTER;
 1246              		.loc 1 1109 18 is_stmt 0 view .LVU302
 1247 0002 0D48     		ldr	r0, .L56
 1248 0004 0D4B     		ldr	r3, .L56+4
 1249 0006 0360     		str	r3, [r0]
1110:Core/Src/main.c ****   hspi3.Init.Direction = SPI_DIRECTION_2LINES;
 1250              		.loc 1 1110 3 is_stmt 1 view .LVU303
1110:Core/Src/main.c ****   hspi3.Init.Direction = SPI_DIRECTION_2LINES;
 1251              		.loc 1 1110 19 is_stmt 0 view .LVU304
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 58


 1252 0008 4FF48273 		mov	r3, #260
 1253 000c 4360     		str	r3, [r0, #4]
1111:Core/Src/main.c ****   hspi3.Init.DataSize = SPI_DATASIZE_8BIT;
 1254              		.loc 1 1111 3 is_stmt 1 view .LVU305
1111:Core/Src/main.c ****   hspi3.Init.DataSize = SPI_DATASIZE_8BIT;
 1255              		.loc 1 1111 24 is_stmt 0 view .LVU306
 1256 000e 0023     		movs	r3, #0
 1257 0010 8360     		str	r3, [r0, #8]
1112:Core/Src/main.c ****   hspi3.Init.CLKPolarity = SPI_POLARITY_LOW;
 1258              		.loc 1 1112 3 is_stmt 1 view .LVU307
1112:Core/Src/main.c ****   hspi3.Init.CLKPolarity = SPI_POLARITY_LOW;
 1259              		.loc 1 1112 23 is_stmt 0 view .LVU308
 1260 0012 C360     		str	r3, [r0, #12]
1113:Core/Src/main.c ****   hspi3.Init.CLKPhase = SPI_PHASE_1EDGE;
 1261              		.loc 1 1113 3 is_stmt 1 view .LVU309
1113:Core/Src/main.c ****   hspi3.Init.CLKPhase = SPI_PHASE_1EDGE;
 1262              		.loc 1 1113 26 is_stmt 0 view .LVU310
 1263 0014 0361     		str	r3, [r0, #16]
1114:Core/Src/main.c ****   hspi3.Init.NSS = SPI_NSS_SOFT;
 1264              		.loc 1 1114 3 is_stmt 1 view .LVU311
1114:Core/Src/main.c ****   hspi3.Init.NSS = SPI_NSS_SOFT;
 1265              		.loc 1 1114 23 is_stmt 0 view .LVU312
 1266 0016 4361     		str	r3, [r0, #20]
1115:Core/Src/main.c ****   hspi3.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 1267              		.loc 1 1115 3 is_stmt 1 view .LVU313
1115:Core/Src/main.c ****   hspi3.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 1268              		.loc 1 1115 18 is_stmt 0 view .LVU314
 1269 0018 4FF40072 		mov	r2, #512
 1270 001c 8261     		str	r2, [r0, #24]
1116:Core/Src/main.c ****   hspi3.Init.FirstBit = SPI_FIRSTBIT_MSB;
 1271              		.loc 1 1116 3 is_stmt 1 view .LVU315
1116:Core/Src/main.c ****   hspi3.Init.FirstBit = SPI_FIRSTBIT_MSB;
 1272              		.loc 1 1116 32 is_stmt 0 view .LVU316
 1273 001e C361     		str	r3, [r0, #28]
1117:Core/Src/main.c ****   hspi3.Init.TIMode = SPI_TIMODE_DISABLE;
 1274              		.loc 1 1117 3 is_stmt 1 view .LVU317
1117:Core/Src/main.c ****   hspi3.Init.TIMode = SPI_TIMODE_DISABLE;
 1275              		.loc 1 1117 23 is_stmt 0 view .LVU318
 1276 0020 0362     		str	r3, [r0, #32]
1118:Core/Src/main.c ****   hspi3.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 1277              		.loc 1 1118 3 is_stmt 1 view .LVU319
1118:Core/Src/main.c ****   hspi3.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 1278              		.loc 1 1118 21 is_stmt 0 view .LVU320
 1279 0022 4362     		str	r3, [r0, #36]
1119:Core/Src/main.c ****   hspi3.Init.CRCPolynomial = 10;
 1280              		.loc 1 1119 3 is_stmt 1 view .LVU321
1119:Core/Src/main.c ****   hspi3.Init.CRCPolynomial = 10;
 1281              		.loc 1 1119 29 is_stmt 0 view .LVU322
 1282 0024 8362     		str	r3, [r0, #40]
1120:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi3) != HAL_OK)
 1283              		.loc 1 1120 3 is_stmt 1 view .LVU323
1120:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi3) != HAL_OK)
 1284              		.loc 1 1120 28 is_stmt 0 view .LVU324
 1285 0026 0A23     		movs	r3, #10
 1286 0028 C362     		str	r3, [r0, #44]
1121:Core/Src/main.c ****   {
 1287              		.loc 1 1121 3 is_stmt 1 view .LVU325
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 59


1121:Core/Src/main.c ****   {
 1288              		.loc 1 1121 7 is_stmt 0 view .LVU326
 1289 002a FFF7FEFF 		bl	HAL_SPI_Init
 1290              	.LVL91:
1121:Core/Src/main.c ****   {
 1291              		.loc 1 1121 6 view .LVU327
 1292 002e 00B9     		cbnz	r0, .L55
1129:Core/Src/main.c **** 
 1293              		.loc 1 1129 1 view .LVU328
 1294 0030 08BD     		pop	{r3, pc}
 1295              	.L55:
1123:Core/Src/main.c ****   }
 1296              		.loc 1 1123 5 is_stmt 1 view .LVU329
 1297 0032 FFF7FEFF 		bl	Error_Handler
 1298              	.LVL92:
 1299              	.L57:
 1300 0036 00BF     		.align	2
 1301              	.L56:
 1302 0038 00000000 		.word	hspi3
 1303 003c 003C0040 		.word	1073757184
 1304              		.cfi_endproc
 1305              	.LFE142:
 1307              		.section	.text.MX_I2C2_Init,"ax",%progbits
 1308              		.align	1
 1309              		.syntax unified
 1310              		.thumb
 1311              		.thumb_func
 1313              	MX_I2C2_Init:
 1314              	.LFB141:
1065:Core/Src/main.c **** 
 1315              		.loc 1 1065 1 view -0
 1316              		.cfi_startproc
 1317              		@ args = 0, pretend = 0, frame = 0
 1318              		@ frame_needed = 0, uses_anonymous_args = 0
 1319 0000 08B5     		push	{r3, lr}
 1320              		.cfi_def_cfa_offset 8
 1321              		.cfi_offset 3, -8
 1322              		.cfi_offset 14, -4
1074:Core/Src/main.c ****   hi2c2.Init.ClockSpeed = 100000;
 1323              		.loc 1 1074 3 view .LVU331
1074:Core/Src/main.c ****   hi2c2.Init.ClockSpeed = 100000;
 1324              		.loc 1 1074 18 is_stmt 0 view .LVU332
 1325 0002 0A48     		ldr	r0, .L62
 1326 0004 0A4B     		ldr	r3, .L62+4
 1327 0006 0360     		str	r3, [r0]
1075:Core/Src/main.c ****   hi2c2.Init.DutyCycle = I2C_DUTYCYCLE_2;
 1328              		.loc 1 1075 3 is_stmt 1 view .LVU333
1075:Core/Src/main.c ****   hi2c2.Init.DutyCycle = I2C_DUTYCYCLE_2;
 1329              		.loc 1 1075 25 is_stmt 0 view .LVU334
 1330 0008 0A4B     		ldr	r3, .L62+8
 1331 000a 4360     		str	r3, [r0, #4]
1076:Core/Src/main.c ****   hi2c2.Init.OwnAddress1 = 0;
 1332              		.loc 1 1076 3 is_stmt 1 view .LVU335
1076:Core/Src/main.c ****   hi2c2.Init.OwnAddress1 = 0;
 1333              		.loc 1 1076 24 is_stmt 0 view .LVU336
 1334 000c 0023     		movs	r3, #0
 1335 000e 8360     		str	r3, [r0, #8]
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 60


1077:Core/Src/main.c ****   hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 1336              		.loc 1 1077 3 is_stmt 1 view .LVU337
1077:Core/Src/main.c ****   hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 1337              		.loc 1 1077 26 is_stmt 0 view .LVU338
 1338 0010 C360     		str	r3, [r0, #12]
1078:Core/Src/main.c ****   hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 1339              		.loc 1 1078 3 is_stmt 1 view .LVU339
1078:Core/Src/main.c ****   hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 1340              		.loc 1 1078 29 is_stmt 0 view .LVU340
 1341 0012 4FF48042 		mov	r2, #16384
 1342 0016 0261     		str	r2, [r0, #16]
1079:Core/Src/main.c ****   hi2c2.Init.OwnAddress2 = 0;
 1343              		.loc 1 1079 3 is_stmt 1 view .LVU341
1079:Core/Src/main.c ****   hi2c2.Init.OwnAddress2 = 0;
 1344              		.loc 1 1079 30 is_stmt 0 view .LVU342
 1345 0018 4361     		str	r3, [r0, #20]
1080:Core/Src/main.c ****   hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 1346              		.loc 1 1080 3 is_stmt 1 view .LVU343
1080:Core/Src/main.c ****   hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 1347              		.loc 1 1080 26 is_stmt 0 view .LVU344
 1348 001a 8361     		str	r3, [r0, #24]
1081:Core/Src/main.c ****   hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 1349              		.loc 1 1081 3 is_stmt 1 view .LVU345
1081:Core/Src/main.c ****   hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 1350              		.loc 1 1081 30 is_stmt 0 view .LVU346
 1351 001c C361     		str	r3, [r0, #28]
1082:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 1352              		.loc 1 1082 3 is_stmt 1 view .LVU347
1082:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 1353              		.loc 1 1082 28 is_stmt 0 view .LVU348
 1354 001e 0362     		str	r3, [r0, #32]
1083:Core/Src/main.c ****   {
 1355              		.loc 1 1083 3 is_stmt 1 view .LVU349
1083:Core/Src/main.c ****   {
 1356              		.loc 1 1083 7 is_stmt 0 view .LVU350
 1357 0020 FFF7FEFF 		bl	HAL_I2C_Init
 1358              	.LVL93:
1083:Core/Src/main.c ****   {
 1359              		.loc 1 1083 6 view .LVU351
 1360 0024 00B9     		cbnz	r0, .L61
1091:Core/Src/main.c **** 
 1361              		.loc 1 1091 1 view .LVU352
 1362 0026 08BD     		pop	{r3, pc}
 1363              	.L61:
1085:Core/Src/main.c ****   }
 1364              		.loc 1 1085 5 is_stmt 1 view .LVU353
 1365 0028 FFF7FEFF 		bl	Error_Handler
 1366              	.LVL94:
 1367              	.L63:
 1368              		.align	2
 1369              	.L62:
 1370 002c 00000000 		.word	hi2c2
 1371 0030 00580040 		.word	1073764352
 1372 0034 A0860100 		.word	100000
 1373              		.cfi_endproc
 1374              	.LFE141:
 1376              		.section	.text.SystemClock_Config,"ax",%progbits
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 61


 1377              		.align	1
 1378              		.global	SystemClock_Config
 1379              		.syntax unified
 1380              		.thumb
 1381              		.thumb_func
 1383              	SystemClock_Config:
 1384              	.LFB139:
 989:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1385              		.loc 1 989 1 view -0
 1386              		.cfi_startproc
 1387              		@ args = 0, pretend = 0, frame = 80
 1388              		@ frame_needed = 0, uses_anonymous_args = 0
 1389 0000 00B5     		push	{lr}
 1390              		.cfi_def_cfa_offset 4
 1391              		.cfi_offset 14, -4
 1392 0002 95B0     		sub	sp, sp, #84
 1393              		.cfi_def_cfa_offset 88
 990:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1394              		.loc 1 990 3 view .LVU355
 990:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1395              		.loc 1 990 22 is_stmt 0 view .LVU356
 1396 0004 3022     		movs	r2, #48
 1397 0006 0021     		movs	r1, #0
 1398 0008 08A8     		add	r0, sp, #32
 1399 000a FFF7FEFF 		bl	memset
 1400              	.LVL95:
 991:Core/Src/main.c **** 
 1401              		.loc 1 991 3 is_stmt 1 view .LVU357
 991:Core/Src/main.c **** 
 1402              		.loc 1 991 22 is_stmt 0 view .LVU358
 1403 000e 0023     		movs	r3, #0
 1404 0010 0393     		str	r3, [sp, #12]
 1405 0012 0493     		str	r3, [sp, #16]
 1406 0014 0593     		str	r3, [sp, #20]
 1407 0016 0693     		str	r3, [sp, #24]
 1408 0018 0793     		str	r3, [sp, #28]
 995:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1409              		.loc 1 995 3 is_stmt 1 view .LVU359
 1410              	.LBB11:
 995:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1411              		.loc 1 995 3 view .LVU360
 1412 001a 0193     		str	r3, [sp, #4]
 995:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1413              		.loc 1 995 3 view .LVU361
 1414 001c 184A     		ldr	r2, .L70
 1415 001e 116C     		ldr	r1, [r2, #64]
 1416 0020 41F08051 		orr	r1, r1, #268435456
 1417 0024 1164     		str	r1, [r2, #64]
 995:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1418              		.loc 1 995 3 view .LVU362
 1419 0026 126C     		ldr	r2, [r2, #64]
 1420 0028 02F08052 		and	r2, r2, #268435456
 1421 002c 0192     		str	r2, [sp, #4]
 995:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1422              		.loc 1 995 3 view .LVU363
 1423 002e 019A     		ldr	r2, [sp, #4]
 1424              	.LBE11:
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 62


 995:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1425              		.loc 1 995 3 view .LVU364
 996:Core/Src/main.c **** 
 1426              		.loc 1 996 3 view .LVU365
 1427              	.LBB12:
 996:Core/Src/main.c **** 
 1428              		.loc 1 996 3 view .LVU366
 1429 0030 0293     		str	r3, [sp, #8]
 996:Core/Src/main.c **** 
 1430              		.loc 1 996 3 view .LVU367
 1431 0032 144A     		ldr	r2, .L70+4
 1432 0034 1168     		ldr	r1, [r2]
 1433 0036 41F44041 		orr	r1, r1, #49152
 1434 003a 1160     		str	r1, [r2]
 996:Core/Src/main.c **** 
 1435              		.loc 1 996 3 view .LVU368
 1436 003c 1268     		ldr	r2, [r2]
 1437 003e 02F44042 		and	r2, r2, #49152
 1438 0042 0292     		str	r2, [sp, #8]
 996:Core/Src/main.c **** 
 1439              		.loc 1 996 3 view .LVU369
 1440 0044 029A     		ldr	r2, [sp, #8]
 1441              	.LBE12:
 996:Core/Src/main.c **** 
 1442              		.loc 1 996 3 view .LVU370
1001:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1443              		.loc 1 1001 3 view .LVU371
1001:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1444              		.loc 1 1001 36 is_stmt 0 view .LVU372
 1445 0046 0222     		movs	r2, #2
 1446 0048 0892     		str	r2, [sp, #32]
1002:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1447              		.loc 1 1002 3 is_stmt 1 view .LVU373
1002:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1448              		.loc 1 1002 30 is_stmt 0 view .LVU374
 1449 004a 0122     		movs	r2, #1
 1450 004c 0B92     		str	r2, [sp, #44]
1003:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 1451              		.loc 1 1003 3 is_stmt 1 view .LVU375
1003:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 1452              		.loc 1 1003 41 is_stmt 0 view .LVU376
 1453 004e 1022     		movs	r2, #16
 1454 0050 0C92     		str	r2, [sp, #48]
1004:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1455              		.loc 1 1004 3 is_stmt 1 view .LVU377
1004:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1456              		.loc 1 1004 34 is_stmt 0 view .LVU378
 1457 0052 0E93     		str	r3, [sp, #56]
1005:Core/Src/main.c ****   {
 1458              		.loc 1 1005 3 is_stmt 1 view .LVU379
1005:Core/Src/main.c ****   {
 1459              		.loc 1 1005 7 is_stmt 0 view .LVU380
 1460 0054 08A8     		add	r0, sp, #32
 1461 0056 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1462              	.LVL96:
1005:Core/Src/main.c ****   {
 1463              		.loc 1 1005 6 view .LVU381
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 63


 1464 005a 68B9     		cbnz	r0, .L68
1012:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1465              		.loc 1 1012 3 is_stmt 1 view .LVU382
1012:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1466              		.loc 1 1012 31 is_stmt 0 view .LVU383
 1467 005c 0F23     		movs	r3, #15
 1468 005e 0393     		str	r3, [sp, #12]
1014:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1469              		.loc 1 1014 3 is_stmt 1 view .LVU384
1014:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1470              		.loc 1 1014 34 is_stmt 0 view .LVU385
 1471 0060 0021     		movs	r1, #0
 1472 0062 0491     		str	r1, [sp, #16]
1015:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1473              		.loc 1 1015 3 is_stmt 1 view .LVU386
1015:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1474              		.loc 1 1015 35 is_stmt 0 view .LVU387
 1475 0064 0591     		str	r1, [sp, #20]
1016:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1476              		.loc 1 1016 3 is_stmt 1 view .LVU388
1016:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1477              		.loc 1 1016 36 is_stmt 0 view .LVU389
 1478 0066 0691     		str	r1, [sp, #24]
1017:Core/Src/main.c **** 
 1479              		.loc 1 1017 3 is_stmt 1 view .LVU390
1017:Core/Src/main.c **** 
 1480              		.loc 1 1017 36 is_stmt 0 view .LVU391
 1481 0068 0791     		str	r1, [sp, #28]
1019:Core/Src/main.c ****   {
 1482              		.loc 1 1019 3 is_stmt 1 view .LVU392
1019:Core/Src/main.c ****   {
 1483              		.loc 1 1019 7 is_stmt 0 view .LVU393
 1484 006a 03A8     		add	r0, sp, #12
 1485 006c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1486              	.LVL97:
1019:Core/Src/main.c ****   {
 1487              		.loc 1 1019 6 view .LVU394
 1488 0070 20B9     		cbnz	r0, .L69
1023:Core/Src/main.c **** 
 1489              		.loc 1 1023 1 view .LVU395
 1490 0072 15B0     		add	sp, sp, #84
 1491              		.cfi_remember_state
 1492              		.cfi_def_cfa_offset 4
 1493              		@ sp needed
 1494 0074 5DF804FB 		ldr	pc, [sp], #4
 1495              	.L68:
 1496              		.cfi_restore_state
1007:Core/Src/main.c ****   }
 1497              		.loc 1 1007 5 is_stmt 1 view .LVU396
 1498 0078 FFF7FEFF 		bl	Error_Handler
 1499              	.LVL98:
 1500              	.L69:
1021:Core/Src/main.c ****   }
 1501              		.loc 1 1021 5 view .LVU397
 1502 007c FFF7FEFF 		bl	Error_Handler
 1503              	.LVL99:
 1504              	.L71:
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 64


 1505              		.align	2
 1506              	.L70:
 1507 0080 00380240 		.word	1073887232
 1508 0084 00700040 		.word	1073770496
 1509              		.cfi_endproc
 1510              	.LFE139:
 1512              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 1513              		.align	2
 1514              	.LC9:
 1515 0000 424D4532 		.ascii	"BME280\000"
 1515      383000
 1516 0007 00       		.align	2
 1517              	.LC10:
 1518 0008 424D5032 		.ascii	"BMP280\000"
 1518      383000
 1519 000f 00       		.align	2
 1520              	.LC11:
 1521 0010 424D5032 		.ascii	"BMP280 initialization failed\012\000"
 1521      38302069 
 1521      6E697469 
 1521      616C697A 
 1521      6174696F 
 1522 002e 0000     		.align	2
 1523              	.LC12:
 1524 0030 0A424D50 		.ascii	"\012BMP280: found %s\012\000"
 1524      3238303A 
 1524      20666F75 
 1524      6E642025 
 1524      730A00
 1525 0043 00       		.align	2
 1526              	.LC13:
 1527 0044 4C6F5261 		.ascii	"LoRa is running... :) \012\015\000"
 1527      20697320 
 1527      72756E6E 
 1527      696E672E 
 1527      2E2E203A 
 1528 005d 000000   		.align	2
 1529              	.LC14:
 1530 0060 0A0D204C 		.ascii	"\012\015 LoRa failed :( \012\015 Error code: %d \012"
 1530      6F526120 
 1530      6661696C 
 1530      6564203A 
 1530      28200A0D 
 1531 0085 0D00     		.ascii	"\015\000"
 1532 0087 00       		.align	2
 1533              	.LC15:
 1534 0088 256400   		.ascii	"%d\000"
 1535 008b 00       		.align	2
 1536              	.LC16:
 1537 008c 4800     		.ascii	"H\000"
 1538              		.section	.text.main,"ax",%progbits
 1539              		.align	1
 1540              		.global	main
 1541              		.syntax unified
 1542              		.thumb
 1543              		.thumb_func
 1545              	main:
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 65


 1546              	.LFB138:
 127:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 1547              		.loc 1 127 1 view -0
 1548              		.cfi_startproc
 1549              		@ args = 0, pretend = 0, frame = 176
 1550              		@ frame_needed = 0, uses_anonymous_args = 0
 1551 0000 70B5     		push	{r4, r5, r6, lr}
 1552              		.cfi_def_cfa_offset 16
 1553              		.cfi_offset 4, -16
 1554              		.cfi_offset 5, -12
 1555              		.cfi_offset 6, -8
 1556              		.cfi_offset 14, -4
 1557 0002 ACB0     		sub	sp, sp, #176
 1558              		.cfi_def_cfa_offset 192
 135:Core/Src/main.c **** 
 1559              		.loc 1 135 3 view .LVU399
 1560 0004 FFF7FEFF 		bl	HAL_Init
 1561              	.LVL100:
 142:Core/Src/main.c **** 
 1562              		.loc 1 142 3 view .LVU400
 1563 0008 FFF7FEFF 		bl	SystemClock_Config
 1564              	.LVL101:
 149:Core/Src/main.c ****   MX_USART1_UART_Init();
 1565              		.loc 1 149 3 view .LVU401
 1566 000c FFF7FEFF 		bl	MX_GPIO_Init
 1567              	.LVL102:
 150:Core/Src/main.c ****   MX_USART2_UART_Init();
 1568              		.loc 1 150 3 view .LVU402
 1569 0010 FFF7FEFF 		bl	MX_USART1_UART_Init
 1570              	.LVL103:
 151:Core/Src/main.c ****   MX_I2C1_Init();
 1571              		.loc 1 151 3 view .LVU403
 1572 0014 FFF7FEFF 		bl	MX_USART2_UART_Init
 1573              	.LVL104:
 152:Core/Src/main.c ****   MX_SPI3_Init();
 1574              		.loc 1 152 3 view .LVU404
 1575 0018 FFF7FEFF 		bl	MX_I2C1_Init
 1576              	.LVL105:
 153:Core/Src/main.c ****   MX_I2C2_Init();
 1577              		.loc 1 153 3 view .LVU405
 1578 001c FFF7FEFF 		bl	MX_SPI3_Init
 1579              	.LVL106:
 154:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1580              		.loc 1 154 3 view .LVU406
 1581 0020 FFF7FEFF 		bl	MX_I2C2_Init
 1582              	.LVL107:
 157:Core/Src/main.c **** 	bmp280.addr = 0x77;
 1583              		.loc 1 157 3 view .LVU407
 1584 0024 784C     		ldr	r4, .L149
 1585 0026 2046     		mov	r0, r4
 1586 0028 FFF7FEFF 		bl	bmp280_init_default_params
 1587              	.LVL108:
 158:Core/Src/main.c **** 	bmp280.i2c = &hi2c1;
 1588              		.loc 1 158 2 view .LVU408
 158:Core/Src/main.c **** 	bmp280.i2c = &hi2c1;
 1589              		.loc 1 158 14 is_stmt 0 view .LVU409
 1590 002c 7723     		movs	r3, #119
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 66


 1591 002e 24F8083C 		strh	r3, [r4, #-8]	@ movhi
 159:Core/Src/main.c **** 
 1592              		.loc 1 159 2 is_stmt 1 view .LVU410
 159:Core/Src/main.c **** 
 1593              		.loc 1 159 13 is_stmt 0 view .LVU411
 1594 0032 764B     		ldr	r3, .L149+4
 1595 0034 44F8043C 		str	r3, [r4, #-4]
 161:Core/Src/main.c **** 		size = sprintf((char *)Data, "BMP280 initialization failed\n");
 1596              		.loc 1 161 2 is_stmt 1 view .LVU412
 161:Core/Src/main.c **** 		size = sprintf((char *)Data, "BMP280 initialization failed\n");
 1597              		.loc 1 161 8 is_stmt 0 view .LVU413
 1598 0038 18E0     		b	.L73
 1599              	.L74:
 162:Core/Src/main.c **** 		HAL_UART_Transmit(&huart2, Data, size, 1000);
 1600              		.loc 1 162 3 is_stmt 1 view .LVU414
 162:Core/Src/main.c **** 		HAL_UART_Transmit(&huart2, Data, size, 1000);
 1601              		.loc 1 162 10 is_stmt 0 view .LVU415
 1602 003a 754D     		ldr	r5, .L149+8
 1603 003c AC46     		mov	ip, r5
 1604 003e 754C     		ldr	r4, .L149+12
 1605 0040 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1606 0042 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 1607 0046 94E80F00 		ldm	r4, {r0, r1, r2, r3}
 1608 004a ACE80700 		stmia	ip!, {r0, r1, r2}
 1609 004e ACF80030 		strh	r3, [ip]	@ movhi
 1610 0052 1D22     		movs	r2, #29
 162:Core/Src/main.c **** 		HAL_UART_Transmit(&huart2, Data, size, 1000);
 1611              		.loc 1 162 8 view .LVU416
 1612 0054 704B     		ldr	r3, .L149+16
 1613 0056 1A60     		str	r2, [r3]
 163:Core/Src/main.c **** 		HAL_Delay(2000);
 1614              		.loc 1 163 3 is_stmt 1 view .LVU417
 1615 0058 4FF47A73 		mov	r3, #1000
 1616 005c 2946     		mov	r1, r5
 1617 005e 6F48     		ldr	r0, .L149+20
 1618 0060 FFF7FEFF 		bl	HAL_UART_Transmit
 1619              	.LVL109:
 164:Core/Src/main.c **** 	}
 1620              		.loc 1 164 3 view .LVU418
 1621 0064 4FF4FA60 		mov	r0, #2000
 1622 0068 FFF7FEFF 		bl	HAL_Delay
 1623              	.LVL110:
 1624              	.L73:
 161:Core/Src/main.c **** 		size = sprintf((char *)Data, "BMP280 initialization failed\n");
 1625              		.loc 1 161 9 view .LVU419
 161:Core/Src/main.c **** 		size = sprintf((char *)Data, "BMP280 initialization failed\n");
 1626              		.loc 1 161 10 is_stmt 0 view .LVU420
 1627 006c 6649     		ldr	r1, .L149
 1628 006e A1F12C00 		sub	r0, r1, #44
 1629 0072 FFF7FEFF 		bl	bmp280_init
 1630              	.LVL111:
 161:Core/Src/main.c **** 		size = sprintf((char *)Data, "BMP280 initialization failed\n");
 1631              		.loc 1 161 9 view .LVU421
 1632 0076 0028     		cmp	r0, #0
 1633 0078 DFD0     		beq	.L74
 166:Core/Src/main.c **** 	size = sprintf((char *)Data, "\nBMP280: found %s\n", bme280p ? "BME280" : "BMP280");
 1634              		.loc 1 166 2 is_stmt 1 view .LVU422
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 67


 166:Core/Src/main.c **** 	size = sprintf((char *)Data, "\nBMP280: found %s\n", bme280p ? "BME280" : "BMP280");
 1635              		.loc 1 166 23 is_stmt 0 view .LVU423
 1636 007a 694B     		ldr	r3, .L149+24
 1637 007c 93F83230 		ldrb	r3, [r3, #50]	@ zero_extendqisi2
 1638              	.LVL112:
 167:Core/Src/main.c **** 	HAL_UART_Transmit(&huart2, Data, size, 1000);
 1639              		.loc 1 167 2 is_stmt 1 view .LVU424
 167:Core/Src/main.c **** 	HAL_UART_Transmit(&huart2, Data, size, 1000);
 1640              		.loc 1 167 9 is_stmt 0 view .LVU425
 1641 0080 602B     		cmp	r3, #96
 1642 0082 00F08480 		beq	.L146
 1643 0086 674A     		ldr	r2, .L149+28
 1644              	.L75:
 167:Core/Src/main.c **** 	HAL_UART_Transmit(&huart2, Data, size, 1000);
 1645              		.loc 1 167 9 discriminator 4 view .LVU426
 1646 0088 614C     		ldr	r4, .L149+8
 1647 008a 6749     		ldr	r1, .L149+32
 1648 008c 2046     		mov	r0, r4
 1649 008e FFF7FEFF 		bl	sprintf
 1650              	.LVL113:
 167:Core/Src/main.c **** 	HAL_UART_Transmit(&huart2, Data, size, 1000);
 1651              		.loc 1 167 9 discriminator 4 view .LVU427
 1652 0092 1622     		movs	r2, #22
 167:Core/Src/main.c **** 	HAL_UART_Transmit(&huart2, Data, size, 1000);
 1653              		.loc 1 167 7 discriminator 4 view .LVU428
 1654 0094 604B     		ldr	r3, .L149+16
 1655 0096 1A60     		str	r2, [r3]
 168:Core/Src/main.c **** 
 1656              		.loc 1 168 2 is_stmt 1 discriminator 4 view .LVU429
 1657 0098 4FF47A73 		mov	r3, #1000
 1658 009c 2146     		mov	r1, r4
 1659 009e 5F48     		ldr	r0, .L149+20
 1660 00a0 FFF7FEFF 		bl	HAL_UART_Transmit
 1661              	.LVL114:
 170:Core/Src/main.c ****   myLoRa.CS_port         = GPIOA;
 1662              		.loc 1 170 3 discriminator 4 view .LVU430
 170:Core/Src/main.c ****   myLoRa.CS_port         = GPIOA;
 1663              		.loc 1 170 12 is_stmt 0 discriminator 4 view .LVU431
 1664 00a4 614D     		ldr	r5, .L149+36
 1665 00a6 6846     		mov	r0, sp
 1666 00a8 FFF7FEFF 		bl	newLoRa
 1667              	.LVL115:
 1668 00ac AC46     		mov	ip, r5
 1669 00ae 6C46     		mov	r4, sp
 1670 00b0 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1671 00b2 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 1672 00b6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1673 00b8 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 1674 00bc 94E80700 		ldm	r4, {r0, r1, r2}
 1675 00c0 8CE80700 		stm	ip, {r0, r1, r2}
 171:Core/Src/main.c ****   myLoRa.CS_pin          = GPIO_PIN_4;
 1676              		.loc 1 171 3 is_stmt 1 discriminator 4 view .LVU432
 171:Core/Src/main.c ****   myLoRa.CS_pin          = GPIO_PIN_4;
 1677              		.loc 1 171 26 is_stmt 0 discriminator 4 view .LVU433
 1678 00c4 5A4B     		ldr	r3, .L149+40
 1679 00c6 2B60     		str	r3, [r5]
 172:Core/Src/main.c ****   myLoRa.reset_port      = GPIOB;
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 68


 1680              		.loc 1 172 3 is_stmt 1 discriminator 4 view .LVU434
 172:Core/Src/main.c ****   myLoRa.reset_port      = GPIOB;
 1681              		.loc 1 172 26 is_stmt 0 discriminator 4 view .LVU435
 1682 00c8 1023     		movs	r3, #16
 1683 00ca AB80     		strh	r3, [r5, #4]	@ movhi
 173:Core/Src/main.c ****   myLoRa.reset_pin       = GPIO_PIN_8;
 1684              		.loc 1 173 3 is_stmt 1 discriminator 4 view .LVU436
 173:Core/Src/main.c ****   myLoRa.reset_pin       = GPIO_PIN_8;
 1685              		.loc 1 173 26 is_stmt 0 discriminator 4 view .LVU437
 1686 00cc 594B     		ldr	r3, .L149+44
 1687 00ce AB60     		str	r3, [r5, #8]
 174:Core/Src/main.c ****   myLoRa.DIO0_port       = GPIOB;
 1688              		.loc 1 174 3 is_stmt 1 discriminator 4 view .LVU438
 174:Core/Src/main.c ****   myLoRa.DIO0_port       = GPIOB;
 1689              		.loc 1 174 26 is_stmt 0 discriminator 4 view .LVU439
 1690 00d0 4FF48072 		mov	r2, #256
 1691 00d4 AA81     		strh	r2, [r5, #12]	@ movhi
 175:Core/Src/main.c ****   myLoRa.DIO0_pin        = GPIO_PIN_9;
 1692              		.loc 1 175 3 is_stmt 1 discriminator 4 view .LVU440
 175:Core/Src/main.c ****   myLoRa.DIO0_pin        = GPIO_PIN_9;
 1693              		.loc 1 175 26 is_stmt 0 discriminator 4 view .LVU441
 1694 00d6 2B61     		str	r3, [r5, #16]
 176:Core/Src/main.c ****   myLoRa.hSPIx           = &hspi3;
 1695              		.loc 1 176 3 is_stmt 1 discriminator 4 view .LVU442
 176:Core/Src/main.c ****   myLoRa.hSPIx           = &hspi3;
 1696              		.loc 1 176 26 is_stmt 0 discriminator 4 view .LVU443
 1697 00d8 4FF40073 		mov	r3, #512
 1698 00dc AB82     		strh	r3, [r5, #20]	@ movhi
 177:Core/Src/main.c **** 
 1699              		.loc 1 177 3 is_stmt 1 discriminator 4 view .LVU444
 177:Core/Src/main.c **** 
 1700              		.loc 1 177 26 is_stmt 0 discriminator 4 view .LVU445
 1701 00de 564B     		ldr	r3, .L149+48
 1702 00e0 AB61     		str	r3, [r5, #24]
 179:Core/Src/main.c ****   myLoRa.spredingFactor        = SF_7;            // default = SF_7
 1703              		.loc 1 179 3 is_stmt 1 discriminator 4 view .LVU446
 179:Core/Src/main.c ****   myLoRa.spredingFactor        = SF_7;            // default = SF_7
 1704              		.loc 1 179 32 is_stmt 0 discriminator 4 view .LVU447
 1705 00e2 40F2B113 		movw	r3, #433
 1706 00e6 2B62     		str	r3, [r5, #32]
 180:Core/Src/main.c ****   myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 1707              		.loc 1 180 3 is_stmt 1 discriminator 4 view .LVU448
 180:Core/Src/main.c ****   myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 1708              		.loc 1 180 32 is_stmt 0 discriminator 4 view .LVU449
 1709 00e8 0723     		movs	r3, #7
 1710 00ea 85F82430 		strb	r3, [r5, #36]
 181:Core/Src/main.c ****   myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 1711              		.loc 1 181 3 is_stmt 1 discriminator 4 view .LVU450
 181:Core/Src/main.c ****   myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 1712              		.loc 1 181 32 is_stmt 0 discriminator 4 view .LVU451
 1713 00ee 0026     		movs	r6, #0
 1714 00f0 85F82560 		strb	r6, [r5, #37]
 182:Core/Src/main.c ****   myLoRa.power                 = POWER_20db;      // default = 20db
 1715              		.loc 1 182 3 is_stmt 1 discriminator 4 view .LVU452
 182:Core/Src/main.c ****   myLoRa.power                 = POWER_20db;      // default = 20db
 1716              		.loc 1 182 32 is_stmt 0 discriminator 4 view .LVU453
 1717 00f4 0123     		movs	r3, #1
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 69


 1718 00f6 85F82630 		strb	r3, [r5, #38]
 183:Core/Src/main.c ****   myLoRa.overCurrentProtection = 100;             // default = 100 mA
 1719              		.loc 1 183 3 is_stmt 1 discriminator 4 view .LVU454
 183:Core/Src/main.c ****   myLoRa.overCurrentProtection = 100;             // default = 100 mA
 1720              		.loc 1 183 32 is_stmt 0 discriminator 4 view .LVU455
 1721 00fa FF23     		movs	r3, #255
 1722 00fc 85F82A30 		strb	r3, [r5, #42]
 184:Core/Src/main.c ****   myLoRa.preamble              = 8;              // default = 8;
 1723              		.loc 1 184 3 is_stmt 1 discriminator 4 view .LVU456
 184:Core/Src/main.c ****   myLoRa.preamble              = 8;              // default = 8;
 1724              		.loc 1 184 32 is_stmt 0 discriminator 4 view .LVU457
 1725 0100 6423     		movs	r3, #100
 1726 0102 85F82B30 		strb	r3, [r5, #43]
 185:Core/Src/main.c **** 
 1727              		.loc 1 185 3 is_stmt 1 discriminator 4 view .LVU458
 185:Core/Src/main.c **** 
 1728              		.loc 1 185 32 is_stmt 0 discriminator 4 view .LVU459
 1729 0106 0823     		movs	r3, #8
 1730 0108 2B85     		strh	r3, [r5, #40]	@ movhi
 187:Core/Src/main.c ****   uint8_t buff[128] = {"\0"};
 1731              		.loc 1 187 3 is_stmt 1 discriminator 4 view .LVU460
 187:Core/Src/main.c ****   uint8_t buff[128] = {"\0"};
 1732              		.loc 1 187 18 is_stmt 0 discriminator 4 view .LVU461
 1733 010a 2846     		mov	r0, r5
 1734 010c FFF7FEFF 		bl	LoRa_init
 1735              	.LVL116:
 1736 0110 0446     		mov	r4, r0
 1737              	.LVL117:
 188:Core/Src/main.c ****   
 1738              		.loc 1 188 3 is_stmt 1 discriminator 4 view .LVU462
 188:Core/Src/main.c ****   
 1739              		.loc 1 188 11 is_stmt 0 discriminator 4 view .LVU463
 1740 0112 0C96     		str	r6, [sp, #48]
 1741 0114 7C22     		movs	r2, #124
 1742 0116 3146     		mov	r1, r6
 1743 0118 0DA8     		add	r0, sp, #52
 1744 011a FFF7FEFF 		bl	memset
 1745              	.LVL118:
 191:Core/Src/main.c ****   snprintf(buff,sizeof(buff),"LoRa is running... :) \n\r");
 1746              		.loc 1 191 1 is_stmt 1 discriminator 4 view .LVU464
 191:Core/Src/main.c ****   snprintf(buff,sizeof(buff),"LoRa is running... :) \n\r");
 1747              		.loc 1 191 4 is_stmt 0 discriminator 4 view .LVU465
 1748 011e C82C     		cmp	r4, #200
 1749 0120 37D0     		beq	.L147
 198:Core/Src/main.c ****   size = strlen(&buff);
 1750              		.loc 1 198 3 is_stmt 1 view .LVU466
 1751 0122 2346     		mov	r3, r4
 1752 0124 454A     		ldr	r2, .L149+52
 1753 0126 8021     		movs	r1, #128
 1754 0128 0CA8     		add	r0, sp, #48
 1755 012a FFF7FEFF 		bl	snprintf
 1756              	.LVL119:
 199:Core/Src/main.c ****   HAL_UART_Transmit(&huart2, buff, size, 1000);
 1757              		.loc 1 199 3 view .LVU467
 199:Core/Src/main.c ****   HAL_UART_Transmit(&huart2, buff, size, 1000);
 1758              		.loc 1 199 10 is_stmt 0 view .LVU468
 1759 012e 0CA8     		add	r0, sp, #48
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 70


 1760 0130 FFF7FEFF 		bl	strlen
 1761              	.LVL120:
 199:Core/Src/main.c ****   HAL_UART_Transmit(&huart2, buff, size, 1000);
 1762              		.loc 1 199 8 view .LVU469
 1763 0134 384B     		ldr	r3, .L149+16
 1764 0136 1860     		str	r0, [r3]
 200:Core/Src/main.c **** }
 1765              		.loc 1 200 3 is_stmt 1 view .LVU470
 1766 0138 4FF47A73 		mov	r3, #1000
 1767 013c 82B2     		uxth	r2, r0
 1768 013e 0CA9     		add	r1, sp, #48
 1769 0140 3648     		ldr	r0, .L149+20
 1770 0142 FFF7FEFF 		bl	HAL_UART_Transmit
 1771              	.LVL121:
 1772              	.L77:
 204:Core/Src/main.c **** 
 1773              		.loc 1 204 1 view .LVU471
 1774 0146 3E4D     		ldr	r5, .L149+56
 1775 0148 2846     		mov	r0, r5
 1776 014a FFF7FEFF 		bl	ssd1306_Init
 1777              	.LVL122:
 207:Core/Src/main.c **** ssd1306_WriteString("Mode:", Font_16x26, White);
 1778              		.loc 1 207 1 view .LVU472
 1779 014e 0021     		movs	r1, #0
 1780 0150 0846     		mov	r0, r1
 1781 0152 FFF7FEFF 		bl	ssd1306_SetCursor
 1782              	.LVL123:
 208:Core/Src/main.c **** 
 1783              		.loc 1 208 1 view .LVU473
 1784 0156 3B4C     		ldr	r4, .L149+60
 1785 0158 0123     		movs	r3, #1
 1786 015a 94E80600 		ldm	r4, {r1, r2}
 1787 015e 3A48     		ldr	r0, .L149+64
 1788 0160 FFF7FEFF 		bl	ssd1306_WriteString
 1789              	.LVL124:
 210:Core/Src/main.c **** sprintf(sMode, "%d", iMode);
 1790              		.loc 1 210 1 view .LVU474
 1791 0164 2321     		movs	r1, #35
 1792 0166 0020     		movs	r0, #0
 1793 0168 FFF7FEFF 		bl	ssd1306_SetCursor
 1794              	.LVL125:
 211:Core/Src/main.c **** ssd1306_WriteString(sMode, Font_16x26, White);
 1795              		.loc 1 211 1 view .LVU475
 1796 016c 374E     		ldr	r6, .L149+68
 1797 016e 384B     		ldr	r3, .L149+72
 1798 0170 1A68     		ldr	r2, [r3]
 1799 0172 3849     		ldr	r1, .L149+76
 1800 0174 3046     		mov	r0, r6
 1801 0176 FFF7FEFF 		bl	sprintf
 1802              	.LVL126:
 212:Core/Src/main.c **** 
 1803              		.loc 1 212 1 view .LVU476
 1804 017a 0123     		movs	r3, #1
 1805 017c 94E80600 		ldm	r4, {r1, r2}
 1806 0180 3046     		mov	r0, r6
 1807 0182 FFF7FEFF 		bl	ssd1306_WriteString
 1808              	.LVL127:
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 71


 215:Core/Src/main.c **** 
 1809              		.loc 1 215 1 view .LVU477
 1810 0186 2846     		mov	r0, r5
 1811 0188 FFF7FEFF 		bl	ssd1306_UpdateScreen
 1812              	.LVL128:
 1813 018c 8CE0     		b	.L142
 1814              	.LVL129:
 1815              	.L146:
 167:Core/Src/main.c **** 	HAL_UART_Transmit(&huart2, Data, size, 1000);
 1816              		.loc 1 167 9 is_stmt 0 view .LVU478
 1817 018e 324A     		ldr	r2, .L149+80
 1818 0190 7AE7     		b	.L75
 1819              	.LVL130:
 1820              	.L147:
 192:Core/Src/main.c ****   size = strlen(&buff);
 1821              		.loc 1 192 3 is_stmt 1 view .LVU479
 1822 0192 0CAC     		add	r4, sp, #48
 1823              	.LVL131:
 192:Core/Src/main.c ****   size = strlen(&buff);
 1824              		.loc 1 192 3 is_stmt 0 view .LVU480
 1825 0194 314D     		ldr	r5, .L149+84
 1826 0196 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1827 0198 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1828 019a 95E80700 		ldm	r5, {r0, r1, r2}
 1829 019e 03C4     		stmia	r4!, {r0, r1}
 1830 01a0 2270     		strb	r2, [r4]
 193:Core/Src/main.c ****   LoRa_transmit(&myLoRa, (uint8_t*)buff, size, 100);
 1831              		.loc 1 193 3 is_stmt 1 view .LVU481
 193:Core/Src/main.c ****   LoRa_transmit(&myLoRa, (uint8_t*)buff, size, 100);
 1832              		.loc 1 193 10 is_stmt 0 view .LVU482
 1833 01a2 0CA8     		add	r0, sp, #48
 1834 01a4 FFF7FEFF 		bl	strlen
 1835              	.LVL132:
 193:Core/Src/main.c ****   LoRa_transmit(&myLoRa, (uint8_t*)buff, size, 100);
 1836              		.loc 1 193 8 view .LVU483
 1837 01a8 1B4C     		ldr	r4, .L149+16
 1838 01aa 2060     		str	r0, [r4]
 194:Core/Src/main.c ****   HAL_UART_Transmit(&huart2, buff, size, 1000);
 1839              		.loc 1 194 3 is_stmt 1 view .LVU484
 1840 01ac 6423     		movs	r3, #100
 1841 01ae C2B2     		uxtb	r2, r0
 1842 01b0 0CA9     		add	r1, sp, #48
 1843 01b2 1E48     		ldr	r0, .L149+36
 1844 01b4 FFF7FEFF 		bl	LoRa_transmit
 1845              	.LVL133:
 195:Core/Src/main.c **** }
 1846              		.loc 1 195 3 view .LVU485
 1847 01b8 4FF47A73 		mov	r3, #1000
 1848 01bc 2288     		ldrh	r2, [r4]
 1849 01be 0CA9     		add	r1, sp, #48
 1850 01c0 1648     		ldr	r0, .L149+20
 1851 01c2 FFF7FEFF 		bl	HAL_UART_Transmit
 1852              	.LVL134:
 1853 01c6 BEE7     		b	.L77
 1854              	.L148:
 231:Core/Src/main.c ****       LoRa_transmit(&myLoRa, (uint8_t*)"H", 1, 100);
 1855              		.loc 1 231 7 view .LVU486
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 72


 231:Core/Src/main.c ****       LoRa_transmit(&myLoRa, (uint8_t*)"H", 1, 100);
 1856              		.loc 1 231 14 is_stmt 0 view .LVU487
 1857 01c8 254C     		ldr	r4, .L149+88
 1858 01ca 2046     		mov	r0, r4
 1859 01cc FFF7FEFF 		bl	strlen
 1860              	.LVL135:
 231:Core/Src/main.c ****       LoRa_transmit(&myLoRa, (uint8_t*)"H", 1, 100);
 1861              		.loc 1 231 12 view .LVU488
 1862 01d0 114D     		ldr	r5, .L149+16
 1863 01d2 2860     		str	r0, [r5]
 232:Core/Src/main.c ****       size = strlen(&transmit_data);
 1864              		.loc 1 232 7 is_stmt 1 view .LVU489
 1865 01d4 6423     		movs	r3, #100
 1866 01d6 0122     		movs	r2, #1
 1867 01d8 2249     		ldr	r1, .L149+92
 1868 01da 1448     		ldr	r0, .L149+36
 1869 01dc FFF7FEFF 		bl	LoRa_transmit
 1870              	.LVL136:
 233:Core/Src/main.c **** 	    HAL_UART_Transmit(&huart2, transmit_data, size, 1000);
 1871              		.loc 1 233 7 view .LVU490
 233:Core/Src/main.c **** 	    HAL_UART_Transmit(&huart2, transmit_data, size, 1000);
 1872              		.loc 1 233 14 is_stmt 0 view .LVU491
 1873 01e0 2046     		mov	r0, r4
 1874 01e2 FFF7FEFF 		bl	strlen
 1875              	.LVL137:
 233:Core/Src/main.c **** 	    HAL_UART_Transmit(&huart2, transmit_data, size, 1000);
 1876              		.loc 1 233 12 view .LVU492
 1877 01e6 2860     		str	r0, [r5]
 234:Core/Src/main.c ****       flag = 0;
 1878              		.loc 1 234 6 is_stmt 1 view .LVU493
 1879 01e8 4FF47A73 		mov	r3, #1000
 1880 01ec 82B2     		uxth	r2, r0
 1881 01ee 2146     		mov	r1, r4
 1882 01f0 0A48     		ldr	r0, .L149+20
 1883 01f2 FFF7FEFF 		bl	HAL_UART_Transmit
 1884              	.LVL138:
 235:Core/Src/main.c ****       memset(transmit_data, '\0', sizeof(transmit_data));
 1885              		.loc 1 235 7 view .LVU494
 235:Core/Src/main.c ****       memset(transmit_data, '\0', sizeof(transmit_data));
 1886              		.loc 1 235 12 is_stmt 0 view .LVU495
 1887 01f6 0021     		movs	r1, #0
 1888 01f8 1B4B     		ldr	r3, .L149+96
 1889 01fa 1970     		strb	r1, [r3]
 236:Core/Src/main.c ****     }
 1890              		.loc 1 236 7 is_stmt 1 view .LVU496
 1891 01fc 4FF48072 		mov	r2, #256
 1892 0200 2046     		mov	r0, r4
 1893 0202 FFF7FEFF 		bl	memset
 1894              	.LVL139:
 1895 0206 68E0     		b	.L79
 1896              	.L150:
 1897              		.align	2
 1898              	.L149:
 1899 0208 2C000000 		.word	bmp280+44
 1900 020c 00000000 		.word	hi2c1
 1901 0210 00000000 		.word	Data
 1902 0214 10000000 		.word	.LC11
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 73


 1903 0218 00000000 		.word	size
 1904 021c 00000000 		.word	huart2
 1905 0220 00000000 		.word	bmp280
 1906 0224 08000000 		.word	.LC10
 1907 0228 30000000 		.word	.LC12
 1908 022c 00000000 		.word	myLoRa
 1909 0230 00000240 		.word	1073872896
 1910 0234 00040240 		.word	1073873920
 1911 0238 00000000 		.word	hspi3
 1912 023c 60000000 		.word	.LC14
 1913 0240 00000000 		.word	hi2c2
 1914 0244 00000000 		.word	Font_16x26
 1915 0248 14000000 		.word	.LC6
 1916 024c 00000000 		.word	sMode
 1917 0250 00000000 		.word	iMode
 1918 0254 88000000 		.word	.LC15
 1919 0258 00000000 		.word	.LC9
 1920 025c 44000000 		.word	.LC13
 1921 0260 00000000 		.word	transmit_data
 1922 0264 8C000000 		.word	.LC16
 1923 0268 00000000 		.word	flag
 1924              	.L141:
 243:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_7;            // default = SF_7
 1925              		.loc 1 243 7 view .LVU497
 243:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_7;            // default = SF_7
 1926              		.loc 1 243 36 is_stmt 0 view .LVU498
 1927 026c D348     		ldr	r0, .L151
 1928 026e 40F2B113 		movw	r3, #433
 1929 0272 0362     		str	r3, [r0, #32]
 244:Core/Src/main.c ****       myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 1930              		.loc 1 244 7 is_stmt 1 view .LVU499
 244:Core/Src/main.c ****       myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 1931              		.loc 1 244 36 is_stmt 0 view .LVU500
 1932 0274 0723     		movs	r3, #7
 1933 0276 80F82430 		strb	r3, [r0, #36]
 245:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 1934              		.loc 1 245 7 is_stmt 1 view .LVU501
 245:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 1935              		.loc 1 245 36 is_stmt 0 view .LVU502
 1936 027a 0023     		movs	r3, #0
 1937 027c 80F82530 		strb	r3, [r0, #37]
 246:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 1938              		.loc 1 246 7 is_stmt 1 view .LVU503
 246:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 1939              		.loc 1 246 36 is_stmt 0 view .LVU504
 1940 0280 0123     		movs	r3, #1
 1941 0282 80F82630 		strb	r3, [r0, #38]
 247:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 1942              		.loc 1 247 7 is_stmt 1 view .LVU505
 247:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 1943              		.loc 1 247 36 is_stmt 0 view .LVU506
 1944 0286 FF23     		movs	r3, #255
 1945 0288 80F82A30 		strb	r3, [r0, #42]
 248:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 1946              		.loc 1 248 7 is_stmt 1 view .LVU507
 248:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 1947              		.loc 1 248 36 is_stmt 0 view .LVU508
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 74


 1948 028c 6423     		movs	r3, #100
 1949 028e 80F82B30 		strb	r3, [r0, #43]
 249:Core/Src/main.c ****       LoRa_init(&myLoRa);
 1950              		.loc 1 249 7 is_stmt 1 view .LVU509
 249:Core/Src/main.c ****       LoRa_init(&myLoRa);
 1951              		.loc 1 249 36 is_stmt 0 view .LVU510
 1952 0292 0823     		movs	r3, #8
 1953 0294 0385     		strh	r3, [r0, #40]	@ movhi
 250:Core/Src/main.c ****       break;
 1954              		.loc 1 250 7 is_stmt 1 view .LVU511
 1955 0296 FFF7FEFF 		bl	LoRa_init
 1956              	.LVL140:
 251:Core/Src/main.c **** 
 1957              		.loc 1 251 7 view .LVU512
 1958              	.L80:
 964:Core/Src/main.c ****     }
 1959              		.loc 1 964 7 view .LVU513
 964:Core/Src/main.c ****     }
 1960              		.loc 1 964 20 is_stmt 0 view .LVU514
 1961 029a C94B     		ldr	r3, .L151+4
 1962 029c 0022     		movs	r2, #0
 1963 029e 1A70     		strb	r2, [r3]
 1964              	.L78:
 978:Core/Src/main.c **** 
 1965              		.loc 1 978 5 is_stmt 1 view .LVU515
 978:Core/Src/main.c **** 
 1966              		.loc 1 978 13 is_stmt 0 view .LVU516
 1967 02a0 C84B     		ldr	r3, .L151+8
 1968 02a2 1A68     		ldr	r2, [r3]
 1969 02a4 C84B     		ldr	r3, .L151+12
 1970 02a6 1A60     		str	r2, [r3]
 221:Core/Src/main.c ****   {
 1971              		.loc 1 221 9 is_stmt 1 view .LVU517
 1972              	.L142:
 221:Core/Src/main.c ****   {
 1973              		.loc 1 221 3 view .LVU518
 224:Core/Src/main.c ****     if ((timeNow-timePre) >= 2000) {
 1974              		.loc 1 224 5 view .LVU519
 224:Core/Src/main.c ****     if ((timeNow-timePre) >= 2000) {
 1975              		.loc 1 224 15 is_stmt 0 view .LVU520
 1976 02a8 FFF7FEFF 		bl	HAL_GetTick
 1977              	.LVL141:
 224:Core/Src/main.c ****     if ((timeNow-timePre) >= 2000) {
 1978              		.loc 1 224 13 view .LVU521
 1979 02ac C54B     		ldr	r3, .L151+8
 1980 02ae 1860     		str	r0, [r3]
 225:Core/Src/main.c ****       
 1981              		.loc 1 225 5 is_stmt 1 view .LVU522
 225:Core/Src/main.c ****       
 1982              		.loc 1 225 17 is_stmt 0 view .LVU523
 1983 02b0 C54B     		ldr	r3, .L151+12
 1984 02b2 1B68     		ldr	r3, [r3]
 1985 02b4 C01A     		subs	r0, r0, r3
 225:Core/Src/main.c ****       
 1986              		.loc 1 225 8 view .LVU524
 1987 02b6 B0F5FA6F 		cmp	r0, #2000
 1988 02ba F1D3     		bcc	.L78
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 75


 228:Core/Src/main.c ****       HAL_UARTEx_ReceiveToIdle_IT(&huart1,(uint8_t*)gps_raw,512);
 1989              		.loc 1 228 5 is_stmt 1 view .LVU525
 228:Core/Src/main.c ****       HAL_UARTEx_ReceiveToIdle_IT(&huart1,(uint8_t*)gps_raw,512);
 1990              		.loc 1 228 9 is_stmt 0 view .LVU526
 1991 02bc C34B     		ldr	r3, .L151+16
 1992 02be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 228:Core/Src/main.c ****       HAL_UARTEx_ReceiveToIdle_IT(&huart1,(uint8_t*)gps_raw,512);
 1993              		.loc 1 228 8 view .LVU527
 1994 02c0 002B     		cmp	r3, #0
 1995 02c2 EDD0     		beq	.L78
 229:Core/Src/main.c ****       if (flag == 1) {
 1996              		.loc 1 229 7 is_stmt 1 view .LVU528
 1997 02c4 4FF40072 		mov	r2, #512
 1998 02c8 C149     		ldr	r1, .L151+20
 1999 02ca C248     		ldr	r0, .L151+24
 2000 02cc FFF7FEFF 		bl	HAL_UARTEx_ReceiveToIdle_IT
 2001              	.LVL142:
 230:Core/Src/main.c ****       size = strlen(&transmit_data);
 2002              		.loc 1 230 7 view .LVU529
 230:Core/Src/main.c ****       size = strlen(&transmit_data);
 2003              		.loc 1 230 16 is_stmt 0 view .LVU530
 2004 02d0 C14B     		ldr	r3, .L151+28
 2005 02d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 230:Core/Src/main.c ****       size = strlen(&transmit_data);
 2006              		.loc 1 230 10 view .LVU531
 2007 02d4 012B     		cmp	r3, #1
 2008 02d6 3FF477AF 		beq	.L148
 2009              	.L79:
 239:Core/Src/main.c **** switch (iMode) {
 2010              		.loc 1 239 5 is_stmt 1 view .LVU532
 239:Core/Src/main.c **** switch (iMode) {
 2011              		.loc 1 239 9 is_stmt 0 view .LVU533
 2012 02da B94B     		ldr	r3, .L151+4
 2013 02dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 239:Core/Src/main.c **** switch (iMode) {
 2014              		.loc 1 239 8 view .LVU534
 2015 02de 002B     		cmp	r3, #0
 2016 02e0 DED0     		beq	.L78
 240:Core/Src/main.c ****     case 1:
 2017              		.loc 1 240 1 is_stmt 1 view .LVU535
 2018 02e2 BE4B     		ldr	r3, .L151+32
 2019 02e4 1B68     		ldr	r3, [r3]
 2020 02e6 013B     		subs	r3, r3, #1
 2021 02e8 3B2B     		cmp	r3, #59
 2022 02ea D6D8     		bhi	.L80
 2023 02ec 01A2     		adr	r2, .L82
 2024 02ee 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2025 02f2 00BF     		.p2align 2
 2026              	.L82:
 2027 02f4 6D020000 		.word	.L141+1
 2028 02f8 E5030000 		.word	.L140+1
 2029 02fc 13040000 		.word	.L139+1
 2030 0300 43040000 		.word	.L138+1
 2031 0304 73040000 		.word	.L137+1
 2032 0308 A3040000 		.word	.L136+1
 2033 030c D3040000 		.word	.L135+1
 2034 0310 03050000 		.word	.L134+1
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 76


 2035 0314 31050000 		.word	.L133+1
 2036 0318 5F050000 		.word	.L132+1
 2037 031c 8F050000 		.word	.L131+1
 2038 0320 E1050000 		.word	.L130+1
 2039 0324 0D060000 		.word	.L129+1
 2040 0328 3B060000 		.word	.L128+1
 2041 032c 69060000 		.word	.L127+1
 2042 0330 97060000 		.word	.L126+1
 2043 0334 C5060000 		.word	.L125+1
 2044 0338 F3060000 		.word	.L124+1
 2045 033c 21070000 		.word	.L123+1
 2046 0340 4D070000 		.word	.L122+1
 2047 0344 7B070000 		.word	.L121+1
 2048 0348 AB070000 		.word	.L120+1
 2049 034c D9070000 		.word	.L119+1
 2050 0350 09080000 		.word	.L118+1
 2051 0354 39080000 		.word	.L117+1
 2052 0358 69080000 		.word	.L116+1
 2053 035c 99080000 		.word	.L115+1
 2054 0360 C9080000 		.word	.L114+1
 2055 0364 F9080000 		.word	.L113+1
 2056 0368 2D090000 		.word	.L112+1
 2057 036c 5B090000 		.word	.L111+1
 2058 0370 8B090000 		.word	.L110+1
 2059 0374 B9090000 		.word	.L109+1
 2060 0378 E9090000 		.word	.L108+1
 2061 037c 190A0000 		.word	.L107+1
 2062 0380 490A0000 		.word	.L106+1
 2063 0384 790A0000 		.word	.L105+1
 2064 0388 AB0A0000 		.word	.L104+1
 2065 038c DD0A0000 		.word	.L103+1
 2066 0390 0D0B0000 		.word	.L102+1
 2067 0394 3F0B0000 		.word	.L101+1
 2068 0398 710B0000 		.word	.L100+1
 2069 039c A10B0000 		.word	.L99+1
 2070 03a0 D30B0000 		.word	.L98+1
 2071 03a4 050C0000 		.word	.L97+1
 2072 03a8 370C0000 		.word	.L96+1
 2073 03ac 690C0000 		.word	.L95+1
 2074 03b0 A10C0000 		.word	.L94+1
 2075 03b4 D30C0000 		.word	.L93+1
 2076 03b8 030D0000 		.word	.L92+1
 2077 03bc 350D0000 		.word	.L91+1
 2078 03c0 670D0000 		.word	.L90+1
 2079 03c4 970D0000 		.word	.L89+1
 2080 03c8 C90D0000 		.word	.L88+1
 2081 03cc FB0D0000 		.word	.L87+1
 2082 03d0 2D0E0000 		.word	.L86+1
 2083 03d4 5F0E0000 		.word	.L85+1
 2084 03d8 910E0000 		.word	.L84+1
 2085 03dc C30E0000 		.word	.L83+1
 2086 03e0 F30E0000 		.word	.L81+1
 2087              		.p2align 1
 2088              	.L140:
 255:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_7;            // default = SF_7
 2089              		.loc 1 255 7 view .LVU536
 255:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_7;            // default = SF_7
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 77


 2090              		.loc 1 255 36 is_stmt 0 view .LVU537
 2091 03e4 7548     		ldr	r0, .L151
 2092 03e6 40F2B113 		movw	r3, #433
 2093 03ea 0362     		str	r3, [r0, #32]
 256:Core/Src/main.c ****       myLoRa.bandWidth             = BW_10_4KHz;       // default = BW_125KHz
 2094              		.loc 1 256 7 is_stmt 1 view .LVU538
 256:Core/Src/main.c ****       myLoRa.bandWidth             = BW_10_4KHz;       // default = BW_125KHz
 2095              		.loc 1 256 36 is_stmt 0 view .LVU539
 2096 03ec 0723     		movs	r3, #7
 2097 03ee 80F82430 		strb	r3, [r0, #36]
 257:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2098              		.loc 1 257 7 is_stmt 1 view .LVU540
 257:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2099              		.loc 1 257 36 is_stmt 0 view .LVU541
 2100 03f2 0123     		movs	r3, #1
 2101 03f4 80F82530 		strb	r3, [r0, #37]
 258:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2102              		.loc 1 258 7 is_stmt 1 view .LVU542
 258:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2103              		.loc 1 258 36 is_stmt 0 view .LVU543
 2104 03f8 80F82630 		strb	r3, [r0, #38]
 259:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2105              		.loc 1 259 7 is_stmt 1 view .LVU544
 259:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2106              		.loc 1 259 36 is_stmt 0 view .LVU545
 2107 03fc FF23     		movs	r3, #255
 2108 03fe 80F82A30 		strb	r3, [r0, #42]
 260:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2109              		.loc 1 260 7 is_stmt 1 view .LVU546
 260:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2110              		.loc 1 260 36 is_stmt 0 view .LVU547
 2111 0402 6423     		movs	r3, #100
 2112 0404 80F82B30 		strb	r3, [r0, #43]
 261:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2113              		.loc 1 261 7 is_stmt 1 view .LVU548
 261:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2114              		.loc 1 261 36 is_stmt 0 view .LVU549
 2115 0408 0823     		movs	r3, #8
 2116 040a 0385     		strh	r3, [r0, #40]	@ movhi
 262:Core/Src/main.c ****       break;
 2117              		.loc 1 262 7 is_stmt 1 view .LVU550
 2118 040c FFF7FEFF 		bl	LoRa_init
 2119              	.LVL143:
 263:Core/Src/main.c **** 
 2120              		.loc 1 263 7 view .LVU551
 2121 0410 43E7     		b	.L80
 2122              	.L139:
 267:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_7;            // default = SF_7
 2123              		.loc 1 267 7 view .LVU552
 267:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_7;            // default = SF_7
 2124              		.loc 1 267 36 is_stmt 0 view .LVU553
 2125 0412 6A48     		ldr	r0, .L151
 2126 0414 40F2B113 		movw	r3, #433
 2127 0418 0362     		str	r3, [r0, #32]
 268:Core/Src/main.c ****       myLoRa.bandWidth             = BW_15_6KHz;       // default = BW_125KHz
 2128              		.loc 1 268 7 is_stmt 1 view .LVU554
 268:Core/Src/main.c ****       myLoRa.bandWidth             = BW_15_6KHz;       // default = BW_125KHz
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 78


 2129              		.loc 1 268 36 is_stmt 0 view .LVU555
 2130 041a 0723     		movs	r3, #7
 2131 041c 80F82430 		strb	r3, [r0, #36]
 269:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2132              		.loc 1 269 7 is_stmt 1 view .LVU556
 269:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2133              		.loc 1 269 36 is_stmt 0 view .LVU557
 2134 0420 0223     		movs	r3, #2
 2135 0422 80F82530 		strb	r3, [r0, #37]
 270:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2136              		.loc 1 270 7 is_stmt 1 view .LVU558
 270:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2137              		.loc 1 270 36 is_stmt 0 view .LVU559
 2138 0426 0123     		movs	r3, #1
 2139 0428 80F82630 		strb	r3, [r0, #38]
 271:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2140              		.loc 1 271 7 is_stmt 1 view .LVU560
 271:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2141              		.loc 1 271 36 is_stmt 0 view .LVU561
 2142 042c FF23     		movs	r3, #255
 2143 042e 80F82A30 		strb	r3, [r0, #42]
 272:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2144              		.loc 1 272 7 is_stmt 1 view .LVU562
 272:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2145              		.loc 1 272 36 is_stmt 0 view .LVU563
 2146 0432 6423     		movs	r3, #100
 2147 0434 80F82B30 		strb	r3, [r0, #43]
 273:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2148              		.loc 1 273 7 is_stmt 1 view .LVU564
 273:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2149              		.loc 1 273 36 is_stmt 0 view .LVU565
 2150 0438 0823     		movs	r3, #8
 2151 043a 0385     		strh	r3, [r0, #40]	@ movhi
 274:Core/Src/main.c ****       break;
 2152              		.loc 1 274 7 is_stmt 1 view .LVU566
 2153 043c FFF7FEFF 		bl	LoRa_init
 2154              	.LVL144:
 275:Core/Src/main.c **** 
 2155              		.loc 1 275 7 view .LVU567
 2156 0440 2BE7     		b	.L80
 2157              	.L138:
 279:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_7;            // default = SF_7
 2158              		.loc 1 279 7 view .LVU568
 279:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_7;            // default = SF_7
 2159              		.loc 1 279 36 is_stmt 0 view .LVU569
 2160 0442 5E48     		ldr	r0, .L151
 2161 0444 40F2B113 		movw	r3, #433
 2162 0448 0362     		str	r3, [r0, #32]
 280:Core/Src/main.c ****       myLoRa.bandWidth             = BW_20_8KHz;       // default = BW_125KHz
 2163              		.loc 1 280 7 is_stmt 1 view .LVU570
 280:Core/Src/main.c ****       myLoRa.bandWidth             = BW_20_8KHz;       // default = BW_125KHz
 2164              		.loc 1 280 36 is_stmt 0 view .LVU571
 2165 044a 0723     		movs	r3, #7
 2166 044c 80F82430 		strb	r3, [r0, #36]
 281:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2167              		.loc 1 281 7 is_stmt 1 view .LVU572
 281:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 79


 2168              		.loc 1 281 36 is_stmt 0 view .LVU573
 2169 0450 0323     		movs	r3, #3
 2170 0452 80F82530 		strb	r3, [r0, #37]
 282:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2171              		.loc 1 282 7 is_stmt 1 view .LVU574
 282:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2172              		.loc 1 282 36 is_stmt 0 view .LVU575
 2173 0456 0123     		movs	r3, #1
 2174 0458 80F82630 		strb	r3, [r0, #38]
 283:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2175              		.loc 1 283 7 is_stmt 1 view .LVU576
 283:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2176              		.loc 1 283 36 is_stmt 0 view .LVU577
 2177 045c FF23     		movs	r3, #255
 2178 045e 80F82A30 		strb	r3, [r0, #42]
 284:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2179              		.loc 1 284 7 is_stmt 1 view .LVU578
 284:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2180              		.loc 1 284 36 is_stmt 0 view .LVU579
 2181 0462 6423     		movs	r3, #100
 2182 0464 80F82B30 		strb	r3, [r0, #43]
 285:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2183              		.loc 1 285 7 is_stmt 1 view .LVU580
 285:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2184              		.loc 1 285 36 is_stmt 0 view .LVU581
 2185 0468 0823     		movs	r3, #8
 2186 046a 0385     		strh	r3, [r0, #40]	@ movhi
 286:Core/Src/main.c ****       break;
 2187              		.loc 1 286 7 is_stmt 1 view .LVU582
 2188 046c FFF7FEFF 		bl	LoRa_init
 2189              	.LVL145:
 287:Core/Src/main.c **** 
 2190              		.loc 1 287 7 view .LVU583
 2191 0470 13E7     		b	.L80
 2192              	.L137:
 291:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_7;            // default = SF_7
 2193              		.loc 1 291 7 view .LVU584
 291:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_7;            // default = SF_7
 2194              		.loc 1 291 36 is_stmt 0 view .LVU585
 2195 0472 5248     		ldr	r0, .L151
 2196 0474 40F2B113 		movw	r3, #433
 2197 0478 0362     		str	r3, [r0, #32]
 292:Core/Src/main.c ****       myLoRa.bandWidth             = BW_31_25KHz;       // default = BW_125KHz
 2198              		.loc 1 292 7 is_stmt 1 view .LVU586
 292:Core/Src/main.c ****       myLoRa.bandWidth             = BW_31_25KHz;       // default = BW_125KHz
 2199              		.loc 1 292 36 is_stmt 0 view .LVU587
 2200 047a 0723     		movs	r3, #7
 2201 047c 80F82430 		strb	r3, [r0, #36]
 293:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2202              		.loc 1 293 7 is_stmt 1 view .LVU588
 293:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2203              		.loc 1 293 36 is_stmt 0 view .LVU589
 2204 0480 0423     		movs	r3, #4
 2205 0482 80F82530 		strb	r3, [r0, #37]
 294:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2206              		.loc 1 294 7 is_stmt 1 view .LVU590
 294:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 80


 2207              		.loc 1 294 36 is_stmt 0 view .LVU591
 2208 0486 0123     		movs	r3, #1
 2209 0488 80F82630 		strb	r3, [r0, #38]
 295:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2210              		.loc 1 295 7 is_stmt 1 view .LVU592
 295:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2211              		.loc 1 295 36 is_stmt 0 view .LVU593
 2212 048c FF23     		movs	r3, #255
 2213 048e 80F82A30 		strb	r3, [r0, #42]
 296:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2214              		.loc 1 296 7 is_stmt 1 view .LVU594
 296:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2215              		.loc 1 296 36 is_stmt 0 view .LVU595
 2216 0492 6423     		movs	r3, #100
 2217 0494 80F82B30 		strb	r3, [r0, #43]
 297:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2218              		.loc 1 297 7 is_stmt 1 view .LVU596
 297:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2219              		.loc 1 297 36 is_stmt 0 view .LVU597
 2220 0498 0823     		movs	r3, #8
 2221 049a 0385     		strh	r3, [r0, #40]	@ movhi
 298:Core/Src/main.c ****       break;
 2222              		.loc 1 298 7 is_stmt 1 view .LVU598
 2223 049c FFF7FEFF 		bl	LoRa_init
 2224              	.LVL146:
 299:Core/Src/main.c **** 
 2225              		.loc 1 299 7 view .LVU599
 2226 04a0 FBE6     		b	.L80
 2227              	.L136:
 303:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_7;            // default = SF_7
 2228              		.loc 1 303 7 view .LVU600
 303:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_7;            // default = SF_7
 2229              		.loc 1 303 36 is_stmt 0 view .LVU601
 2230 04a2 4648     		ldr	r0, .L151
 2231 04a4 40F2B113 		movw	r3, #433
 2232 04a8 0362     		str	r3, [r0, #32]
 304:Core/Src/main.c ****       myLoRa.bandWidth             = BW_41_7KHz;       // default = BW_125KHz
 2233              		.loc 1 304 7 is_stmt 1 view .LVU602
 304:Core/Src/main.c ****       myLoRa.bandWidth             = BW_41_7KHz;       // default = BW_125KHz
 2234              		.loc 1 304 36 is_stmt 0 view .LVU603
 2235 04aa 0723     		movs	r3, #7
 2236 04ac 80F82430 		strb	r3, [r0, #36]
 305:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2237              		.loc 1 305 7 is_stmt 1 view .LVU604
 305:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2238              		.loc 1 305 36 is_stmt 0 view .LVU605
 2239 04b0 0523     		movs	r3, #5
 2240 04b2 80F82530 		strb	r3, [r0, #37]
 306:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2241              		.loc 1 306 7 is_stmt 1 view .LVU606
 306:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2242              		.loc 1 306 36 is_stmt 0 view .LVU607
 2243 04b6 0123     		movs	r3, #1
 2244 04b8 80F82630 		strb	r3, [r0, #38]
 307:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2245              		.loc 1 307 7 is_stmt 1 view .LVU608
 307:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 81


 2246              		.loc 1 307 36 is_stmt 0 view .LVU609
 2247 04bc FF23     		movs	r3, #255
 2248 04be 80F82A30 		strb	r3, [r0, #42]
 308:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2249              		.loc 1 308 7 is_stmt 1 view .LVU610
 308:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2250              		.loc 1 308 36 is_stmt 0 view .LVU611
 2251 04c2 6423     		movs	r3, #100
 2252 04c4 80F82B30 		strb	r3, [r0, #43]
 309:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2253              		.loc 1 309 7 is_stmt 1 view .LVU612
 309:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2254              		.loc 1 309 36 is_stmt 0 view .LVU613
 2255 04c8 0823     		movs	r3, #8
 2256 04ca 0385     		strh	r3, [r0, #40]	@ movhi
 310:Core/Src/main.c ****       break;
 2257              		.loc 1 310 7 is_stmt 1 view .LVU614
 2258 04cc FFF7FEFF 		bl	LoRa_init
 2259              	.LVL147:
 311:Core/Src/main.c **** 
 2260              		.loc 1 311 7 view .LVU615
 2261 04d0 E3E6     		b	.L80
 2262              	.L135:
 315:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_7;            // default = SF_7
 2263              		.loc 1 315 7 view .LVU616
 315:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_7;            // default = SF_7
 2264              		.loc 1 315 36 is_stmt 0 view .LVU617
 2265 04d2 3A48     		ldr	r0, .L151
 2266 04d4 40F2B113 		movw	r3, #433
 2267 04d8 0362     		str	r3, [r0, #32]
 316:Core/Src/main.c ****       myLoRa.bandWidth             = BW_62_5KHz;       // default = BW_125KHz
 2268              		.loc 1 316 7 is_stmt 1 view .LVU618
 316:Core/Src/main.c ****       myLoRa.bandWidth             = BW_62_5KHz;       // default = BW_125KHz
 2269              		.loc 1 316 36 is_stmt 0 view .LVU619
 2270 04da 0723     		movs	r3, #7
 2271 04dc 80F82430 		strb	r3, [r0, #36]
 317:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2272              		.loc 1 317 7 is_stmt 1 view .LVU620
 317:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2273              		.loc 1 317 36 is_stmt 0 view .LVU621
 2274 04e0 0623     		movs	r3, #6
 2275 04e2 80F82530 		strb	r3, [r0, #37]
 318:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2276              		.loc 1 318 7 is_stmt 1 view .LVU622
 318:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2277              		.loc 1 318 36 is_stmt 0 view .LVU623
 2278 04e6 0123     		movs	r3, #1
 2279 04e8 80F82630 		strb	r3, [r0, #38]
 319:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2280              		.loc 1 319 7 is_stmt 1 view .LVU624
 319:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2281              		.loc 1 319 36 is_stmt 0 view .LVU625
 2282 04ec FF23     		movs	r3, #255
 2283 04ee 80F82A30 		strb	r3, [r0, #42]
 320:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2284              		.loc 1 320 7 is_stmt 1 view .LVU626
 320:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 82


 2285              		.loc 1 320 36 is_stmt 0 view .LVU627
 2286 04f2 6423     		movs	r3, #100
 2287 04f4 80F82B30 		strb	r3, [r0, #43]
 321:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2288              		.loc 1 321 7 is_stmt 1 view .LVU628
 321:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2289              		.loc 1 321 36 is_stmt 0 view .LVU629
 2290 04f8 0823     		movs	r3, #8
 2291 04fa 0385     		strh	r3, [r0, #40]	@ movhi
 322:Core/Src/main.c ****       break;
 2292              		.loc 1 322 7 is_stmt 1 view .LVU630
 2293 04fc FFF7FEFF 		bl	LoRa_init
 2294              	.LVL148:
 323:Core/Src/main.c **** 
 2295              		.loc 1 323 7 view .LVU631
 2296 0500 CBE6     		b	.L80
 2297              	.L134:
 327:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_7;            // default = SF_7
 2298              		.loc 1 327 7 view .LVU632
 327:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_7;            // default = SF_7
 2299              		.loc 1 327 36 is_stmt 0 view .LVU633
 2300 0502 2E48     		ldr	r0, .L151
 2301 0504 40F2B113 		movw	r3, #433
 2302 0508 0362     		str	r3, [r0, #32]
 328:Core/Src/main.c ****       myLoRa.bandWidth             = BW_125KHz;       // default = BW_125KHz
 2303              		.loc 1 328 7 is_stmt 1 view .LVU634
 328:Core/Src/main.c ****       myLoRa.bandWidth             = BW_125KHz;       // default = BW_125KHz
 2304              		.loc 1 328 36 is_stmt 0 view .LVU635
 2305 050a 0723     		movs	r3, #7
 2306 050c 80F82430 		strb	r3, [r0, #36]
 329:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2307              		.loc 1 329 7 is_stmt 1 view .LVU636
 329:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2308              		.loc 1 329 36 is_stmt 0 view .LVU637
 2309 0510 80F82530 		strb	r3, [r0, #37]
 330:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2310              		.loc 1 330 7 is_stmt 1 view .LVU638
 330:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2311              		.loc 1 330 36 is_stmt 0 view .LVU639
 2312 0514 0123     		movs	r3, #1
 2313 0516 80F82630 		strb	r3, [r0, #38]
 331:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2314              		.loc 1 331 7 is_stmt 1 view .LVU640
 331:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2315              		.loc 1 331 36 is_stmt 0 view .LVU641
 2316 051a FF23     		movs	r3, #255
 2317 051c 80F82A30 		strb	r3, [r0, #42]
 332:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2318              		.loc 1 332 7 is_stmt 1 view .LVU642
 332:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2319              		.loc 1 332 36 is_stmt 0 view .LVU643
 2320 0520 6423     		movs	r3, #100
 2321 0522 80F82B30 		strb	r3, [r0, #43]
 333:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2322              		.loc 1 333 7 is_stmt 1 view .LVU644
 333:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2323              		.loc 1 333 36 is_stmt 0 view .LVU645
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 83


 2324 0526 0823     		movs	r3, #8
 2325 0528 0385     		strh	r3, [r0, #40]	@ movhi
 334:Core/Src/main.c ****       break;
 2326              		.loc 1 334 7 is_stmt 1 view .LVU646
 2327 052a FFF7FEFF 		bl	LoRa_init
 2328              	.LVL149:
 335:Core/Src/main.c **** 
 2329              		.loc 1 335 7 view .LVU647
 2330 052e B4E6     		b	.L80
 2331              	.L133:
 339:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_7;            // default = SF_7
 2332              		.loc 1 339 7 view .LVU648
 339:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_7;            // default = SF_7
 2333              		.loc 1 339 36 is_stmt 0 view .LVU649
 2334 0530 2248     		ldr	r0, .L151
 2335 0532 40F2B113 		movw	r3, #433
 2336 0536 0362     		str	r3, [r0, #32]
 340:Core/Src/main.c ****       myLoRa.bandWidth             = BW_250KHz;       // default = BW_125KHz
 2337              		.loc 1 340 7 is_stmt 1 view .LVU650
 340:Core/Src/main.c ****       myLoRa.bandWidth             = BW_250KHz;       // default = BW_125KHz
 2338              		.loc 1 340 36 is_stmt 0 view .LVU651
 2339 0538 0723     		movs	r3, #7
 2340 053a 80F82430 		strb	r3, [r0, #36]
 341:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2341              		.loc 1 341 7 is_stmt 1 view .LVU652
 341:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2342              		.loc 1 341 36 is_stmt 0 view .LVU653
 2343 053e 0823     		movs	r3, #8
 2344 0540 80F82530 		strb	r3, [r0, #37]
 342:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2345              		.loc 1 342 7 is_stmt 1 view .LVU654
 342:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2346              		.loc 1 342 36 is_stmt 0 view .LVU655
 2347 0544 0122     		movs	r2, #1
 2348 0546 80F82620 		strb	r2, [r0, #38]
 343:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2349              		.loc 1 343 7 is_stmt 1 view .LVU656
 343:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2350              		.loc 1 343 36 is_stmt 0 view .LVU657
 2351 054a FF22     		movs	r2, #255
 2352 054c 80F82A20 		strb	r2, [r0, #42]
 344:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2353              		.loc 1 344 7 is_stmt 1 view .LVU658
 344:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2354              		.loc 1 344 36 is_stmt 0 view .LVU659
 2355 0550 6422     		movs	r2, #100
 2356 0552 80F82B20 		strb	r2, [r0, #43]
 345:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2357              		.loc 1 345 7 is_stmt 1 view .LVU660
 345:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2358              		.loc 1 345 36 is_stmt 0 view .LVU661
 2359 0556 0385     		strh	r3, [r0, #40]	@ movhi
 346:Core/Src/main.c ****       break;
 2360              		.loc 1 346 7 is_stmt 1 view .LVU662
 2361 0558 FFF7FEFF 		bl	LoRa_init
 2362              	.LVL150:
 347:Core/Src/main.c **** 
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 84


 2363              		.loc 1 347 7 view .LVU663
 2364 055c 9DE6     		b	.L80
 2365              	.L132:
 351:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_7;            // default = SF_7
 2366              		.loc 1 351 7 view .LVU664
 351:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_7;            // default = SF_7
 2367              		.loc 1 351 36 is_stmt 0 view .LVU665
 2368 055e 1748     		ldr	r0, .L151
 2369 0560 40F2B113 		movw	r3, #433
 2370 0564 0362     		str	r3, [r0, #32]
 352:Core/Src/main.c ****       myLoRa.bandWidth             = BW_500KHz;       // default = BW_125KHz
 2371              		.loc 1 352 7 is_stmt 1 view .LVU666
 352:Core/Src/main.c ****       myLoRa.bandWidth             = BW_500KHz;       // default = BW_125KHz
 2372              		.loc 1 352 36 is_stmt 0 view .LVU667
 2373 0566 0723     		movs	r3, #7
 2374 0568 80F82430 		strb	r3, [r0, #36]
 353:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2375              		.loc 1 353 7 is_stmt 1 view .LVU668
 353:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2376              		.loc 1 353 36 is_stmt 0 view .LVU669
 2377 056c 0923     		movs	r3, #9
 2378 056e 80F82530 		strb	r3, [r0, #37]
 354:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2379              		.loc 1 354 7 is_stmt 1 view .LVU670
 354:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2380              		.loc 1 354 36 is_stmt 0 view .LVU671
 2381 0572 0123     		movs	r3, #1
 2382 0574 80F82630 		strb	r3, [r0, #38]
 355:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2383              		.loc 1 355 7 is_stmt 1 view .LVU672
 355:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2384              		.loc 1 355 36 is_stmt 0 view .LVU673
 2385 0578 FF23     		movs	r3, #255
 2386 057a 80F82A30 		strb	r3, [r0, #42]
 356:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2387              		.loc 1 356 7 is_stmt 1 view .LVU674
 356:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2388              		.loc 1 356 36 is_stmt 0 view .LVU675
 2389 057e 6423     		movs	r3, #100
 2390 0580 80F82B30 		strb	r3, [r0, #43]
 357:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2391              		.loc 1 357 7 is_stmt 1 view .LVU676
 357:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2392              		.loc 1 357 36 is_stmt 0 view .LVU677
 2393 0584 0823     		movs	r3, #8
 2394 0586 0385     		strh	r3, [r0, #40]	@ movhi
 358:Core/Src/main.c ****       break;
 2395              		.loc 1 358 7 is_stmt 1 view .LVU678
 2396 0588 FFF7FEFF 		bl	LoRa_init
 2397              	.LVL151:
 359:Core/Src/main.c ****     
 2398              		.loc 1 359 7 view .LVU679
 2399 058c 85E6     		b	.L80
 2400              	.L131:
 363:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_8;            // default = SF_7
 2401              		.loc 1 363 7 view .LVU680
 363:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_8;            // default = SF_7
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 85


 2402              		.loc 1 363 36 is_stmt 0 view .LVU681
 2403 058e 0B48     		ldr	r0, .L151
 2404 0590 40F2B113 		movw	r3, #433
 2405 0594 0362     		str	r3, [r0, #32]
 364:Core/Src/main.c ****       myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 2406              		.loc 1 364 7 is_stmt 1 view .LVU682
 364:Core/Src/main.c ****       myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 2407              		.loc 1 364 36 is_stmt 0 view .LVU683
 2408 0596 0823     		movs	r3, #8
 2409 0598 80F82430 		strb	r3, [r0, #36]
 365:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2410              		.loc 1 365 7 is_stmt 1 view .LVU684
 365:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2411              		.loc 1 365 36 is_stmt 0 view .LVU685
 2412 059c 0022     		movs	r2, #0
 2413 059e 80F82520 		strb	r2, [r0, #37]
 366:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2414              		.loc 1 366 7 is_stmt 1 view .LVU686
 366:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2415              		.loc 1 366 36 is_stmt 0 view .LVU687
 2416 05a2 0122     		movs	r2, #1
 2417 05a4 80F82620 		strb	r2, [r0, #38]
 367:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2418              		.loc 1 367 7 is_stmt 1 view .LVU688
 367:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2419              		.loc 1 367 36 is_stmt 0 view .LVU689
 2420 05a8 FF22     		movs	r2, #255
 2421 05aa 80F82A20 		strb	r2, [r0, #42]
 368:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2422              		.loc 1 368 7 is_stmt 1 view .LVU690
 368:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2423              		.loc 1 368 36 is_stmt 0 view .LVU691
 2424 05ae 6422     		movs	r2, #100
 2425 05b0 80F82B20 		strb	r2, [r0, #43]
 369:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2426              		.loc 1 369 7 is_stmt 1 view .LVU692
 369:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2427              		.loc 1 369 36 is_stmt 0 view .LVU693
 2428 05b4 0385     		strh	r3, [r0, #40]	@ movhi
 370:Core/Src/main.c ****       break;
 2429              		.loc 1 370 7 is_stmt 1 view .LVU694
 2430 05b6 FFF7FEFF 		bl	LoRa_init
 2431              	.LVL152:
 371:Core/Src/main.c **** 
 2432              		.loc 1 371 7 view .LVU695
 2433 05ba 6EE6     		b	.L80
 2434              	.L152:
 2435              		.align	2
 2436              	.L151:
 2437 05bc 00000000 		.word	myLoRa
 2438 05c0 00000000 		.word	bModeChanged
 2439 05c4 00000000 		.word	timeNow
 2440 05c8 00000000 		.word	timePre
 2441 05cc 00000000 		.word	isLoraReady
 2442 05d0 00000000 		.word	gps_raw
 2443 05d4 00000000 		.word	huart1
 2444 05d8 00000000 		.word	flag
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 86


 2445 05dc 00000000 		.word	iMode
 2446              	.L130:
 375:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_8;            // default = SF_7
 2447              		.loc 1 375 7 view .LVU696
 375:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_8;            // default = SF_7
 2448              		.loc 1 375 36 is_stmt 0 view .LVU697
 2449 05e0 D148     		ldr	r0, .L153
 2450 05e2 40F2B113 		movw	r3, #433
 2451 05e6 0362     		str	r3, [r0, #32]
 376:Core/Src/main.c ****       myLoRa.bandWidth             = BW_10_4KHz;       // default = BW_125KHz
 2452              		.loc 1 376 7 is_stmt 1 view .LVU698
 376:Core/Src/main.c ****       myLoRa.bandWidth             = BW_10_4KHz;       // default = BW_125KHz
 2453              		.loc 1 376 36 is_stmt 0 view .LVU699
 2454 05e8 0823     		movs	r3, #8
 2455 05ea 80F82430 		strb	r3, [r0, #36]
 377:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2456              		.loc 1 377 7 is_stmt 1 view .LVU700
 377:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2457              		.loc 1 377 36 is_stmt 0 view .LVU701
 2458 05ee 0122     		movs	r2, #1
 2459 05f0 80F82520 		strb	r2, [r0, #37]
 378:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2460              		.loc 1 378 7 is_stmt 1 view .LVU702
 378:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2461              		.loc 1 378 36 is_stmt 0 view .LVU703
 2462 05f4 80F82620 		strb	r2, [r0, #38]
 379:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2463              		.loc 1 379 7 is_stmt 1 view .LVU704
 379:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2464              		.loc 1 379 36 is_stmt 0 view .LVU705
 2465 05f8 FF22     		movs	r2, #255
 2466 05fa 80F82A20 		strb	r2, [r0, #42]
 380:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2467              		.loc 1 380 7 is_stmt 1 view .LVU706
 380:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2468              		.loc 1 380 36 is_stmt 0 view .LVU707
 2469 05fe 6422     		movs	r2, #100
 2470 0600 80F82B20 		strb	r2, [r0, #43]
 381:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2471              		.loc 1 381 7 is_stmt 1 view .LVU708
 381:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2472              		.loc 1 381 36 is_stmt 0 view .LVU709
 2473 0604 0385     		strh	r3, [r0, #40]	@ movhi
 382:Core/Src/main.c ****       break;
 2474              		.loc 1 382 7 is_stmt 1 view .LVU710
 2475 0606 FFF7FEFF 		bl	LoRa_init
 2476              	.LVL153:
 383:Core/Src/main.c **** 
 2477              		.loc 1 383 7 view .LVU711
 2478 060a 46E6     		b	.L80
 2479              	.L129:
 387:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_8;            // default = SF_7
 2480              		.loc 1 387 7 view .LVU712
 387:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_8;            // default = SF_7
 2481              		.loc 1 387 36 is_stmt 0 view .LVU713
 2482 060c C648     		ldr	r0, .L153
 2483 060e 40F2B113 		movw	r3, #433
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 87


 2484 0612 0362     		str	r3, [r0, #32]
 388:Core/Src/main.c ****       myLoRa.bandWidth             = BW_15_6KHz;       // default = BW_125KHz
 2485              		.loc 1 388 7 is_stmt 1 view .LVU714
 388:Core/Src/main.c ****       myLoRa.bandWidth             = BW_15_6KHz;       // default = BW_125KHz
 2486              		.loc 1 388 36 is_stmt 0 view .LVU715
 2487 0614 0823     		movs	r3, #8
 2488 0616 80F82430 		strb	r3, [r0, #36]
 389:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2489              		.loc 1 389 7 is_stmt 1 view .LVU716
 389:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2490              		.loc 1 389 36 is_stmt 0 view .LVU717
 2491 061a 0222     		movs	r2, #2
 2492 061c 80F82520 		strb	r2, [r0, #37]
 390:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2493              		.loc 1 390 7 is_stmt 1 view .LVU718
 390:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2494              		.loc 1 390 36 is_stmt 0 view .LVU719
 2495 0620 0122     		movs	r2, #1
 2496 0622 80F82620 		strb	r2, [r0, #38]
 391:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2497              		.loc 1 391 7 is_stmt 1 view .LVU720
 391:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2498              		.loc 1 391 36 is_stmt 0 view .LVU721
 2499 0626 FF22     		movs	r2, #255
 2500 0628 80F82A20 		strb	r2, [r0, #42]
 392:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2501              		.loc 1 392 7 is_stmt 1 view .LVU722
 392:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2502              		.loc 1 392 36 is_stmt 0 view .LVU723
 2503 062c 6422     		movs	r2, #100
 2504 062e 80F82B20 		strb	r2, [r0, #43]
 393:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2505              		.loc 1 393 7 is_stmt 1 view .LVU724
 393:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2506              		.loc 1 393 36 is_stmt 0 view .LVU725
 2507 0632 0385     		strh	r3, [r0, #40]	@ movhi
 394:Core/Src/main.c ****       break;
 2508              		.loc 1 394 7 is_stmt 1 view .LVU726
 2509 0634 FFF7FEFF 		bl	LoRa_init
 2510              	.LVL154:
 395:Core/Src/main.c **** 
 2511              		.loc 1 395 7 view .LVU727
 2512 0638 2FE6     		b	.L80
 2513              	.L128:
 399:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_8;            // default = SF_7
 2514              		.loc 1 399 7 view .LVU728
 399:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_8;            // default = SF_7
 2515              		.loc 1 399 36 is_stmt 0 view .LVU729
 2516 063a BB48     		ldr	r0, .L153
 2517 063c 40F2B113 		movw	r3, #433
 2518 0640 0362     		str	r3, [r0, #32]
 400:Core/Src/main.c ****       myLoRa.bandWidth             = BW_20_8KHz;       // default = BW_125KHz
 2519              		.loc 1 400 7 is_stmt 1 view .LVU730
 400:Core/Src/main.c ****       myLoRa.bandWidth             = BW_20_8KHz;       // default = BW_125KHz
 2520              		.loc 1 400 36 is_stmt 0 view .LVU731
 2521 0642 0823     		movs	r3, #8
 2522 0644 80F82430 		strb	r3, [r0, #36]
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 88


 401:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2523              		.loc 1 401 7 is_stmt 1 view .LVU732
 401:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2524              		.loc 1 401 36 is_stmt 0 view .LVU733
 2525 0648 0322     		movs	r2, #3
 2526 064a 80F82520 		strb	r2, [r0, #37]
 402:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2527              		.loc 1 402 7 is_stmt 1 view .LVU734
 402:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2528              		.loc 1 402 36 is_stmt 0 view .LVU735
 2529 064e 0122     		movs	r2, #1
 2530 0650 80F82620 		strb	r2, [r0, #38]
 403:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2531              		.loc 1 403 7 is_stmt 1 view .LVU736
 403:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2532              		.loc 1 403 36 is_stmt 0 view .LVU737
 2533 0654 FF22     		movs	r2, #255
 2534 0656 80F82A20 		strb	r2, [r0, #42]
 404:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2535              		.loc 1 404 7 is_stmt 1 view .LVU738
 404:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2536              		.loc 1 404 36 is_stmt 0 view .LVU739
 2537 065a 6422     		movs	r2, #100
 2538 065c 80F82B20 		strb	r2, [r0, #43]
 405:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2539              		.loc 1 405 7 is_stmt 1 view .LVU740
 405:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2540              		.loc 1 405 36 is_stmt 0 view .LVU741
 2541 0660 0385     		strh	r3, [r0, #40]	@ movhi
 406:Core/Src/main.c ****       break;
 2542              		.loc 1 406 7 is_stmt 1 view .LVU742
 2543 0662 FFF7FEFF 		bl	LoRa_init
 2544              	.LVL155:
 407:Core/Src/main.c **** 
 2545              		.loc 1 407 7 view .LVU743
 2546 0666 18E6     		b	.L80
 2547              	.L127:
 411:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_8;            // default = SF_7
 2548              		.loc 1 411 7 view .LVU744
 411:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_8;            // default = SF_7
 2549              		.loc 1 411 36 is_stmt 0 view .LVU745
 2550 0668 AF48     		ldr	r0, .L153
 2551 066a 40F2B113 		movw	r3, #433
 2552 066e 0362     		str	r3, [r0, #32]
 412:Core/Src/main.c ****       myLoRa.bandWidth             = BW_31_25KHz;       // default = BW_125KHz
 2553              		.loc 1 412 7 is_stmt 1 view .LVU746
 412:Core/Src/main.c ****       myLoRa.bandWidth             = BW_31_25KHz;       // default = BW_125KHz
 2554              		.loc 1 412 36 is_stmt 0 view .LVU747
 2555 0670 0823     		movs	r3, #8
 2556 0672 80F82430 		strb	r3, [r0, #36]
 413:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2557              		.loc 1 413 7 is_stmt 1 view .LVU748
 413:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2558              		.loc 1 413 36 is_stmt 0 view .LVU749
 2559 0676 0422     		movs	r2, #4
 2560 0678 80F82520 		strb	r2, [r0, #37]
 414:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 89


 2561              		.loc 1 414 7 is_stmt 1 view .LVU750
 414:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2562              		.loc 1 414 36 is_stmt 0 view .LVU751
 2563 067c 0122     		movs	r2, #1
 2564 067e 80F82620 		strb	r2, [r0, #38]
 415:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2565              		.loc 1 415 7 is_stmt 1 view .LVU752
 415:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2566              		.loc 1 415 36 is_stmt 0 view .LVU753
 2567 0682 FF22     		movs	r2, #255
 2568 0684 80F82A20 		strb	r2, [r0, #42]
 416:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2569              		.loc 1 416 7 is_stmt 1 view .LVU754
 416:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2570              		.loc 1 416 36 is_stmt 0 view .LVU755
 2571 0688 6422     		movs	r2, #100
 2572 068a 80F82B20 		strb	r2, [r0, #43]
 417:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2573              		.loc 1 417 7 is_stmt 1 view .LVU756
 417:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2574              		.loc 1 417 36 is_stmt 0 view .LVU757
 2575 068e 0385     		strh	r3, [r0, #40]	@ movhi
 418:Core/Src/main.c ****       break;
 2576              		.loc 1 418 7 is_stmt 1 view .LVU758
 2577 0690 FFF7FEFF 		bl	LoRa_init
 2578              	.LVL156:
 419:Core/Src/main.c **** 
 2579              		.loc 1 419 7 view .LVU759
 2580 0694 01E6     		b	.L80
 2581              	.L126:
 423:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_8;            // default = SF_7
 2582              		.loc 1 423 7 view .LVU760
 423:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_8;            // default = SF_7
 2583              		.loc 1 423 36 is_stmt 0 view .LVU761
 2584 0696 A448     		ldr	r0, .L153
 2585 0698 40F2B113 		movw	r3, #433
 2586 069c 0362     		str	r3, [r0, #32]
 424:Core/Src/main.c ****       myLoRa.bandWidth             = BW_41_7KHz;       // default = BW_125KHz
 2587              		.loc 1 424 7 is_stmt 1 view .LVU762
 424:Core/Src/main.c ****       myLoRa.bandWidth             = BW_41_7KHz;       // default = BW_125KHz
 2588              		.loc 1 424 36 is_stmt 0 view .LVU763
 2589 069e 0823     		movs	r3, #8
 2590 06a0 80F82430 		strb	r3, [r0, #36]
 425:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2591              		.loc 1 425 7 is_stmt 1 view .LVU764
 425:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2592              		.loc 1 425 36 is_stmt 0 view .LVU765
 2593 06a4 0522     		movs	r2, #5
 2594 06a6 80F82520 		strb	r2, [r0, #37]
 426:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2595              		.loc 1 426 7 is_stmt 1 view .LVU766
 426:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2596              		.loc 1 426 36 is_stmt 0 view .LVU767
 2597 06aa 0122     		movs	r2, #1
 2598 06ac 80F82620 		strb	r2, [r0, #38]
 427:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2599              		.loc 1 427 7 is_stmt 1 view .LVU768
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 90


 427:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2600              		.loc 1 427 36 is_stmt 0 view .LVU769
 2601 06b0 FF22     		movs	r2, #255
 2602 06b2 80F82A20 		strb	r2, [r0, #42]
 428:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2603              		.loc 1 428 7 is_stmt 1 view .LVU770
 428:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2604              		.loc 1 428 36 is_stmt 0 view .LVU771
 2605 06b6 6422     		movs	r2, #100
 2606 06b8 80F82B20 		strb	r2, [r0, #43]
 429:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2607              		.loc 1 429 7 is_stmt 1 view .LVU772
 429:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2608              		.loc 1 429 36 is_stmt 0 view .LVU773
 2609 06bc 0385     		strh	r3, [r0, #40]	@ movhi
 430:Core/Src/main.c ****       break;
 2610              		.loc 1 430 7 is_stmt 1 view .LVU774
 2611 06be FFF7FEFF 		bl	LoRa_init
 2612              	.LVL157:
 431:Core/Src/main.c **** 
 2613              		.loc 1 431 7 view .LVU775
 2614 06c2 EAE5     		b	.L80
 2615              	.L125:
 435:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_8;            // default = SF_7
 2616              		.loc 1 435 7 view .LVU776
 435:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_8;            // default = SF_7
 2617              		.loc 1 435 36 is_stmt 0 view .LVU777
 2618 06c4 9848     		ldr	r0, .L153
 2619 06c6 40F2B113 		movw	r3, #433
 2620 06ca 0362     		str	r3, [r0, #32]
 436:Core/Src/main.c ****       myLoRa.bandWidth             = BW_62_5KHz;       // default = BW_125KHz
 2621              		.loc 1 436 7 is_stmt 1 view .LVU778
 436:Core/Src/main.c ****       myLoRa.bandWidth             = BW_62_5KHz;       // default = BW_125KHz
 2622              		.loc 1 436 36 is_stmt 0 view .LVU779
 2623 06cc 0823     		movs	r3, #8
 2624 06ce 80F82430 		strb	r3, [r0, #36]
 437:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2625              		.loc 1 437 7 is_stmt 1 view .LVU780
 437:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2626              		.loc 1 437 36 is_stmt 0 view .LVU781
 2627 06d2 0622     		movs	r2, #6
 2628 06d4 80F82520 		strb	r2, [r0, #37]
 438:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2629              		.loc 1 438 7 is_stmt 1 view .LVU782
 438:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2630              		.loc 1 438 36 is_stmt 0 view .LVU783
 2631 06d8 0122     		movs	r2, #1
 2632 06da 80F82620 		strb	r2, [r0, #38]
 439:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2633              		.loc 1 439 7 is_stmt 1 view .LVU784
 439:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2634              		.loc 1 439 36 is_stmt 0 view .LVU785
 2635 06de FF22     		movs	r2, #255
 2636 06e0 80F82A20 		strb	r2, [r0, #42]
 440:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2637              		.loc 1 440 7 is_stmt 1 view .LVU786
 440:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 91


 2638              		.loc 1 440 36 is_stmt 0 view .LVU787
 2639 06e4 6422     		movs	r2, #100
 2640 06e6 80F82B20 		strb	r2, [r0, #43]
 441:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2641              		.loc 1 441 7 is_stmt 1 view .LVU788
 441:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2642              		.loc 1 441 36 is_stmt 0 view .LVU789
 2643 06ea 0385     		strh	r3, [r0, #40]	@ movhi
 442:Core/Src/main.c ****       break;
 2644              		.loc 1 442 7 is_stmt 1 view .LVU790
 2645 06ec FFF7FEFF 		bl	LoRa_init
 2646              	.LVL158:
 443:Core/Src/main.c **** 
 2647              		.loc 1 443 7 view .LVU791
 2648 06f0 D3E5     		b	.L80
 2649              	.L124:
 447:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_8;            // default = SF_7
 2650              		.loc 1 447 7 view .LVU792
 447:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_8;            // default = SF_7
 2651              		.loc 1 447 36 is_stmt 0 view .LVU793
 2652 06f2 8D48     		ldr	r0, .L153
 2653 06f4 40F2B113 		movw	r3, #433
 2654 06f8 0362     		str	r3, [r0, #32]
 448:Core/Src/main.c ****       myLoRa.bandWidth             = BW_125KHz;       // default = BW_125KHz
 2655              		.loc 1 448 7 is_stmt 1 view .LVU794
 448:Core/Src/main.c ****       myLoRa.bandWidth             = BW_125KHz;       // default = BW_125KHz
 2656              		.loc 1 448 36 is_stmt 0 view .LVU795
 2657 06fa 0823     		movs	r3, #8
 2658 06fc 80F82430 		strb	r3, [r0, #36]
 449:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2659              		.loc 1 449 7 is_stmt 1 view .LVU796
 449:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2660              		.loc 1 449 36 is_stmt 0 view .LVU797
 2661 0700 0722     		movs	r2, #7
 2662 0702 80F82520 		strb	r2, [r0, #37]
 450:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2663              		.loc 1 450 7 is_stmt 1 view .LVU798
 450:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2664              		.loc 1 450 36 is_stmt 0 view .LVU799
 2665 0706 0122     		movs	r2, #1
 2666 0708 80F82620 		strb	r2, [r0, #38]
 451:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2667              		.loc 1 451 7 is_stmt 1 view .LVU800
 451:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2668              		.loc 1 451 36 is_stmt 0 view .LVU801
 2669 070c FF22     		movs	r2, #255
 2670 070e 80F82A20 		strb	r2, [r0, #42]
 452:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2671              		.loc 1 452 7 is_stmt 1 view .LVU802
 452:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2672              		.loc 1 452 36 is_stmt 0 view .LVU803
 2673 0712 6422     		movs	r2, #100
 2674 0714 80F82B20 		strb	r2, [r0, #43]
 453:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2675              		.loc 1 453 7 is_stmt 1 view .LVU804
 453:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2676              		.loc 1 453 36 is_stmt 0 view .LVU805
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 92


 2677 0718 0385     		strh	r3, [r0, #40]	@ movhi
 454:Core/Src/main.c ****       break;
 2678              		.loc 1 454 7 is_stmt 1 view .LVU806
 2679 071a FFF7FEFF 		bl	LoRa_init
 2680              	.LVL159:
 455:Core/Src/main.c **** 
 2681              		.loc 1 455 7 view .LVU807
 2682 071e BCE5     		b	.L80
 2683              	.L123:
 459:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_8;            // default = SF_7
 2684              		.loc 1 459 7 view .LVU808
 459:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_8;            // default = SF_7
 2685              		.loc 1 459 36 is_stmt 0 view .LVU809
 2686 0720 8148     		ldr	r0, .L153
 2687 0722 40F2B113 		movw	r3, #433
 2688 0726 0362     		str	r3, [r0, #32]
 460:Core/Src/main.c ****       myLoRa.bandWidth             = BW_250KHz;       // default = BW_125KHz
 2689              		.loc 1 460 7 is_stmt 1 view .LVU810
 460:Core/Src/main.c ****       myLoRa.bandWidth             = BW_250KHz;       // default = BW_125KHz
 2690              		.loc 1 460 36 is_stmt 0 view .LVU811
 2691 0728 0823     		movs	r3, #8
 2692 072a 80F82430 		strb	r3, [r0, #36]
 461:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2693              		.loc 1 461 7 is_stmt 1 view .LVU812
 461:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2694              		.loc 1 461 36 is_stmt 0 view .LVU813
 2695 072e 80F82530 		strb	r3, [r0, #37]
 462:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2696              		.loc 1 462 7 is_stmt 1 view .LVU814
 462:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2697              		.loc 1 462 36 is_stmt 0 view .LVU815
 2698 0732 0122     		movs	r2, #1
 2699 0734 80F82620 		strb	r2, [r0, #38]
 463:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2700              		.loc 1 463 7 is_stmt 1 view .LVU816
 463:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2701              		.loc 1 463 36 is_stmt 0 view .LVU817
 2702 0738 FF22     		movs	r2, #255
 2703 073a 80F82A20 		strb	r2, [r0, #42]
 464:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2704              		.loc 1 464 7 is_stmt 1 view .LVU818
 464:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2705              		.loc 1 464 36 is_stmt 0 view .LVU819
 2706 073e 6422     		movs	r2, #100
 2707 0740 80F82B20 		strb	r2, [r0, #43]
 465:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2708              		.loc 1 465 7 is_stmt 1 view .LVU820
 465:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2709              		.loc 1 465 36 is_stmt 0 view .LVU821
 2710 0744 0385     		strh	r3, [r0, #40]	@ movhi
 466:Core/Src/main.c ****       break;
 2711              		.loc 1 466 7 is_stmt 1 view .LVU822
 2712 0746 FFF7FEFF 		bl	LoRa_init
 2713              	.LVL160:
 467:Core/Src/main.c **** 
 2714              		.loc 1 467 7 view .LVU823
 2715 074a A6E5     		b	.L80
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 93


 2716              	.L122:
 471:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_8;            // default = SF_7
 2717              		.loc 1 471 7 view .LVU824
 471:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_8;            // default = SF_7
 2718              		.loc 1 471 36 is_stmt 0 view .LVU825
 2719 074c 7648     		ldr	r0, .L153
 2720 074e 40F2B113 		movw	r3, #433
 2721 0752 0362     		str	r3, [r0, #32]
 472:Core/Src/main.c ****       myLoRa.bandWidth             = BW_500KHz;       // default = BW_125KHz
 2722              		.loc 1 472 7 is_stmt 1 view .LVU826
 472:Core/Src/main.c ****       myLoRa.bandWidth             = BW_500KHz;       // default = BW_125KHz
 2723              		.loc 1 472 36 is_stmt 0 view .LVU827
 2724 0754 0823     		movs	r3, #8
 2725 0756 80F82430 		strb	r3, [r0, #36]
 473:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2726              		.loc 1 473 7 is_stmt 1 view .LVU828
 473:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2727              		.loc 1 473 36 is_stmt 0 view .LVU829
 2728 075a 0922     		movs	r2, #9
 2729 075c 80F82520 		strb	r2, [r0, #37]
 474:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2730              		.loc 1 474 7 is_stmt 1 view .LVU830
 474:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2731              		.loc 1 474 36 is_stmt 0 view .LVU831
 2732 0760 0122     		movs	r2, #1
 2733 0762 80F82620 		strb	r2, [r0, #38]
 475:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2734              		.loc 1 475 7 is_stmt 1 view .LVU832
 475:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2735              		.loc 1 475 36 is_stmt 0 view .LVU833
 2736 0766 FF22     		movs	r2, #255
 2737 0768 80F82A20 		strb	r2, [r0, #42]
 476:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2738              		.loc 1 476 7 is_stmt 1 view .LVU834
 476:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2739              		.loc 1 476 36 is_stmt 0 view .LVU835
 2740 076c 6422     		movs	r2, #100
 2741 076e 80F82B20 		strb	r2, [r0, #43]
 477:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2742              		.loc 1 477 7 is_stmt 1 view .LVU836
 477:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2743              		.loc 1 477 36 is_stmt 0 view .LVU837
 2744 0772 0385     		strh	r3, [r0, #40]	@ movhi
 478:Core/Src/main.c ****       break;
 2745              		.loc 1 478 7 is_stmt 1 view .LVU838
 2746 0774 FFF7FEFF 		bl	LoRa_init
 2747              	.LVL161:
 479:Core/Src/main.c **** 
 2748              		.loc 1 479 7 view .LVU839
 2749 0778 8FE5     		b	.L80
 2750              	.L121:
 483:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_9;            // default = SF_7
 2751              		.loc 1 483 7 view .LVU840
 483:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_9;            // default = SF_7
 2752              		.loc 1 483 36 is_stmt 0 view .LVU841
 2753 077a 6B48     		ldr	r0, .L153
 2754 077c 40F2B113 		movw	r3, #433
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 94


 2755 0780 0362     		str	r3, [r0, #32]
 484:Core/Src/main.c ****       myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 2756              		.loc 1 484 7 is_stmt 1 view .LVU842
 484:Core/Src/main.c ****       myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 2757              		.loc 1 484 36 is_stmt 0 view .LVU843
 2758 0782 0923     		movs	r3, #9
 2759 0784 80F82430 		strb	r3, [r0, #36]
 485:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2760              		.loc 1 485 7 is_stmt 1 view .LVU844
 485:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2761              		.loc 1 485 36 is_stmt 0 view .LVU845
 2762 0788 0023     		movs	r3, #0
 2763 078a 80F82530 		strb	r3, [r0, #37]
 486:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2764              		.loc 1 486 7 is_stmt 1 view .LVU846
 486:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2765              		.loc 1 486 36 is_stmt 0 view .LVU847
 2766 078e 0123     		movs	r3, #1
 2767 0790 80F82630 		strb	r3, [r0, #38]
 487:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2768              		.loc 1 487 7 is_stmt 1 view .LVU848
 487:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2769              		.loc 1 487 36 is_stmt 0 view .LVU849
 2770 0794 FF23     		movs	r3, #255
 2771 0796 80F82A30 		strb	r3, [r0, #42]
 488:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2772              		.loc 1 488 7 is_stmt 1 view .LVU850
 488:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2773              		.loc 1 488 36 is_stmt 0 view .LVU851
 2774 079a 6423     		movs	r3, #100
 2775 079c 80F82B30 		strb	r3, [r0, #43]
 489:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2776              		.loc 1 489 7 is_stmt 1 view .LVU852
 489:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2777              		.loc 1 489 36 is_stmt 0 view .LVU853
 2778 07a0 0823     		movs	r3, #8
 2779 07a2 0385     		strh	r3, [r0, #40]	@ movhi
 490:Core/Src/main.c ****       break;
 2780              		.loc 1 490 7 is_stmt 1 view .LVU854
 2781 07a4 FFF7FEFF 		bl	LoRa_init
 2782              	.LVL162:
 491:Core/Src/main.c **** 
 2783              		.loc 1 491 7 view .LVU855
 2784 07a8 77E5     		b	.L80
 2785              	.L120:
 495:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_9;            // default = SF_7
 2786              		.loc 1 495 7 view .LVU856
 495:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_9;            // default = SF_7
 2787              		.loc 1 495 36 is_stmt 0 view .LVU857
 2788 07aa 5F48     		ldr	r0, .L153
 2789 07ac 40F2B113 		movw	r3, #433
 2790 07b0 0362     		str	r3, [r0, #32]
 496:Core/Src/main.c ****       myLoRa.bandWidth             = BW_10_4KHz;       // default = BW_125KHz
 2791              		.loc 1 496 7 is_stmt 1 view .LVU858
 496:Core/Src/main.c ****       myLoRa.bandWidth             = BW_10_4KHz;       // default = BW_125KHz
 2792              		.loc 1 496 36 is_stmt 0 view .LVU859
 2793 07b2 0923     		movs	r3, #9
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 95


 2794 07b4 80F82430 		strb	r3, [r0, #36]
 497:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2795              		.loc 1 497 7 is_stmt 1 view .LVU860
 497:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2796              		.loc 1 497 36 is_stmt 0 view .LVU861
 2797 07b8 0123     		movs	r3, #1
 2798 07ba 80F82530 		strb	r3, [r0, #37]
 498:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2799              		.loc 1 498 7 is_stmt 1 view .LVU862
 498:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2800              		.loc 1 498 36 is_stmt 0 view .LVU863
 2801 07be 80F82630 		strb	r3, [r0, #38]
 499:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2802              		.loc 1 499 7 is_stmt 1 view .LVU864
 499:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2803              		.loc 1 499 36 is_stmt 0 view .LVU865
 2804 07c2 FF23     		movs	r3, #255
 2805 07c4 80F82A30 		strb	r3, [r0, #42]
 500:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2806              		.loc 1 500 7 is_stmt 1 view .LVU866
 500:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2807              		.loc 1 500 36 is_stmt 0 view .LVU867
 2808 07c8 6423     		movs	r3, #100
 2809 07ca 80F82B30 		strb	r3, [r0, #43]
 501:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2810              		.loc 1 501 7 is_stmt 1 view .LVU868
 501:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2811              		.loc 1 501 36 is_stmt 0 view .LVU869
 2812 07ce 0823     		movs	r3, #8
 2813 07d0 0385     		strh	r3, [r0, #40]	@ movhi
 502:Core/Src/main.c ****       break;
 2814              		.loc 1 502 7 is_stmt 1 view .LVU870
 2815 07d2 FFF7FEFF 		bl	LoRa_init
 2816              	.LVL163:
 503:Core/Src/main.c **** 
 2817              		.loc 1 503 7 view .LVU871
 2818 07d6 60E5     		b	.L80
 2819              	.L119:
 507:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_9;            // default = SF_7
 2820              		.loc 1 507 7 view .LVU872
 507:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_9;            // default = SF_7
 2821              		.loc 1 507 36 is_stmt 0 view .LVU873
 2822 07d8 5348     		ldr	r0, .L153
 2823 07da 40F2B113 		movw	r3, #433
 2824 07de 0362     		str	r3, [r0, #32]
 508:Core/Src/main.c ****       myLoRa.bandWidth             = BW_15_6KHz;       // default = BW_125KHz
 2825              		.loc 1 508 7 is_stmt 1 view .LVU874
 508:Core/Src/main.c ****       myLoRa.bandWidth             = BW_15_6KHz;       // default = BW_125KHz
 2826              		.loc 1 508 36 is_stmt 0 view .LVU875
 2827 07e0 0923     		movs	r3, #9
 2828 07e2 80F82430 		strb	r3, [r0, #36]
 509:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2829              		.loc 1 509 7 is_stmt 1 view .LVU876
 509:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2830              		.loc 1 509 36 is_stmt 0 view .LVU877
 2831 07e6 0223     		movs	r3, #2
 2832 07e8 80F82530 		strb	r3, [r0, #37]
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 96


 510:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2833              		.loc 1 510 7 is_stmt 1 view .LVU878
 510:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2834              		.loc 1 510 36 is_stmt 0 view .LVU879
 2835 07ec 0123     		movs	r3, #1
 2836 07ee 80F82630 		strb	r3, [r0, #38]
 511:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2837              		.loc 1 511 7 is_stmt 1 view .LVU880
 511:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2838              		.loc 1 511 36 is_stmt 0 view .LVU881
 2839 07f2 FF23     		movs	r3, #255
 2840 07f4 80F82A30 		strb	r3, [r0, #42]
 512:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2841              		.loc 1 512 7 is_stmt 1 view .LVU882
 512:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2842              		.loc 1 512 36 is_stmt 0 view .LVU883
 2843 07f8 6423     		movs	r3, #100
 2844 07fa 80F82B30 		strb	r3, [r0, #43]
 513:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2845              		.loc 1 513 7 is_stmt 1 view .LVU884
 513:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2846              		.loc 1 513 36 is_stmt 0 view .LVU885
 2847 07fe 0823     		movs	r3, #8
 2848 0800 0385     		strh	r3, [r0, #40]	@ movhi
 514:Core/Src/main.c ****       break;
 2849              		.loc 1 514 7 is_stmt 1 view .LVU886
 2850 0802 FFF7FEFF 		bl	LoRa_init
 2851              	.LVL164:
 515:Core/Src/main.c **** 
 2852              		.loc 1 515 7 view .LVU887
 2853 0806 48E5     		b	.L80
 2854              	.L118:
 519:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_9;            // default = SF_7
 2855              		.loc 1 519 7 view .LVU888
 519:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_9;            // default = SF_7
 2856              		.loc 1 519 36 is_stmt 0 view .LVU889
 2857 0808 4748     		ldr	r0, .L153
 2858 080a 40F2B113 		movw	r3, #433
 2859 080e 0362     		str	r3, [r0, #32]
 520:Core/Src/main.c ****       myLoRa.bandWidth             = BW_20_8KHz;       // default = BW_125KHz
 2860              		.loc 1 520 7 is_stmt 1 view .LVU890
 520:Core/Src/main.c ****       myLoRa.bandWidth             = BW_20_8KHz;       // default = BW_125KHz
 2861              		.loc 1 520 36 is_stmt 0 view .LVU891
 2862 0810 0923     		movs	r3, #9
 2863 0812 80F82430 		strb	r3, [r0, #36]
 521:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2864              		.loc 1 521 7 is_stmt 1 view .LVU892
 521:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2865              		.loc 1 521 36 is_stmt 0 view .LVU893
 2866 0816 0323     		movs	r3, #3
 2867 0818 80F82530 		strb	r3, [r0, #37]
 522:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2868              		.loc 1 522 7 is_stmt 1 view .LVU894
 522:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2869              		.loc 1 522 36 is_stmt 0 view .LVU895
 2870 081c 0123     		movs	r3, #1
 2871 081e 80F82630 		strb	r3, [r0, #38]
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 97


 523:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2872              		.loc 1 523 7 is_stmt 1 view .LVU896
 523:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2873              		.loc 1 523 36 is_stmt 0 view .LVU897
 2874 0822 FF23     		movs	r3, #255
 2875 0824 80F82A30 		strb	r3, [r0, #42]
 524:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2876              		.loc 1 524 7 is_stmt 1 view .LVU898
 524:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2877              		.loc 1 524 36 is_stmt 0 view .LVU899
 2878 0828 6423     		movs	r3, #100
 2879 082a 80F82B30 		strb	r3, [r0, #43]
 525:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2880              		.loc 1 525 7 is_stmt 1 view .LVU900
 525:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2881              		.loc 1 525 36 is_stmt 0 view .LVU901
 2882 082e 0823     		movs	r3, #8
 2883 0830 0385     		strh	r3, [r0, #40]	@ movhi
 526:Core/Src/main.c ****       break;
 2884              		.loc 1 526 7 is_stmt 1 view .LVU902
 2885 0832 FFF7FEFF 		bl	LoRa_init
 2886              	.LVL165:
 527:Core/Src/main.c **** 
 2887              		.loc 1 527 7 view .LVU903
 2888 0836 30E5     		b	.L80
 2889              	.L117:
 531:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_9;            // default = SF_7
 2890              		.loc 1 531 7 view .LVU904
 531:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_9;            // default = SF_7
 2891              		.loc 1 531 36 is_stmt 0 view .LVU905
 2892 0838 3B48     		ldr	r0, .L153
 2893 083a 40F2B113 		movw	r3, #433
 2894 083e 0362     		str	r3, [r0, #32]
 532:Core/Src/main.c ****       myLoRa.bandWidth             = BW_31_25KHz;       // default = BW_125KHz
 2895              		.loc 1 532 7 is_stmt 1 view .LVU906
 532:Core/Src/main.c ****       myLoRa.bandWidth             = BW_31_25KHz;       // default = BW_125KHz
 2896              		.loc 1 532 36 is_stmt 0 view .LVU907
 2897 0840 0923     		movs	r3, #9
 2898 0842 80F82430 		strb	r3, [r0, #36]
 533:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2899              		.loc 1 533 7 is_stmt 1 view .LVU908
 533:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2900              		.loc 1 533 36 is_stmt 0 view .LVU909
 2901 0846 0423     		movs	r3, #4
 2902 0848 80F82530 		strb	r3, [r0, #37]
 534:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2903              		.loc 1 534 7 is_stmt 1 view .LVU910
 534:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2904              		.loc 1 534 36 is_stmt 0 view .LVU911
 2905 084c 0123     		movs	r3, #1
 2906 084e 80F82630 		strb	r3, [r0, #38]
 535:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2907              		.loc 1 535 7 is_stmt 1 view .LVU912
 535:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2908              		.loc 1 535 36 is_stmt 0 view .LVU913
 2909 0852 FF23     		movs	r3, #255
 2910 0854 80F82A30 		strb	r3, [r0, #42]
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 98


 536:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2911              		.loc 1 536 7 is_stmt 1 view .LVU914
 536:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2912              		.loc 1 536 36 is_stmt 0 view .LVU915
 2913 0858 6423     		movs	r3, #100
 2914 085a 80F82B30 		strb	r3, [r0, #43]
 537:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2915              		.loc 1 537 7 is_stmt 1 view .LVU916
 537:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2916              		.loc 1 537 36 is_stmt 0 view .LVU917
 2917 085e 0823     		movs	r3, #8
 2918 0860 0385     		strh	r3, [r0, #40]	@ movhi
 538:Core/Src/main.c ****       break;
 2919              		.loc 1 538 7 is_stmt 1 view .LVU918
 2920 0862 FFF7FEFF 		bl	LoRa_init
 2921              	.LVL166:
 539:Core/Src/main.c **** 
 2922              		.loc 1 539 7 view .LVU919
 2923 0866 18E5     		b	.L80
 2924              	.L116:
 543:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_9;            // default = SF_7
 2925              		.loc 1 543 7 view .LVU920
 543:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_9;            // default = SF_7
 2926              		.loc 1 543 36 is_stmt 0 view .LVU921
 2927 0868 2F48     		ldr	r0, .L153
 2928 086a 40F2B113 		movw	r3, #433
 2929 086e 0362     		str	r3, [r0, #32]
 544:Core/Src/main.c ****       myLoRa.bandWidth             = BW_41_7KHz;       // default = BW_125KHz
 2930              		.loc 1 544 7 is_stmt 1 view .LVU922
 544:Core/Src/main.c ****       myLoRa.bandWidth             = BW_41_7KHz;       // default = BW_125KHz
 2931              		.loc 1 544 36 is_stmt 0 view .LVU923
 2932 0870 0923     		movs	r3, #9
 2933 0872 80F82430 		strb	r3, [r0, #36]
 545:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2934              		.loc 1 545 7 is_stmt 1 view .LVU924
 545:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2935              		.loc 1 545 36 is_stmt 0 view .LVU925
 2936 0876 0523     		movs	r3, #5
 2937 0878 80F82530 		strb	r3, [r0, #37]
 546:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2938              		.loc 1 546 7 is_stmt 1 view .LVU926
 546:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2939              		.loc 1 546 36 is_stmt 0 view .LVU927
 2940 087c 0123     		movs	r3, #1
 2941 087e 80F82630 		strb	r3, [r0, #38]
 547:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2942              		.loc 1 547 7 is_stmt 1 view .LVU928
 547:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2943              		.loc 1 547 36 is_stmt 0 view .LVU929
 2944 0882 FF23     		movs	r3, #255
 2945 0884 80F82A30 		strb	r3, [r0, #42]
 548:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2946              		.loc 1 548 7 is_stmt 1 view .LVU930
 548:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2947              		.loc 1 548 36 is_stmt 0 view .LVU931
 2948 0888 6423     		movs	r3, #100
 2949 088a 80F82B30 		strb	r3, [r0, #43]
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 99


 549:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2950              		.loc 1 549 7 is_stmt 1 view .LVU932
 549:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2951              		.loc 1 549 36 is_stmt 0 view .LVU933
 2952 088e 0823     		movs	r3, #8
 2953 0890 0385     		strh	r3, [r0, #40]	@ movhi
 550:Core/Src/main.c ****       break;
 2954              		.loc 1 550 7 is_stmt 1 view .LVU934
 2955 0892 FFF7FEFF 		bl	LoRa_init
 2956              	.LVL167:
 551:Core/Src/main.c **** 
 2957              		.loc 1 551 7 view .LVU935
 2958 0896 00E5     		b	.L80
 2959              	.L115:
 555:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_9;            // default = SF_7
 2960              		.loc 1 555 7 view .LVU936
 555:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_9;            // default = SF_7
 2961              		.loc 1 555 36 is_stmt 0 view .LVU937
 2962 0898 2348     		ldr	r0, .L153
 2963 089a 40F2B113 		movw	r3, #433
 2964 089e 0362     		str	r3, [r0, #32]
 556:Core/Src/main.c ****       myLoRa.bandWidth             = BW_62_5KHz;       // default = BW_125KHz
 2965              		.loc 1 556 7 is_stmt 1 view .LVU938
 556:Core/Src/main.c ****       myLoRa.bandWidth             = BW_62_5KHz;       // default = BW_125KHz
 2966              		.loc 1 556 36 is_stmt 0 view .LVU939
 2967 08a0 0923     		movs	r3, #9
 2968 08a2 80F82430 		strb	r3, [r0, #36]
 557:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2969              		.loc 1 557 7 is_stmt 1 view .LVU940
 557:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 2970              		.loc 1 557 36 is_stmt 0 view .LVU941
 2971 08a6 0623     		movs	r3, #6
 2972 08a8 80F82530 		strb	r3, [r0, #37]
 558:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2973              		.loc 1 558 7 is_stmt 1 view .LVU942
 558:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 2974              		.loc 1 558 36 is_stmt 0 view .LVU943
 2975 08ac 0123     		movs	r3, #1
 2976 08ae 80F82630 		strb	r3, [r0, #38]
 559:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2977              		.loc 1 559 7 is_stmt 1 view .LVU944
 559:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 2978              		.loc 1 559 36 is_stmt 0 view .LVU945
 2979 08b2 FF23     		movs	r3, #255
 2980 08b4 80F82A30 		strb	r3, [r0, #42]
 560:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2981              		.loc 1 560 7 is_stmt 1 view .LVU946
 560:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 2982              		.loc 1 560 36 is_stmt 0 view .LVU947
 2983 08b8 6423     		movs	r3, #100
 2984 08ba 80F82B30 		strb	r3, [r0, #43]
 561:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2985              		.loc 1 561 7 is_stmt 1 view .LVU948
 561:Core/Src/main.c ****       LoRa_init(&myLoRa);
 2986              		.loc 1 561 36 is_stmt 0 view .LVU949
 2987 08be 0823     		movs	r3, #8
 2988 08c0 0385     		strh	r3, [r0, #40]	@ movhi
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 100


 562:Core/Src/main.c ****       break;
 2989              		.loc 1 562 7 is_stmt 1 view .LVU950
 2990 08c2 FFF7FEFF 		bl	LoRa_init
 2991              	.LVL168:
 563:Core/Src/main.c **** 
 2992              		.loc 1 563 7 view .LVU951
 2993 08c6 E8E4     		b	.L80
 2994              	.L114:
 567:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_9;            // default = SF_7
 2995              		.loc 1 567 7 view .LVU952
 567:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_9;            // default = SF_7
 2996              		.loc 1 567 36 is_stmt 0 view .LVU953
 2997 08c8 1748     		ldr	r0, .L153
 2998 08ca 40F2B113 		movw	r3, #433
 2999 08ce 0362     		str	r3, [r0, #32]
 568:Core/Src/main.c ****       myLoRa.bandWidth             = BW_125KHz;       // default = BW_125KHz
 3000              		.loc 1 568 7 is_stmt 1 view .LVU954
 568:Core/Src/main.c ****       myLoRa.bandWidth             = BW_125KHz;       // default = BW_125KHz
 3001              		.loc 1 568 36 is_stmt 0 view .LVU955
 3002 08d0 0923     		movs	r3, #9
 3003 08d2 80F82430 		strb	r3, [r0, #36]
 569:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3004              		.loc 1 569 7 is_stmt 1 view .LVU956
 569:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3005              		.loc 1 569 36 is_stmt 0 view .LVU957
 3006 08d6 0723     		movs	r3, #7
 3007 08d8 80F82530 		strb	r3, [r0, #37]
 570:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3008              		.loc 1 570 7 is_stmt 1 view .LVU958
 570:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3009              		.loc 1 570 36 is_stmt 0 view .LVU959
 3010 08dc 0123     		movs	r3, #1
 3011 08de 80F82630 		strb	r3, [r0, #38]
 571:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3012              		.loc 1 571 7 is_stmt 1 view .LVU960
 571:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3013              		.loc 1 571 36 is_stmt 0 view .LVU961
 3014 08e2 FF23     		movs	r3, #255
 3015 08e4 80F82A30 		strb	r3, [r0, #42]
 572:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3016              		.loc 1 572 7 is_stmt 1 view .LVU962
 572:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3017              		.loc 1 572 36 is_stmt 0 view .LVU963
 3018 08e8 6423     		movs	r3, #100
 3019 08ea 80F82B30 		strb	r3, [r0, #43]
 573:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3020              		.loc 1 573 7 is_stmt 1 view .LVU964
 573:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3021              		.loc 1 573 36 is_stmt 0 view .LVU965
 3022 08ee 0823     		movs	r3, #8
 3023 08f0 0385     		strh	r3, [r0, #40]	@ movhi
 574:Core/Src/main.c ****       break;
 3024              		.loc 1 574 7 is_stmt 1 view .LVU966
 3025 08f2 FFF7FEFF 		bl	LoRa_init
 3026              	.LVL169:
 575:Core/Src/main.c **** 
 3027              		.loc 1 575 7 view .LVU967
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 101


 3028 08f6 D0E4     		b	.L80
 3029              	.L113:
 579:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_9;            // default = SF_7
 3030              		.loc 1 579 7 view .LVU968
 579:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_9;            // default = SF_7
 3031              		.loc 1 579 36 is_stmt 0 view .LVU969
 3032 08f8 0B48     		ldr	r0, .L153
 3033 08fa 40F2B113 		movw	r3, #433
 3034 08fe 0362     		str	r3, [r0, #32]
 580:Core/Src/main.c ****       myLoRa.bandWidth             = BW_250KHz;       // default = BW_125KHz
 3035              		.loc 1 580 7 is_stmt 1 view .LVU970
 580:Core/Src/main.c ****       myLoRa.bandWidth             = BW_250KHz;       // default = BW_125KHz
 3036              		.loc 1 580 36 is_stmt 0 view .LVU971
 3037 0900 0923     		movs	r3, #9
 3038 0902 80F82430 		strb	r3, [r0, #36]
 581:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3039              		.loc 1 581 7 is_stmt 1 view .LVU972
 581:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3040              		.loc 1 581 36 is_stmt 0 view .LVU973
 3041 0906 0823     		movs	r3, #8
 3042 0908 80F82530 		strb	r3, [r0, #37]
 582:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3043              		.loc 1 582 7 is_stmt 1 view .LVU974
 582:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3044              		.loc 1 582 36 is_stmt 0 view .LVU975
 3045 090c 0122     		movs	r2, #1
 3046 090e 80F82620 		strb	r2, [r0, #38]
 583:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3047              		.loc 1 583 7 is_stmt 1 view .LVU976
 583:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3048              		.loc 1 583 36 is_stmt 0 view .LVU977
 3049 0912 FF22     		movs	r2, #255
 3050 0914 80F82A20 		strb	r2, [r0, #42]
 584:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3051              		.loc 1 584 7 is_stmt 1 view .LVU978
 584:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3052              		.loc 1 584 36 is_stmt 0 view .LVU979
 3053 0918 6422     		movs	r2, #100
 3054 091a 80F82B20 		strb	r2, [r0, #43]
 585:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3055              		.loc 1 585 7 is_stmt 1 view .LVU980
 585:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3056              		.loc 1 585 36 is_stmt 0 view .LVU981
 3057 091e 0385     		strh	r3, [r0, #40]	@ movhi
 586:Core/Src/main.c ****       break;
 3058              		.loc 1 586 7 is_stmt 1 view .LVU982
 3059 0920 FFF7FEFF 		bl	LoRa_init
 3060              	.LVL170:
 587:Core/Src/main.c **** 
 3061              		.loc 1 587 7 view .LVU983
 3062 0924 B9E4     		b	.L80
 3063              	.L154:
 3064 0926 00BF     		.align	2
 3065              	.L153:
 3066 0928 00000000 		.word	myLoRa
 3067              	.L112:
 591:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_9;            // default = SF_7
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 102


 3068              		.loc 1 591 7 view .LVU984
 591:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_9;            // default = SF_7
 3069              		.loc 1 591 36 is_stmt 0 view .LVU985
 3070 092c DB48     		ldr	r0, .L155
 3071 092e 40F2B113 		movw	r3, #433
 3072 0932 0362     		str	r3, [r0, #32]
 592:Core/Src/main.c ****       myLoRa.bandWidth             = BW_500KHz;       // default = BW_125KHz
 3073              		.loc 1 592 7 is_stmt 1 view .LVU986
 592:Core/Src/main.c ****       myLoRa.bandWidth             = BW_500KHz;       // default = BW_125KHz
 3074              		.loc 1 592 36 is_stmt 0 view .LVU987
 3075 0934 0923     		movs	r3, #9
 3076 0936 80F82430 		strb	r3, [r0, #36]
 593:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3077              		.loc 1 593 7 is_stmt 1 view .LVU988
 593:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3078              		.loc 1 593 36 is_stmt 0 view .LVU989
 3079 093a 80F82530 		strb	r3, [r0, #37]
 594:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3080              		.loc 1 594 7 is_stmt 1 view .LVU990
 594:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3081              		.loc 1 594 36 is_stmt 0 view .LVU991
 3082 093e 0123     		movs	r3, #1
 3083 0940 80F82630 		strb	r3, [r0, #38]
 595:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3084              		.loc 1 595 7 is_stmt 1 view .LVU992
 595:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3085              		.loc 1 595 36 is_stmt 0 view .LVU993
 3086 0944 FF23     		movs	r3, #255
 3087 0946 80F82A30 		strb	r3, [r0, #42]
 596:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3088              		.loc 1 596 7 is_stmt 1 view .LVU994
 596:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3089              		.loc 1 596 36 is_stmt 0 view .LVU995
 3090 094a 6423     		movs	r3, #100
 3091 094c 80F82B30 		strb	r3, [r0, #43]
 597:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3092              		.loc 1 597 7 is_stmt 1 view .LVU996
 597:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3093              		.loc 1 597 36 is_stmt 0 view .LVU997
 3094 0950 0823     		movs	r3, #8
 3095 0952 0385     		strh	r3, [r0, #40]	@ movhi
 598:Core/Src/main.c ****       break;
 3096              		.loc 1 598 7 is_stmt 1 view .LVU998
 3097 0954 FFF7FEFF 		bl	LoRa_init
 3098              	.LVL171:
 599:Core/Src/main.c **** 
 3099              		.loc 1 599 7 view .LVU999
 3100 0958 9FE4     		b	.L80
 3101              	.L111:
 603:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_10;            // default = SF_7
 3102              		.loc 1 603 7 view .LVU1000
 603:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_10;            // default = SF_7
 3103              		.loc 1 603 36 is_stmt 0 view .LVU1001
 3104 095a D048     		ldr	r0, .L155
 3105 095c 40F2B113 		movw	r3, #433
 3106 0960 0362     		str	r3, [r0, #32]
 604:Core/Src/main.c ****       myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 103


 3107              		.loc 1 604 7 is_stmt 1 view .LVU1002
 604:Core/Src/main.c ****       myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 3108              		.loc 1 604 36 is_stmt 0 view .LVU1003
 3109 0962 0A23     		movs	r3, #10
 3110 0964 80F82430 		strb	r3, [r0, #36]
 605:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3111              		.loc 1 605 7 is_stmt 1 view .LVU1004
 605:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3112              		.loc 1 605 36 is_stmt 0 view .LVU1005
 3113 0968 0023     		movs	r3, #0
 3114 096a 80F82530 		strb	r3, [r0, #37]
 606:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3115              		.loc 1 606 7 is_stmt 1 view .LVU1006
 606:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3116              		.loc 1 606 36 is_stmt 0 view .LVU1007
 3117 096e 0123     		movs	r3, #1
 3118 0970 80F82630 		strb	r3, [r0, #38]
 607:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3119              		.loc 1 607 7 is_stmt 1 view .LVU1008
 607:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3120              		.loc 1 607 36 is_stmt 0 view .LVU1009
 3121 0974 FF23     		movs	r3, #255
 3122 0976 80F82A30 		strb	r3, [r0, #42]
 608:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3123              		.loc 1 608 7 is_stmt 1 view .LVU1010
 608:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3124              		.loc 1 608 36 is_stmt 0 view .LVU1011
 3125 097a 6423     		movs	r3, #100
 3126 097c 80F82B30 		strb	r3, [r0, #43]
 609:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3127              		.loc 1 609 7 is_stmt 1 view .LVU1012
 609:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3128              		.loc 1 609 36 is_stmt 0 view .LVU1013
 3129 0980 0823     		movs	r3, #8
 3130 0982 0385     		strh	r3, [r0, #40]	@ movhi
 610:Core/Src/main.c ****       break;
 3131              		.loc 1 610 7 is_stmt 1 view .LVU1014
 3132 0984 FFF7FEFF 		bl	LoRa_init
 3133              	.LVL172:
 611:Core/Src/main.c **** 
 3134              		.loc 1 611 7 view .LVU1015
 3135 0988 87E4     		b	.L80
 3136              	.L110:
 615:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_10;            // default = SF_7
 3137              		.loc 1 615 7 view .LVU1016
 615:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_10;            // default = SF_7
 3138              		.loc 1 615 36 is_stmt 0 view .LVU1017
 3139 098a C448     		ldr	r0, .L155
 3140 098c 40F2B113 		movw	r3, #433
 3141 0990 0362     		str	r3, [r0, #32]
 616:Core/Src/main.c ****       myLoRa.bandWidth             = BW_10_4KHz;       // default = BW_125KHz
 3142              		.loc 1 616 7 is_stmt 1 view .LVU1018
 616:Core/Src/main.c ****       myLoRa.bandWidth             = BW_10_4KHz;       // default = BW_125KHz
 3143              		.loc 1 616 36 is_stmt 0 view .LVU1019
 3144 0992 0A23     		movs	r3, #10
 3145 0994 80F82430 		strb	r3, [r0, #36]
 617:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 104


 3146              		.loc 1 617 7 is_stmt 1 view .LVU1020
 617:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3147              		.loc 1 617 36 is_stmt 0 view .LVU1021
 3148 0998 0123     		movs	r3, #1
 3149 099a 80F82530 		strb	r3, [r0, #37]
 618:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3150              		.loc 1 618 7 is_stmt 1 view .LVU1022
 618:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3151              		.loc 1 618 36 is_stmt 0 view .LVU1023
 3152 099e 80F82630 		strb	r3, [r0, #38]
 619:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3153              		.loc 1 619 7 is_stmt 1 view .LVU1024
 619:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3154              		.loc 1 619 36 is_stmt 0 view .LVU1025
 3155 09a2 FF23     		movs	r3, #255
 3156 09a4 80F82A30 		strb	r3, [r0, #42]
 620:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3157              		.loc 1 620 7 is_stmt 1 view .LVU1026
 620:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3158              		.loc 1 620 36 is_stmt 0 view .LVU1027
 3159 09a8 6423     		movs	r3, #100
 3160 09aa 80F82B30 		strb	r3, [r0, #43]
 621:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3161              		.loc 1 621 7 is_stmt 1 view .LVU1028
 621:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3162              		.loc 1 621 36 is_stmt 0 view .LVU1029
 3163 09ae 0823     		movs	r3, #8
 3164 09b0 0385     		strh	r3, [r0, #40]	@ movhi
 622:Core/Src/main.c ****       break;
 3165              		.loc 1 622 7 is_stmt 1 view .LVU1030
 3166 09b2 FFF7FEFF 		bl	LoRa_init
 3167              	.LVL173:
 623:Core/Src/main.c **** 
 3168              		.loc 1 623 7 view .LVU1031
 3169 09b6 70E4     		b	.L80
 3170              	.L109:
 627:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_10;            // default = SF_7
 3171              		.loc 1 627 7 view .LVU1032
 627:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_10;            // default = SF_7
 3172              		.loc 1 627 36 is_stmt 0 view .LVU1033
 3173 09b8 B848     		ldr	r0, .L155
 3174 09ba 40F2B113 		movw	r3, #433
 3175 09be 0362     		str	r3, [r0, #32]
 628:Core/Src/main.c ****       myLoRa.bandWidth             = BW_15_6KHz;       // default = BW_125KHz
 3176              		.loc 1 628 7 is_stmt 1 view .LVU1034
 628:Core/Src/main.c ****       myLoRa.bandWidth             = BW_15_6KHz;       // default = BW_125KHz
 3177              		.loc 1 628 36 is_stmt 0 view .LVU1035
 3178 09c0 0A23     		movs	r3, #10
 3179 09c2 80F82430 		strb	r3, [r0, #36]
 629:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3180              		.loc 1 629 7 is_stmt 1 view .LVU1036
 629:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3181              		.loc 1 629 36 is_stmt 0 view .LVU1037
 3182 09c6 0223     		movs	r3, #2
 3183 09c8 80F82530 		strb	r3, [r0, #37]
 630:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3184              		.loc 1 630 7 is_stmt 1 view .LVU1038
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 105


 630:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3185              		.loc 1 630 36 is_stmt 0 view .LVU1039
 3186 09cc 0123     		movs	r3, #1
 3187 09ce 80F82630 		strb	r3, [r0, #38]
 631:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3188              		.loc 1 631 7 is_stmt 1 view .LVU1040
 631:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3189              		.loc 1 631 36 is_stmt 0 view .LVU1041
 3190 09d2 FF23     		movs	r3, #255
 3191 09d4 80F82A30 		strb	r3, [r0, #42]
 632:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3192              		.loc 1 632 7 is_stmt 1 view .LVU1042
 632:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3193              		.loc 1 632 36 is_stmt 0 view .LVU1043
 3194 09d8 6423     		movs	r3, #100
 3195 09da 80F82B30 		strb	r3, [r0, #43]
 633:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3196              		.loc 1 633 7 is_stmt 1 view .LVU1044
 633:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3197              		.loc 1 633 36 is_stmt 0 view .LVU1045
 3198 09de 0823     		movs	r3, #8
 3199 09e0 0385     		strh	r3, [r0, #40]	@ movhi
 634:Core/Src/main.c ****       break;
 3200              		.loc 1 634 7 is_stmt 1 view .LVU1046
 3201 09e2 FFF7FEFF 		bl	LoRa_init
 3202              	.LVL174:
 635:Core/Src/main.c **** 
 3203              		.loc 1 635 7 view .LVU1047
 3204 09e6 58E4     		b	.L80
 3205              	.L108:
 639:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_10;            // default = SF_7
 3206              		.loc 1 639 7 view .LVU1048
 639:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_10;            // default = SF_7
 3207              		.loc 1 639 36 is_stmt 0 view .LVU1049
 3208 09e8 AC48     		ldr	r0, .L155
 3209 09ea 40F2B113 		movw	r3, #433
 3210 09ee 0362     		str	r3, [r0, #32]
 640:Core/Src/main.c ****       myLoRa.bandWidth             = BW_20_8KHz;       // default = BW_125KHz
 3211              		.loc 1 640 7 is_stmt 1 view .LVU1050
 640:Core/Src/main.c ****       myLoRa.bandWidth             = BW_20_8KHz;       // default = BW_125KHz
 3212              		.loc 1 640 36 is_stmt 0 view .LVU1051
 3213 09f0 0A23     		movs	r3, #10
 3214 09f2 80F82430 		strb	r3, [r0, #36]
 641:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3215              		.loc 1 641 7 is_stmt 1 view .LVU1052
 641:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3216              		.loc 1 641 36 is_stmt 0 view .LVU1053
 3217 09f6 0323     		movs	r3, #3
 3218 09f8 80F82530 		strb	r3, [r0, #37]
 642:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3219              		.loc 1 642 7 is_stmt 1 view .LVU1054
 642:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3220              		.loc 1 642 36 is_stmt 0 view .LVU1055
 3221 09fc 0123     		movs	r3, #1
 3222 09fe 80F82630 		strb	r3, [r0, #38]
 643:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3223              		.loc 1 643 7 is_stmt 1 view .LVU1056
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 106


 643:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3224              		.loc 1 643 36 is_stmt 0 view .LVU1057
 3225 0a02 FF23     		movs	r3, #255
 3226 0a04 80F82A30 		strb	r3, [r0, #42]
 644:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3227              		.loc 1 644 7 is_stmt 1 view .LVU1058
 644:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3228              		.loc 1 644 36 is_stmt 0 view .LVU1059
 3229 0a08 6423     		movs	r3, #100
 3230 0a0a 80F82B30 		strb	r3, [r0, #43]
 645:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3231              		.loc 1 645 7 is_stmt 1 view .LVU1060
 645:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3232              		.loc 1 645 36 is_stmt 0 view .LVU1061
 3233 0a0e 0823     		movs	r3, #8
 3234 0a10 0385     		strh	r3, [r0, #40]	@ movhi
 646:Core/Src/main.c ****       break;
 3235              		.loc 1 646 7 is_stmt 1 view .LVU1062
 3236 0a12 FFF7FEFF 		bl	LoRa_init
 3237              	.LVL175:
 647:Core/Src/main.c **** 
 3238              		.loc 1 647 7 view .LVU1063
 3239 0a16 40E4     		b	.L80
 3240              	.L107:
 651:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_10;            // default = SF_7
 3241              		.loc 1 651 7 view .LVU1064
 651:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_10;            // default = SF_7
 3242              		.loc 1 651 36 is_stmt 0 view .LVU1065
 3243 0a18 A048     		ldr	r0, .L155
 3244 0a1a 40F2B113 		movw	r3, #433
 3245 0a1e 0362     		str	r3, [r0, #32]
 652:Core/Src/main.c ****       myLoRa.bandWidth             = BW_31_25KHz;       // default = BW_125KHz
 3246              		.loc 1 652 7 is_stmt 1 view .LVU1066
 652:Core/Src/main.c ****       myLoRa.bandWidth             = BW_31_25KHz;       // default = BW_125KHz
 3247              		.loc 1 652 36 is_stmt 0 view .LVU1067
 3248 0a20 0A23     		movs	r3, #10
 3249 0a22 80F82430 		strb	r3, [r0, #36]
 653:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3250              		.loc 1 653 7 is_stmt 1 view .LVU1068
 653:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3251              		.loc 1 653 36 is_stmt 0 view .LVU1069
 3252 0a26 0423     		movs	r3, #4
 3253 0a28 80F82530 		strb	r3, [r0, #37]
 654:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3254              		.loc 1 654 7 is_stmt 1 view .LVU1070
 654:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3255              		.loc 1 654 36 is_stmt 0 view .LVU1071
 3256 0a2c 0123     		movs	r3, #1
 3257 0a2e 80F82630 		strb	r3, [r0, #38]
 655:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3258              		.loc 1 655 7 is_stmt 1 view .LVU1072
 655:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3259              		.loc 1 655 36 is_stmt 0 view .LVU1073
 3260 0a32 FF23     		movs	r3, #255
 3261 0a34 80F82A30 		strb	r3, [r0, #42]
 656:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3262              		.loc 1 656 7 is_stmt 1 view .LVU1074
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 107


 656:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3263              		.loc 1 656 36 is_stmt 0 view .LVU1075
 3264 0a38 6423     		movs	r3, #100
 3265 0a3a 80F82B30 		strb	r3, [r0, #43]
 657:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3266              		.loc 1 657 7 is_stmt 1 view .LVU1076
 657:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3267              		.loc 1 657 36 is_stmt 0 view .LVU1077
 3268 0a3e 0823     		movs	r3, #8
 3269 0a40 0385     		strh	r3, [r0, #40]	@ movhi
 658:Core/Src/main.c ****       break;
 3270              		.loc 1 658 7 is_stmt 1 view .LVU1078
 3271 0a42 FFF7FEFF 		bl	LoRa_init
 3272              	.LVL176:
 659:Core/Src/main.c **** 
 3273              		.loc 1 659 7 view .LVU1079
 3274 0a46 28E4     		b	.L80
 3275              	.L106:
 663:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_10;            // default = SF_7
 3276              		.loc 1 663 7 view .LVU1080
 663:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_10;            // default = SF_7
 3277              		.loc 1 663 36 is_stmt 0 view .LVU1081
 3278 0a48 9448     		ldr	r0, .L155
 3279 0a4a 40F2B113 		movw	r3, #433
 3280 0a4e 0362     		str	r3, [r0, #32]
 664:Core/Src/main.c ****       myLoRa.bandWidth             = BW_41_7KHz;       // default = BW_125KHz
 3281              		.loc 1 664 7 is_stmt 1 view .LVU1082
 664:Core/Src/main.c ****       myLoRa.bandWidth             = BW_41_7KHz;       // default = BW_125KHz
 3282              		.loc 1 664 36 is_stmt 0 view .LVU1083
 3283 0a50 0A23     		movs	r3, #10
 3284 0a52 80F82430 		strb	r3, [r0, #36]
 665:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3285              		.loc 1 665 7 is_stmt 1 view .LVU1084
 665:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3286              		.loc 1 665 36 is_stmt 0 view .LVU1085
 3287 0a56 0523     		movs	r3, #5
 3288 0a58 80F82530 		strb	r3, [r0, #37]
 666:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3289              		.loc 1 666 7 is_stmt 1 view .LVU1086
 666:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3290              		.loc 1 666 36 is_stmt 0 view .LVU1087
 3291 0a5c 0123     		movs	r3, #1
 3292 0a5e 80F82630 		strb	r3, [r0, #38]
 667:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3293              		.loc 1 667 7 is_stmt 1 view .LVU1088
 667:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3294              		.loc 1 667 36 is_stmt 0 view .LVU1089
 3295 0a62 FF23     		movs	r3, #255
 3296 0a64 80F82A30 		strb	r3, [r0, #42]
 668:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3297              		.loc 1 668 7 is_stmt 1 view .LVU1090
 668:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3298              		.loc 1 668 36 is_stmt 0 view .LVU1091
 3299 0a68 6423     		movs	r3, #100
 3300 0a6a 80F82B30 		strb	r3, [r0, #43]
 669:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3301              		.loc 1 669 7 is_stmt 1 view .LVU1092
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 108


 669:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3302              		.loc 1 669 36 is_stmt 0 view .LVU1093
 3303 0a6e 0823     		movs	r3, #8
 3304 0a70 0385     		strh	r3, [r0, #40]	@ movhi
 670:Core/Src/main.c ****       break;
 3305              		.loc 1 670 7 is_stmt 1 view .LVU1094
 3306 0a72 FFF7FEFF 		bl	LoRa_init
 3307              	.LVL177:
 671:Core/Src/main.c **** 
 3308              		.loc 1 671 7 view .LVU1095
 3309 0a76 10E4     		b	.L80
 3310              	.L105:
 675:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_10;            // default = SF_7
 3311              		.loc 1 675 7 view .LVU1096
 675:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_10;            // default = SF_7
 3312              		.loc 1 675 36 is_stmt 0 view .LVU1097
 3313 0a78 8848     		ldr	r0, .L155
 3314 0a7a 40F2B113 		movw	r3, #433
 3315 0a7e 0362     		str	r3, [r0, #32]
 676:Core/Src/main.c ****       myLoRa.bandWidth             = BW_62_5KHz;       // default = BW_125KHz
 3316              		.loc 1 676 7 is_stmt 1 view .LVU1098
 676:Core/Src/main.c ****       myLoRa.bandWidth             = BW_62_5KHz;       // default = BW_125KHz
 3317              		.loc 1 676 36 is_stmt 0 view .LVU1099
 3318 0a80 0A23     		movs	r3, #10
 3319 0a82 80F82430 		strb	r3, [r0, #36]
 677:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3320              		.loc 1 677 7 is_stmt 1 view .LVU1100
 677:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3321              		.loc 1 677 36 is_stmt 0 view .LVU1101
 3322 0a86 0623     		movs	r3, #6
 3323 0a88 80F82530 		strb	r3, [r0, #37]
 678:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3324              		.loc 1 678 7 is_stmt 1 view .LVU1102
 678:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3325              		.loc 1 678 36 is_stmt 0 view .LVU1103
 3326 0a8c 0123     		movs	r3, #1
 3327 0a8e 80F82630 		strb	r3, [r0, #38]
 679:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3328              		.loc 1 679 7 is_stmt 1 view .LVU1104
 679:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3329              		.loc 1 679 36 is_stmt 0 view .LVU1105
 3330 0a92 FF23     		movs	r3, #255
 3331 0a94 80F82A30 		strb	r3, [r0, #42]
 680:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3332              		.loc 1 680 7 is_stmt 1 view .LVU1106
 680:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3333              		.loc 1 680 36 is_stmt 0 view .LVU1107
 3334 0a98 6423     		movs	r3, #100
 3335 0a9a 80F82B30 		strb	r3, [r0, #43]
 681:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3336              		.loc 1 681 7 is_stmt 1 view .LVU1108
 681:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3337              		.loc 1 681 36 is_stmt 0 view .LVU1109
 3338 0a9e 0823     		movs	r3, #8
 3339 0aa0 0385     		strh	r3, [r0, #40]	@ movhi
 682:Core/Src/main.c ****       break;
 3340              		.loc 1 682 7 is_stmt 1 view .LVU1110
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 109


 3341 0aa2 FFF7FEFF 		bl	LoRa_init
 3342              	.LVL178:
 683:Core/Src/main.c **** 
 3343              		.loc 1 683 7 view .LVU1111
 3344 0aa6 FFF7F8BB 		b	.L80
 3345              	.L104:
 687:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_10;            // default = SF_7
 3346              		.loc 1 687 7 view .LVU1112
 687:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_10;            // default = SF_7
 3347              		.loc 1 687 36 is_stmt 0 view .LVU1113
 3348 0aaa 7C48     		ldr	r0, .L155
 3349 0aac 40F2B113 		movw	r3, #433
 3350 0ab0 0362     		str	r3, [r0, #32]
 688:Core/Src/main.c ****       myLoRa.bandWidth             = BW_125KHz;       // default = BW_125KHz
 3351              		.loc 1 688 7 is_stmt 1 view .LVU1114
 688:Core/Src/main.c ****       myLoRa.bandWidth             = BW_125KHz;       // default = BW_125KHz
 3352              		.loc 1 688 36 is_stmt 0 view .LVU1115
 3353 0ab2 0A23     		movs	r3, #10
 3354 0ab4 80F82430 		strb	r3, [r0, #36]
 689:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3355              		.loc 1 689 7 is_stmt 1 view .LVU1116
 689:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3356              		.loc 1 689 36 is_stmt 0 view .LVU1117
 3357 0ab8 0723     		movs	r3, #7
 3358 0aba 80F82530 		strb	r3, [r0, #37]
 690:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3359              		.loc 1 690 7 is_stmt 1 view .LVU1118
 690:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3360              		.loc 1 690 36 is_stmt 0 view .LVU1119
 3361 0abe 0123     		movs	r3, #1
 3362 0ac0 80F82630 		strb	r3, [r0, #38]
 691:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3363              		.loc 1 691 7 is_stmt 1 view .LVU1120
 691:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3364              		.loc 1 691 36 is_stmt 0 view .LVU1121
 3365 0ac4 FF23     		movs	r3, #255
 3366 0ac6 80F82A30 		strb	r3, [r0, #42]
 692:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3367              		.loc 1 692 7 is_stmt 1 view .LVU1122
 692:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3368              		.loc 1 692 36 is_stmt 0 view .LVU1123
 3369 0aca 6423     		movs	r3, #100
 3370 0acc 80F82B30 		strb	r3, [r0, #43]
 693:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3371              		.loc 1 693 7 is_stmt 1 view .LVU1124
 693:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3372              		.loc 1 693 36 is_stmt 0 view .LVU1125
 3373 0ad0 0823     		movs	r3, #8
 3374 0ad2 0385     		strh	r3, [r0, #40]	@ movhi
 694:Core/Src/main.c ****       break;
 3375              		.loc 1 694 7 is_stmt 1 view .LVU1126
 3376 0ad4 FFF7FEFF 		bl	LoRa_init
 3377              	.LVL179:
 695:Core/Src/main.c **** 
 3378              		.loc 1 695 7 view .LVU1127
 3379 0ad8 FFF7DFBB 		b	.L80
 3380              	.L103:
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 110


 699:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_10;            // default = SF_7
 3381              		.loc 1 699 7 view .LVU1128
 699:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_10;            // default = SF_7
 3382              		.loc 1 699 36 is_stmt 0 view .LVU1129
 3383 0adc 6F48     		ldr	r0, .L155
 3384 0ade 40F2B113 		movw	r3, #433
 3385 0ae2 0362     		str	r3, [r0, #32]
 700:Core/Src/main.c ****       myLoRa.bandWidth             = BW_250KHz;       // default = BW_125KHz
 3386              		.loc 1 700 7 is_stmt 1 view .LVU1130
 700:Core/Src/main.c ****       myLoRa.bandWidth             = BW_250KHz;       // default = BW_125KHz
 3387              		.loc 1 700 36 is_stmt 0 view .LVU1131
 3388 0ae4 0A23     		movs	r3, #10
 3389 0ae6 80F82430 		strb	r3, [r0, #36]
 701:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3390              		.loc 1 701 7 is_stmt 1 view .LVU1132
 701:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3391              		.loc 1 701 36 is_stmt 0 view .LVU1133
 3392 0aea 0823     		movs	r3, #8
 3393 0aec 80F82530 		strb	r3, [r0, #37]
 702:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3394              		.loc 1 702 7 is_stmt 1 view .LVU1134
 702:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3395              		.loc 1 702 36 is_stmt 0 view .LVU1135
 3396 0af0 0122     		movs	r2, #1
 3397 0af2 80F82620 		strb	r2, [r0, #38]
 703:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3398              		.loc 1 703 7 is_stmt 1 view .LVU1136
 703:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3399              		.loc 1 703 36 is_stmt 0 view .LVU1137
 3400 0af6 FF22     		movs	r2, #255
 3401 0af8 80F82A20 		strb	r2, [r0, #42]
 704:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3402              		.loc 1 704 7 is_stmt 1 view .LVU1138
 704:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3403              		.loc 1 704 36 is_stmt 0 view .LVU1139
 3404 0afc 6422     		movs	r2, #100
 3405 0afe 80F82B20 		strb	r2, [r0, #43]
 705:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3406              		.loc 1 705 7 is_stmt 1 view .LVU1140
 705:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3407              		.loc 1 705 36 is_stmt 0 view .LVU1141
 3408 0b02 0385     		strh	r3, [r0, #40]	@ movhi
 706:Core/Src/main.c ****       break;
 3409              		.loc 1 706 7 is_stmt 1 view .LVU1142
 3410 0b04 FFF7FEFF 		bl	LoRa_init
 3411              	.LVL180:
 707:Core/Src/main.c **** 
 3412              		.loc 1 707 7 view .LVU1143
 3413 0b08 FFF7C7BB 		b	.L80
 3414              	.L102:
 711:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_10;            // default = SF_7
 3415              		.loc 1 711 7 view .LVU1144
 711:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_10;            // default = SF_7
 3416              		.loc 1 711 36 is_stmt 0 view .LVU1145
 3417 0b0c 6348     		ldr	r0, .L155
 3418 0b0e 40F2B113 		movw	r3, #433
 3419 0b12 0362     		str	r3, [r0, #32]
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 111


 712:Core/Src/main.c ****       myLoRa.bandWidth             = BW_500KHz;       // default = BW_125KHz
 3420              		.loc 1 712 7 is_stmt 1 view .LVU1146
 712:Core/Src/main.c ****       myLoRa.bandWidth             = BW_500KHz;       // default = BW_125KHz
 3421              		.loc 1 712 36 is_stmt 0 view .LVU1147
 3422 0b14 0A23     		movs	r3, #10
 3423 0b16 80F82430 		strb	r3, [r0, #36]
 713:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3424              		.loc 1 713 7 is_stmt 1 view .LVU1148
 713:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3425              		.loc 1 713 36 is_stmt 0 view .LVU1149
 3426 0b1a 0923     		movs	r3, #9
 3427 0b1c 80F82530 		strb	r3, [r0, #37]
 714:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3428              		.loc 1 714 7 is_stmt 1 view .LVU1150
 714:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3429              		.loc 1 714 36 is_stmt 0 view .LVU1151
 3430 0b20 0123     		movs	r3, #1
 3431 0b22 80F82630 		strb	r3, [r0, #38]
 715:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3432              		.loc 1 715 7 is_stmt 1 view .LVU1152
 715:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3433              		.loc 1 715 36 is_stmt 0 view .LVU1153
 3434 0b26 FF23     		movs	r3, #255
 3435 0b28 80F82A30 		strb	r3, [r0, #42]
 716:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3436              		.loc 1 716 7 is_stmt 1 view .LVU1154
 716:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3437              		.loc 1 716 36 is_stmt 0 view .LVU1155
 3438 0b2c 6423     		movs	r3, #100
 3439 0b2e 80F82B30 		strb	r3, [r0, #43]
 717:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3440              		.loc 1 717 7 is_stmt 1 view .LVU1156
 717:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3441              		.loc 1 717 36 is_stmt 0 view .LVU1157
 3442 0b32 0823     		movs	r3, #8
 3443 0b34 0385     		strh	r3, [r0, #40]	@ movhi
 718:Core/Src/main.c ****       break;
 3444              		.loc 1 718 7 is_stmt 1 view .LVU1158
 3445 0b36 FFF7FEFF 		bl	LoRa_init
 3446              	.LVL181:
 719:Core/Src/main.c **** 
 3447              		.loc 1 719 7 view .LVU1159
 3448 0b3a FFF7AEBB 		b	.L80
 3449              	.L101:
 723:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_11;            // default = SF_7
 3450              		.loc 1 723 7 view .LVU1160
 723:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_11;            // default = SF_7
 3451              		.loc 1 723 36 is_stmt 0 view .LVU1161
 3452 0b3e 5748     		ldr	r0, .L155
 3453 0b40 40F2B113 		movw	r3, #433
 3454 0b44 0362     		str	r3, [r0, #32]
 724:Core/Src/main.c ****       myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 3455              		.loc 1 724 7 is_stmt 1 view .LVU1162
 724:Core/Src/main.c ****       myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 3456              		.loc 1 724 36 is_stmt 0 view .LVU1163
 3457 0b46 0B23     		movs	r3, #11
 3458 0b48 80F82430 		strb	r3, [r0, #36]
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 112


 725:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3459              		.loc 1 725 7 is_stmt 1 view .LVU1164
 725:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3460              		.loc 1 725 36 is_stmt 0 view .LVU1165
 3461 0b4c 0023     		movs	r3, #0
 3462 0b4e 80F82530 		strb	r3, [r0, #37]
 726:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3463              		.loc 1 726 7 is_stmt 1 view .LVU1166
 726:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3464              		.loc 1 726 36 is_stmt 0 view .LVU1167
 3465 0b52 0123     		movs	r3, #1
 3466 0b54 80F82630 		strb	r3, [r0, #38]
 727:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3467              		.loc 1 727 7 is_stmt 1 view .LVU1168
 727:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3468              		.loc 1 727 36 is_stmt 0 view .LVU1169
 3469 0b58 FF23     		movs	r3, #255
 3470 0b5a 80F82A30 		strb	r3, [r0, #42]
 728:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3471              		.loc 1 728 7 is_stmt 1 view .LVU1170
 728:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3472              		.loc 1 728 36 is_stmt 0 view .LVU1171
 3473 0b5e 6423     		movs	r3, #100
 3474 0b60 80F82B30 		strb	r3, [r0, #43]
 729:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3475              		.loc 1 729 7 is_stmt 1 view .LVU1172
 729:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3476              		.loc 1 729 36 is_stmt 0 view .LVU1173
 3477 0b64 0823     		movs	r3, #8
 3478 0b66 0385     		strh	r3, [r0, #40]	@ movhi
 730:Core/Src/main.c ****       break;
 3479              		.loc 1 730 7 is_stmt 1 view .LVU1174
 3480 0b68 FFF7FEFF 		bl	LoRa_init
 3481              	.LVL182:
 731:Core/Src/main.c **** 
 3482              		.loc 1 731 7 view .LVU1175
 3483 0b6c FFF795BB 		b	.L80
 3484              	.L100:
 735:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_11;            // default = SF_7
 3485              		.loc 1 735 7 view .LVU1176
 735:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_11;            // default = SF_7
 3486              		.loc 1 735 36 is_stmt 0 view .LVU1177
 3487 0b70 4A48     		ldr	r0, .L155
 3488 0b72 40F2B113 		movw	r3, #433
 3489 0b76 0362     		str	r3, [r0, #32]
 736:Core/Src/main.c ****       myLoRa.bandWidth             = BW_10_4KHz;       // default = BW_125KHz
 3490              		.loc 1 736 7 is_stmt 1 view .LVU1178
 736:Core/Src/main.c ****       myLoRa.bandWidth             = BW_10_4KHz;       // default = BW_125KHz
 3491              		.loc 1 736 36 is_stmt 0 view .LVU1179
 3492 0b78 0B23     		movs	r3, #11
 3493 0b7a 80F82430 		strb	r3, [r0, #36]
 737:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3494              		.loc 1 737 7 is_stmt 1 view .LVU1180
 737:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3495              		.loc 1 737 36 is_stmt 0 view .LVU1181
 3496 0b7e 0123     		movs	r3, #1
 3497 0b80 80F82530 		strb	r3, [r0, #37]
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 113


 738:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3498              		.loc 1 738 7 is_stmt 1 view .LVU1182
 738:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3499              		.loc 1 738 36 is_stmt 0 view .LVU1183
 3500 0b84 80F82630 		strb	r3, [r0, #38]
 739:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3501              		.loc 1 739 7 is_stmt 1 view .LVU1184
 739:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3502              		.loc 1 739 36 is_stmt 0 view .LVU1185
 3503 0b88 FF23     		movs	r3, #255
 3504 0b8a 80F82A30 		strb	r3, [r0, #42]
 740:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3505              		.loc 1 740 7 is_stmt 1 view .LVU1186
 740:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3506              		.loc 1 740 36 is_stmt 0 view .LVU1187
 3507 0b8e 6423     		movs	r3, #100
 3508 0b90 80F82B30 		strb	r3, [r0, #43]
 741:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3509              		.loc 1 741 7 is_stmt 1 view .LVU1188
 741:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3510              		.loc 1 741 36 is_stmt 0 view .LVU1189
 3511 0b94 0823     		movs	r3, #8
 3512 0b96 0385     		strh	r3, [r0, #40]	@ movhi
 742:Core/Src/main.c ****       break;
 3513              		.loc 1 742 7 is_stmt 1 view .LVU1190
 3514 0b98 FFF7FEFF 		bl	LoRa_init
 3515              	.LVL183:
 743:Core/Src/main.c **** 
 3516              		.loc 1 743 7 view .LVU1191
 3517 0b9c FFF77DBB 		b	.L80
 3518              	.L99:
 747:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_11;            // default = SF_7
 3519              		.loc 1 747 7 view .LVU1192
 747:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_11;            // default = SF_7
 3520              		.loc 1 747 36 is_stmt 0 view .LVU1193
 3521 0ba0 3E48     		ldr	r0, .L155
 3522 0ba2 40F2B113 		movw	r3, #433
 3523 0ba6 0362     		str	r3, [r0, #32]
 748:Core/Src/main.c ****       myLoRa.bandWidth             = BW_15_6KHz;       // default = BW_125KHz
 3524              		.loc 1 748 7 is_stmt 1 view .LVU1194
 748:Core/Src/main.c ****       myLoRa.bandWidth             = BW_15_6KHz;       // default = BW_125KHz
 3525              		.loc 1 748 36 is_stmt 0 view .LVU1195
 3526 0ba8 0B23     		movs	r3, #11
 3527 0baa 80F82430 		strb	r3, [r0, #36]
 749:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3528              		.loc 1 749 7 is_stmt 1 view .LVU1196
 749:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3529              		.loc 1 749 36 is_stmt 0 view .LVU1197
 3530 0bae 0223     		movs	r3, #2
 3531 0bb0 80F82530 		strb	r3, [r0, #37]
 750:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3532              		.loc 1 750 7 is_stmt 1 view .LVU1198
 750:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3533              		.loc 1 750 36 is_stmt 0 view .LVU1199
 3534 0bb4 0123     		movs	r3, #1
 3535 0bb6 80F82630 		strb	r3, [r0, #38]
 751:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 114


 3536              		.loc 1 751 7 is_stmt 1 view .LVU1200
 751:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3537              		.loc 1 751 36 is_stmt 0 view .LVU1201
 3538 0bba FF23     		movs	r3, #255
 3539 0bbc 80F82A30 		strb	r3, [r0, #42]
 752:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3540              		.loc 1 752 7 is_stmt 1 view .LVU1202
 752:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3541              		.loc 1 752 36 is_stmt 0 view .LVU1203
 3542 0bc0 6423     		movs	r3, #100
 3543 0bc2 80F82B30 		strb	r3, [r0, #43]
 753:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3544              		.loc 1 753 7 is_stmt 1 view .LVU1204
 753:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3545              		.loc 1 753 36 is_stmt 0 view .LVU1205
 3546 0bc6 0823     		movs	r3, #8
 3547 0bc8 0385     		strh	r3, [r0, #40]	@ movhi
 754:Core/Src/main.c ****       break;
 3548              		.loc 1 754 7 is_stmt 1 view .LVU1206
 3549 0bca FFF7FEFF 		bl	LoRa_init
 3550              	.LVL184:
 755:Core/Src/main.c **** 
 3551              		.loc 1 755 7 view .LVU1207
 3552 0bce FFF764BB 		b	.L80
 3553              	.L98:
 759:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_11;            // default = SF_7
 3554              		.loc 1 759 7 view .LVU1208
 759:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_11;            // default = SF_7
 3555              		.loc 1 759 36 is_stmt 0 view .LVU1209
 3556 0bd2 3248     		ldr	r0, .L155
 3557 0bd4 40F2B113 		movw	r3, #433
 3558 0bd8 0362     		str	r3, [r0, #32]
 760:Core/Src/main.c ****       myLoRa.bandWidth             = BW_20_8KHz;       // default = BW_125KHz
 3559              		.loc 1 760 7 is_stmt 1 view .LVU1210
 760:Core/Src/main.c ****       myLoRa.bandWidth             = BW_20_8KHz;       // default = BW_125KHz
 3560              		.loc 1 760 36 is_stmt 0 view .LVU1211
 3561 0bda 0B23     		movs	r3, #11
 3562 0bdc 80F82430 		strb	r3, [r0, #36]
 761:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3563              		.loc 1 761 7 is_stmt 1 view .LVU1212
 761:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3564              		.loc 1 761 36 is_stmt 0 view .LVU1213
 3565 0be0 0323     		movs	r3, #3
 3566 0be2 80F82530 		strb	r3, [r0, #37]
 762:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3567              		.loc 1 762 7 is_stmt 1 view .LVU1214
 762:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3568              		.loc 1 762 36 is_stmt 0 view .LVU1215
 3569 0be6 0123     		movs	r3, #1
 3570 0be8 80F82630 		strb	r3, [r0, #38]
 763:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3571              		.loc 1 763 7 is_stmt 1 view .LVU1216
 763:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3572              		.loc 1 763 36 is_stmt 0 view .LVU1217
 3573 0bec FF23     		movs	r3, #255
 3574 0bee 80F82A30 		strb	r3, [r0, #42]
 764:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 115


 3575              		.loc 1 764 7 is_stmt 1 view .LVU1218
 764:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3576              		.loc 1 764 36 is_stmt 0 view .LVU1219
 3577 0bf2 6423     		movs	r3, #100
 3578 0bf4 80F82B30 		strb	r3, [r0, #43]
 765:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3579              		.loc 1 765 7 is_stmt 1 view .LVU1220
 765:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3580              		.loc 1 765 36 is_stmt 0 view .LVU1221
 3581 0bf8 0823     		movs	r3, #8
 3582 0bfa 0385     		strh	r3, [r0, #40]	@ movhi
 766:Core/Src/main.c ****       break;
 3583              		.loc 1 766 7 is_stmt 1 view .LVU1222
 3584 0bfc FFF7FEFF 		bl	LoRa_init
 3585              	.LVL185:
 767:Core/Src/main.c **** 
 3586              		.loc 1 767 7 view .LVU1223
 3587 0c00 FFF74BBB 		b	.L80
 3588              	.L97:
 771:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_11;            // default = SF_7
 3589              		.loc 1 771 7 view .LVU1224
 771:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_11;            // default = SF_7
 3590              		.loc 1 771 36 is_stmt 0 view .LVU1225
 3591 0c04 2548     		ldr	r0, .L155
 3592 0c06 40F2B113 		movw	r3, #433
 3593 0c0a 0362     		str	r3, [r0, #32]
 772:Core/Src/main.c ****       myLoRa.bandWidth             = BW_31_25KHz;       // default = BW_125KHz
 3594              		.loc 1 772 7 is_stmt 1 view .LVU1226
 772:Core/Src/main.c ****       myLoRa.bandWidth             = BW_31_25KHz;       // default = BW_125KHz
 3595              		.loc 1 772 36 is_stmt 0 view .LVU1227
 3596 0c0c 0B23     		movs	r3, #11
 3597 0c0e 80F82430 		strb	r3, [r0, #36]
 773:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3598              		.loc 1 773 7 is_stmt 1 view .LVU1228
 773:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3599              		.loc 1 773 36 is_stmt 0 view .LVU1229
 3600 0c12 0423     		movs	r3, #4
 3601 0c14 80F82530 		strb	r3, [r0, #37]
 774:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3602              		.loc 1 774 7 is_stmt 1 view .LVU1230
 774:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3603              		.loc 1 774 36 is_stmt 0 view .LVU1231
 3604 0c18 0123     		movs	r3, #1
 3605 0c1a 80F82630 		strb	r3, [r0, #38]
 775:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3606              		.loc 1 775 7 is_stmt 1 view .LVU1232
 775:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3607              		.loc 1 775 36 is_stmt 0 view .LVU1233
 3608 0c1e FF23     		movs	r3, #255
 3609 0c20 80F82A30 		strb	r3, [r0, #42]
 776:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3610              		.loc 1 776 7 is_stmt 1 view .LVU1234
 776:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3611              		.loc 1 776 36 is_stmt 0 view .LVU1235
 3612 0c24 6423     		movs	r3, #100
 3613 0c26 80F82B30 		strb	r3, [r0, #43]
 777:Core/Src/main.c ****       LoRa_init(&myLoRa);
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 116


 3614              		.loc 1 777 7 is_stmt 1 view .LVU1236
 777:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3615              		.loc 1 777 36 is_stmt 0 view .LVU1237
 3616 0c2a 0823     		movs	r3, #8
 3617 0c2c 0385     		strh	r3, [r0, #40]	@ movhi
 778:Core/Src/main.c ****       break;
 3618              		.loc 1 778 7 is_stmt 1 view .LVU1238
 3619 0c2e FFF7FEFF 		bl	LoRa_init
 3620              	.LVL186:
 779:Core/Src/main.c **** 
 3621              		.loc 1 779 7 view .LVU1239
 3622 0c32 FFF732BB 		b	.L80
 3623              	.L96:
 783:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_11;            // default = SF_7
 3624              		.loc 1 783 7 view .LVU1240
 783:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_11;            // default = SF_7
 3625              		.loc 1 783 36 is_stmt 0 view .LVU1241
 3626 0c36 1948     		ldr	r0, .L155
 3627 0c38 40F2B113 		movw	r3, #433
 3628 0c3c 0362     		str	r3, [r0, #32]
 784:Core/Src/main.c ****       myLoRa.bandWidth             = BW_41_7KHz;       // default = BW_125KHz
 3629              		.loc 1 784 7 is_stmt 1 view .LVU1242
 784:Core/Src/main.c ****       myLoRa.bandWidth             = BW_41_7KHz;       // default = BW_125KHz
 3630              		.loc 1 784 36 is_stmt 0 view .LVU1243
 3631 0c3e 0B23     		movs	r3, #11
 3632 0c40 80F82430 		strb	r3, [r0, #36]
 785:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3633              		.loc 1 785 7 is_stmt 1 view .LVU1244
 785:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3634              		.loc 1 785 36 is_stmt 0 view .LVU1245
 3635 0c44 0523     		movs	r3, #5
 3636 0c46 80F82530 		strb	r3, [r0, #37]
 786:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3637              		.loc 1 786 7 is_stmt 1 view .LVU1246
 786:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3638              		.loc 1 786 36 is_stmt 0 view .LVU1247
 3639 0c4a 0123     		movs	r3, #1
 3640 0c4c 80F82630 		strb	r3, [r0, #38]
 787:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3641              		.loc 1 787 7 is_stmt 1 view .LVU1248
 787:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3642              		.loc 1 787 36 is_stmt 0 view .LVU1249
 3643 0c50 FF23     		movs	r3, #255
 3644 0c52 80F82A30 		strb	r3, [r0, #42]
 788:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3645              		.loc 1 788 7 is_stmt 1 view .LVU1250
 788:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3646              		.loc 1 788 36 is_stmt 0 view .LVU1251
 3647 0c56 6423     		movs	r3, #100
 3648 0c58 80F82B30 		strb	r3, [r0, #43]
 789:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3649              		.loc 1 789 7 is_stmt 1 view .LVU1252
 789:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3650              		.loc 1 789 36 is_stmt 0 view .LVU1253
 3651 0c5c 0823     		movs	r3, #8
 3652 0c5e 0385     		strh	r3, [r0, #40]	@ movhi
 790:Core/Src/main.c ****       break;
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 117


 3653              		.loc 1 790 7 is_stmt 1 view .LVU1254
 3654 0c60 FFF7FEFF 		bl	LoRa_init
 3655              	.LVL187:
 791:Core/Src/main.c **** 
 3656              		.loc 1 791 7 view .LVU1255
 3657 0c64 FFF719BB 		b	.L80
 3658              	.L95:
 795:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_11;            // default = SF_7
 3659              		.loc 1 795 7 view .LVU1256
 795:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_11;            // default = SF_7
 3660              		.loc 1 795 36 is_stmt 0 view .LVU1257
 3661 0c68 0C48     		ldr	r0, .L155
 3662 0c6a 40F2B113 		movw	r3, #433
 3663 0c6e 0362     		str	r3, [r0, #32]
 796:Core/Src/main.c ****       myLoRa.bandWidth             = BW_62_5KHz;       // default = BW_125KHz
 3664              		.loc 1 796 7 is_stmt 1 view .LVU1258
 796:Core/Src/main.c ****       myLoRa.bandWidth             = BW_62_5KHz;       // default = BW_125KHz
 3665              		.loc 1 796 36 is_stmt 0 view .LVU1259
 3666 0c70 0B23     		movs	r3, #11
 3667 0c72 80F82430 		strb	r3, [r0, #36]
 797:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3668              		.loc 1 797 7 is_stmt 1 view .LVU1260
 797:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3669              		.loc 1 797 36 is_stmt 0 view .LVU1261
 3670 0c76 0623     		movs	r3, #6
 3671 0c78 80F82530 		strb	r3, [r0, #37]
 798:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3672              		.loc 1 798 7 is_stmt 1 view .LVU1262
 798:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3673              		.loc 1 798 36 is_stmt 0 view .LVU1263
 3674 0c7c 0123     		movs	r3, #1
 3675 0c7e 80F82630 		strb	r3, [r0, #38]
 799:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3676              		.loc 1 799 7 is_stmt 1 view .LVU1264
 799:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3677              		.loc 1 799 36 is_stmt 0 view .LVU1265
 3678 0c82 FF23     		movs	r3, #255
 3679 0c84 80F82A30 		strb	r3, [r0, #42]
 800:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3680              		.loc 1 800 7 is_stmt 1 view .LVU1266
 800:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3681              		.loc 1 800 36 is_stmt 0 view .LVU1267
 3682 0c88 6423     		movs	r3, #100
 3683 0c8a 80F82B30 		strb	r3, [r0, #43]
 801:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3684              		.loc 1 801 7 is_stmt 1 view .LVU1268
 801:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3685              		.loc 1 801 36 is_stmt 0 view .LVU1269
 3686 0c8e 0823     		movs	r3, #8
 3687 0c90 0385     		strh	r3, [r0, #40]	@ movhi
 802:Core/Src/main.c ****       break;
 3688              		.loc 1 802 7 is_stmt 1 view .LVU1270
 3689 0c92 FFF7FEFF 		bl	LoRa_init
 3690              	.LVL188:
 803:Core/Src/main.c **** 
 3691              		.loc 1 803 7 view .LVU1271
 3692 0c96 FFF700BB 		b	.L80
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 118


 3693              	.L156:
 3694 0c9a 00BF     		.align	2
 3695              	.L155:
 3696 0c9c 00000000 		.word	myLoRa
 3697              	.L94:
 807:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_11;            // default = SF_7
 3698              		.loc 1 807 7 view .LVU1272
 807:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_11;            // default = SF_7
 3699              		.loc 1 807 36 is_stmt 0 view .LVU1273
 3700 0ca0 A048     		ldr	r0, .L157
 3701 0ca2 40F2B113 		movw	r3, #433
 3702 0ca6 0362     		str	r3, [r0, #32]
 808:Core/Src/main.c ****       myLoRa.bandWidth             = BW_125KHz;       // default = BW_125KHz
 3703              		.loc 1 808 7 is_stmt 1 view .LVU1274
 808:Core/Src/main.c ****       myLoRa.bandWidth             = BW_125KHz;       // default = BW_125KHz
 3704              		.loc 1 808 36 is_stmt 0 view .LVU1275
 3705 0ca8 0B23     		movs	r3, #11
 3706 0caa 80F82430 		strb	r3, [r0, #36]
 809:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3707              		.loc 1 809 7 is_stmt 1 view .LVU1276
 809:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3708              		.loc 1 809 36 is_stmt 0 view .LVU1277
 3709 0cae 0723     		movs	r3, #7
 3710 0cb0 80F82530 		strb	r3, [r0, #37]
 810:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3711              		.loc 1 810 7 is_stmt 1 view .LVU1278
 810:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3712              		.loc 1 810 36 is_stmt 0 view .LVU1279
 3713 0cb4 0123     		movs	r3, #1
 3714 0cb6 80F82630 		strb	r3, [r0, #38]
 811:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3715              		.loc 1 811 7 is_stmt 1 view .LVU1280
 811:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3716              		.loc 1 811 36 is_stmt 0 view .LVU1281
 3717 0cba FF23     		movs	r3, #255
 3718 0cbc 80F82A30 		strb	r3, [r0, #42]
 812:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3719              		.loc 1 812 7 is_stmt 1 view .LVU1282
 812:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3720              		.loc 1 812 36 is_stmt 0 view .LVU1283
 3721 0cc0 6423     		movs	r3, #100
 3722 0cc2 80F82B30 		strb	r3, [r0, #43]
 813:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3723              		.loc 1 813 7 is_stmt 1 view .LVU1284
 813:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3724              		.loc 1 813 36 is_stmt 0 view .LVU1285
 3725 0cc6 0823     		movs	r3, #8
 3726 0cc8 0385     		strh	r3, [r0, #40]	@ movhi
 814:Core/Src/main.c ****       break;
 3727              		.loc 1 814 7 is_stmt 1 view .LVU1286
 3728 0cca FFF7FEFF 		bl	LoRa_init
 3729              	.LVL189:
 815:Core/Src/main.c **** 
 3730              		.loc 1 815 7 view .LVU1287
 3731 0cce FFF7E4BA 		b	.L80
 3732              	.L93:
 819:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_11;            // default = SF_7
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 119


 3733              		.loc 1 819 7 view .LVU1288
 819:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_11;            // default = SF_7
 3734              		.loc 1 819 36 is_stmt 0 view .LVU1289
 3735 0cd2 9448     		ldr	r0, .L157
 3736 0cd4 40F2B113 		movw	r3, #433
 3737 0cd8 0362     		str	r3, [r0, #32]
 820:Core/Src/main.c ****       myLoRa.bandWidth             = BW_250KHz;       // default = BW_125KHz
 3738              		.loc 1 820 7 is_stmt 1 view .LVU1290
 820:Core/Src/main.c ****       myLoRa.bandWidth             = BW_250KHz;       // default = BW_125KHz
 3739              		.loc 1 820 36 is_stmt 0 view .LVU1291
 3740 0cda 0B23     		movs	r3, #11
 3741 0cdc 80F82430 		strb	r3, [r0, #36]
 821:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3742              		.loc 1 821 7 is_stmt 1 view .LVU1292
 821:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3743              		.loc 1 821 36 is_stmt 0 view .LVU1293
 3744 0ce0 0823     		movs	r3, #8
 3745 0ce2 80F82530 		strb	r3, [r0, #37]
 822:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3746              		.loc 1 822 7 is_stmt 1 view .LVU1294
 822:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3747              		.loc 1 822 36 is_stmt 0 view .LVU1295
 3748 0ce6 0122     		movs	r2, #1
 3749 0ce8 80F82620 		strb	r2, [r0, #38]
 823:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3750              		.loc 1 823 7 is_stmt 1 view .LVU1296
 823:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3751              		.loc 1 823 36 is_stmt 0 view .LVU1297
 3752 0cec FF22     		movs	r2, #255
 3753 0cee 80F82A20 		strb	r2, [r0, #42]
 824:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3754              		.loc 1 824 7 is_stmt 1 view .LVU1298
 824:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3755              		.loc 1 824 36 is_stmt 0 view .LVU1299
 3756 0cf2 6422     		movs	r2, #100
 3757 0cf4 80F82B20 		strb	r2, [r0, #43]
 825:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3758              		.loc 1 825 7 is_stmt 1 view .LVU1300
 825:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3759              		.loc 1 825 36 is_stmt 0 view .LVU1301
 3760 0cf8 0385     		strh	r3, [r0, #40]	@ movhi
 826:Core/Src/main.c ****       break;
 3761              		.loc 1 826 7 is_stmt 1 view .LVU1302
 3762 0cfa FFF7FEFF 		bl	LoRa_init
 3763              	.LVL190:
 827:Core/Src/main.c **** 
 3764              		.loc 1 827 7 view .LVU1303
 3765 0cfe FFF7CCBA 		b	.L80
 3766              	.L92:
 831:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_11;            // default = SF_7
 3767              		.loc 1 831 7 view .LVU1304
 831:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_11;            // default = SF_7
 3768              		.loc 1 831 36 is_stmt 0 view .LVU1305
 3769 0d02 8848     		ldr	r0, .L157
 3770 0d04 40F2B113 		movw	r3, #433
 3771 0d08 0362     		str	r3, [r0, #32]
 832:Core/Src/main.c ****       myLoRa.bandWidth             = BW_500KHz;       // default = BW_125KHz
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 120


 3772              		.loc 1 832 7 is_stmt 1 view .LVU1306
 832:Core/Src/main.c ****       myLoRa.bandWidth             = BW_500KHz;       // default = BW_125KHz
 3773              		.loc 1 832 36 is_stmt 0 view .LVU1307
 3774 0d0a 0B23     		movs	r3, #11
 3775 0d0c 80F82430 		strb	r3, [r0, #36]
 833:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3776              		.loc 1 833 7 is_stmt 1 view .LVU1308
 833:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3777              		.loc 1 833 36 is_stmt 0 view .LVU1309
 3778 0d10 0923     		movs	r3, #9
 3779 0d12 80F82530 		strb	r3, [r0, #37]
 834:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3780              		.loc 1 834 7 is_stmt 1 view .LVU1310
 834:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3781              		.loc 1 834 36 is_stmt 0 view .LVU1311
 3782 0d16 0123     		movs	r3, #1
 3783 0d18 80F82630 		strb	r3, [r0, #38]
 835:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3784              		.loc 1 835 7 is_stmt 1 view .LVU1312
 835:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3785              		.loc 1 835 36 is_stmt 0 view .LVU1313
 3786 0d1c FF23     		movs	r3, #255
 3787 0d1e 80F82A30 		strb	r3, [r0, #42]
 836:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3788              		.loc 1 836 7 is_stmt 1 view .LVU1314
 836:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3789              		.loc 1 836 36 is_stmt 0 view .LVU1315
 3790 0d22 6423     		movs	r3, #100
 3791 0d24 80F82B30 		strb	r3, [r0, #43]
 837:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3792              		.loc 1 837 7 is_stmt 1 view .LVU1316
 837:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3793              		.loc 1 837 36 is_stmt 0 view .LVU1317
 3794 0d28 0823     		movs	r3, #8
 3795 0d2a 0385     		strh	r3, [r0, #40]	@ movhi
 838:Core/Src/main.c ****       break;
 3796              		.loc 1 838 7 is_stmt 1 view .LVU1318
 3797 0d2c FFF7FEFF 		bl	LoRa_init
 3798              	.LVL191:
 839:Core/Src/main.c **** 
 3799              		.loc 1 839 7 view .LVU1319
 3800 0d30 FFF7B3BA 		b	.L80
 3801              	.L91:
 843:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_12;            // default = SF_7
 3802              		.loc 1 843 7 view .LVU1320
 843:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_12;            // default = SF_7
 3803              		.loc 1 843 36 is_stmt 0 view .LVU1321
 3804 0d34 7B48     		ldr	r0, .L157
 3805 0d36 40F2B113 		movw	r3, #433
 3806 0d3a 0362     		str	r3, [r0, #32]
 844:Core/Src/main.c ****       myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 3807              		.loc 1 844 7 is_stmt 1 view .LVU1322
 844:Core/Src/main.c ****       myLoRa.bandWidth             = BW_7_8KHz;       // default = BW_125KHz
 3808              		.loc 1 844 36 is_stmt 0 view .LVU1323
 3809 0d3c 0C23     		movs	r3, #12
 3810 0d3e 80F82430 		strb	r3, [r0, #36]
 845:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 121


 3811              		.loc 1 845 7 is_stmt 1 view .LVU1324
 845:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3812              		.loc 1 845 36 is_stmt 0 view .LVU1325
 3813 0d42 0023     		movs	r3, #0
 3814 0d44 80F82530 		strb	r3, [r0, #37]
 846:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3815              		.loc 1 846 7 is_stmt 1 view .LVU1326
 846:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3816              		.loc 1 846 36 is_stmt 0 view .LVU1327
 3817 0d48 0123     		movs	r3, #1
 3818 0d4a 80F82630 		strb	r3, [r0, #38]
 847:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3819              		.loc 1 847 7 is_stmt 1 view .LVU1328
 847:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3820              		.loc 1 847 36 is_stmt 0 view .LVU1329
 3821 0d4e FF23     		movs	r3, #255
 3822 0d50 80F82A30 		strb	r3, [r0, #42]
 848:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3823              		.loc 1 848 7 is_stmt 1 view .LVU1330
 848:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3824              		.loc 1 848 36 is_stmt 0 view .LVU1331
 3825 0d54 6423     		movs	r3, #100
 3826 0d56 80F82B30 		strb	r3, [r0, #43]
 849:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3827              		.loc 1 849 7 is_stmt 1 view .LVU1332
 849:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3828              		.loc 1 849 36 is_stmt 0 view .LVU1333
 3829 0d5a 0823     		movs	r3, #8
 3830 0d5c 0385     		strh	r3, [r0, #40]	@ movhi
 850:Core/Src/main.c ****       break;
 3831              		.loc 1 850 7 is_stmt 1 view .LVU1334
 3832 0d5e FFF7FEFF 		bl	LoRa_init
 3833              	.LVL192:
 851:Core/Src/main.c **** 
 3834              		.loc 1 851 7 view .LVU1335
 3835 0d62 FFF79ABA 		b	.L80
 3836              	.L90:
 855:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_12;            // default = SF_7
 3837              		.loc 1 855 7 view .LVU1336
 855:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_12;            // default = SF_7
 3838              		.loc 1 855 36 is_stmt 0 view .LVU1337
 3839 0d66 6F48     		ldr	r0, .L157
 3840 0d68 40F2B113 		movw	r3, #433
 3841 0d6c 0362     		str	r3, [r0, #32]
 856:Core/Src/main.c ****       myLoRa.bandWidth             = BW_10_4KHz;       // default = BW_125KHz
 3842              		.loc 1 856 7 is_stmt 1 view .LVU1338
 856:Core/Src/main.c ****       myLoRa.bandWidth             = BW_10_4KHz;       // default = BW_125KHz
 3843              		.loc 1 856 36 is_stmt 0 view .LVU1339
 3844 0d6e 0C23     		movs	r3, #12
 3845 0d70 80F82430 		strb	r3, [r0, #36]
 857:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3846              		.loc 1 857 7 is_stmt 1 view .LVU1340
 857:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3847              		.loc 1 857 36 is_stmt 0 view .LVU1341
 3848 0d74 0123     		movs	r3, #1
 3849 0d76 80F82530 		strb	r3, [r0, #37]
 858:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 122


 3850              		.loc 1 858 7 is_stmt 1 view .LVU1342
 858:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3851              		.loc 1 858 36 is_stmt 0 view .LVU1343
 3852 0d7a 80F82630 		strb	r3, [r0, #38]
 859:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3853              		.loc 1 859 7 is_stmt 1 view .LVU1344
 859:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3854              		.loc 1 859 36 is_stmt 0 view .LVU1345
 3855 0d7e FF23     		movs	r3, #255
 3856 0d80 80F82A30 		strb	r3, [r0, #42]
 860:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3857              		.loc 1 860 7 is_stmt 1 view .LVU1346
 860:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3858              		.loc 1 860 36 is_stmt 0 view .LVU1347
 3859 0d84 6423     		movs	r3, #100
 3860 0d86 80F82B30 		strb	r3, [r0, #43]
 861:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3861              		.loc 1 861 7 is_stmt 1 view .LVU1348
 861:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3862              		.loc 1 861 36 is_stmt 0 view .LVU1349
 3863 0d8a 0823     		movs	r3, #8
 3864 0d8c 0385     		strh	r3, [r0, #40]	@ movhi
 862:Core/Src/main.c ****       break;
 3865              		.loc 1 862 7 is_stmt 1 view .LVU1350
 3866 0d8e FFF7FEFF 		bl	LoRa_init
 3867              	.LVL193:
 863:Core/Src/main.c **** 
 3868              		.loc 1 863 7 view .LVU1351
 3869 0d92 FFF782BA 		b	.L80
 3870              	.L89:
 867:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_12;            // default = SF_7
 3871              		.loc 1 867 7 view .LVU1352
 867:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_12;            // default = SF_7
 3872              		.loc 1 867 36 is_stmt 0 view .LVU1353
 3873 0d96 6348     		ldr	r0, .L157
 3874 0d98 40F2B113 		movw	r3, #433
 3875 0d9c 0362     		str	r3, [r0, #32]
 868:Core/Src/main.c ****       myLoRa.bandWidth             = BW_15_6KHz;       // default = BW_125KHz
 3876              		.loc 1 868 7 is_stmt 1 view .LVU1354
 868:Core/Src/main.c ****       myLoRa.bandWidth             = BW_15_6KHz;       // default = BW_125KHz
 3877              		.loc 1 868 36 is_stmt 0 view .LVU1355
 3878 0d9e 0C23     		movs	r3, #12
 3879 0da0 80F82430 		strb	r3, [r0, #36]
 869:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3880              		.loc 1 869 7 is_stmt 1 view .LVU1356
 869:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3881              		.loc 1 869 36 is_stmt 0 view .LVU1357
 3882 0da4 0223     		movs	r3, #2
 3883 0da6 80F82530 		strb	r3, [r0, #37]
 870:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3884              		.loc 1 870 7 is_stmt 1 view .LVU1358
 870:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3885              		.loc 1 870 36 is_stmt 0 view .LVU1359
 3886 0daa 0123     		movs	r3, #1
 3887 0dac 80F82630 		strb	r3, [r0, #38]
 871:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3888              		.loc 1 871 7 is_stmt 1 view .LVU1360
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 123


 871:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3889              		.loc 1 871 36 is_stmt 0 view .LVU1361
 3890 0db0 FF23     		movs	r3, #255
 3891 0db2 80F82A30 		strb	r3, [r0, #42]
 872:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3892              		.loc 1 872 7 is_stmt 1 view .LVU1362
 872:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3893              		.loc 1 872 36 is_stmt 0 view .LVU1363
 3894 0db6 6423     		movs	r3, #100
 3895 0db8 80F82B30 		strb	r3, [r0, #43]
 873:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3896              		.loc 1 873 7 is_stmt 1 view .LVU1364
 873:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3897              		.loc 1 873 36 is_stmt 0 view .LVU1365
 3898 0dbc 0823     		movs	r3, #8
 3899 0dbe 0385     		strh	r3, [r0, #40]	@ movhi
 874:Core/Src/main.c ****       break;
 3900              		.loc 1 874 7 is_stmt 1 view .LVU1366
 3901 0dc0 FFF7FEFF 		bl	LoRa_init
 3902              	.LVL194:
 875:Core/Src/main.c **** 
 3903              		.loc 1 875 7 view .LVU1367
 3904 0dc4 FFF769BA 		b	.L80
 3905              	.L88:
 879:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_12;            // default = SF_7
 3906              		.loc 1 879 7 view .LVU1368
 879:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_12;            // default = SF_7
 3907              		.loc 1 879 36 is_stmt 0 view .LVU1369
 3908 0dc8 5648     		ldr	r0, .L157
 3909 0dca 40F2B113 		movw	r3, #433
 3910 0dce 0362     		str	r3, [r0, #32]
 880:Core/Src/main.c ****       myLoRa.bandWidth             = BW_20_8KHz;       // default = BW_125KHz
 3911              		.loc 1 880 7 is_stmt 1 view .LVU1370
 880:Core/Src/main.c ****       myLoRa.bandWidth             = BW_20_8KHz;       // default = BW_125KHz
 3912              		.loc 1 880 36 is_stmt 0 view .LVU1371
 3913 0dd0 0C23     		movs	r3, #12
 3914 0dd2 80F82430 		strb	r3, [r0, #36]
 881:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3915              		.loc 1 881 7 is_stmt 1 view .LVU1372
 881:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3916              		.loc 1 881 36 is_stmt 0 view .LVU1373
 3917 0dd6 0323     		movs	r3, #3
 3918 0dd8 80F82530 		strb	r3, [r0, #37]
 882:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3919              		.loc 1 882 7 is_stmt 1 view .LVU1374
 882:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3920              		.loc 1 882 36 is_stmt 0 view .LVU1375
 3921 0ddc 0123     		movs	r3, #1
 3922 0dde 80F82630 		strb	r3, [r0, #38]
 883:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3923              		.loc 1 883 7 is_stmt 1 view .LVU1376
 883:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3924              		.loc 1 883 36 is_stmt 0 view .LVU1377
 3925 0de2 FF23     		movs	r3, #255
 3926 0de4 80F82A30 		strb	r3, [r0, #42]
 884:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3927              		.loc 1 884 7 is_stmt 1 view .LVU1378
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 124


 884:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3928              		.loc 1 884 36 is_stmt 0 view .LVU1379
 3929 0de8 6423     		movs	r3, #100
 3930 0dea 80F82B30 		strb	r3, [r0, #43]
 885:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3931              		.loc 1 885 7 is_stmt 1 view .LVU1380
 885:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3932              		.loc 1 885 36 is_stmt 0 view .LVU1381
 3933 0dee 0823     		movs	r3, #8
 3934 0df0 0385     		strh	r3, [r0, #40]	@ movhi
 886:Core/Src/main.c ****       break;
 3935              		.loc 1 886 7 is_stmt 1 view .LVU1382
 3936 0df2 FFF7FEFF 		bl	LoRa_init
 3937              	.LVL195:
 887:Core/Src/main.c **** 
 3938              		.loc 1 887 7 view .LVU1383
 3939 0df6 FFF750BA 		b	.L80
 3940              	.L87:
 891:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_12;            // default = SF_7
 3941              		.loc 1 891 7 view .LVU1384
 891:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_12;            // default = SF_7
 3942              		.loc 1 891 36 is_stmt 0 view .LVU1385
 3943 0dfa 4A48     		ldr	r0, .L157
 3944 0dfc 40F2B113 		movw	r3, #433
 3945 0e00 0362     		str	r3, [r0, #32]
 892:Core/Src/main.c ****       myLoRa.bandWidth             = BW_31_25KHz;       // default = BW_125KHz
 3946              		.loc 1 892 7 is_stmt 1 view .LVU1386
 892:Core/Src/main.c ****       myLoRa.bandWidth             = BW_31_25KHz;       // default = BW_125KHz
 3947              		.loc 1 892 36 is_stmt 0 view .LVU1387
 3948 0e02 0C23     		movs	r3, #12
 3949 0e04 80F82430 		strb	r3, [r0, #36]
 893:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3950              		.loc 1 893 7 is_stmt 1 view .LVU1388
 893:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3951              		.loc 1 893 36 is_stmt 0 view .LVU1389
 3952 0e08 0423     		movs	r3, #4
 3953 0e0a 80F82530 		strb	r3, [r0, #37]
 894:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3954              		.loc 1 894 7 is_stmt 1 view .LVU1390
 894:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3955              		.loc 1 894 36 is_stmt 0 view .LVU1391
 3956 0e0e 0123     		movs	r3, #1
 3957 0e10 80F82630 		strb	r3, [r0, #38]
 895:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3958              		.loc 1 895 7 is_stmt 1 view .LVU1392
 895:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3959              		.loc 1 895 36 is_stmt 0 view .LVU1393
 3960 0e14 FF23     		movs	r3, #255
 3961 0e16 80F82A30 		strb	r3, [r0, #42]
 896:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3962              		.loc 1 896 7 is_stmt 1 view .LVU1394
 896:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3963              		.loc 1 896 36 is_stmt 0 view .LVU1395
 3964 0e1a 6423     		movs	r3, #100
 3965 0e1c 80F82B30 		strb	r3, [r0, #43]
 897:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3966              		.loc 1 897 7 is_stmt 1 view .LVU1396
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 125


 897:Core/Src/main.c ****       LoRa_init(&myLoRa);
 3967              		.loc 1 897 36 is_stmt 0 view .LVU1397
 3968 0e20 0823     		movs	r3, #8
 3969 0e22 0385     		strh	r3, [r0, #40]	@ movhi
 898:Core/Src/main.c ****       break;
 3970              		.loc 1 898 7 is_stmt 1 view .LVU1398
 3971 0e24 FFF7FEFF 		bl	LoRa_init
 3972              	.LVL196:
 899:Core/Src/main.c **** 
 3973              		.loc 1 899 7 view .LVU1399
 3974 0e28 FFF737BA 		b	.L80
 3975              	.L86:
 903:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_12;            // default = SF_7
 3976              		.loc 1 903 7 view .LVU1400
 903:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_12;            // default = SF_7
 3977              		.loc 1 903 36 is_stmt 0 view .LVU1401
 3978 0e2c 3D48     		ldr	r0, .L157
 3979 0e2e 40F2B113 		movw	r3, #433
 3980 0e32 0362     		str	r3, [r0, #32]
 904:Core/Src/main.c ****       myLoRa.bandWidth             = BW_41_7KHz;       // default = BW_125KHz
 3981              		.loc 1 904 7 is_stmt 1 view .LVU1402
 904:Core/Src/main.c ****       myLoRa.bandWidth             = BW_41_7KHz;       // default = BW_125KHz
 3982              		.loc 1 904 36 is_stmt 0 view .LVU1403
 3983 0e34 0C23     		movs	r3, #12
 3984 0e36 80F82430 		strb	r3, [r0, #36]
 905:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3985              		.loc 1 905 7 is_stmt 1 view .LVU1404
 905:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 3986              		.loc 1 905 36 is_stmt 0 view .LVU1405
 3987 0e3a 0523     		movs	r3, #5
 3988 0e3c 80F82530 		strb	r3, [r0, #37]
 906:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3989              		.loc 1 906 7 is_stmt 1 view .LVU1406
 906:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 3990              		.loc 1 906 36 is_stmt 0 view .LVU1407
 3991 0e40 0123     		movs	r3, #1
 3992 0e42 80F82630 		strb	r3, [r0, #38]
 907:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3993              		.loc 1 907 7 is_stmt 1 view .LVU1408
 907:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 3994              		.loc 1 907 36 is_stmt 0 view .LVU1409
 3995 0e46 FF23     		movs	r3, #255
 3996 0e48 80F82A30 		strb	r3, [r0, #42]
 908:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3997              		.loc 1 908 7 is_stmt 1 view .LVU1410
 908:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 3998              		.loc 1 908 36 is_stmt 0 view .LVU1411
 3999 0e4c 6423     		movs	r3, #100
 4000 0e4e 80F82B30 		strb	r3, [r0, #43]
 909:Core/Src/main.c ****       LoRa_init(&myLoRa);
 4001              		.loc 1 909 7 is_stmt 1 view .LVU1412
 909:Core/Src/main.c ****       LoRa_init(&myLoRa);
 4002              		.loc 1 909 36 is_stmt 0 view .LVU1413
 4003 0e52 0823     		movs	r3, #8
 4004 0e54 0385     		strh	r3, [r0, #40]	@ movhi
 910:Core/Src/main.c ****       break;
 4005              		.loc 1 910 7 is_stmt 1 view .LVU1414
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 126


 4006 0e56 FFF7FEFF 		bl	LoRa_init
 4007              	.LVL197:
 911:Core/Src/main.c **** 
 4008              		.loc 1 911 7 view .LVU1415
 4009 0e5a FFF71EBA 		b	.L80
 4010              	.L85:
 915:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_12;            // default = SF_7
 4011              		.loc 1 915 7 view .LVU1416
 915:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_12;            // default = SF_7
 4012              		.loc 1 915 36 is_stmt 0 view .LVU1417
 4013 0e5e 3148     		ldr	r0, .L157
 4014 0e60 40F2B113 		movw	r3, #433
 4015 0e64 0362     		str	r3, [r0, #32]
 916:Core/Src/main.c ****       myLoRa.bandWidth             = BW_62_5KHz;       // default = BW_125KHz
 4016              		.loc 1 916 7 is_stmt 1 view .LVU1418
 916:Core/Src/main.c ****       myLoRa.bandWidth             = BW_62_5KHz;       // default = BW_125KHz
 4017              		.loc 1 916 36 is_stmt 0 view .LVU1419
 4018 0e66 0C23     		movs	r3, #12
 4019 0e68 80F82430 		strb	r3, [r0, #36]
 917:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 4020              		.loc 1 917 7 is_stmt 1 view .LVU1420
 917:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 4021              		.loc 1 917 36 is_stmt 0 view .LVU1421
 4022 0e6c 0623     		movs	r3, #6
 4023 0e6e 80F82530 		strb	r3, [r0, #37]
 918:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 4024              		.loc 1 918 7 is_stmt 1 view .LVU1422
 918:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 4025              		.loc 1 918 36 is_stmt 0 view .LVU1423
 4026 0e72 0123     		movs	r3, #1
 4027 0e74 80F82630 		strb	r3, [r0, #38]
 919:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 4028              		.loc 1 919 7 is_stmt 1 view .LVU1424
 919:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 4029              		.loc 1 919 36 is_stmt 0 view .LVU1425
 4030 0e78 FF23     		movs	r3, #255
 4031 0e7a 80F82A30 		strb	r3, [r0, #42]
 920:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 4032              		.loc 1 920 7 is_stmt 1 view .LVU1426
 920:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 4033              		.loc 1 920 36 is_stmt 0 view .LVU1427
 4034 0e7e 6423     		movs	r3, #100
 4035 0e80 80F82B30 		strb	r3, [r0, #43]
 921:Core/Src/main.c ****       LoRa_init(&myLoRa);
 4036              		.loc 1 921 7 is_stmt 1 view .LVU1428
 921:Core/Src/main.c ****       LoRa_init(&myLoRa);
 4037              		.loc 1 921 36 is_stmt 0 view .LVU1429
 4038 0e84 0823     		movs	r3, #8
 4039 0e86 0385     		strh	r3, [r0, #40]	@ movhi
 922:Core/Src/main.c ****       break;
 4040              		.loc 1 922 7 is_stmt 1 view .LVU1430
 4041 0e88 FFF7FEFF 		bl	LoRa_init
 4042              	.LVL198:
 923:Core/Src/main.c **** 
 4043              		.loc 1 923 7 view .LVU1431
 4044 0e8c FFF705BA 		b	.L80
 4045              	.L84:
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 127


 927:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_12;            // default = SF_7
 4046              		.loc 1 927 7 view .LVU1432
 927:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_12;            // default = SF_7
 4047              		.loc 1 927 36 is_stmt 0 view .LVU1433
 4048 0e90 2448     		ldr	r0, .L157
 4049 0e92 40F2B113 		movw	r3, #433
 4050 0e96 0362     		str	r3, [r0, #32]
 928:Core/Src/main.c ****       myLoRa.bandWidth             = BW_125KHz;       // default = BW_125KHz
 4051              		.loc 1 928 7 is_stmt 1 view .LVU1434
 928:Core/Src/main.c ****       myLoRa.bandWidth             = BW_125KHz;       // default = BW_125KHz
 4052              		.loc 1 928 36 is_stmt 0 view .LVU1435
 4053 0e98 0C23     		movs	r3, #12
 4054 0e9a 80F82430 		strb	r3, [r0, #36]
 929:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 4055              		.loc 1 929 7 is_stmt 1 view .LVU1436
 929:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 4056              		.loc 1 929 36 is_stmt 0 view .LVU1437
 4057 0e9e 0723     		movs	r3, #7
 4058 0ea0 80F82530 		strb	r3, [r0, #37]
 930:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 4059              		.loc 1 930 7 is_stmt 1 view .LVU1438
 930:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 4060              		.loc 1 930 36 is_stmt 0 view .LVU1439
 4061 0ea4 0123     		movs	r3, #1
 4062 0ea6 80F82630 		strb	r3, [r0, #38]
 931:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 4063              		.loc 1 931 7 is_stmt 1 view .LVU1440
 931:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 4064              		.loc 1 931 36 is_stmt 0 view .LVU1441
 4065 0eaa FF23     		movs	r3, #255
 4066 0eac 80F82A30 		strb	r3, [r0, #42]
 932:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 4067              		.loc 1 932 7 is_stmt 1 view .LVU1442
 932:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 4068              		.loc 1 932 36 is_stmt 0 view .LVU1443
 4069 0eb0 6423     		movs	r3, #100
 4070 0eb2 80F82B30 		strb	r3, [r0, #43]
 933:Core/Src/main.c ****       LoRa_init(&myLoRa);
 4071              		.loc 1 933 7 is_stmt 1 view .LVU1444
 933:Core/Src/main.c ****       LoRa_init(&myLoRa);
 4072              		.loc 1 933 36 is_stmt 0 view .LVU1445
 4073 0eb6 0823     		movs	r3, #8
 4074 0eb8 0385     		strh	r3, [r0, #40]	@ movhi
 934:Core/Src/main.c ****       break;
 4075              		.loc 1 934 7 is_stmt 1 view .LVU1446
 4076 0eba FFF7FEFF 		bl	LoRa_init
 4077              	.LVL199:
 935:Core/Src/main.c **** 
 4078              		.loc 1 935 7 view .LVU1447
 4079 0ebe FFF7ECB9 		b	.L80
 4080              	.L83:
 939:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_12;            // default = SF_7
 4081              		.loc 1 939 7 view .LVU1448
 939:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_12;            // default = SF_7
 4082              		.loc 1 939 36 is_stmt 0 view .LVU1449
 4083 0ec2 1848     		ldr	r0, .L157
 4084 0ec4 40F2B113 		movw	r3, #433
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 128


 4085 0ec8 0362     		str	r3, [r0, #32]
 940:Core/Src/main.c ****       myLoRa.bandWidth             = BW_250KHz;       // default = BW_125KHz
 4086              		.loc 1 940 7 is_stmt 1 view .LVU1450
 940:Core/Src/main.c ****       myLoRa.bandWidth             = BW_250KHz;       // default = BW_125KHz
 4087              		.loc 1 940 36 is_stmt 0 view .LVU1451
 4088 0eca 0C23     		movs	r3, #12
 4089 0ecc 80F82430 		strb	r3, [r0, #36]
 941:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 4090              		.loc 1 941 7 is_stmt 1 view .LVU1452
 941:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 4091              		.loc 1 941 36 is_stmt 0 view .LVU1453
 4092 0ed0 0823     		movs	r3, #8
 4093 0ed2 80F82530 		strb	r3, [r0, #37]
 942:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 4094              		.loc 1 942 7 is_stmt 1 view .LVU1454
 942:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 4095              		.loc 1 942 36 is_stmt 0 view .LVU1455
 4096 0ed6 0122     		movs	r2, #1
 4097 0ed8 80F82620 		strb	r2, [r0, #38]
 943:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 4098              		.loc 1 943 7 is_stmt 1 view .LVU1456
 943:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 4099              		.loc 1 943 36 is_stmt 0 view .LVU1457
 4100 0edc FF22     		movs	r2, #255
 4101 0ede 80F82A20 		strb	r2, [r0, #42]
 944:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 4102              		.loc 1 944 7 is_stmt 1 view .LVU1458
 944:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 4103              		.loc 1 944 36 is_stmt 0 view .LVU1459
 4104 0ee2 6422     		movs	r2, #100
 4105 0ee4 80F82B20 		strb	r2, [r0, #43]
 945:Core/Src/main.c ****       LoRa_init(&myLoRa);
 4106              		.loc 1 945 7 is_stmt 1 view .LVU1460
 945:Core/Src/main.c ****       LoRa_init(&myLoRa);
 4107              		.loc 1 945 36 is_stmt 0 view .LVU1461
 4108 0ee8 0385     		strh	r3, [r0, #40]	@ movhi
 946:Core/Src/main.c ****       break;
 4109              		.loc 1 946 7 is_stmt 1 view .LVU1462
 4110 0eea FFF7FEFF 		bl	LoRa_init
 4111              	.LVL200:
 947:Core/Src/main.c **** 
 4112              		.loc 1 947 7 view .LVU1463
 4113 0eee FFF7D4B9 		b	.L80
 4114              	.L81:
 951:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_12;            // default = SF_7
 4115              		.loc 1 951 7 view .LVU1464
 951:Core/Src/main.c ****       myLoRa.spredingFactor        = SF_12;            // default = SF_7
 4116              		.loc 1 951 36 is_stmt 0 view .LVU1465
 4117 0ef2 0C48     		ldr	r0, .L157
 4118 0ef4 40F2B113 		movw	r3, #433
 4119 0ef8 0362     		str	r3, [r0, #32]
 952:Core/Src/main.c ****       myLoRa.bandWidth             = BW_500KHz;       // default = BW_125KHz
 4120              		.loc 1 952 7 is_stmt 1 view .LVU1466
 952:Core/Src/main.c ****       myLoRa.bandWidth             = BW_500KHz;       // default = BW_125KHz
 4121              		.loc 1 952 36 is_stmt 0 view .LVU1467
 4122 0efa 0C23     		movs	r3, #12
 4123 0efc 80F82430 		strb	r3, [r0, #36]
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 129


 953:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 4124              		.loc 1 953 7 is_stmt 1 view .LVU1468
 953:Core/Src/main.c ****       myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 4125              		.loc 1 953 36 is_stmt 0 view .LVU1469
 4126 0f00 0923     		movs	r3, #9
 4127 0f02 80F82530 		strb	r3, [r0, #37]
 954:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 4128              		.loc 1 954 7 is_stmt 1 view .LVU1470
 954:Core/Src/main.c ****       myLoRa.power                 = POWER_20db;      // default = 20db
 4129              		.loc 1 954 36 is_stmt 0 view .LVU1471
 4130 0f06 0123     		movs	r3, #1
 4131 0f08 80F82630 		strb	r3, [r0, #38]
 955:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 4132              		.loc 1 955 7 is_stmt 1 view .LVU1472
 955:Core/Src/main.c ****       myLoRa.overCurrentProtection = 100;             // default = 100 mA
 4133              		.loc 1 955 36 is_stmt 0 view .LVU1473
 4134 0f0c FF23     		movs	r3, #255
 4135 0f0e 80F82A30 		strb	r3, [r0, #42]
 956:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 4136              		.loc 1 956 7 is_stmt 1 view .LVU1474
 956:Core/Src/main.c ****       myLoRa.preamble              = 8;              // default = 8;
 4137              		.loc 1 956 36 is_stmt 0 view .LVU1475
 4138 0f12 6423     		movs	r3, #100
 4139 0f14 80F82B30 		strb	r3, [r0, #43]
 957:Core/Src/main.c ****       LoRa_init(&myLoRa);
 4140              		.loc 1 957 7 is_stmt 1 view .LVU1476
 957:Core/Src/main.c ****       LoRa_init(&myLoRa);
 4141              		.loc 1 957 36 is_stmt 0 view .LVU1477
 4142 0f18 0823     		movs	r3, #8
 4143 0f1a 0385     		strh	r3, [r0, #40]	@ movhi
 958:Core/Src/main.c ****       break;
 4144              		.loc 1 958 7 is_stmt 1 view .LVU1478
 4145 0f1c FFF7FEFF 		bl	LoRa_init
 4146              	.LVL201:
 959:Core/Src/main.c **** 
 4147              		.loc 1 959 7 view .LVU1479
 4148 0f20 FFF7BBB9 		b	.L80
 4149              	.L158:
 4150              		.align	2
 4151              	.L157:
 4152 0f24 00000000 		.word	myLoRa
 4153              		.cfi_endproc
 4154              	.LFE138:
 4156              		.global	Data
 4157              		.section	.bss.Data,"aw",%nobits
 4158              		.align	2
 4161              	Data:
 4162 0000 00000000 		.space	256
 4162      00000000 
 4162      00000000 
 4162      00000000 
 4162      00000000 
 4163              		.global	size
 4164              		.section	.bss.size,"aw",%nobits
 4165              		.align	2
 4168              	size:
 4169 0000 00000000 		.space	4
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 130


 4170              		.global	sAltitude
 4171              		.section	.bss.sAltitude,"aw",%nobits
 4172              		.align	2
 4175              	sAltitude:
 4176 0000 00000000 		.space	128
 4176      00000000 
 4176      00000000 
 4176      00000000 
 4176      00000000 
 4177              		.global	sHumidity
 4178              		.section	.bss.sHumidity,"aw",%nobits
 4179              		.align	2
 4182              	sHumidity:
 4183 0000 00000000 		.space	128
 4183      00000000 
 4183      00000000 
 4183      00000000 
 4183      00000000 
 4184              		.global	sTemperature
 4185              		.section	.bss.sTemperature,"aw",%nobits
 4186              		.align	2
 4189              	sTemperature:
 4190 0000 00000000 		.space	128
 4190      00000000 
 4190      00000000 
 4190      00000000 
 4190      00000000 
 4191              		.global	sPressure
 4192              		.section	.bss.sPressure,"aw",%nobits
 4193              		.align	2
 4196              	sPressure:
 4197 0000 00000000 		.space	128
 4197      00000000 
 4197      00000000 
 4197      00000000 
 4197      00000000 
 4198              		.global	humidity
 4199              		.section	.bss.humidity,"aw",%nobits
 4200              		.align	2
 4203              	humidity:
 4204 0000 00000000 		.space	4
 4205              		.global	temperature
 4206              		.section	.bss.temperature,"aw",%nobits
 4207              		.align	2
 4210              	temperature:
 4211 0000 00000000 		.space	4
 4212              		.global	pressure
 4213              		.section	.bss.pressure,"aw",%nobits
 4214              		.align	2
 4217              	pressure:
 4218 0000 00000000 		.space	4
 4219              		.global	bmp280
 4220              		.section	.bss.bmp280,"aw",%nobits
 4221              		.align	2
 4224              	bmp280:
 4225 0000 00000000 		.space	52
 4225      00000000 
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 131


 4225      00000000 
 4225      00000000 
 4225      00000000 
 4226              		.global	altitude
 4227              		.section	.bss.altitude,"aw",%nobits
 4228              		.align	2
 4231              	altitude:
 4232 0000 00000000 		.space	4
 4233              		.global	P_b
 4234              		.section	.data.P_b,"aw"
 4235              		.align	2
 4238              	P_b:
 4239 0000 80E6C547 		.word	1204151936
 4240              		.global	timePre
 4241              		.section	.bss.timePre,"aw",%nobits
 4242              		.align	2
 4245              	timePre:
 4246 0000 00000000 		.space	4
 4247              		.global	timeNow
 4248              		.section	.bss.timeNow,"aw",%nobits
 4249              		.align	2
 4252              	timeNow:
 4253 0000 00000000 		.space	4
 4254              		.global	bModeChanged
 4255              		.section	.bss.bModeChanged,"aw",%nobits
 4258              	bModeChanged:
 4259 0000 00       		.space	1
 4260              		.global	sMode
 4261              		.section	.bss.sMode,"aw",%nobits
 4262              		.align	2
 4265              	sMode:
 4266 0000 00000000 		.space	10
 4266      00000000 
 4266      0000
 4267              		.global	iMode
 4268              		.section	.data.iMode,"aw"
 4269              		.align	2
 4272              	iMode:
 4273 0000 01000000 		.word	1
 4274              		.global	currentTicks
 4275              		.section	.bss.currentTicks,"aw",%nobits
 4276              		.align	2
 4279              	currentTicks:
 4280 0000 00000000 		.space	4
 4281              		.global	preTicks
 4282              		.section	.bss.preTicks,"aw",%nobits
 4283              		.align	2
 4286              	preTicks:
 4287 0000 00000000 		.space	4
 4288              		.global	isLoraReady
 4289              		.section	.data.isLoraReady,"aw"
 4292              	isLoraReady:
 4293 0000 01       		.byte	1
 4294              		.global	myLoRa
 4295              		.section	.bss.myLoRa,"aw",%nobits
 4296              		.align	2
 4299              	myLoRa:
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 132


 4300 0000 00000000 		.space	44
 4300      00000000 
 4300      00000000 
 4300      00000000 
 4300      00000000 
 4301              		.global	transmit_data
 4302              		.section	.bss.transmit_data,"aw",%nobits
 4303              		.align	2
 4306              	transmit_data:
 4307 0000 00000000 		.space	256
 4307      00000000 
 4307      00000000 
 4307      00000000 
 4307      00000000 
 4308              		.global	bme280p
 4309              		.section	.bss.bme280p,"aw",%nobits
 4312              	bme280p:
 4313 0000 00       		.space	1
 4314              		.global	line
 4315              		.section	.bss.line,"aw",%nobits
 4316              		.align	2
 4319              	line:
 4320 0000 00000000 		.space	512
 4320      00000000 
 4320      00000000 
 4320      00000000 
 4320      00000000 
 4321              		.global	line_out
 4322              		.section	.bss.line_out,"aw",%nobits
 4323              		.align	2
 4326              	line_out:
 4327 0000 00000000 		.space	512
 4327      00000000 
 4327      00000000 
 4327      00000000 
 4327      00000000 
 4328              		.global	flag
 4329              		.section	.bss.flag,"aw",%nobits
 4332              	flag:
 4333 0000 00       		.space	1
 4334              		.global	gps_raw
 4335              		.section	.bss.gps_raw,"aw",%nobits
 4336              		.align	2
 4339              	gps_raw:
 4340 0000 00000000 		.space	512
 4340      00000000 
 4340      00000000 
 4340      00000000 
 4340      00000000 
 4341              		.global	huart2
 4342              		.section	.bss.huart2,"aw",%nobits
 4343              		.align	2
 4346              	huart2:
 4347 0000 00000000 		.space	68
 4347      00000000 
 4347      00000000 
 4347      00000000 
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 133


 4347      00000000 
 4348              		.global	huart1
 4349              		.section	.bss.huart1,"aw",%nobits
 4350              		.align	2
 4353              	huart1:
 4354 0000 00000000 		.space	68
 4354      00000000 
 4354      00000000 
 4354      00000000 
 4354      00000000 
 4355              		.global	hspi3
 4356              		.section	.bss.hspi3,"aw",%nobits
 4357              		.align	2
 4360              	hspi3:
 4361 0000 00000000 		.space	88
 4361      00000000 
 4361      00000000 
 4361      00000000 
 4361      00000000 
 4362              		.global	hi2c2
 4363              		.section	.bss.hi2c2,"aw",%nobits
 4364              		.align	2
 4367              	hi2c2:
 4368 0000 00000000 		.space	84
 4368      00000000 
 4368      00000000 
 4368      00000000 
 4368      00000000 
 4369              		.global	hi2c1
 4370              		.section	.bss.hi2c1,"aw",%nobits
 4371              		.align	2
 4374              	hi2c1:
 4375 0000 00000000 		.space	84
 4375      00000000 
 4375      00000000 
 4375      00000000 
 4375      00000000 
 4376              		.text
 4377              	.Letext0:
 4378              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 4379              		.file 5 "/Users/roryschram/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscod
 4380              		.file 6 "/Users/roryschram/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscod
 4381              		.file 7 "/Users/roryschram/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscod
 4382              		.file 8 "/Users/roryschram/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscod
 4383              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 4384              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 4385              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 4386              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 4387              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 4388              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 4389              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 4390              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 4391              		.file 17 "Core/Inc/bmp280.h"
 4392              		.file 18 "Core/Inc/LoRa.h"
 4393              		.file 19 "Core/Inc/fonts.h"
 4394              		.file 20 "Core/Inc/ssd1306.h"
 4395              		.file 21 "/Users/roryschram/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vsco
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 134


 4396              		.file 22 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 4397              		.file 23 "/Users/roryschram/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vsco
 4398              		.file 24 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 4399              		.file 25 "/Users/roryschram/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vsco
 4400              		.file 26 "<built-in>"
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 135


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:21     .text.minmea_rescale:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:26     .text.minmea_rescale:00000000 minmea_rescale
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:97     .text.MX_GPIO_Init:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:102    .text.MX_GPIO_Init:00000000 MX_GPIO_Init
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:326    .text.MX_GPIO_Init:0000011c $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:334    .rodata.HAL_UARTEx_RxEventCallback.str1.4:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:354    .text.HAL_UARTEx_RxEventCallback:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:360    .text.HAL_UARTEx_RxEventCallback:00000000 HAL_UARTEx_RxEventCallback
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:609    .text.HAL_UARTEx_RxEventCallback:00000190 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:4332   .bss.flag:00000000 flag
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:4306   .bss.transmit_data:00000000 transmit_data
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:4339   .bss.gps_raw:00000000 gps_raw
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:4319   .bss.line:00000000 line
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:4168   .bss.size:00000000 size
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:4203   .bss.humidity:00000000 humidity
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:4217   .bss.pressure:00000000 pressure
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:4210   .bss.temperature:00000000 temperature
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:4224   .bss.bmp280:00000000 bmp280
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:4238   .data.P_b:00000000 P_b
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:4231   .bss.altitude:00000000 altitude
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:4196   .bss.sPressure:00000000 sPressure
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:4189   .bss.sTemperature:00000000 sTemperature
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:4182   .bss.sHumidity:00000000 sHumidity
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:4175   .bss.sAltitude:00000000 sAltitude
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:638    .rodata.HAL_GPIO_EXTI_Callback.str1.4:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:651    .text.HAL_GPIO_EXTI_Callback:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:657    .text.HAL_GPIO_EXTI_Callback:00000000 HAL_GPIO_EXTI_Callback
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:976    .text.HAL_GPIO_EXTI_Callback:000001dc $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:4279   .bss.currentTicks:00000000 currentTicks
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:4286   .bss.preTicks:00000000 preTicks
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:4346   .bss.huart2:00000000 huart2
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:4258   .bss.bModeChanged:00000000 bModeChanged
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:4272   .data.iMode:00000000 iMode
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:4265   .bss.sMode:00000000 sMode
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:4367   .bss.hi2c2:00000000 hi2c2
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:993    .text.Error_Handler:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:999    .text.Error_Handler:00000000 Error_Handler
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:1031   .text.MX_USART1_UART_Init:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:1036   .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:1090   .text.MX_USART1_UART_Init:0000002c $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:4353   .bss.huart1:00000000 huart1
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:1096   .text.MX_USART2_UART_Init:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:1101   .text.MX_USART2_UART_Init:00000000 MX_USART2_UART_Init
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:1155   .text.MX_USART2_UART_Init:0000002c $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:1161   .text.MX_I2C1_Init:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:1166   .text.MX_I2C1_Init:00000000 MX_I2C1_Init
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:1223   .text.MX_I2C1_Init:0000002c $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:4374   .bss.hi2c1:00000000 hi2c1
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:1230   .text.MX_SPI3_Init:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:1235   .text.MX_SPI3_Init:00000000 MX_SPI3_Init
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:1302   .text.MX_SPI3_Init:00000038 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:4360   .bss.hspi3:00000000 hspi3
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:1308   .text.MX_I2C2_Init:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:1313   .text.MX_I2C2_Init:00000000 MX_I2C2_Init
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:1370   .text.MX_I2C2_Init:0000002c $d
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 136


/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:1377   .text.SystemClock_Config:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:1383   .text.SystemClock_Config:00000000 SystemClock_Config
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:1507   .text.SystemClock_Config:00000080 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:1513   .rodata.main.str1.4:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:1539   .text.main:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:1545   .text.main:00000000 main
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:1899   .text.main:00000208 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:4161   .bss.Data:00000000 Data
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:4299   .bss.myLoRa:00000000 myLoRa
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:1927   .text.main:0000026c $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:2027   .text.main:000002f4 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:2087   .text.main:000003e4 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:2437   .text.main:000005bc $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:4252   .bss.timeNow:00000000 timeNow
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:4245   .bss.timePre:00000000 timePre
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:4292   .data.isLoraReady:00000000 isLoraReady
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:2449   .text.main:000005e0 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:3066   .text.main:00000928 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:3070   .text.main:0000092c $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:3696   .text.main:00000c9c $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:3700   .text.main:00000ca0 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:4152   .text.main:00000f24 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:4158   .bss.Data:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:4165   .bss.size:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:4172   .bss.sAltitude:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:4179   .bss.sHumidity:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:4186   .bss.sTemperature:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:4193   .bss.sPressure:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:4200   .bss.humidity:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:4207   .bss.temperature:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:4214   .bss.pressure:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:4221   .bss.bmp280:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:4228   .bss.altitude:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:4235   .data.P_b:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:4242   .bss.timePre:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:4249   .bss.timeNow:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:4259   .bss.bModeChanged:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:4262   .bss.sMode:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:4269   .data.iMode:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:4276   .bss.currentTicks:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:4283   .bss.preTicks:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:4296   .bss.myLoRa:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:4303   .bss.transmit_data:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:4312   .bss.bme280p:00000000 bme280p
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:4313   .bss.bme280p:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:4316   .bss.line:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:4326   .bss.line_out:00000000 line_out
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:4323   .bss.line_out:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:4333   .bss.flag:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:4336   .bss.gps_raw:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:4343   .bss.huart2:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:4350   .bss.huart1:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:4357   .bss.hspi3:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:4364   .bss.hi2c2:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s:4371   .bss.hi2c1:00000000 $d

UNDEFINED SYMBOLS
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccIB2dLn.s 			page 137


HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
__aeabi_f2d
__aeabi_dsub
__aeabi_dmul
__aeabi_d2f
memset
strtok
strcpy
minmea_parse_rmc
strlen
sprintf
bmp280_read_float
pow
gcvt
HAL_GetTick
HAL_UART_Transmit
ssd1306_SetCursor
ssd1306_WriteString
ssd1306_UpdateScreen
Font_16x26
HAL_UART_Init
HAL_I2C_Init
HAL_SPI_Init
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
bmp280_init_default_params
HAL_Delay
bmp280_init
newLoRa
LoRa_init
snprintf
ssd1306_Init
LoRa_transmit
HAL_UARTEx_ReceiveToIdle_IT
