ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.minmea_rescale,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	minmea_rescale:
  27              	.LVL0:
  28              	.LFB134:
  29              		.file 2 "Core/Inc/minmea.h"
   1:Core/Inc/minmea.h **** /*
   2:Core/Inc/minmea.h ****  * Copyright Â© 2014 Kosma Moczek <kosma@cloudyourcar.com>
   3:Core/Inc/minmea.h ****  * This program is free software. It comes without any warranty, to the extent
   4:Core/Inc/minmea.h ****  * permitted by applicable law. You can redistribute it and/or modify it under
   5:Core/Inc/minmea.h ****  * the terms of the Do What The Fuck You Want To Public License, Version 2, as
   6:Core/Inc/minmea.h ****  * published by Sam Hocevar. See the COPYING file for more details.
   7:Core/Inc/minmea.h ****  */
   8:Core/Inc/minmea.h **** 
   9:Core/Inc/minmea.h **** #ifndef MINMEA_H
  10:Core/Inc/minmea.h **** #define MINMEA_H
  11:Core/Inc/minmea.h **** 
  12:Core/Inc/minmea.h **** #ifdef __cplusplus
  13:Core/Inc/minmea.h **** extern "C" {
  14:Core/Inc/minmea.h **** #endif
  15:Core/Inc/minmea.h **** 
  16:Core/Inc/minmea.h **** #include <ctype.h>
  17:Core/Inc/minmea.h **** #include <stdint.h>
  18:Core/Inc/minmea.h **** #include <stdbool.h>
  19:Core/Inc/minmea.h **** #include <time.h>
  20:Core/Inc/minmea.h **** #include <math.h>
  21:Core/Inc/minmea.h **** #ifdef MINMEA_INCLUDE_COMPAT
  22:Core/Inc/minmea.h **** #include <minmea_compat.h>
  23:Core/Inc/minmea.h **** #endif
  24:Core/Inc/minmea.h **** 
  25:Core/Inc/minmea.h **** #ifndef MINMEA_MAX_SENTENCE_LENGTH
  26:Core/Inc/minmea.h **** #define MINMEA_MAX_SENTENCE_LENGTH 80
  27:Core/Inc/minmea.h **** #endif
  28:Core/Inc/minmea.h **** 
  29:Core/Inc/minmea.h **** enum minmea_sentence_id {
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s 			page 2


  30:Core/Inc/minmea.h ****     MINMEA_INVALID = -1,
  31:Core/Inc/minmea.h ****     MINMEA_UNKNOWN = 0,
  32:Core/Inc/minmea.h ****     MINMEA_SENTENCE_GBS,
  33:Core/Inc/minmea.h ****     MINMEA_SENTENCE_GGA,
  34:Core/Inc/minmea.h ****     MINMEA_SENTENCE_GLL,
  35:Core/Inc/minmea.h ****     MINMEA_SENTENCE_GSA,
  36:Core/Inc/minmea.h ****     MINMEA_SENTENCE_GST,
  37:Core/Inc/minmea.h ****     MINMEA_SENTENCE_GSV,
  38:Core/Inc/minmea.h ****     MINMEA_SENTENCE_RMC,
  39:Core/Inc/minmea.h ****     MINMEA_SENTENCE_VTG,
  40:Core/Inc/minmea.h ****     MINMEA_SENTENCE_ZDA,
  41:Core/Inc/minmea.h **** };
  42:Core/Inc/minmea.h **** 
  43:Core/Inc/minmea.h **** struct minmea_float {
  44:Core/Inc/minmea.h ****     int_least32_t value;
  45:Core/Inc/minmea.h ****     int_least32_t scale;
  46:Core/Inc/minmea.h **** };
  47:Core/Inc/minmea.h **** 
  48:Core/Inc/minmea.h **** struct minmea_date {
  49:Core/Inc/minmea.h ****     int day;
  50:Core/Inc/minmea.h ****     int month;
  51:Core/Inc/minmea.h ****     int year;
  52:Core/Inc/minmea.h **** };
  53:Core/Inc/minmea.h **** 
  54:Core/Inc/minmea.h **** struct minmea_time {
  55:Core/Inc/minmea.h ****     int hours;
  56:Core/Inc/minmea.h ****     int minutes;
  57:Core/Inc/minmea.h ****     int seconds;
  58:Core/Inc/minmea.h ****     int microseconds;
  59:Core/Inc/minmea.h **** };
  60:Core/Inc/minmea.h **** 
  61:Core/Inc/minmea.h **** struct minmea_sentence_gbs {
  62:Core/Inc/minmea.h ****     struct minmea_time time;
  63:Core/Inc/minmea.h ****     struct minmea_float err_latitude;
  64:Core/Inc/minmea.h ****     struct minmea_float err_longitude;
  65:Core/Inc/minmea.h ****     struct minmea_float err_altitude;
  66:Core/Inc/minmea.h ****     int svid;
  67:Core/Inc/minmea.h ****     struct minmea_float prob;
  68:Core/Inc/minmea.h ****     struct minmea_float bias;
  69:Core/Inc/minmea.h ****     struct minmea_float stddev;
  70:Core/Inc/minmea.h **** };
  71:Core/Inc/minmea.h **** 
  72:Core/Inc/minmea.h **** struct minmea_sentence_rmc {
  73:Core/Inc/minmea.h ****     struct minmea_time time;
  74:Core/Inc/minmea.h ****     bool valid;
  75:Core/Inc/minmea.h ****     struct minmea_float latitude;
  76:Core/Inc/minmea.h ****     struct minmea_float longitude;
  77:Core/Inc/minmea.h ****     struct minmea_float speed;
  78:Core/Inc/minmea.h ****     struct minmea_float course;
  79:Core/Inc/minmea.h ****     struct minmea_date date;
  80:Core/Inc/minmea.h ****     struct minmea_float variation;
  81:Core/Inc/minmea.h **** };
  82:Core/Inc/minmea.h **** 
  83:Core/Inc/minmea.h **** struct minmea_sentence_gga {
  84:Core/Inc/minmea.h ****     struct minmea_time time;
  85:Core/Inc/minmea.h ****     struct minmea_float latitude;
  86:Core/Inc/minmea.h ****     struct minmea_float longitude;
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s 			page 3


  87:Core/Inc/minmea.h ****     int fix_quality;
  88:Core/Inc/minmea.h ****     int satellites_tracked;
  89:Core/Inc/minmea.h ****     struct minmea_float hdop;
  90:Core/Inc/minmea.h ****     struct minmea_float altitude; char altitude_units;
  91:Core/Inc/minmea.h ****     struct minmea_float height; char height_units;
  92:Core/Inc/minmea.h ****     struct minmea_float dgps_age;
  93:Core/Inc/minmea.h **** };
  94:Core/Inc/minmea.h **** 
  95:Core/Inc/minmea.h **** enum minmea_gll_status {
  96:Core/Inc/minmea.h ****     MINMEA_GLL_STATUS_DATA_VALID = 'A',
  97:Core/Inc/minmea.h ****     MINMEA_GLL_STATUS_DATA_NOT_VALID = 'V',
  98:Core/Inc/minmea.h **** };
  99:Core/Inc/minmea.h **** 
 100:Core/Inc/minmea.h **** // FAA mode added to some fields in NMEA 2.3.
 101:Core/Inc/minmea.h **** enum minmea_faa_mode {
 102:Core/Inc/minmea.h ****     MINMEA_FAA_MODE_AUTONOMOUS = 'A',
 103:Core/Inc/minmea.h ****     MINMEA_FAA_MODE_DIFFERENTIAL = 'D',
 104:Core/Inc/minmea.h ****     MINMEA_FAA_MODE_ESTIMATED = 'E',
 105:Core/Inc/minmea.h ****     MINMEA_FAA_MODE_MANUAL = 'M',
 106:Core/Inc/minmea.h ****     MINMEA_FAA_MODE_SIMULATED = 'S',
 107:Core/Inc/minmea.h ****     MINMEA_FAA_MODE_NOT_VALID = 'N',
 108:Core/Inc/minmea.h ****     MINMEA_FAA_MODE_PRECISE = 'P',
 109:Core/Inc/minmea.h **** };
 110:Core/Inc/minmea.h **** 
 111:Core/Inc/minmea.h **** struct minmea_sentence_gll {
 112:Core/Inc/minmea.h ****     struct minmea_float latitude;
 113:Core/Inc/minmea.h ****     struct minmea_float longitude;
 114:Core/Inc/minmea.h ****     struct minmea_time time;
 115:Core/Inc/minmea.h ****     char status;
 116:Core/Inc/minmea.h ****     char mode;
 117:Core/Inc/minmea.h **** };
 118:Core/Inc/minmea.h **** 
 119:Core/Inc/minmea.h **** struct minmea_sentence_gst {
 120:Core/Inc/minmea.h ****     struct minmea_time time;
 121:Core/Inc/minmea.h ****     struct minmea_float rms_deviation;
 122:Core/Inc/minmea.h ****     struct minmea_float semi_major_deviation;
 123:Core/Inc/minmea.h ****     struct minmea_float semi_minor_deviation;
 124:Core/Inc/minmea.h ****     struct minmea_float semi_major_orientation;
 125:Core/Inc/minmea.h ****     struct minmea_float latitude_error_deviation;
 126:Core/Inc/minmea.h ****     struct minmea_float longitude_error_deviation;
 127:Core/Inc/minmea.h ****     struct minmea_float altitude_error_deviation;
 128:Core/Inc/minmea.h **** };
 129:Core/Inc/minmea.h **** 
 130:Core/Inc/minmea.h **** enum minmea_gsa_mode {
 131:Core/Inc/minmea.h ****     MINMEA_GPGSA_MODE_AUTO = 'A',
 132:Core/Inc/minmea.h ****     MINMEA_GPGSA_MODE_FORCED = 'M',
 133:Core/Inc/minmea.h **** };
 134:Core/Inc/minmea.h **** 
 135:Core/Inc/minmea.h **** enum minmea_gsa_fix_type {
 136:Core/Inc/minmea.h ****     MINMEA_GPGSA_FIX_NONE = 1,
 137:Core/Inc/minmea.h ****     MINMEA_GPGSA_FIX_2D = 2,
 138:Core/Inc/minmea.h ****     MINMEA_GPGSA_FIX_3D = 3,
 139:Core/Inc/minmea.h **** };
 140:Core/Inc/minmea.h **** 
 141:Core/Inc/minmea.h **** struct minmea_sentence_gsa {
 142:Core/Inc/minmea.h ****     char mode;
 143:Core/Inc/minmea.h ****     int fix_type;
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s 			page 4


 144:Core/Inc/minmea.h ****     int sats[12];
 145:Core/Inc/minmea.h ****     struct minmea_float pdop;
 146:Core/Inc/minmea.h ****     struct minmea_float hdop;
 147:Core/Inc/minmea.h ****     struct minmea_float vdop;
 148:Core/Inc/minmea.h **** };
 149:Core/Inc/minmea.h **** 
 150:Core/Inc/minmea.h **** struct minmea_sat_info {
 151:Core/Inc/minmea.h ****     int nr;
 152:Core/Inc/minmea.h ****     int elevation;
 153:Core/Inc/minmea.h ****     int azimuth;
 154:Core/Inc/minmea.h ****     int snr;
 155:Core/Inc/minmea.h **** };
 156:Core/Inc/minmea.h **** 
 157:Core/Inc/minmea.h **** struct minmea_sentence_gsv {
 158:Core/Inc/minmea.h ****     int total_msgs;
 159:Core/Inc/minmea.h ****     int msg_nr;
 160:Core/Inc/minmea.h ****     int total_sats;
 161:Core/Inc/minmea.h ****     struct minmea_sat_info sats[4];
 162:Core/Inc/minmea.h **** };
 163:Core/Inc/minmea.h **** 
 164:Core/Inc/minmea.h **** struct minmea_sentence_vtg {
 165:Core/Inc/minmea.h ****     struct minmea_float true_track_degrees;
 166:Core/Inc/minmea.h ****     struct minmea_float magnetic_track_degrees;
 167:Core/Inc/minmea.h ****     struct minmea_float speed_knots;
 168:Core/Inc/minmea.h ****     struct minmea_float speed_kph;
 169:Core/Inc/minmea.h ****     enum minmea_faa_mode faa_mode;
 170:Core/Inc/minmea.h **** };
 171:Core/Inc/minmea.h **** 
 172:Core/Inc/minmea.h **** struct minmea_sentence_zda {
 173:Core/Inc/minmea.h ****     struct minmea_time time;
 174:Core/Inc/minmea.h ****     struct minmea_date date;
 175:Core/Inc/minmea.h ****     int hour_offset;
 176:Core/Inc/minmea.h ****     int minute_offset;
 177:Core/Inc/minmea.h **** };
 178:Core/Inc/minmea.h **** 
 179:Core/Inc/minmea.h **** /**
 180:Core/Inc/minmea.h ****  * Calculate raw sentence checksum. Does not check sentence integrity.
 181:Core/Inc/minmea.h ****  */
 182:Core/Inc/minmea.h **** uint8_t minmea_checksum(const char *sentence);
 183:Core/Inc/minmea.h **** 
 184:Core/Inc/minmea.h **** /**
 185:Core/Inc/minmea.h ****  * Check sentence validity and checksum. Returns true for valid sentences.
 186:Core/Inc/minmea.h ****  */
 187:Core/Inc/minmea.h **** bool minmea_check(const char *sentence, bool strict);
 188:Core/Inc/minmea.h **** 
 189:Core/Inc/minmea.h **** /**
 190:Core/Inc/minmea.h ****  * Determine talker identifier.
 191:Core/Inc/minmea.h ****  */
 192:Core/Inc/minmea.h **** bool minmea_talker_id(char talker[3], const char *sentence);
 193:Core/Inc/minmea.h **** 
 194:Core/Inc/minmea.h **** /**
 195:Core/Inc/minmea.h ****  * Determine sentence identifier.
 196:Core/Inc/minmea.h ****  */
 197:Core/Inc/minmea.h **** enum minmea_sentence_id minmea_sentence_id(const char *sentence, bool strict);
 198:Core/Inc/minmea.h **** 
 199:Core/Inc/minmea.h **** /**
 200:Core/Inc/minmea.h ****  * Scanf-like processor for NMEA sentences. Supports the following formats:
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s 			page 5


 201:Core/Inc/minmea.h ****  * c - single character (char *)
 202:Core/Inc/minmea.h ****  * d - direction, returned as 1/-1, default 0 (int *)
 203:Core/Inc/minmea.h ****  * f - fractional, returned as value + scale (struct minmea_float *)
 204:Core/Inc/minmea.h ****  * i - decimal, default zero (int *)
 205:Core/Inc/minmea.h ****  * s - string (char *)
 206:Core/Inc/minmea.h ****  * t - talker identifier and type (char *)
 207:Core/Inc/minmea.h ****  * D - date (struct minmea_date *)
 208:Core/Inc/minmea.h ****  * T - time stamp (struct minmea_time *)
 209:Core/Inc/minmea.h ****  * _ - ignore this field
 210:Core/Inc/minmea.h ****  * ; - following fields are optional
 211:Core/Inc/minmea.h ****  * Returns true on success. See library source code for details.
 212:Core/Inc/minmea.h ****  */
 213:Core/Inc/minmea.h **** bool minmea_scan(const char *sentence, const char *format, ...);
 214:Core/Inc/minmea.h **** 
 215:Core/Inc/minmea.h **** /*
 216:Core/Inc/minmea.h ****  * Parse a specific type of sentence. Return true on success.
 217:Core/Inc/minmea.h ****  */
 218:Core/Inc/minmea.h **** bool minmea_parse_gbs(struct minmea_sentence_gbs *frame, const char *sentence);
 219:Core/Inc/minmea.h **** bool minmea_parse_rmc(struct minmea_sentence_rmc *frame, const char *sentence);
 220:Core/Inc/minmea.h **** bool minmea_parse_gga(struct minmea_sentence_gga *frame, const char *sentence);
 221:Core/Inc/minmea.h **** bool minmea_parse_gsa(struct minmea_sentence_gsa *frame, const char *sentence);
 222:Core/Inc/minmea.h **** bool minmea_parse_gll(struct minmea_sentence_gll *frame, const char *sentence);
 223:Core/Inc/minmea.h **** bool minmea_parse_gst(struct minmea_sentence_gst *frame, const char *sentence);
 224:Core/Inc/minmea.h **** bool minmea_parse_gsv(struct minmea_sentence_gsv *frame, const char *sentence);
 225:Core/Inc/minmea.h **** bool minmea_parse_vtg(struct minmea_sentence_vtg *frame, const char *sentence);
 226:Core/Inc/minmea.h **** bool minmea_parse_zda(struct minmea_sentence_zda *frame, const char *sentence);
 227:Core/Inc/minmea.h **** 
 228:Core/Inc/minmea.h **** /**
 229:Core/Inc/minmea.h ****  * Convert GPS UTC date/time representation to a UNIX calendar time.
 230:Core/Inc/minmea.h ****  */
 231:Core/Inc/minmea.h **** int minmea_getdatetime(struct tm *tm, const struct minmea_date *date, const struct minmea_time *tim
 232:Core/Inc/minmea.h **** 
 233:Core/Inc/minmea.h **** /**
 234:Core/Inc/minmea.h ****  * Convert GPS UTC date/time representation to a UNIX timestamp.
 235:Core/Inc/minmea.h ****  */
 236:Core/Inc/minmea.h **** int minmea_gettime(struct timespec *ts, const struct minmea_date *date, const struct minmea_time *t
 237:Core/Inc/minmea.h **** 
 238:Core/Inc/minmea.h **** /**
 239:Core/Inc/minmea.h ****  * Rescale a fixed-point value to a different scale. Rounds towards zero.
 240:Core/Inc/minmea.h ****  */
 241:Core/Inc/minmea.h **** static inline int_least32_t minmea_rescale(const struct minmea_float *f, int_least32_t new_scale)
 242:Core/Inc/minmea.h **** {
  30              		.loc 2 242 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              		.loc 2 242 1 is_stmt 0 view .LVU1
  36 0000 0346     		mov	r3, r0
 243:Core/Inc/minmea.h ****     if (f->scale == 0)
  37              		.loc 2 243 5 is_stmt 1 view .LVU2
  38              		.loc 2 243 10 is_stmt 0 view .LVU3
  39 0002 4068     		ldr	r0, [r0, #4]
  40              	.LVL1:
  41              		.loc 2 243 8 view .LVU4
  42 0004 F0B1     		cbz	r0, .L1
 244:Core/Inc/minmea.h ****         return 0;
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s 			page 6


 245:Core/Inc/minmea.h ****     if (f->scale == new_scale)
  43              		.loc 2 245 5 is_stmt 1 view .LVU5
  44              		.loc 2 245 8 is_stmt 0 view .LVU6
  45 0006 8842     		cmp	r0, r1
  46 0008 15D0     		beq	.L5
 246:Core/Inc/minmea.h ****         return f->value;
 247:Core/Inc/minmea.h ****     if (f->scale > new_scale)
  47              		.loc 2 247 5 is_stmt 1 view .LVU7
  48              		.loc 2 247 8 is_stmt 0 view .LVU8
  49 000a 8842     		cmp	r0, r1
  50 000c 15DD     		ble	.L4
 248:Core/Inc/minmea.h ****         return (f->value + ((f->value > 0) - (f->value < 0)) * f->scale/new_scale/2) / (f->scale/ne
  51              		.loc 2 248 9 is_stmt 1 view .LVU9
  52              		.loc 2 248 18 is_stmt 0 view .LVU10
  53 000e 1A68     		ldr	r2, [r3]
  54              		.loc 2 248 56 view .LVU11
  55 0010 D30F     		lsrs	r3, r2, #31
  56              	.LVL2:
  57              		.loc 2 248 44 view .LVU12
  58 0012 002A     		cmp	r2, #0
  59 0014 D4BF     		ite	le
  60 0016 5B42     		rsble	r3, r3, #0
  61 0018 C3F10103 		rsbgt	r3, r3, #1
  62              		.loc 2 248 62 view .LVU13
  63 001c 00FB03F3 		mul	r3, r0, r3
  64              		.loc 2 248 72 view .LVU14
  65 0020 93FBF1F3 		sdiv	r3, r3, r1
  66              		.loc 2 248 82 view .LVU15
  67 0024 03EBD373 		add	r3, r3, r3, lsr #31
  68              		.loc 2 248 26 view .LVU16
  69 0028 02EB6302 		add	r2, r2, r3, asr #1
  70              		.loc 2 248 97 view .LVU17
  71 002c 90FBF1F0 		sdiv	r0, r0, r1
  72              		.loc 2 248 86 view .LVU18
  73 0030 92FBF0F0 		sdiv	r0, r2, r0
  74 0034 7047     		bx	lr
  75              	.LVL3:
  76              	.L5:
 246:Core/Inc/minmea.h ****         return f->value;
  77              		.loc 2 246 9 is_stmt 1 view .LVU19
 246:Core/Inc/minmea.h ****         return f->value;
  78              		.loc 2 246 17 is_stmt 0 view .LVU20
  79 0036 1868     		ldr	r0, [r3]
  80 0038 7047     		bx	lr
  81              	.L4:
 249:Core/Inc/minmea.h ****     else
 250:Core/Inc/minmea.h ****         return f->value * (new_scale/f->scale);
  82              		.loc 2 250 9 is_stmt 1 view .LVU21
  83              		.loc 2 250 17 is_stmt 0 view .LVU22
  84 003a 1B68     		ldr	r3, [r3]
  85              	.LVL4:
  86              		.loc 2 250 37 view .LVU23
  87 003c 91FBF0F0 		sdiv	r0, r1, r0
  88              		.loc 2 250 25 view .LVU24
  89 0040 03FB00F0 		mul	r0, r3, r0
  90              	.L1:
 251:Core/Inc/minmea.h **** }
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s 			page 7


  91              		.loc 2 251 1 view .LVU25
  92 0044 7047     		bx	lr
  93              		.cfi_endproc
  94              	.LFE134:
  96              		.section	.text.MX_GPIO_Init,"ax",%progbits
  97              		.align	1
  98              		.syntax unified
  99              		.thumb
 100              		.thumb_func
 102              	MX_GPIO_Init:
 103              	.LFB144:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include <stdio.h>
  25:Core/Src/main.c **** #include "minmea.h"
  26:Core/Src/main.c **** #include <stdlib.h>
  27:Core/Src/main.c **** #include <string.h>
  28:Core/Src/main.c **** #include <stdint.h>
  29:Core/Src/main.c **** #include "bmp280.h"
  30:Core/Src/main.c **** #include <float.h>
  31:Core/Src/main.c **** #include <math.h>
  32:Core/Src/main.c **** #include <LoRa.h>
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* USER CODE END Includes */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* USER CODE END PTD */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  42:Core/Src/main.c **** /* USER CODE BEGIN PD */
  43:Core/Src/main.c **** #define INDENT_SPACES "  "
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE END PD */
  46:Core/Src/main.c **** 
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s 			page 8


  47:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  48:Core/Src/main.c **** /* USER CODE BEGIN PM */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* USER CODE END PM */
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  53:Core/Src/main.c **** I2C_HandleTypeDef hi2c1;
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** SPI_HandleTypeDef hspi3;
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** UART_HandleTypeDef huart1;
  58:Core/Src/main.c **** UART_HandleTypeDef huart2;
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* USER CODE BEGIN PV */
  61:Core/Src/main.c **** uint8_t gps_raw[512] = {"\0"};
  62:Core/Src/main.c **** uint8_t flag = 0;
  63:Core/Src/main.c **** char line_out[512] = {"\0"};
  64:Core/Src/main.c **** char line[512] = {"\0"};
  65:Core/Src/main.c **** bool bme280p;
  66:Core/Src/main.c **** uint8_t transmit_data[256] = {"\0"};
  67:Core/Src/main.c **** LoRa myLoRa;
  68:Core/Src/main.c **** bool isLoraReady = true;
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** //Variables to work out altitude
  71:Core/Src/main.c **** 
  72:Core/Src/main.c **** //Pressure at sea level
  73:Core/Src/main.c **** float P_b = 101325;
  74:Core/Src/main.c **** 
  75:Core/Src/main.c **** //Height that we are calculating
  76:Core/Src/main.c **** float altitude = 0;
  77:Core/Src/main.c **** 
  78:Core/Src/main.c **** 
  79:Core/Src/main.c **** BMP280_HandleTypedef bmp280;
  80:Core/Src/main.c **** 
  81:Core/Src/main.c **** float pressure, temperature, humidity;
  82:Core/Src/main.c **** char sPressure[128] = {"\0"};
  83:Core/Src/main.c **** char sTemperature[128] = {"\0"};
  84:Core/Src/main.c **** char sHumidity[128] = {"\0"};
  85:Core/Src/main.c **** char sAltitude[128] = {"\0"};
  86:Core/Src/main.c **** 
  87:Core/Src/main.c **** uint16_t size;
  88:Core/Src/main.c **** uint8_t Data[256] = {"\0"};
  89:Core/Src/main.c **** 
  90:Core/Src/main.c **** 
  91:Core/Src/main.c **** /* USER CODE END PV */
  92:Core/Src/main.c **** 
  93:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  94:Core/Src/main.c **** void SystemClock_Config(void);
  95:Core/Src/main.c **** static void MX_GPIO_Init(void);
  96:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
  97:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
  98:Core/Src/main.c **** static void MX_I2C1_Init(void);
  99:Core/Src/main.c **** static void MX_SPI3_Init(void);
 100:Core/Src/main.c **** /* USER CODE BEGIN PFP */
 101:Core/Src/main.c **** 
 102:Core/Src/main.c **** 
 103:Core/Src/main.c **** /* USER CODE END PFP */
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s 			page 9


 104:Core/Src/main.c **** 
 105:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 106:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 107:Core/Src/main.c **** 
 108:Core/Src/main.c **** /* USER CODE END 0 */
 109:Core/Src/main.c **** 
 110:Core/Src/main.c **** /**
 111:Core/Src/main.c ****   * @brief  The application entry point.
 112:Core/Src/main.c ****   * @retval int
 113:Core/Src/main.c ****   */
 114:Core/Src/main.c **** int main(void)
 115:Core/Src/main.c **** {
 116:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 117:Core/Src/main.c **** 
 118:Core/Src/main.c ****   /* USER CODE END 1 */
 119:Core/Src/main.c **** 
 120:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 123:Core/Src/main.c ****   HAL_Init();
 124:Core/Src/main.c **** 
 125:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 126:Core/Src/main.c **** 
 127:Core/Src/main.c ****   /* USER CODE END Init */
 128:Core/Src/main.c **** 
 129:Core/Src/main.c ****   /* Configure the system clock */
 130:Core/Src/main.c ****   SystemClock_Config();
 131:Core/Src/main.c **** 
 132:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 133:Core/Src/main.c **** 
 134:Core/Src/main.c ****   /* USER CODE END SysInit */
 135:Core/Src/main.c **** 
 136:Core/Src/main.c ****   /* Initialize all configured peripherals */
 137:Core/Src/main.c ****   MX_GPIO_Init();
 138:Core/Src/main.c ****   MX_USART1_UART_Init();
 139:Core/Src/main.c ****   MX_USART2_UART_Init();
 140:Core/Src/main.c ****   MX_I2C1_Init();
 141:Core/Src/main.c ****   MX_SPI3_Init();
 142:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 143:Core/Src/main.c **** 
 144:Core/Src/main.c ****   bmp280_init_default_params(&bmp280.params);
 145:Core/Src/main.c **** 	bmp280.addr = 0x77;
 146:Core/Src/main.c **** 	bmp280.i2c = &hi2c1;
 147:Core/Src/main.c **** 
 148:Core/Src/main.c **** 	while (!bmp280_init(&bmp280, &bmp280.params)) {
 149:Core/Src/main.c **** 		size = sprintf((char *)Data, "BMP280 initialization failed\n");
 150:Core/Src/main.c **** 		HAL_UART_Transmit(&huart2, Data, size, 1000);
 151:Core/Src/main.c **** 		HAL_Delay(2000);
 152:Core/Src/main.c **** 	}
 153:Core/Src/main.c **** 	bool bme280p = bmp280.id == BME280_CHIP_ID;
 154:Core/Src/main.c **** 	size = sprintf((char *)Data, "\nBMP280: found %s\n", bme280p ? "BME280" : "BMP280");
 155:Core/Src/main.c **** 	HAL_UART_Transmit(&huart2, Data, size, 1000);
 156:Core/Src/main.c **** 
 157:Core/Src/main.c ****   myLoRa = newLoRa();
 158:Core/Src/main.c ****   myLoRa.CS_port         = GPIOA;
 159:Core/Src/main.c ****   myLoRa.CS_pin          = GPIO_PIN_4;
 160:Core/Src/main.c ****   myLoRa.reset_port      = GPIOB;
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s 			page 10


 161:Core/Src/main.c ****   myLoRa.reset_pin       = GPIO_PIN_8;
 162:Core/Src/main.c ****   myLoRa.DIO0_port       = GPIOB;
 163:Core/Src/main.c ****   myLoRa.DIO0_pin        = GPIO_PIN_9;
 164:Core/Src/main.c ****   myLoRa.hSPIx           = &hspi3;
 165:Core/Src/main.c **** 
 166:Core/Src/main.c ****   uint16_t ret = LoRa_init(&myLoRa);
 167:Core/Src/main.c ****   uint8_t buff[128] = {"\0"};
 168:Core/Src/main.c **** 
 169:Core/Src/main.c **** 
 170:Core/Src/main.c **** 
 171:Core/Src/main.c **** if (ret==LORA_OK){
 172:Core/Src/main.c ****   snprintf(buff,sizeof(buff),"LoRa is running... :) \n\r");
 173:Core/Src/main.c ****   LoRa_transmit(&myLoRa, (uint8_t*)buff, 120, 100);
 174:Core/Src/main.c ****   HAL_UART_Transmit(&huart2, buff, sizeof(buff)/sizeof(buff[0]), 1000);
 175:Core/Src/main.c **** }
 176:Core/Src/main.c **** else{
 177:Core/Src/main.c ****   snprintf(buff,sizeof(buff),"\n\r LoRa failed :( \n\r Error code: %d \n\r", ret);
 178:Core/Src/main.c ****   HAL_UART_Transmit(&huart2, buff, sizeof(buff)/sizeof(buff[0]), 1000);
 179:Core/Src/main.c **** }
 180:Core/Src/main.c **** 
 181:Core/Src/main.c **** myLoRa.frequency             = 433;             // default = 433 MHz
 182:Core/Src/main.c **** myLoRa.spredingFactor        = SF_7;            // default = SF_7
 183:Core/Src/main.c **** myLoRa.bandWidth             = BW_250KHz;       // default = BW_125KHz
 184:Core/Src/main.c **** myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 185:Core/Src/main.c **** myLoRa.power                 = POWER_20db;      // default = 20db
 186:Core/Src/main.c **** myLoRa.overCurrentProtection = 100;             // default = 100 mA
 187:Core/Src/main.c **** myLoRa.preamble              = 8;              // default = 8;
 188:Core/Src/main.c **** 
 189:Core/Src/main.c **** 
 190:Core/Src/main.c ****   /* USER CODE END 2 */
 191:Core/Src/main.c **** 
 192:Core/Src/main.c ****   /* Infinite loop */
 193:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 194:Core/Src/main.c ****   while (1)
 195:Core/Src/main.c ****   {
 196:Core/Src/main.c ****     //HAL_UARTEx_ReceiveToIdle_DMA(&huart1,(uint8_t*)gps_raw,512);
 197:Core/Src/main.c ****     if (isLoraReady){
 198:Core/Src/main.c ****       HAL_UARTEx_ReceiveToIdle_IT(&huart1,(uint8_t*)gps_raw,512);
 199:Core/Src/main.c ****       if (flag == 1) {
 200:Core/Src/main.c ****       LoRa_transmit(&myLoRa, (uint8_t*)transmit_data, 113, 100);
 201:Core/Src/main.c ****       flag = 0;
 202:Core/Src/main.c ****       memset(transmit_data, '\0', sizeof(transmit_data));
 203:Core/Src/main.c ****     }
 204:Core/Src/main.c ****     }
 205:Core/Src/main.c ****     
 206:Core/Src/main.c ****     
 207:Core/Src/main.c ****     
 208:Core/Src/main.c ****     /* USER CODE END WHILE */
 209:Core/Src/main.c **** 
 210:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 211:Core/Src/main.c ****     //HAL_UART_Transmit_IT(&huart2, (uint8_t *)Gpsdata, sizeof(Gpsdata));
 212:Core/Src/main.c ****     //HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13);
 213:Core/Src/main.c **** 
 214:Core/Src/main.c ****     //HAL_Delay(1000); 
 215:Core/Src/main.c **** 
 216:Core/Src/main.c ****   }
 217:Core/Src/main.c ****   /* USER CODE END 3 */
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s 			page 11


 218:Core/Src/main.c **** }
 219:Core/Src/main.c **** 
 220:Core/Src/main.c **** /**
 221:Core/Src/main.c ****   * @brief System Clock Configuration
 222:Core/Src/main.c ****   * @retval None
 223:Core/Src/main.c ****   */
 224:Core/Src/main.c **** void SystemClock_Config(void)
 225:Core/Src/main.c **** {
 226:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 227:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 228:Core/Src/main.c **** 
 229:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 230:Core/Src/main.c ****   */
 231:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 232:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 233:Core/Src/main.c **** 
 234:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 235:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 236:Core/Src/main.c ****   */
 237:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 238:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 239:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 240:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 241:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 242:Core/Src/main.c ****   {
 243:Core/Src/main.c ****     Error_Handler();
 244:Core/Src/main.c ****   }
 245:Core/Src/main.c **** 
 246:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 247:Core/Src/main.c ****   */
 248:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 249:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 250:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 251:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 252:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 253:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 254:Core/Src/main.c **** 
 255:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 256:Core/Src/main.c ****   {
 257:Core/Src/main.c ****     Error_Handler();
 258:Core/Src/main.c ****   }
 259:Core/Src/main.c **** }
 260:Core/Src/main.c **** 
 261:Core/Src/main.c **** /**
 262:Core/Src/main.c ****   * @brief I2C1 Initialization Function
 263:Core/Src/main.c ****   * @param None
 264:Core/Src/main.c ****   * @retval None
 265:Core/Src/main.c ****   */
 266:Core/Src/main.c **** static void MX_I2C1_Init(void)
 267:Core/Src/main.c **** {
 268:Core/Src/main.c **** 
 269:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 0 */
 270:Core/Src/main.c **** 
 271:Core/Src/main.c ****   /* USER CODE END I2C1_Init 0 */
 272:Core/Src/main.c **** 
 273:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 1 */
 274:Core/Src/main.c **** 
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s 			page 12


 275:Core/Src/main.c ****   /* USER CODE END I2C1_Init 1 */
 276:Core/Src/main.c ****   hi2c1.Instance = I2C1;
 277:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 278:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 279:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 280:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 281:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 282:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 283:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 284:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 285:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 286:Core/Src/main.c ****   {
 287:Core/Src/main.c ****     Error_Handler();
 288:Core/Src/main.c ****   }
 289:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 2 */
 290:Core/Src/main.c **** 
 291:Core/Src/main.c ****   /* USER CODE END I2C1_Init 2 */
 292:Core/Src/main.c **** 
 293:Core/Src/main.c **** }
 294:Core/Src/main.c **** 
 295:Core/Src/main.c **** /**
 296:Core/Src/main.c ****   * @brief SPI3 Initialization Function
 297:Core/Src/main.c ****   * @param None
 298:Core/Src/main.c ****   * @retval None
 299:Core/Src/main.c ****   */
 300:Core/Src/main.c **** static void MX_SPI3_Init(void)
 301:Core/Src/main.c **** {
 302:Core/Src/main.c **** 
 303:Core/Src/main.c ****   /* USER CODE BEGIN SPI3_Init 0 */
 304:Core/Src/main.c **** 
 305:Core/Src/main.c ****   /* USER CODE END SPI3_Init 0 */
 306:Core/Src/main.c **** 
 307:Core/Src/main.c ****   /* USER CODE BEGIN SPI3_Init 1 */
 308:Core/Src/main.c **** 
 309:Core/Src/main.c ****   /* USER CODE END SPI3_Init 1 */
 310:Core/Src/main.c ****   /* SPI3 parameter configuration*/
 311:Core/Src/main.c ****   hspi3.Instance = SPI3;
 312:Core/Src/main.c ****   hspi3.Init.Mode = SPI_MODE_MASTER;
 313:Core/Src/main.c ****   hspi3.Init.Direction = SPI_DIRECTION_2LINES;
 314:Core/Src/main.c ****   hspi3.Init.DataSize = SPI_DATASIZE_8BIT;
 315:Core/Src/main.c ****   hspi3.Init.CLKPolarity = SPI_POLARITY_LOW;
 316:Core/Src/main.c ****   hspi3.Init.CLKPhase = SPI_PHASE_1EDGE;
 317:Core/Src/main.c ****   hspi3.Init.NSS = SPI_NSS_SOFT;
 318:Core/Src/main.c ****   hspi3.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 319:Core/Src/main.c ****   hspi3.Init.FirstBit = SPI_FIRSTBIT_MSB;
 320:Core/Src/main.c ****   hspi3.Init.TIMode = SPI_TIMODE_DISABLE;
 321:Core/Src/main.c ****   hspi3.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 322:Core/Src/main.c ****   hspi3.Init.CRCPolynomial = 10;
 323:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi3) != HAL_OK)
 324:Core/Src/main.c ****   {
 325:Core/Src/main.c ****     Error_Handler();
 326:Core/Src/main.c ****   }
 327:Core/Src/main.c ****   /* USER CODE BEGIN SPI3_Init 2 */
 328:Core/Src/main.c **** 
 329:Core/Src/main.c ****   /* USER CODE END SPI3_Init 2 */
 330:Core/Src/main.c **** 
 331:Core/Src/main.c **** }
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s 			page 13


 332:Core/Src/main.c **** 
 333:Core/Src/main.c **** /**
 334:Core/Src/main.c ****   * @brief USART1 Initialization Function
 335:Core/Src/main.c ****   * @param None
 336:Core/Src/main.c ****   * @retval None
 337:Core/Src/main.c ****   */
 338:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
 339:Core/Src/main.c **** {
 340:Core/Src/main.c **** 
 341:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
 342:Core/Src/main.c **** 
 343:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
 344:Core/Src/main.c **** 
 345:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
 346:Core/Src/main.c **** 
 347:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
 348:Core/Src/main.c ****   huart1.Instance = USART1;
 349:Core/Src/main.c ****   huart1.Init.BaudRate = 9600;
 350:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 351:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 352:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 353:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 354:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 355:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 356:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 357:Core/Src/main.c ****   {
 358:Core/Src/main.c ****     Error_Handler();
 359:Core/Src/main.c ****   }
 360:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
 361:Core/Src/main.c **** 
 362:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
 363:Core/Src/main.c **** 
 364:Core/Src/main.c **** }
 365:Core/Src/main.c **** 
 366:Core/Src/main.c **** /**
 367:Core/Src/main.c ****   * @brief USART2 Initialization Function
 368:Core/Src/main.c ****   * @param None
 369:Core/Src/main.c ****   * @retval None
 370:Core/Src/main.c ****   */
 371:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 372:Core/Src/main.c **** {
 373:Core/Src/main.c **** 
 374:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 375:Core/Src/main.c **** 
 376:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 377:Core/Src/main.c **** 
 378:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 379:Core/Src/main.c **** 
 380:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 381:Core/Src/main.c ****   huart2.Instance = USART2;
 382:Core/Src/main.c ****   huart2.Init.BaudRate = 230400;
 383:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 384:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 385:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 386:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 387:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 388:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s 			page 14


 389:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 390:Core/Src/main.c ****   {
 391:Core/Src/main.c ****     Error_Handler();
 392:Core/Src/main.c ****   }
 393:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 394:Core/Src/main.c **** 
 395:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 396:Core/Src/main.c **** 
 397:Core/Src/main.c **** }
 398:Core/Src/main.c **** 
 399:Core/Src/main.c **** /**
 400:Core/Src/main.c ****   * @brief GPIO Initialization Function
 401:Core/Src/main.c ****   * @param None
 402:Core/Src/main.c ****   * @retval None
 403:Core/Src/main.c ****   */
 404:Core/Src/main.c **** static void MX_GPIO_Init(void)
 405:Core/Src/main.c **** {
 104              		.loc 1 405 1 is_stmt 1 view -0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 32
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 109              		.cfi_def_cfa_offset 24
 110              		.cfi_offset 4, -24
 111              		.cfi_offset 5, -20
 112              		.cfi_offset 6, -16
 113              		.cfi_offset 7, -12
 114              		.cfi_offset 8, -8
 115              		.cfi_offset 14, -4
 116 0004 88B0     		sub	sp, sp, #32
 117              		.cfi_def_cfa_offset 56
 406:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 118              		.loc 1 406 3 view .LVU27
 119              		.loc 1 406 20 is_stmt 0 view .LVU28
 120 0006 0024     		movs	r4, #0
 121 0008 0394     		str	r4, [sp, #12]
 122 000a 0494     		str	r4, [sp, #16]
 123 000c 0594     		str	r4, [sp, #20]
 124 000e 0694     		str	r4, [sp, #24]
 125 0010 0794     		str	r4, [sp, #28]
 407:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 408:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 409:Core/Src/main.c **** 
 410:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 411:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 126              		.loc 1 411 3 is_stmt 1 view .LVU29
 127              	.LBB4:
 128              		.loc 1 411 3 view .LVU30
 129 0012 0094     		str	r4, [sp]
 130              		.loc 1 411 3 view .LVU31
 131 0014 2F4B     		ldr	r3, .L8
 132 0016 1A6B     		ldr	r2, [r3, #48]
 133 0018 42F00402 		orr	r2, r2, #4
 134 001c 1A63     		str	r2, [r3, #48]
 135              		.loc 1 411 3 view .LVU32
 136 001e 1A6B     		ldr	r2, [r3, #48]
 137 0020 02F00402 		and	r2, r2, #4
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s 			page 15


 138 0024 0092     		str	r2, [sp]
 139              		.loc 1 411 3 view .LVU33
 140 0026 009A     		ldr	r2, [sp]
 141              	.LBE4:
 142              		.loc 1 411 3 view .LVU34
 412:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 143              		.loc 1 412 3 view .LVU35
 144              	.LBB5:
 145              		.loc 1 412 3 view .LVU36
 146 0028 0194     		str	r4, [sp, #4]
 147              		.loc 1 412 3 view .LVU37
 148 002a 1A6B     		ldr	r2, [r3, #48]
 149 002c 42F00102 		orr	r2, r2, #1
 150 0030 1A63     		str	r2, [r3, #48]
 151              		.loc 1 412 3 view .LVU38
 152 0032 1A6B     		ldr	r2, [r3, #48]
 153 0034 02F00102 		and	r2, r2, #1
 154 0038 0192     		str	r2, [sp, #4]
 155              		.loc 1 412 3 view .LVU39
 156 003a 019A     		ldr	r2, [sp, #4]
 157              	.LBE5:
 158              		.loc 1 412 3 view .LVU40
 413:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 159              		.loc 1 413 3 view .LVU41
 160              	.LBB6:
 161              		.loc 1 413 3 view .LVU42
 162 003c 0294     		str	r4, [sp, #8]
 163              		.loc 1 413 3 view .LVU43
 164 003e 1A6B     		ldr	r2, [r3, #48]
 165 0040 42F00202 		orr	r2, r2, #2
 166 0044 1A63     		str	r2, [r3, #48]
 167              		.loc 1 413 3 view .LVU44
 168 0046 1B6B     		ldr	r3, [r3, #48]
 169 0048 03F00203 		and	r3, r3, #2
 170 004c 0293     		str	r3, [sp, #8]
 171              		.loc 1 413 3 view .LVU45
 172 004e 029B     		ldr	r3, [sp, #8]
 173              	.LBE6:
 174              		.loc 1 413 3 view .LVU46
 414:Core/Src/main.c **** 
 415:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 416:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
 175              		.loc 1 416 3 view .LVU47
 176 0050 DFF88C80 		ldr	r8, .L8+12
 177 0054 2246     		mov	r2, r4
 178 0056 4FF40051 		mov	r1, #8192
 179 005a 4046     		mov	r0, r8
 180 005c FFF7FEFF 		bl	HAL_GPIO_WritePin
 181              	.LVL5:
 417:Core/Src/main.c **** 
 418:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 419:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_4, GPIO_PIN_SET);
 182              		.loc 1 419 3 view .LVU48
 183 0060 1D4F     		ldr	r7, .L8+4
 184 0062 0122     		movs	r2, #1
 185 0064 1021     		movs	r1, #16
 186 0066 3846     		mov	r0, r7
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s 			page 16


 187 0068 FFF7FEFF 		bl	HAL_GPIO_WritePin
 188              	.LVL6:
 420:Core/Src/main.c **** 
 421:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 422:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_8, GPIO_PIN_SET);
 189              		.loc 1 422 3 view .LVU49
 190 006c 1B4D     		ldr	r5, .L8+8
 191 006e 0122     		movs	r2, #1
 192 0070 4FF48071 		mov	r1, #256
 193 0074 2846     		mov	r0, r5
 194 0076 FFF7FEFF 		bl	HAL_GPIO_WritePin
 195              	.LVL7:
 423:Core/Src/main.c **** 
 424:Core/Src/main.c ****   /*Configure GPIO pin : PC13 */
 425:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_13;
 196              		.loc 1 425 3 view .LVU50
 197              		.loc 1 425 23 is_stmt 0 view .LVU51
 198 007a 4FF40053 		mov	r3, #8192
 199 007e 0393     		str	r3, [sp, #12]
 426:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 200              		.loc 1 426 3 is_stmt 1 view .LVU52
 201              		.loc 1 426 24 is_stmt 0 view .LVU53
 202 0080 0126     		movs	r6, #1
 203 0082 0496     		str	r6, [sp, #16]
 427:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 204              		.loc 1 427 3 is_stmt 1 view .LVU54
 205              		.loc 1 427 24 is_stmt 0 view .LVU55
 206 0084 0594     		str	r4, [sp, #20]
 428:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 207              		.loc 1 428 3 is_stmt 1 view .LVU56
 208              		.loc 1 428 25 is_stmt 0 view .LVU57
 209 0086 0694     		str	r4, [sp, #24]
 429:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 210              		.loc 1 429 3 is_stmt 1 view .LVU58
 211 0088 03A9     		add	r1, sp, #12
 212 008a 4046     		mov	r0, r8
 213 008c FFF7FEFF 		bl	HAL_GPIO_Init
 214              	.LVL8:
 430:Core/Src/main.c **** 
 431:Core/Src/main.c ****   /*Configure GPIO pin : PA4 */
 432:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_4;
 215              		.loc 1 432 3 view .LVU59
 216              		.loc 1 432 23 is_stmt 0 view .LVU60
 217 0090 1023     		movs	r3, #16
 218 0092 0393     		str	r3, [sp, #12]
 433:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 219              		.loc 1 433 3 is_stmt 1 view .LVU61
 220              		.loc 1 433 24 is_stmt 0 view .LVU62
 221 0094 0496     		str	r6, [sp, #16]
 434:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 222              		.loc 1 434 3 is_stmt 1 view .LVU63
 223              		.loc 1 434 24 is_stmt 0 view .LVU64
 224 0096 0594     		str	r4, [sp, #20]
 435:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 225              		.loc 1 435 3 is_stmt 1 view .LVU65
 226              		.loc 1 435 25 is_stmt 0 view .LVU66
 227 0098 0694     		str	r4, [sp, #24]
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s 			page 17


 436:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 228              		.loc 1 436 3 is_stmt 1 view .LVU67
 229 009a 03A9     		add	r1, sp, #12
 230 009c 3846     		mov	r0, r7
 231 009e FFF7FEFF 		bl	HAL_GPIO_Init
 232              	.LVL9:
 437:Core/Src/main.c **** 
 438:Core/Src/main.c ****   /*Configure GPIO pin : PB8 */
 439:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_8;
 233              		.loc 1 439 3 view .LVU68
 234              		.loc 1 439 23 is_stmt 0 view .LVU69
 235 00a2 4FF48073 		mov	r3, #256
 236 00a6 0393     		str	r3, [sp, #12]
 440:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 237              		.loc 1 440 3 is_stmt 1 view .LVU70
 238              		.loc 1 440 24 is_stmt 0 view .LVU71
 239 00a8 0496     		str	r6, [sp, #16]
 441:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 240              		.loc 1 441 3 is_stmt 1 view .LVU72
 241              		.loc 1 441 24 is_stmt 0 view .LVU73
 242 00aa 0594     		str	r4, [sp, #20]
 442:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 243              		.loc 1 442 3 is_stmt 1 view .LVU74
 244              		.loc 1 442 25 is_stmt 0 view .LVU75
 245 00ac 0694     		str	r4, [sp, #24]
 443:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 246              		.loc 1 443 3 is_stmt 1 view .LVU76
 247 00ae 03A9     		add	r1, sp, #12
 248 00b0 2846     		mov	r0, r5
 249 00b2 FFF7FEFF 		bl	HAL_GPIO_Init
 250              	.LVL10:
 444:Core/Src/main.c **** 
 445:Core/Src/main.c ****   /*Configure GPIO pin : PB9 */
 446:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_9;
 251              		.loc 1 446 3 view .LVU77
 252              		.loc 1 446 23 is_stmt 0 view .LVU78
 253 00b6 4FF40073 		mov	r3, #512
 254 00ba 0393     		str	r3, [sp, #12]
 447:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 255              		.loc 1 447 3 is_stmt 1 view .LVU79
 256              		.loc 1 447 24 is_stmt 0 view .LVU80
 257 00bc 4FF48813 		mov	r3, #1114112
 258 00c0 0493     		str	r3, [sp, #16]
 448:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 259              		.loc 1 448 3 is_stmt 1 view .LVU81
 260              		.loc 1 448 24 is_stmt 0 view .LVU82
 261 00c2 0594     		str	r4, [sp, #20]
 449:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 262              		.loc 1 449 3 is_stmt 1 view .LVU83
 263 00c4 03A9     		add	r1, sp, #12
 264 00c6 2846     		mov	r0, r5
 265 00c8 FFF7FEFF 		bl	HAL_GPIO_Init
 266              	.LVL11:
 450:Core/Src/main.c **** 
 451:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 452:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 453:Core/Src/main.c **** }
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s 			page 18


 267              		.loc 1 453 1 is_stmt 0 view .LVU84
 268 00cc 08B0     		add	sp, sp, #32
 269              		.cfi_def_cfa_offset 24
 270              		@ sp needed
 271 00ce BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 272              	.L9:
 273 00d2 00BF     		.align	2
 274              	.L8:
 275 00d4 00380240 		.word	1073887232
 276 00d8 00000240 		.word	1073872896
 277 00dc 00040240 		.word	1073873920
 278 00e0 00080240 		.word	1073874944
 279              		.cfi_endproc
 280              	.LFE144:
 282              		.section	.rodata.HAL_UARTEx_RxEventCallback.str1.4,"aMS",%progbits,1
 283              		.align	2
 284              	.LC0:
 285 0000 0A00     		.ascii	"\012\000"
 286 0002 0000     		.align	2
 287              	.LC1:
 288 0004 0A25643A 		.ascii	"\012%d:%d:%d,\000"
 288      25643A25 
 288      642C00
 289 000f 00       		.align	2
 290              	.LC2:
 291 0010 2825642C 		.ascii	"(%d,%d),\000"
 291      2564292C 
 291      00
 292 0019 000000   		.align	2
 293              	.LC3:
 294 001c 54656D70 		.ascii	"Temperature/pressure reading failed\012\000"
 294      65726174 
 294      7572652F 
 294      70726573 
 294      73757265 
 295              		.global	__aeabi_f2d
 296              		.global	__aeabi_dsub
 297              		.global	__aeabi_dmul
 298              		.global	__aeabi_d2f
 299 0041 000000   		.align	2
 300              	.LC4:
 301 0044 25732C25 		.ascii	"%s,%s,%s,%s\000"
 301      732C2573 
 301      2C257300 
 302              		.section	.text.HAL_UARTEx_RxEventCallback,"ax",%progbits
 303              		.align	1
 304              		.global	HAL_UARTEx_RxEventCallback
 305              		.syntax unified
 306              		.thumb
 307              		.thumb_func
 309              	HAL_UARTEx_RxEventCallback:
 310              	.LVL12:
 311              	.LFB145:
 454:Core/Src/main.c **** 
 455:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 456:Core/Src/main.c **** void HAL_UARTEx_RxEventCallback(UART_HandleTypeDef *huart, uint16_t Size) {
 312              		.loc 1 456 75 is_stmt 1 view -0
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s 			page 19


 313              		.cfi_startproc
 314              		@ args = 0, pretend = 0, frame = 72
 315              		@ frame_needed = 0, uses_anonymous_args = 0
 316              		.loc 1 456 75 is_stmt 0 view .LVU86
 317 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 318              		.cfi_def_cfa_offset 24
 319              		.cfi_offset 4, -24
 320              		.cfi_offset 5, -20
 321              		.cfi_offset 6, -16
 322              		.cfi_offset 7, -12
 323              		.cfi_offset 8, -8
 324              		.cfi_offset 14, -4
 325 0004 94B0     		sub	sp, sp, #80
 326              		.cfi_def_cfa_offset 104
 457:Core/Src/main.c ****   //Set a flag high when the GPS sends data
 458:Core/Src/main.c ****   flag = 1;
 327              		.loc 1 458 3 is_stmt 1 view .LVU87
 328              		.loc 1 458 8 is_stmt 0 view .LVU88
 329 0006 6C4B     		ldr	r3, .L18+16
 330 0008 0122     		movs	r2, #1
 331 000a 1A70     		strb	r2, [r3]
 459:Core/Src/main.c **** 
 460:Core/Src/main.c ****   //Set memory of line_out to emtpy
 461:Core/Src/main.c ****   //memset(line_out, '\0', sizeof(line_out));
 462:Core/Src/main.c ****   memset(transmit_data, '\0', sizeof(transmit_data));
 332              		.loc 1 462 3 is_stmt 1 view .LVU89
 333 000c 4FF48072 		mov	r2, #256
 334 0010 0021     		movs	r1, #0
 335              	.LVL13:
 336              		.loc 1 462 3 is_stmt 0 view .LVU90
 337 0012 6A48     		ldr	r0, .L18+20
 338              	.LVL14:
 339              		.loc 1 462 3 view .LVU91
 340 0014 FFF7FEFF 		bl	memset
 341              	.LVL15:
 463:Core/Src/main.c **** 
 464:Core/Src/main.c ****   //Copy a new line character to line_out
 465:Core/Src/main.c ****   //memcpy(line_out, "\r\n\n", sizeof("\r\n\n"));
 466:Core/Src/main.c ****   //memcpy(transmit_data, "\r\n\n", sizeof("\r\n\n"));
 467:Core/Src/main.c **** 
 468:Core/Src/main.c ****   //Transmit the data over uart2
 469:Core/Src/main.c ****   //HAL_UART_Transmit(&huart2, (uint8_t*)line_out, sizeof(line_out)/sizeof(line_out[0]), 1000);
 470:Core/Src/main.c **** 
 471:Core/Src/main.c **** 
 472:Core/Src/main.c ****   
 473:Core/Src/main.c ****   //Search for the \n character
 474:Core/Src/main.c ****   uint8_t *token = strtok(gps_raw, "\n");
 342              		.loc 1 474 3 is_stmt 1 view .LVU92
 343              		.loc 1 474 20 is_stmt 0 view .LVU93
 344 0018 6949     		ldr	r1, .L18+24
 345 001a 6A48     		ldr	r0, .L18+28
 346 001c FFF7FEFF 		bl	strtok
 347              	.LVL16:
 475:Core/Src/main.c **** 
 476:Core/Src/main.c ****   if (token == NULL) {
 348              		.loc 1 476 3 is_stmt 1 view .LVU94
 349              		.loc 1 476 6 is_stmt 0 view .LVU95
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s 			page 20


 350 0020 48B1     		cbz	r0, .L11
 351 0022 0146     		mov	r1, r0
 352              	.LBB7:
 477:Core/Src/main.c ****     //break
 478:Core/Src/main.c ****   } else {
 479:Core/Src/main.c ****     //memset(line, '\0', sizeof(line));
 480:Core/Src/main.c ****     strcpy(line, token);
 353              		.loc 1 480 5 is_stmt 1 view .LVU96
 354 0024 684C     		ldr	r4, .L18+32
 355 0026 2046     		mov	r0, r4
 356              	.LVL17:
 357              		.loc 1 480 5 is_stmt 0 view .LVU97
 358 0028 FFF7FEFF 		bl	strcpy
 359              	.LVL18:
 481:Core/Src/main.c ****     struct minmea_sentence_rmc frame;
 360              		.loc 1 481 5 is_stmt 1 view .LVU98
 482:Core/Src/main.c ****     if (minmea_parse_rmc(&frame, line)) {
 361              		.loc 1 482 5 view .LVU99
 362              		.loc 1 482 9 is_stmt 0 view .LVU100
 363 002c 2146     		mov	r1, r4
 364 002e 02A8     		add	r0, sp, #8
 365 0030 FFF7FEFF 		bl	minmea_parse_rmc
 366              	.LVL19:
 367              		.loc 1 482 8 view .LVU101
 368 0034 30B9     		cbnz	r0, .L17
 369              	.L11:
 370              	.LBE7:
 483:Core/Src/main.c ****       //memset(line_out, '\0', sizeof(line_out));
 484:Core/Src/main.c ****       sprintf(transmit_data + strlen(transmit_data),"\n%d:%d:%d,",frame.time.hours, frame.time.minu
 485:Core/Src/main.c ****       //HAL_UART_Transmit(&huart2, (uint8_t*)line_out, sizeof(line_out)/sizeof(line_out[0]), 1000);
 486:Core/Src/main.c **** 
 487:Core/Src/main.c ****       //memset(line_out, '\0', sizeof(line_out));
 488:Core/Src/main.c ****       sprintf(transmit_data + strlen(transmit_data), "(%d,%d),",minmea_rescale(&frame.latitude, 100
 489:Core/Src/main.c ****       //HAL_UART_Transmit(&huart2, (uint8_t*)line_out, sizeof(line_out)/sizeof(line_out[0]), 1000);
 490:Core/Src/main.c ****       
 491:Core/Src/main.c ****     }
 492:Core/Src/main.c ****   }
 493:Core/Src/main.c **** 
 494:Core/Src/main.c ****   //Set gps_raw data register to empty
 495:Core/Src/main.c ****   memset(gps_raw, '\0', sizeof(gps_raw));
 371              		.loc 1 495 3 is_stmt 1 view .LVU102
 372 0036 4FF40072 		mov	r2, #512
 373 003a 0021     		movs	r1, #0
 374 003c 6148     		ldr	r0, .L18+28
 375 003e FFF7FEFF 		bl	memset
 376              	.LVL20:
 496:Core/Src/main.c **** 
 497:Core/Src/main.c **** 
 498:Core/Src/main.c **** 
 499:Core/Src/main.c ****   	//HAL_Delay(100);
 500:Core/Src/main.c **** 	while (!bmp280_read_float(&bmp280, &temperature, &pressure, &humidity)) {
 377              		.loc 1 500 2 view .LVU103
 378              		.loc 1 500 8 is_stmt 0 view .LVU104
 379 0042 42E0     		b	.L13
 380              	.L17:
 381              	.LBB8:
 484:Core/Src/main.c ****       //HAL_UART_Transmit(&huart2, (uint8_t*)line_out, sizeof(line_out)/sizeof(line_out[0]), 1000);
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s 			page 21


 382              		.loc 1 484 7 is_stmt 1 view .LVU105
 484:Core/Src/main.c ****       //HAL_UART_Transmit(&huart2, (uint8_t*)line_out, sizeof(line_out)/sizeof(line_out[0]), 1000);
 383              		.loc 1 484 31 is_stmt 0 view .LVU106
 384 0044 5D4C     		ldr	r4, .L18+20
 385 0046 2046     		mov	r0, r4
 386 0048 FFF7FEFF 		bl	strlen
 387              	.LVL21:
 484:Core/Src/main.c ****       //HAL_UART_Transmit(&huart2, (uint8_t*)line_out, sizeof(line_out)/sizeof(line_out[0]), 1000);
 388              		.loc 1 484 7 view .LVU107
 389 004c 049B     		ldr	r3, [sp, #16]
 390 004e 0093     		str	r3, [sp]
 391 0050 039B     		ldr	r3, [sp, #12]
 392 0052 029A     		ldr	r2, [sp, #8]
 393 0054 5D49     		ldr	r1, .L18+36
 394 0056 2044     		add	r0, r0, r4
 395 0058 FFF7FEFF 		bl	sprintf
 396              	.LVL22:
 488:Core/Src/main.c ****       //HAL_UART_Transmit(&huart2, (uint8_t*)line_out, sizeof(line_out)/sizeof(line_out[0]), 1000);
 397              		.loc 1 488 7 is_stmt 1 view .LVU108
 488:Core/Src/main.c ****       //HAL_UART_Transmit(&huart2, (uint8_t*)line_out, sizeof(line_out)/sizeof(line_out[0]), 1000);
 398              		.loc 1 488 31 is_stmt 0 view .LVU109
 399 005c 2046     		mov	r0, r4
 400 005e FFF7FEFF 		bl	strlen
 401              	.LVL23:
 402 0062 0546     		mov	r5, r0
 488:Core/Src/main.c ****       //HAL_UART_Transmit(&huart2, (uint8_t*)line_out, sizeof(line_out)/sizeof(line_out[0]), 1000);
 403              		.loc 1 488 7 view .LVU110
 404 0064 4FF47A71 		mov	r1, #1000
 405 0068 07A8     		add	r0, sp, #28
 406 006a FFF7FEFF 		bl	minmea_rescale
 407              	.LVL24:
 408 006e 0646     		mov	r6, r0
 409 0070 4FF47A71 		mov	r1, #1000
 410 0074 09A8     		add	r0, sp, #36
 411 0076 FFF7FEFF 		bl	minmea_rescale
 412              	.LVL25:
 413 007a 0346     		mov	r3, r0
 414 007c 3246     		mov	r2, r6
 415 007e 5449     		ldr	r1, .L18+40
 416 0080 6019     		adds	r0, r4, r5
 417 0082 FFF7FEFF 		bl	sprintf
 418              	.LVL26:
 419 0086 D6E7     		b	.L11
 420              	.L15:
 421              	.LBE8:
 501:Core/Src/main.c **** 	  size = sprintf(transmit_data + strlen(transmit_data),"Temperature/pressure reading failed\n");
 422              		.loc 1 501 4 is_stmt 1 view .LVU111
 423              		.loc 1 501 35 is_stmt 0 view .LVU112
 424 0088 4C4C     		ldr	r4, .L18+20
 425 008a 2046     		mov	r0, r4
 426 008c FFF7FEFF 		bl	strlen
 427              	.LVL27:
 428              		.loc 1 501 11 view .LVU113
 429 0090 504D     		ldr	r5, .L18+44
 430 0092 04EB000C 		add	ip, r4, r0
 431 0096 05F1200E 		add	lr, r5, #32
 432              	.L14:
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s 			page 22


 433 009a 2C46     		mov	r4, r5
 434 009c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 435 009e CCF80000 		str	r0, [ip]	@ unaligned
 436 00a2 CCF80410 		str	r1, [ip, #4]	@ unaligned
 437 00a6 CCF80820 		str	r2, [ip, #8]	@ unaligned
 438 00aa CCF80C30 		str	r3, [ip, #12]	@ unaligned
 439 00ae 2546     		mov	r5, r4
 440 00b0 0CF1100C 		add	ip, ip, #16
 441 00b4 7445     		cmp	r4, lr
 442 00b6 F0D1     		bne	.L14
 443 00b8 2068     		ldr	r0, [r4]
 444 00ba CCF80000 		str	r0, [ip]	@ unaligned
 445 00be 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 446 00c0 8CF80430 		strb	r3, [ip, #4]
 447              		.loc 1 501 9 view .LVU114
 448 00c4 444B     		ldr	r3, .L18+48
 449 00c6 2422     		movs	r2, #36
 450 00c8 1A80     		strh	r2, [r3]	@ movhi
 451              	.L13:
 500:Core/Src/main.c **** 	  size = sprintf(transmit_data + strlen(transmit_data),"Temperature/pressure reading failed\n");
 452              		.loc 1 500 9 is_stmt 1 view .LVU115
 500:Core/Src/main.c **** 	  size = sprintf(transmit_data + strlen(transmit_data),"Temperature/pressure reading failed\n");
 453              		.loc 1 500 10 is_stmt 0 view .LVU116
 454 00ca 444B     		ldr	r3, .L18+52
 455 00cc 444A     		ldr	r2, .L18+56
 456 00ce 4549     		ldr	r1, .L18+60
 457 00d0 4548     		ldr	r0, .L18+64
 458 00d2 FFF7FEFF 		bl	bmp280_read_float
 459              	.LVL28:
 500:Core/Src/main.c **** 	  size = sprintf(transmit_data + strlen(transmit_data),"Temperature/pressure reading failed\n");
 460              		.loc 1 500 9 view .LVU117
 461 00d6 0028     		cmp	r0, #0
 462 00d8 D6D0     		beq	.L15
 502:Core/Src/main.c **** 	  //HAL_UART_Transmit(&huart2, Data, size, 1000);
 503:Core/Src/main.c **** 	}
 504:Core/Src/main.c **** 
 505:Core/Src/main.c **** 
 506:Core/Src/main.c **** 
 507:Core/Src/main.c **** 
 508:Core/Src/main.c ****   //altitude = H_b + (T_b/L_b)*(pow((pressure/P_b),(-1*R*L_b)/(G_0*M))-1);
 509:Core/Src/main.c **** 
 510:Core/Src/main.c ****   altitude = 44330*(1-pow((pressure/P_b),(1/5.255)));
 463              		.loc 1 510 3 is_stmt 1 view .LVU118
 464              		.loc 1 510 36 is_stmt 0 view .LVU119
 465 00da 414C     		ldr	r4, .L18+56
 466 00dc 94ED007A 		vldr.32	s14, [r4]
 467 00e0 424B     		ldr	r3, .L18+68
 468 00e2 D3ED007A 		vldr.32	s15, [r3]
 469              		.loc 1 510 23 view .LVU120
 470 00e6 C7EE277A 		vdiv.f32	s15, s14, s15
 471 00ea 17EE900A 		vmov	r0, s15
 472 00ee FFF7FEFF 		bl	__aeabi_f2d
 473              	.LVL29:
 474 00f2 9FED2D1B 		vldr.64	d1, .L18
 475 00f6 41EC100B 		vmov	d0, r0, r1
 476 00fa FFF7FEFF 		bl	pow
 477              	.LVL30:
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s 			page 23


 478 00fe 53EC102B 		vmov	r2, r3, d0
 479              		.loc 1 510 22 view .LVU121
 480 0102 0020     		movs	r0, #0
 481 0104 3A49     		ldr	r1, .L18+72
 482 0106 FFF7FEFF 		bl	__aeabi_dsub
 483              	.LVL31:
 484              		.loc 1 510 19 view .LVU122
 485 010a 29A3     		adr	r3, .L18+8
 486 010c D3E90023 		ldrd	r2, [r3]
 487 0110 FFF7FEFF 		bl	__aeabi_dmul
 488              	.LVL32:
 489 0114 FFF7FEFF 		bl	__aeabi_d2f
 490              	.LVL33:
 491              		.loc 1 510 12 view .LVU123
 492 0118 364B     		ldr	r3, .L18+76
 493 011a 1860     		str	r0, [r3]	@ float
 511:Core/Src/main.c **** 
 512:Core/Src/main.c ****   gcvt(altitude, 6, sAltitude);
 494              		.loc 1 512 3 is_stmt 1 view .LVU124
 495 011c DFF8EC80 		ldr	r8, .L18+100
 496 0120 FFF7FEFF 		bl	__aeabi_f2d
 497              	.LVL34:
 498 0124 41EC100B 		vmov	d0, r0, r1
 499 0128 4146     		mov	r1, r8
 500 012a 0620     		movs	r0, #6
 501 012c FFF7FEFF 		bl	gcvt
 502              	.LVL35:
 513:Core/Src/main.c ****   gcvt(pressure, 8, sPressure);
 503              		.loc 1 513 3 view .LVU125
 504 0130 314D     		ldr	r5, .L18+80
 505 0132 2068     		ldr	r0, [r4]	@ float
 506 0134 FFF7FEFF 		bl	__aeabi_f2d
 507              	.LVL36:
 508 0138 41EC100B 		vmov	d0, r0, r1
 509 013c 2946     		mov	r1, r5
 510 013e 0820     		movs	r0, #8
 511 0140 FFF7FEFF 		bl	gcvt
 512              	.LVL37:
 514:Core/Src/main.c ****   gcvt(temperature, 4, sTemperature);
 513              		.loc 1 514 3 view .LVU126
 514 0144 2D4E     		ldr	r6, .L18+84
 515 0146 274B     		ldr	r3, .L18+60
 516 0148 1868     		ldr	r0, [r3]	@ float
 517 014a FFF7FEFF 		bl	__aeabi_f2d
 518              	.LVL38:
 519 014e 41EC100B 		vmov	d0, r0, r1
 520 0152 3146     		mov	r1, r6
 521 0154 0420     		movs	r0, #4
 522 0156 FFF7FEFF 		bl	gcvt
 523              	.LVL39:
 515:Core/Src/main.c ****   gcvt(humidity, 4, sHumidity);
 524              		.loc 1 515 3 view .LVU127
 525 015a 294F     		ldr	r7, .L18+88
 526 015c 1F4B     		ldr	r3, .L18+52
 527 015e 1868     		ldr	r0, [r3]	@ float
 528 0160 FFF7FEFF 		bl	__aeabi_f2d
 529              	.LVL40:
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s 			page 24


 530 0164 41EC100B 		vmov	d0, r0, r1
 531 0168 3946     		mov	r1, r7
 532 016a 0420     		movs	r0, #4
 533 016c FFF7FEFF 		bl	gcvt
 534              	.LVL41:
 516:Core/Src/main.c **** 
 517:Core/Src/main.c **** 	size = sprintf(transmit_data + strlen(transmit_data),"%s,%s,%s,%s",sPressure, sTemperature, sHumid
 535              		.loc 1 517 2 view .LVU128
 536              		.loc 1 517 33 is_stmt 0 view .LVU129
 537 0170 124C     		ldr	r4, .L18+20
 538 0172 2046     		mov	r0, r4
 539 0174 FFF7FEFF 		bl	strlen
 540              	.LVL42:
 541              		.loc 1 517 9 view .LVU130
 542 0178 CDF80480 		str	r8, [sp, #4]
 543 017c 0097     		str	r7, [sp]
 544 017e 3346     		mov	r3, r6
 545 0180 2A46     		mov	r2, r5
 546 0182 2049     		ldr	r1, .L18+92
 547 0184 2044     		add	r0, r0, r4
 548 0186 FFF7FEFF 		bl	sprintf
 549              	.LVL43:
 550              		.loc 1 517 7 view .LVU131
 551 018a 134B     		ldr	r3, .L18+48
 552 018c 1880     		strh	r0, [r3]	@ movhi
 518:Core/Src/main.c **** 	HAL_UART_Transmit(&huart2, transmit_data, sizeof(transmit_data)/sizeof(transmit_data[0]), 1000);
 553              		.loc 1 518 2 is_stmt 1 view .LVU132
 554 018e 4FF47A73 		mov	r3, #1000
 555 0192 4FF48072 		mov	r2, #256
 556 0196 2146     		mov	r1, r4
 557 0198 1B48     		ldr	r0, .L18+96
 558 019a FFF7FEFF 		bl	HAL_UART_Transmit
 559              	.LVL44:
 519:Core/Src/main.c **** 
 520:Core/Src/main.c **** 
 521:Core/Src/main.c **** 
 522:Core/Src/main.c ****   //Set flag low to indicate that data transfer is done
 523:Core/Src/main.c ****   
 524:Core/Src/main.c ****   //Send interrupt when data from GPS is sent again
 525:Core/Src/main.c ****   //HAL_UARTEx_ReceiveToIdle_IT(&huart1,(uint8_t*)gps_raw, 512);
 526:Core/Src/main.c **** 
 527:Core/Src/main.c **** }
 560              		.loc 1 527 1 is_stmt 0 view .LVU133
 561 019e 14B0     		add	sp, sp, #80
 562              		.cfi_def_cfa_offset 24
 563              		@ sp needed
 564 01a0 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 565              	.L19:
 566 01a4 AFF30080 		.align	3
 567              	.L18:
 568 01a8 6C45D9CC 		.word	-858176148
 569 01ac 955BC83F 		.word	1070095253
 570 01b0 00000000 		.word	0
 571 01b4 40A5E540 		.word	1088791872
 572 01b8 00000000 		.word	flag
 573 01bc 00000000 		.word	transmit_data
 574 01c0 00000000 		.word	.LC0
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s 			page 25


 575 01c4 00000000 		.word	gps_raw
 576 01c8 00000000 		.word	line
 577 01cc 04000000 		.word	.LC1
 578 01d0 10000000 		.word	.LC2
 579 01d4 1C000000 		.word	.LC3
 580 01d8 00000000 		.word	size
 581 01dc 00000000 		.word	humidity
 582 01e0 00000000 		.word	pressure
 583 01e4 00000000 		.word	temperature
 584 01e8 00000000 		.word	bmp280
 585 01ec 00000000 		.word	P_b
 586 01f0 0000F03F 		.word	1072693248
 587 01f4 00000000 		.word	altitude
 588 01f8 00000000 		.word	sPressure
 589 01fc 00000000 		.word	sTemperature
 590 0200 00000000 		.word	sHumidity
 591 0204 44000000 		.word	.LC4
 592 0208 00000000 		.word	huart2
 593 020c 00000000 		.word	sAltitude
 594              		.cfi_endproc
 595              	.LFE145:
 597              		.section	.text.Error_Handler,"ax",%progbits
 598              		.align	1
 599              		.global	Error_Handler
 600              		.syntax unified
 601              		.thumb
 602              		.thumb_func
 604              	Error_Handler:
 605              	.LFB146:
 528:Core/Src/main.c **** 
 529:Core/Src/main.c **** /* USER CODE END 4 */
 530:Core/Src/main.c **** 
 531:Core/Src/main.c **** /**
 532:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 533:Core/Src/main.c ****   * @retval None
 534:Core/Src/main.c ****   */
 535:Core/Src/main.c **** void Error_Handler(void)
 536:Core/Src/main.c **** {
 606              		.loc 1 536 1 is_stmt 1 view -0
 607              		.cfi_startproc
 608              		@ Volatile: function does not return.
 609              		@ args = 0, pretend = 0, frame = 0
 610              		@ frame_needed = 0, uses_anonymous_args = 0
 611              		@ link register save eliminated.
 537:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 538:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 539:Core/Src/main.c ****   __disable_irq();
 612              		.loc 1 539 3 view .LVU135
 613              	.LBB9:
 614              	.LBI9:
 615              		.file 3 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s 			page 26


   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s 			page 27


  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s 			page 28


 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 616              		.loc 3 140 27 view .LVU136
 617              	.LBB10:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 618              		.loc 3 142 3 view .LVU137
 619              		.syntax unified
 620              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 621 0000 72B6     		cpsid i
 622              	@ 0 "" 2
 623              		.thumb
 624              		.syntax unified
 625              	.L21:
 626              	.LBE10:
 627              	.LBE9:
 540:Core/Src/main.c ****   while (1)
 628              		.loc 1 540 3 discriminator 1 view .LVU138
 541:Core/Src/main.c ****   {
 542:Core/Src/main.c ****   }
 629              		.loc 1 542 3 discriminator 1 view .LVU139
 540:Core/Src/main.c ****   while (1)
 630              		.loc 1 540 9 discriminator 1 view .LVU140
 631 0002 FEE7     		b	.L21
 632              		.cfi_endproc
 633              	.LFE146:
 635              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 636              		.align	1
 637              		.syntax unified
 638              		.thumb
 639              		.thumb_func
 641              	MX_USART1_UART_Init:
 642              	.LFB142:
 339:Core/Src/main.c **** 
 643              		.loc 1 339 1 view -0
 644              		.cfi_startproc
 645              		@ args = 0, pretend = 0, frame = 0
 646              		@ frame_needed = 0, uses_anonymous_args = 0
 647 0000 08B5     		push	{r3, lr}
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s 			page 29


 648              		.cfi_def_cfa_offset 8
 649              		.cfi_offset 3, -8
 650              		.cfi_offset 14, -4
 348:Core/Src/main.c ****   huart1.Init.BaudRate = 9600;
 651              		.loc 1 348 3 view .LVU142
 348:Core/Src/main.c ****   huart1.Init.BaudRate = 9600;
 652              		.loc 1 348 19 is_stmt 0 view .LVU143
 653 0002 0A48     		ldr	r0, .L26
 654 0004 0A4B     		ldr	r3, .L26+4
 655 0006 0360     		str	r3, [r0]
 349:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 656              		.loc 1 349 3 is_stmt 1 view .LVU144
 349:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 657              		.loc 1 349 24 is_stmt 0 view .LVU145
 658 0008 4FF41653 		mov	r3, #9600
 659 000c 4360     		str	r3, [r0, #4]
 350:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 660              		.loc 1 350 3 is_stmt 1 view .LVU146
 350:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 661              		.loc 1 350 26 is_stmt 0 view .LVU147
 662 000e 0023     		movs	r3, #0
 663 0010 8360     		str	r3, [r0, #8]
 351:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 664              		.loc 1 351 3 is_stmt 1 view .LVU148
 351:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 665              		.loc 1 351 24 is_stmt 0 view .LVU149
 666 0012 C360     		str	r3, [r0, #12]
 352:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 667              		.loc 1 352 3 is_stmt 1 view .LVU150
 352:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 668              		.loc 1 352 22 is_stmt 0 view .LVU151
 669 0014 0361     		str	r3, [r0, #16]
 353:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 670              		.loc 1 353 3 is_stmt 1 view .LVU152
 353:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 671              		.loc 1 353 20 is_stmt 0 view .LVU153
 672 0016 0C22     		movs	r2, #12
 673 0018 4261     		str	r2, [r0, #20]
 354:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 674              		.loc 1 354 3 is_stmt 1 view .LVU154
 354:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 675              		.loc 1 354 25 is_stmt 0 view .LVU155
 676 001a 8361     		str	r3, [r0, #24]
 355:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 677              		.loc 1 355 3 is_stmt 1 view .LVU156
 355:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 678              		.loc 1 355 28 is_stmt 0 view .LVU157
 679 001c C361     		str	r3, [r0, #28]
 356:Core/Src/main.c ****   {
 680              		.loc 1 356 3 is_stmt 1 view .LVU158
 356:Core/Src/main.c ****   {
 681              		.loc 1 356 7 is_stmt 0 view .LVU159
 682 001e FFF7FEFF 		bl	HAL_UART_Init
 683              	.LVL45:
 356:Core/Src/main.c ****   {
 684              		.loc 1 356 6 view .LVU160
 685 0022 00B9     		cbnz	r0, .L25
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s 			page 30


 364:Core/Src/main.c **** 
 686              		.loc 1 364 1 view .LVU161
 687 0024 08BD     		pop	{r3, pc}
 688              	.L25:
 358:Core/Src/main.c ****   }
 689              		.loc 1 358 5 is_stmt 1 view .LVU162
 690 0026 FFF7FEFF 		bl	Error_Handler
 691              	.LVL46:
 692              	.L27:
 693 002a 00BF     		.align	2
 694              	.L26:
 695 002c 00000000 		.word	huart1
 696 0030 00100140 		.word	1073811456
 697              		.cfi_endproc
 698              	.LFE142:
 700              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 701              		.align	1
 702              		.syntax unified
 703              		.thumb
 704              		.thumb_func
 706              	MX_USART2_UART_Init:
 707              	.LFB143:
 372:Core/Src/main.c **** 
 708              		.loc 1 372 1 view -0
 709              		.cfi_startproc
 710              		@ args = 0, pretend = 0, frame = 0
 711              		@ frame_needed = 0, uses_anonymous_args = 0
 712 0000 08B5     		push	{r3, lr}
 713              		.cfi_def_cfa_offset 8
 714              		.cfi_offset 3, -8
 715              		.cfi_offset 14, -4
 381:Core/Src/main.c ****   huart2.Init.BaudRate = 230400;
 716              		.loc 1 381 3 view .LVU164
 381:Core/Src/main.c ****   huart2.Init.BaudRate = 230400;
 717              		.loc 1 381 19 is_stmt 0 view .LVU165
 718 0002 0A48     		ldr	r0, .L32
 719 0004 0A4B     		ldr	r3, .L32+4
 720 0006 0360     		str	r3, [r0]
 382:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 721              		.loc 1 382 3 is_stmt 1 view .LVU166
 382:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 722              		.loc 1 382 24 is_stmt 0 view .LVU167
 723 0008 4FF46133 		mov	r3, #230400
 724 000c 4360     		str	r3, [r0, #4]
 383:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 725              		.loc 1 383 3 is_stmt 1 view .LVU168
 383:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 726              		.loc 1 383 26 is_stmt 0 view .LVU169
 727 000e 0023     		movs	r3, #0
 728 0010 8360     		str	r3, [r0, #8]
 384:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 729              		.loc 1 384 3 is_stmt 1 view .LVU170
 384:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 730              		.loc 1 384 24 is_stmt 0 view .LVU171
 731 0012 C360     		str	r3, [r0, #12]
 385:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 732              		.loc 1 385 3 is_stmt 1 view .LVU172
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s 			page 31


 385:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 733              		.loc 1 385 22 is_stmt 0 view .LVU173
 734 0014 0361     		str	r3, [r0, #16]
 386:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 735              		.loc 1 386 3 is_stmt 1 view .LVU174
 386:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 736              		.loc 1 386 20 is_stmt 0 view .LVU175
 737 0016 0C22     		movs	r2, #12
 738 0018 4261     		str	r2, [r0, #20]
 387:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 739              		.loc 1 387 3 is_stmt 1 view .LVU176
 387:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 740              		.loc 1 387 25 is_stmt 0 view .LVU177
 741 001a 8361     		str	r3, [r0, #24]
 388:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 742              		.loc 1 388 3 is_stmt 1 view .LVU178
 388:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 743              		.loc 1 388 28 is_stmt 0 view .LVU179
 744 001c C361     		str	r3, [r0, #28]
 389:Core/Src/main.c ****   {
 745              		.loc 1 389 3 is_stmt 1 view .LVU180
 389:Core/Src/main.c ****   {
 746              		.loc 1 389 7 is_stmt 0 view .LVU181
 747 001e FFF7FEFF 		bl	HAL_UART_Init
 748              	.LVL47:
 389:Core/Src/main.c ****   {
 749              		.loc 1 389 6 view .LVU182
 750 0022 00B9     		cbnz	r0, .L31
 397:Core/Src/main.c **** 
 751              		.loc 1 397 1 view .LVU183
 752 0024 08BD     		pop	{r3, pc}
 753              	.L31:
 391:Core/Src/main.c ****   }
 754              		.loc 1 391 5 is_stmt 1 view .LVU184
 755 0026 FFF7FEFF 		bl	Error_Handler
 756              	.LVL48:
 757              	.L33:
 758 002a 00BF     		.align	2
 759              	.L32:
 760 002c 00000000 		.word	huart2
 761 0030 00440040 		.word	1073759232
 762              		.cfi_endproc
 763              	.LFE143:
 765              		.section	.text.MX_I2C1_Init,"ax",%progbits
 766              		.align	1
 767              		.syntax unified
 768              		.thumb
 769              		.thumb_func
 771              	MX_I2C1_Init:
 772              	.LFB140:
 267:Core/Src/main.c **** 
 773              		.loc 1 267 1 view -0
 774              		.cfi_startproc
 775              		@ args = 0, pretend = 0, frame = 0
 776              		@ frame_needed = 0, uses_anonymous_args = 0
 777 0000 08B5     		push	{r3, lr}
 778              		.cfi_def_cfa_offset 8
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s 			page 32


 779              		.cfi_offset 3, -8
 780              		.cfi_offset 14, -4
 276:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 781              		.loc 1 276 3 view .LVU186
 276:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 782              		.loc 1 276 18 is_stmt 0 view .LVU187
 783 0002 0A48     		ldr	r0, .L38
 784 0004 0A4B     		ldr	r3, .L38+4
 785 0006 0360     		str	r3, [r0]
 277:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 786              		.loc 1 277 3 is_stmt 1 view .LVU188
 277:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 787              		.loc 1 277 25 is_stmt 0 view .LVU189
 788 0008 0A4B     		ldr	r3, .L38+8
 789 000a 4360     		str	r3, [r0, #4]
 278:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 790              		.loc 1 278 3 is_stmt 1 view .LVU190
 278:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 791              		.loc 1 278 24 is_stmt 0 view .LVU191
 792 000c 0023     		movs	r3, #0
 793 000e 8360     		str	r3, [r0, #8]
 279:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 794              		.loc 1 279 3 is_stmt 1 view .LVU192
 279:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 795              		.loc 1 279 26 is_stmt 0 view .LVU193
 796 0010 C360     		str	r3, [r0, #12]
 280:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 797              		.loc 1 280 3 is_stmt 1 view .LVU194
 280:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 798              		.loc 1 280 29 is_stmt 0 view .LVU195
 799 0012 4FF48042 		mov	r2, #16384
 800 0016 0261     		str	r2, [r0, #16]
 281:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 801              		.loc 1 281 3 is_stmt 1 view .LVU196
 281:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 802              		.loc 1 281 30 is_stmt 0 view .LVU197
 803 0018 4361     		str	r3, [r0, #20]
 282:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 804              		.loc 1 282 3 is_stmt 1 view .LVU198
 282:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 805              		.loc 1 282 26 is_stmt 0 view .LVU199
 806 001a 8361     		str	r3, [r0, #24]
 283:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 807              		.loc 1 283 3 is_stmt 1 view .LVU200
 283:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 808              		.loc 1 283 30 is_stmt 0 view .LVU201
 809 001c C361     		str	r3, [r0, #28]
 284:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 810              		.loc 1 284 3 is_stmt 1 view .LVU202
 284:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 811              		.loc 1 284 28 is_stmt 0 view .LVU203
 812 001e 0362     		str	r3, [r0, #32]
 285:Core/Src/main.c ****   {
 813              		.loc 1 285 3 is_stmt 1 view .LVU204
 285:Core/Src/main.c ****   {
 814              		.loc 1 285 7 is_stmt 0 view .LVU205
 815 0020 FFF7FEFF 		bl	HAL_I2C_Init
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s 			page 33


 816              	.LVL49:
 285:Core/Src/main.c ****   {
 817              		.loc 1 285 6 view .LVU206
 818 0024 00B9     		cbnz	r0, .L37
 293:Core/Src/main.c **** 
 819              		.loc 1 293 1 view .LVU207
 820 0026 08BD     		pop	{r3, pc}
 821              	.L37:
 287:Core/Src/main.c ****   }
 822              		.loc 1 287 5 is_stmt 1 view .LVU208
 823 0028 FFF7FEFF 		bl	Error_Handler
 824              	.LVL50:
 825              	.L39:
 826              		.align	2
 827              	.L38:
 828 002c 00000000 		.word	hi2c1
 829 0030 00540040 		.word	1073763328
 830 0034 A0860100 		.word	100000
 831              		.cfi_endproc
 832              	.LFE140:
 834              		.section	.text.MX_SPI3_Init,"ax",%progbits
 835              		.align	1
 836              		.syntax unified
 837              		.thumb
 838              		.thumb_func
 840              	MX_SPI3_Init:
 841              	.LFB141:
 301:Core/Src/main.c **** 
 842              		.loc 1 301 1 view -0
 843              		.cfi_startproc
 844              		@ args = 0, pretend = 0, frame = 0
 845              		@ frame_needed = 0, uses_anonymous_args = 0
 846 0000 08B5     		push	{r3, lr}
 847              		.cfi_def_cfa_offset 8
 848              		.cfi_offset 3, -8
 849              		.cfi_offset 14, -4
 311:Core/Src/main.c ****   hspi3.Init.Mode = SPI_MODE_MASTER;
 850              		.loc 1 311 3 view .LVU210
 311:Core/Src/main.c ****   hspi3.Init.Mode = SPI_MODE_MASTER;
 851              		.loc 1 311 18 is_stmt 0 view .LVU211
 852 0002 0D48     		ldr	r0, .L44
 853 0004 0D4B     		ldr	r3, .L44+4
 854 0006 0360     		str	r3, [r0]
 312:Core/Src/main.c ****   hspi3.Init.Direction = SPI_DIRECTION_2LINES;
 855              		.loc 1 312 3 is_stmt 1 view .LVU212
 312:Core/Src/main.c ****   hspi3.Init.Direction = SPI_DIRECTION_2LINES;
 856              		.loc 1 312 19 is_stmt 0 view .LVU213
 857 0008 4FF48273 		mov	r3, #260
 858 000c 4360     		str	r3, [r0, #4]
 313:Core/Src/main.c ****   hspi3.Init.DataSize = SPI_DATASIZE_8BIT;
 859              		.loc 1 313 3 is_stmt 1 view .LVU214
 313:Core/Src/main.c ****   hspi3.Init.DataSize = SPI_DATASIZE_8BIT;
 860              		.loc 1 313 24 is_stmt 0 view .LVU215
 861 000e 0023     		movs	r3, #0
 862 0010 8360     		str	r3, [r0, #8]
 314:Core/Src/main.c ****   hspi3.Init.CLKPolarity = SPI_POLARITY_LOW;
 863              		.loc 1 314 3 is_stmt 1 view .LVU216
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s 			page 34


 314:Core/Src/main.c ****   hspi3.Init.CLKPolarity = SPI_POLARITY_LOW;
 864              		.loc 1 314 23 is_stmt 0 view .LVU217
 865 0012 C360     		str	r3, [r0, #12]
 315:Core/Src/main.c ****   hspi3.Init.CLKPhase = SPI_PHASE_1EDGE;
 866              		.loc 1 315 3 is_stmt 1 view .LVU218
 315:Core/Src/main.c ****   hspi3.Init.CLKPhase = SPI_PHASE_1EDGE;
 867              		.loc 1 315 26 is_stmt 0 view .LVU219
 868 0014 0361     		str	r3, [r0, #16]
 316:Core/Src/main.c ****   hspi3.Init.NSS = SPI_NSS_SOFT;
 869              		.loc 1 316 3 is_stmt 1 view .LVU220
 316:Core/Src/main.c ****   hspi3.Init.NSS = SPI_NSS_SOFT;
 870              		.loc 1 316 23 is_stmt 0 view .LVU221
 871 0016 4361     		str	r3, [r0, #20]
 317:Core/Src/main.c ****   hspi3.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 872              		.loc 1 317 3 is_stmt 1 view .LVU222
 317:Core/Src/main.c ****   hspi3.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 873              		.loc 1 317 18 is_stmt 0 view .LVU223
 874 0018 4FF40072 		mov	r2, #512
 875 001c 8261     		str	r2, [r0, #24]
 318:Core/Src/main.c ****   hspi3.Init.FirstBit = SPI_FIRSTBIT_MSB;
 876              		.loc 1 318 3 is_stmt 1 view .LVU224
 318:Core/Src/main.c ****   hspi3.Init.FirstBit = SPI_FIRSTBIT_MSB;
 877              		.loc 1 318 32 is_stmt 0 view .LVU225
 878 001e C361     		str	r3, [r0, #28]
 319:Core/Src/main.c ****   hspi3.Init.TIMode = SPI_TIMODE_DISABLE;
 879              		.loc 1 319 3 is_stmt 1 view .LVU226
 319:Core/Src/main.c ****   hspi3.Init.TIMode = SPI_TIMODE_DISABLE;
 880              		.loc 1 319 23 is_stmt 0 view .LVU227
 881 0020 0362     		str	r3, [r0, #32]
 320:Core/Src/main.c ****   hspi3.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 882              		.loc 1 320 3 is_stmt 1 view .LVU228
 320:Core/Src/main.c ****   hspi3.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 883              		.loc 1 320 21 is_stmt 0 view .LVU229
 884 0022 4362     		str	r3, [r0, #36]
 321:Core/Src/main.c ****   hspi3.Init.CRCPolynomial = 10;
 885              		.loc 1 321 3 is_stmt 1 view .LVU230
 321:Core/Src/main.c ****   hspi3.Init.CRCPolynomial = 10;
 886              		.loc 1 321 29 is_stmt 0 view .LVU231
 887 0024 8362     		str	r3, [r0, #40]
 322:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi3) != HAL_OK)
 888              		.loc 1 322 3 is_stmt 1 view .LVU232
 322:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi3) != HAL_OK)
 889              		.loc 1 322 28 is_stmt 0 view .LVU233
 890 0026 0A23     		movs	r3, #10
 891 0028 C362     		str	r3, [r0, #44]
 323:Core/Src/main.c ****   {
 892              		.loc 1 323 3 is_stmt 1 view .LVU234
 323:Core/Src/main.c ****   {
 893              		.loc 1 323 7 is_stmt 0 view .LVU235
 894 002a FFF7FEFF 		bl	HAL_SPI_Init
 895              	.LVL51:
 323:Core/Src/main.c ****   {
 896              		.loc 1 323 6 view .LVU236
 897 002e 00B9     		cbnz	r0, .L43
 331:Core/Src/main.c **** 
 898              		.loc 1 331 1 view .LVU237
 899 0030 08BD     		pop	{r3, pc}
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s 			page 35


 900              	.L43:
 325:Core/Src/main.c ****   }
 901              		.loc 1 325 5 is_stmt 1 view .LVU238
 902 0032 FFF7FEFF 		bl	Error_Handler
 903              	.LVL52:
 904              	.L45:
 905 0036 00BF     		.align	2
 906              	.L44:
 907 0038 00000000 		.word	hspi3
 908 003c 003C0040 		.word	1073757184
 909              		.cfi_endproc
 910              	.LFE141:
 912              		.section	.text.SystemClock_Config,"ax",%progbits
 913              		.align	1
 914              		.global	SystemClock_Config
 915              		.syntax unified
 916              		.thumb
 917              		.thumb_func
 919              	SystemClock_Config:
 920              	.LFB139:
 225:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 921              		.loc 1 225 1 view -0
 922              		.cfi_startproc
 923              		@ args = 0, pretend = 0, frame = 80
 924              		@ frame_needed = 0, uses_anonymous_args = 0
 925 0000 00B5     		push	{lr}
 926              		.cfi_def_cfa_offset 4
 927              		.cfi_offset 14, -4
 928 0002 95B0     		sub	sp, sp, #84
 929              		.cfi_def_cfa_offset 88
 226:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 930              		.loc 1 226 3 view .LVU240
 226:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 931              		.loc 1 226 22 is_stmt 0 view .LVU241
 932 0004 3022     		movs	r2, #48
 933 0006 0021     		movs	r1, #0
 934 0008 08A8     		add	r0, sp, #32
 935 000a FFF7FEFF 		bl	memset
 936              	.LVL53:
 227:Core/Src/main.c **** 
 937              		.loc 1 227 3 is_stmt 1 view .LVU242
 227:Core/Src/main.c **** 
 938              		.loc 1 227 22 is_stmt 0 view .LVU243
 939 000e 0023     		movs	r3, #0
 940 0010 0393     		str	r3, [sp, #12]
 941 0012 0493     		str	r3, [sp, #16]
 942 0014 0593     		str	r3, [sp, #20]
 943 0016 0693     		str	r3, [sp, #24]
 944 0018 0793     		str	r3, [sp, #28]
 231:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 945              		.loc 1 231 3 is_stmt 1 view .LVU244
 946              	.LBB11:
 231:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 947              		.loc 1 231 3 view .LVU245
 948 001a 0193     		str	r3, [sp, #4]
 231:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 949              		.loc 1 231 3 view .LVU246
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s 			page 36


 950 001c 184A     		ldr	r2, .L52
 951 001e 116C     		ldr	r1, [r2, #64]
 952 0020 41F08051 		orr	r1, r1, #268435456
 953 0024 1164     		str	r1, [r2, #64]
 231:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 954              		.loc 1 231 3 view .LVU247
 955 0026 126C     		ldr	r2, [r2, #64]
 956 0028 02F08052 		and	r2, r2, #268435456
 957 002c 0192     		str	r2, [sp, #4]
 231:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 958              		.loc 1 231 3 view .LVU248
 959 002e 019A     		ldr	r2, [sp, #4]
 960              	.LBE11:
 231:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 961              		.loc 1 231 3 view .LVU249
 232:Core/Src/main.c **** 
 962              		.loc 1 232 3 view .LVU250
 963              	.LBB12:
 232:Core/Src/main.c **** 
 964              		.loc 1 232 3 view .LVU251
 965 0030 0293     		str	r3, [sp, #8]
 232:Core/Src/main.c **** 
 966              		.loc 1 232 3 view .LVU252
 967 0032 144A     		ldr	r2, .L52+4
 968 0034 1168     		ldr	r1, [r2]
 969 0036 41F44041 		orr	r1, r1, #49152
 970 003a 1160     		str	r1, [r2]
 232:Core/Src/main.c **** 
 971              		.loc 1 232 3 view .LVU253
 972 003c 1268     		ldr	r2, [r2]
 973 003e 02F44042 		and	r2, r2, #49152
 974 0042 0292     		str	r2, [sp, #8]
 232:Core/Src/main.c **** 
 975              		.loc 1 232 3 view .LVU254
 976 0044 029A     		ldr	r2, [sp, #8]
 977              	.LBE12:
 232:Core/Src/main.c **** 
 978              		.loc 1 232 3 view .LVU255
 237:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 979              		.loc 1 237 3 view .LVU256
 237:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 980              		.loc 1 237 36 is_stmt 0 view .LVU257
 981 0046 0222     		movs	r2, #2
 982 0048 0892     		str	r2, [sp, #32]
 238:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 983              		.loc 1 238 3 is_stmt 1 view .LVU258
 238:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 984              		.loc 1 238 30 is_stmt 0 view .LVU259
 985 004a 0122     		movs	r2, #1
 986 004c 0B92     		str	r2, [sp, #44]
 239:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 987              		.loc 1 239 3 is_stmt 1 view .LVU260
 239:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 988              		.loc 1 239 41 is_stmt 0 view .LVU261
 989 004e 1022     		movs	r2, #16
 990 0050 0C92     		str	r2, [sp, #48]
 240:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s 			page 37


 991              		.loc 1 240 3 is_stmt 1 view .LVU262
 240:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 992              		.loc 1 240 34 is_stmt 0 view .LVU263
 993 0052 0E93     		str	r3, [sp, #56]
 241:Core/Src/main.c ****   {
 994              		.loc 1 241 3 is_stmt 1 view .LVU264
 241:Core/Src/main.c ****   {
 995              		.loc 1 241 7 is_stmt 0 view .LVU265
 996 0054 08A8     		add	r0, sp, #32
 997 0056 FFF7FEFF 		bl	HAL_RCC_OscConfig
 998              	.LVL54:
 241:Core/Src/main.c ****   {
 999              		.loc 1 241 6 view .LVU266
 1000 005a 68B9     		cbnz	r0, .L50
 248:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1001              		.loc 1 248 3 is_stmt 1 view .LVU267
 248:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1002              		.loc 1 248 31 is_stmt 0 view .LVU268
 1003 005c 0F23     		movs	r3, #15
 1004 005e 0393     		str	r3, [sp, #12]
 250:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1005              		.loc 1 250 3 is_stmt 1 view .LVU269
 250:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1006              		.loc 1 250 34 is_stmt 0 view .LVU270
 1007 0060 0021     		movs	r1, #0
 1008 0062 0491     		str	r1, [sp, #16]
 251:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1009              		.loc 1 251 3 is_stmt 1 view .LVU271
 251:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1010              		.loc 1 251 35 is_stmt 0 view .LVU272
 1011 0064 0591     		str	r1, [sp, #20]
 252:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1012              		.loc 1 252 3 is_stmt 1 view .LVU273
 252:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1013              		.loc 1 252 36 is_stmt 0 view .LVU274
 1014 0066 0691     		str	r1, [sp, #24]
 253:Core/Src/main.c **** 
 1015              		.loc 1 253 3 is_stmt 1 view .LVU275
 253:Core/Src/main.c **** 
 1016              		.loc 1 253 36 is_stmt 0 view .LVU276
 1017 0068 0791     		str	r1, [sp, #28]
 255:Core/Src/main.c ****   {
 1018              		.loc 1 255 3 is_stmt 1 view .LVU277
 255:Core/Src/main.c ****   {
 1019              		.loc 1 255 7 is_stmt 0 view .LVU278
 1020 006a 03A8     		add	r0, sp, #12
 1021 006c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1022              	.LVL55:
 255:Core/Src/main.c ****   {
 1023              		.loc 1 255 6 view .LVU279
 1024 0070 20B9     		cbnz	r0, .L51
 259:Core/Src/main.c **** 
 1025              		.loc 1 259 1 view .LVU280
 1026 0072 15B0     		add	sp, sp, #84
 1027              		.cfi_remember_state
 1028              		.cfi_def_cfa_offset 4
 1029              		@ sp needed
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s 			page 38


 1030 0074 5DF804FB 		ldr	pc, [sp], #4
 1031              	.L50:
 1032              		.cfi_restore_state
 243:Core/Src/main.c ****   }
 1033              		.loc 1 243 5 is_stmt 1 view .LVU281
 1034 0078 FFF7FEFF 		bl	Error_Handler
 1035              	.LVL56:
 1036              	.L51:
 257:Core/Src/main.c ****   }
 1037              		.loc 1 257 5 view .LVU282
 1038 007c FFF7FEFF 		bl	Error_Handler
 1039              	.LVL57:
 1040              	.L53:
 1041              		.align	2
 1042              	.L52:
 1043 0080 00380240 		.word	1073887232
 1044 0084 00700040 		.word	1073770496
 1045              		.cfi_endproc
 1046              	.LFE139:
 1048              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 1049              		.align	2
 1050              	.LC5:
 1051 0000 424D4532 		.ascii	"BME280\000"
 1051      383000
 1052 0007 00       		.align	2
 1053              	.LC6:
 1054 0008 424D5032 		.ascii	"BMP280\000"
 1054      383000
 1055 000f 00       		.align	2
 1056              	.LC7:
 1057 0010 424D5032 		.ascii	"BMP280 initialization failed\012\000"
 1057      38302069 
 1057      6E697469 
 1057      616C697A 
 1057      6174696F 
 1058 002e 0000     		.align	2
 1059              	.LC8:
 1060 0030 0A424D50 		.ascii	"\012BMP280: found %s\012\000"
 1060      3238303A 
 1060      20666F75 
 1060      6E642025 
 1060      730A00
 1061 0043 00       		.align	2
 1062              	.LC9:
 1063 0044 4C6F5261 		.ascii	"LoRa is running... :) \012\015\000"
 1063      20697320 
 1063      72756E6E 
 1063      696E672E 
 1063      2E2E203A 
 1064 005d 000000   		.align	2
 1065              	.LC10:
 1066 0060 0A0D204C 		.ascii	"\012\015 LoRa failed :( \012\015 Error code: %d \012"
 1066      6F526120 
 1066      6661696C 
 1066      6564203A 
 1066      28200A0D 
 1067 0085 0D00     		.ascii	"\015\000"
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s 			page 39


 1068              		.section	.text.main,"ax",%progbits
 1069              		.align	1
 1070              		.global	main
 1071              		.syntax unified
 1072              		.thumb
 1073              		.thumb_func
 1075              	main:
 1076              	.LFB138:
 115:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 1077              		.loc 1 115 1 view -0
 1078              		.cfi_startproc
 1079              		@ args = 0, pretend = 0, frame = 176
 1080              		@ frame_needed = 0, uses_anonymous_args = 0
 1081 0000 70B5     		push	{r4, r5, r6, lr}
 1082              		.cfi_def_cfa_offset 16
 1083              		.cfi_offset 4, -16
 1084              		.cfi_offset 5, -12
 1085              		.cfi_offset 6, -8
 1086              		.cfi_offset 14, -4
 1087 0002 ACB0     		sub	sp, sp, #176
 1088              		.cfi_def_cfa_offset 192
 123:Core/Src/main.c **** 
 1089              		.loc 1 123 3 view .LVU284
 1090 0004 FFF7FEFF 		bl	HAL_Init
 1091              	.LVL58:
 130:Core/Src/main.c **** 
 1092              		.loc 1 130 3 view .LVU285
 1093 0008 FFF7FEFF 		bl	SystemClock_Config
 1094              	.LVL59:
 137:Core/Src/main.c ****   MX_USART1_UART_Init();
 1095              		.loc 1 137 3 view .LVU286
 1096 000c FFF7FEFF 		bl	MX_GPIO_Init
 1097              	.LVL60:
 138:Core/Src/main.c ****   MX_USART2_UART_Init();
 1098              		.loc 1 138 3 view .LVU287
 1099 0010 FFF7FEFF 		bl	MX_USART1_UART_Init
 1100              	.LVL61:
 139:Core/Src/main.c ****   MX_I2C1_Init();
 1101              		.loc 1 139 3 view .LVU288
 1102 0014 FFF7FEFF 		bl	MX_USART2_UART_Init
 1103              	.LVL62:
 140:Core/Src/main.c ****   MX_SPI3_Init();
 1104              		.loc 1 140 3 view .LVU289
 1105 0018 FFF7FEFF 		bl	MX_I2C1_Init
 1106              	.LVL63:
 141:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1107              		.loc 1 141 3 view .LVU290
 1108 001c FFF7FEFF 		bl	MX_SPI3_Init
 1109              	.LVL64:
 144:Core/Src/main.c **** 	bmp280.addr = 0x77;
 1110              		.loc 1 144 3 view .LVU291
 1111 0020 5E4C     		ldr	r4, .L67
 1112 0022 2046     		mov	r0, r4
 1113 0024 FFF7FEFF 		bl	bmp280_init_default_params
 1114              	.LVL65:
 145:Core/Src/main.c **** 	bmp280.i2c = &hi2c1;
 1115              		.loc 1 145 2 view .LVU292
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s 			page 40


 145:Core/Src/main.c **** 	bmp280.i2c = &hi2c1;
 1116              		.loc 1 145 14 is_stmt 0 view .LVU293
 1117 0028 7723     		movs	r3, #119
 1118 002a 24F8083C 		strh	r3, [r4, #-8]	@ movhi
 146:Core/Src/main.c **** 
 1119              		.loc 1 146 2 is_stmt 1 view .LVU294
 146:Core/Src/main.c **** 
 1120              		.loc 1 146 13 is_stmt 0 view .LVU295
 1121 002e 5C4B     		ldr	r3, .L67+4
 1122 0030 44F8043C 		str	r3, [r4, #-4]
 148:Core/Src/main.c **** 		size = sprintf((char *)Data, "BMP280 initialization failed\n");
 1123              		.loc 1 148 2 is_stmt 1 view .LVU296
 148:Core/Src/main.c **** 		size = sprintf((char *)Data, "BMP280 initialization failed\n");
 1124              		.loc 1 148 8 is_stmt 0 view .LVU297
 1125 0034 15E0     		b	.L55
 1126              	.L56:
 149:Core/Src/main.c **** 		HAL_UART_Transmit(&huart2, Data, size, 1000);
 1127              		.loc 1 149 3 is_stmt 1 view .LVU298
 149:Core/Src/main.c **** 		HAL_UART_Transmit(&huart2, Data, size, 1000);
 1128              		.loc 1 149 10 is_stmt 0 view .LVU299
 1129 0036 5B4D     		ldr	r5, .L67+8
 1130 0038 2C46     		mov	r4, r5
 1131 003a 5B4E     		ldr	r6, .L67+12
 1132 003c 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 1133 003e 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1134 0040 96E80F00 		ldm	r6, {r0, r1, r2, r3}
 1135 0044 07C4     		stmia	r4!, {r0, r1, r2}
 1136 0046 2380     		strh	r3, [r4]	@ movhi
 149:Core/Src/main.c **** 		HAL_UART_Transmit(&huart2, Data, size, 1000);
 1137              		.loc 1 149 8 view .LVU300
 1138 0048 1D22     		movs	r2, #29
 1139 004a 584B     		ldr	r3, .L67+16
 1140 004c 1A80     		strh	r2, [r3]	@ movhi
 150:Core/Src/main.c **** 		HAL_Delay(2000);
 1141              		.loc 1 150 3 is_stmt 1 view .LVU301
 1142 004e 4FF47A73 		mov	r3, #1000
 1143 0052 2946     		mov	r1, r5
 1144 0054 5648     		ldr	r0, .L67+20
 1145 0056 FFF7FEFF 		bl	HAL_UART_Transmit
 1146              	.LVL66:
 151:Core/Src/main.c **** 	}
 1147              		.loc 1 151 3 view .LVU302
 1148 005a 4FF4FA60 		mov	r0, #2000
 1149 005e FFF7FEFF 		bl	HAL_Delay
 1150              	.LVL67:
 1151              	.L55:
 148:Core/Src/main.c **** 		size = sprintf((char *)Data, "BMP280 initialization failed\n");
 1152              		.loc 1 148 9 view .LVU303
 148:Core/Src/main.c **** 		size = sprintf((char *)Data, "BMP280 initialization failed\n");
 1153              		.loc 1 148 10 is_stmt 0 view .LVU304
 1154 0062 4E49     		ldr	r1, .L67
 1155 0064 A1F12C00 		sub	r0, r1, #44
 1156 0068 FFF7FEFF 		bl	bmp280_init
 1157              	.LVL68:
 148:Core/Src/main.c **** 		size = sprintf((char *)Data, "BMP280 initialization failed\n");
 1158              		.loc 1 148 9 view .LVU305
 1159 006c 0028     		cmp	r0, #0
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s 			page 41


 1160 006e E2D0     		beq	.L56
 153:Core/Src/main.c **** 	size = sprintf((char *)Data, "\nBMP280: found %s\n", bme280p ? "BME280" : "BMP280");
 1161              		.loc 1 153 2 is_stmt 1 view .LVU306
 153:Core/Src/main.c **** 	size = sprintf((char *)Data, "\nBMP280: found %s\n", bme280p ? "BME280" : "BMP280");
 1162              		.loc 1 153 23 is_stmt 0 view .LVU307
 1163 0070 504B     		ldr	r3, .L67+24
 1164 0072 93F83230 		ldrb	r3, [r3, #50]	@ zero_extendqisi2
 1165              	.LVL69:
 154:Core/Src/main.c **** 	HAL_UART_Transmit(&huart2, Data, size, 1000);
 1166              		.loc 1 154 2 is_stmt 1 view .LVU308
 154:Core/Src/main.c **** 	HAL_UART_Transmit(&huart2, Data, size, 1000);
 1167              		.loc 1 154 9 is_stmt 0 view .LVU309
 1168 0076 602B     		cmp	r3, #96
 1169 0078 78D0     		beq	.L65
 1170 007a 4F4A     		ldr	r2, .L67+28
 1171              	.L57:
 154:Core/Src/main.c **** 	HAL_UART_Transmit(&huart2, Data, size, 1000);
 1172              		.loc 1 154 9 discriminator 4 view .LVU310
 1173 007c 494C     		ldr	r4, .L67+8
 1174 007e 4F49     		ldr	r1, .L67+32
 1175 0080 2046     		mov	r0, r4
 1176 0082 FFF7FEFF 		bl	sprintf
 1177              	.LVL70:
 154:Core/Src/main.c **** 	HAL_UART_Transmit(&huart2, Data, size, 1000);
 1178              		.loc 1 154 7 discriminator 4 view .LVU311
 1179 0086 1622     		movs	r2, #22
 1180 0088 484B     		ldr	r3, .L67+16
 1181 008a 1A80     		strh	r2, [r3]	@ movhi
 155:Core/Src/main.c **** 
 1182              		.loc 1 155 2 is_stmt 1 discriminator 4 view .LVU312
 1183 008c 4FF47A73 		mov	r3, #1000
 1184 0090 2146     		mov	r1, r4
 1185 0092 4748     		ldr	r0, .L67+20
 1186 0094 FFF7FEFF 		bl	HAL_UART_Transmit
 1187              	.LVL71:
 157:Core/Src/main.c ****   myLoRa.CS_port         = GPIOA;
 1188              		.loc 1 157 3 discriminator 4 view .LVU313
 157:Core/Src/main.c ****   myLoRa.CS_port         = GPIOA;
 1189              		.loc 1 157 12 is_stmt 0 discriminator 4 view .LVU314
 1190 0098 494D     		ldr	r5, .L67+36
 1191 009a 6846     		mov	r0, sp
 1192 009c FFF7FEFF 		bl	newLoRa
 1193              	.LVL72:
 1194 00a0 AC46     		mov	ip, r5
 1195 00a2 6C46     		mov	r4, sp
 1196 00a4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1197 00a6 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 1198 00aa 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1199 00ac ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 1200 00b0 94E80700 		ldm	r4, {r0, r1, r2}
 1201 00b4 8CE80700 		stm	ip, {r0, r1, r2}
 158:Core/Src/main.c ****   myLoRa.CS_pin          = GPIO_PIN_4;
 1202              		.loc 1 158 3 is_stmt 1 discriminator 4 view .LVU315
 158:Core/Src/main.c ****   myLoRa.CS_pin          = GPIO_PIN_4;
 1203              		.loc 1 158 26 is_stmt 0 discriminator 4 view .LVU316
 1204 00b8 424B     		ldr	r3, .L67+40
 1205 00ba 2B60     		str	r3, [r5]
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s 			page 42


 159:Core/Src/main.c ****   myLoRa.reset_port      = GPIOB;
 1206              		.loc 1 159 3 is_stmt 1 discriminator 4 view .LVU317
 159:Core/Src/main.c ****   myLoRa.reset_port      = GPIOB;
 1207              		.loc 1 159 26 is_stmt 0 discriminator 4 view .LVU318
 1208 00bc 1023     		movs	r3, #16
 1209 00be AB80     		strh	r3, [r5, #4]	@ movhi
 160:Core/Src/main.c ****   myLoRa.reset_pin       = GPIO_PIN_8;
 1210              		.loc 1 160 3 is_stmt 1 discriminator 4 view .LVU319
 160:Core/Src/main.c ****   myLoRa.reset_pin       = GPIO_PIN_8;
 1211              		.loc 1 160 26 is_stmt 0 discriminator 4 view .LVU320
 1212 00c0 414B     		ldr	r3, .L67+44
 1213 00c2 AB60     		str	r3, [r5, #8]
 161:Core/Src/main.c ****   myLoRa.DIO0_port       = GPIOB;
 1214              		.loc 1 161 3 is_stmt 1 discriminator 4 view .LVU321
 161:Core/Src/main.c ****   myLoRa.DIO0_port       = GPIOB;
 1215              		.loc 1 161 26 is_stmt 0 discriminator 4 view .LVU322
 1216 00c4 4FF48072 		mov	r2, #256
 1217 00c8 AA81     		strh	r2, [r5, #12]	@ movhi
 162:Core/Src/main.c ****   myLoRa.DIO0_pin        = GPIO_PIN_9;
 1218              		.loc 1 162 3 is_stmt 1 discriminator 4 view .LVU323
 162:Core/Src/main.c ****   myLoRa.DIO0_pin        = GPIO_PIN_9;
 1219              		.loc 1 162 26 is_stmt 0 discriminator 4 view .LVU324
 1220 00ca 2B61     		str	r3, [r5, #16]
 163:Core/Src/main.c ****   myLoRa.hSPIx           = &hspi3;
 1221              		.loc 1 163 3 is_stmt 1 discriminator 4 view .LVU325
 163:Core/Src/main.c ****   myLoRa.hSPIx           = &hspi3;
 1222              		.loc 1 163 26 is_stmt 0 discriminator 4 view .LVU326
 1223 00cc 4FF40073 		mov	r3, #512
 1224 00d0 AB82     		strh	r3, [r5, #20]	@ movhi
 164:Core/Src/main.c **** 
 1225              		.loc 1 164 3 is_stmt 1 discriminator 4 view .LVU327
 164:Core/Src/main.c **** 
 1226              		.loc 1 164 26 is_stmt 0 discriminator 4 view .LVU328
 1227 00d2 3E4B     		ldr	r3, .L67+48
 1228 00d4 AB61     		str	r3, [r5, #24]
 166:Core/Src/main.c ****   uint8_t buff[128] = {"\0"};
 1229              		.loc 1 166 3 is_stmt 1 discriminator 4 view .LVU329
 166:Core/Src/main.c ****   uint8_t buff[128] = {"\0"};
 1230              		.loc 1 166 18 is_stmt 0 discriminator 4 view .LVU330
 1231 00d6 2846     		mov	r0, r5
 1232 00d8 FFF7FEFF 		bl	LoRa_init
 1233              	.LVL73:
 1234 00dc 0446     		mov	r4, r0
 1235              	.LVL74:
 167:Core/Src/main.c **** 
 1236              		.loc 1 167 3 is_stmt 1 discriminator 4 view .LVU331
 167:Core/Src/main.c **** 
 1237              		.loc 1 167 11 is_stmt 0 discriminator 4 view .LVU332
 1238 00de 0021     		movs	r1, #0
 1239 00e0 0C91     		str	r1, [sp, #48]
 1240 00e2 7C22     		movs	r2, #124
 1241 00e4 0DA8     		add	r0, sp, #52
 1242 00e6 FFF7FEFF 		bl	memset
 1243              	.LVL75:
 171:Core/Src/main.c ****   snprintf(buff,sizeof(buff),"LoRa is running... :) \n\r");
 1244              		.loc 1 171 1 is_stmt 1 discriminator 4 view .LVU333
 171:Core/Src/main.c ****   snprintf(buff,sizeof(buff),"LoRa is running... :) \n\r");
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s 			page 43


 1245              		.loc 1 171 4 is_stmt 0 discriminator 4 view .LVU334
 1246 00ea C82C     		cmp	r4, #200
 1247 00ec 40D0     		beq	.L66
 177:Core/Src/main.c ****   HAL_UART_Transmit(&huart2, buff, sizeof(buff)/sizeof(buff[0]), 1000);
 1248              		.loc 1 177 3 is_stmt 1 view .LVU335
 1249 00ee 2346     		mov	r3, r4
 1250 00f0 374A     		ldr	r2, .L67+52
 1251 00f2 8021     		movs	r1, #128
 1252 00f4 0CA8     		add	r0, sp, #48
 1253 00f6 FFF7FEFF 		bl	snprintf
 1254              	.LVL76:
 178:Core/Src/main.c **** }
 1255              		.loc 1 178 3 view .LVU336
 1256 00fa 4FF47A73 		mov	r3, #1000
 1257 00fe 8022     		movs	r2, #128
 1258 0100 0CA9     		add	r1, sp, #48
 1259 0102 2B48     		ldr	r0, .L67+20
 1260 0104 FFF7FEFF 		bl	HAL_UART_Transmit
 1261              	.LVL77:
 1262              	.L59:
 181:Core/Src/main.c **** myLoRa.spredingFactor        = SF_7;            // default = SF_7
 1263              		.loc 1 181 1 view .LVU337
 181:Core/Src/main.c **** myLoRa.spredingFactor        = SF_7;            // default = SF_7
 1264              		.loc 1 181 30 is_stmt 0 view .LVU338
 1265 0108 2D4B     		ldr	r3, .L67+36
 1266 010a 40F2B112 		movw	r2, #433
 1267 010e 1A62     		str	r2, [r3, #32]
 182:Core/Src/main.c **** myLoRa.bandWidth             = BW_250KHz;       // default = BW_125KHz
 1268              		.loc 1 182 1 is_stmt 1 view .LVU339
 182:Core/Src/main.c **** myLoRa.bandWidth             = BW_250KHz;       // default = BW_125KHz
 1269              		.loc 1 182 30 is_stmt 0 view .LVU340
 1270 0110 0722     		movs	r2, #7
 1271 0112 83F82420 		strb	r2, [r3, #36]
 183:Core/Src/main.c **** myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 1272              		.loc 1 183 1 is_stmt 1 view .LVU341
 183:Core/Src/main.c **** myLoRa.crcRate               = CR_4_5;          // default = CR_4_5
 1273              		.loc 1 183 30 is_stmt 0 view .LVU342
 1274 0116 0822     		movs	r2, #8
 1275 0118 83F82520 		strb	r2, [r3, #37]
 184:Core/Src/main.c **** myLoRa.power                 = POWER_20db;      // default = 20db
 1276              		.loc 1 184 1 is_stmt 1 view .LVU343
 184:Core/Src/main.c **** myLoRa.power                 = POWER_20db;      // default = 20db
 1277              		.loc 1 184 30 is_stmt 0 view .LVU344
 1278 011c 0121     		movs	r1, #1
 1279 011e 83F82610 		strb	r1, [r3, #38]
 185:Core/Src/main.c **** myLoRa.overCurrentProtection = 100;             // default = 100 mA
 1280              		.loc 1 185 1 is_stmt 1 view .LVU345
 185:Core/Src/main.c **** myLoRa.overCurrentProtection = 100;             // default = 100 mA
 1281              		.loc 1 185 30 is_stmt 0 view .LVU346
 1282 0122 FF21     		movs	r1, #255
 1283 0124 83F82A10 		strb	r1, [r3, #42]
 186:Core/Src/main.c **** myLoRa.preamble              = 8;              // default = 8;
 1284              		.loc 1 186 1 is_stmt 1 view .LVU347
 186:Core/Src/main.c **** myLoRa.preamble              = 8;              // default = 8;
 1285              		.loc 1 186 30 is_stmt 0 view .LVU348
 1286 0128 6421     		movs	r1, #100
 1287 012a 83F82B10 		strb	r1, [r3, #43]
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s 			page 44


 187:Core/Src/main.c **** 
 1288              		.loc 1 187 1 is_stmt 1 view .LVU349
 187:Core/Src/main.c **** 
 1289              		.loc 1 187 30 is_stmt 0 view .LVU350
 1290 012e 1A85     		strh	r2, [r3, #40]	@ movhi
 1291              	.L60:
 194:Core/Src/main.c ****   {
 1292              		.loc 1 194 3 is_stmt 1 view .LVU351
 197:Core/Src/main.c ****       HAL_UARTEx_ReceiveToIdle_IT(&huart1,(uint8_t*)gps_raw,512);
 1293              		.loc 1 197 5 view .LVU352
 197:Core/Src/main.c ****       HAL_UARTEx_ReceiveToIdle_IT(&huart1,(uint8_t*)gps_raw,512);
 1294              		.loc 1 197 9 is_stmt 0 view .LVU353
 1295 0130 284B     		ldr	r3, .L67+56
 1296 0132 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 197:Core/Src/main.c ****       HAL_UARTEx_ReceiveToIdle_IT(&huart1,(uint8_t*)gps_raw,512);
 1297              		.loc 1 197 8 view .LVU354
 1298 0134 002B     		cmp	r3, #0
 1299 0136 FBD0     		beq	.L60
 198:Core/Src/main.c ****       if (flag == 1) {
 1300              		.loc 1 198 7 is_stmt 1 view .LVU355
 1301 0138 4FF40072 		mov	r2, #512
 1302 013c 2649     		ldr	r1, .L67+60
 1303 013e 2748     		ldr	r0, .L67+64
 1304 0140 FFF7FEFF 		bl	HAL_UARTEx_ReceiveToIdle_IT
 1305              	.LVL78:
 199:Core/Src/main.c ****       LoRa_transmit(&myLoRa, (uint8_t*)transmit_data, 113, 100);
 1306              		.loc 1 199 7 view .LVU356
 199:Core/Src/main.c ****       LoRa_transmit(&myLoRa, (uint8_t*)transmit_data, 113, 100);
 1307              		.loc 1 199 16 is_stmt 0 view .LVU357
 1308 0144 264B     		ldr	r3, .L67+68
 1309 0146 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 199:Core/Src/main.c ****       LoRa_transmit(&myLoRa, (uint8_t*)transmit_data, 113, 100);
 1310              		.loc 1 199 10 view .LVU358
 1311 0148 012B     		cmp	r3, #1
 1312 014a F1D1     		bne	.L60
 200:Core/Src/main.c ****       flag = 0;
 1313              		.loc 1 200 7 is_stmt 1 view .LVU359
 1314 014c 254C     		ldr	r4, .L67+72
 1315 014e 6423     		movs	r3, #100
 1316 0150 7122     		movs	r2, #113
 1317 0152 2146     		mov	r1, r4
 1318 0154 1A48     		ldr	r0, .L67+36
 1319 0156 FFF7FEFF 		bl	LoRa_transmit
 1320              	.LVL79:
 201:Core/Src/main.c ****       memset(transmit_data, '\0', sizeof(transmit_data));
 1321              		.loc 1 201 7 view .LVU360
 201:Core/Src/main.c ****       memset(transmit_data, '\0', sizeof(transmit_data));
 1322              		.loc 1 201 12 is_stmt 0 view .LVU361
 1323 015a 0021     		movs	r1, #0
 1324 015c 204B     		ldr	r3, .L67+68
 1325 015e 1970     		strb	r1, [r3]
 202:Core/Src/main.c ****     }
 1326              		.loc 1 202 7 is_stmt 1 view .LVU362
 1327 0160 4FF48072 		mov	r2, #256
 1328 0164 2046     		mov	r0, r4
 1329 0166 FFF7FEFF 		bl	memset
 1330              	.LVL80:
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s 			page 45


 1331 016a E1E7     		b	.L60
 1332              	.LVL81:
 1333              	.L65:
 154:Core/Src/main.c **** 	HAL_UART_Transmit(&huart2, Data, size, 1000);
 1334              		.loc 1 154 9 is_stmt 0 view .LVU363
 1335 016c 1E4A     		ldr	r2, .L67+76
 1336 016e 85E7     		b	.L57
 1337              	.LVL82:
 1338              	.L66:
 172:Core/Src/main.c ****   LoRa_transmit(&myLoRa, (uint8_t*)buff, 120, 100);
 1339              		.loc 1 172 3 is_stmt 1 view .LVU364
 1340 0170 0CAC     		add	r4, sp, #48
 1341              	.LVL83:
 172:Core/Src/main.c ****   LoRa_transmit(&myLoRa, (uint8_t*)buff, 120, 100);
 1342              		.loc 1 172 3 is_stmt 0 view .LVU365
 1343 0172 1E4D     		ldr	r5, .L67+80
 1344 0174 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1345 0176 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1346 0178 95E80700 		ldm	r5, {r0, r1, r2}
 1347 017c 03C4     		stmia	r4!, {r0, r1}
 1348 017e 2270     		strb	r2, [r4]
 173:Core/Src/main.c ****   HAL_UART_Transmit(&huart2, buff, sizeof(buff)/sizeof(buff[0]), 1000);
 1349              		.loc 1 173 3 is_stmt 1 view .LVU366
 1350 0180 6423     		movs	r3, #100
 1351 0182 7822     		movs	r2, #120
 1352 0184 0CA9     		add	r1, sp, #48
 1353 0186 0E48     		ldr	r0, .L67+36
 1354 0188 FFF7FEFF 		bl	LoRa_transmit
 1355              	.LVL84:
 174:Core/Src/main.c **** }
 1356              		.loc 1 174 3 view .LVU367
 1357 018c 4FF47A73 		mov	r3, #1000
 1358 0190 8022     		movs	r2, #128
 1359 0192 0CA9     		add	r1, sp, #48
 1360 0194 0648     		ldr	r0, .L67+20
 1361 0196 FFF7FEFF 		bl	HAL_UART_Transmit
 1362              	.LVL85:
 1363 019a B5E7     		b	.L59
 1364              	.L68:
 1365              		.align	2
 1366              	.L67:
 1367 019c 2C000000 		.word	bmp280+44
 1368 01a0 00000000 		.word	hi2c1
 1369 01a4 00000000 		.word	Data
 1370 01a8 10000000 		.word	.LC7
 1371 01ac 00000000 		.word	size
 1372 01b0 00000000 		.word	huart2
 1373 01b4 00000000 		.word	bmp280
 1374 01b8 08000000 		.word	.LC6
 1375 01bc 30000000 		.word	.LC8
 1376 01c0 00000000 		.word	myLoRa
 1377 01c4 00000240 		.word	1073872896
 1378 01c8 00040240 		.word	1073873920
 1379 01cc 00000000 		.word	hspi3
 1380 01d0 60000000 		.word	.LC10
 1381 01d4 00000000 		.word	isLoraReady
 1382 01d8 00000000 		.word	gps_raw
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s 			page 46


 1383 01dc 00000000 		.word	huart1
 1384 01e0 00000000 		.word	flag
 1385 01e4 00000000 		.word	transmit_data
 1386 01e8 00000000 		.word	.LC5
 1387 01ec 44000000 		.word	.LC9
 1388              		.cfi_endproc
 1389              	.LFE138:
 1391              		.global	Data
 1392              		.section	.bss.Data,"aw",%nobits
 1393              		.align	2
 1396              	Data:
 1397 0000 00000000 		.space	256
 1397      00000000 
 1397      00000000 
 1397      00000000 
 1397      00000000 
 1398              		.global	size
 1399              		.section	.bss.size,"aw",%nobits
 1400              		.align	1
 1403              	size:
 1404 0000 0000     		.space	2
 1405              		.global	sAltitude
 1406              		.section	.bss.sAltitude,"aw",%nobits
 1407              		.align	2
 1410              	sAltitude:
 1411 0000 00000000 		.space	128
 1411      00000000 
 1411      00000000 
 1411      00000000 
 1411      00000000 
 1412              		.global	sHumidity
 1413              		.section	.bss.sHumidity,"aw",%nobits
 1414              		.align	2
 1417              	sHumidity:
 1418 0000 00000000 		.space	128
 1418      00000000 
 1418      00000000 
 1418      00000000 
 1418      00000000 
 1419              		.global	sTemperature
 1420              		.section	.bss.sTemperature,"aw",%nobits
 1421              		.align	2
 1424              	sTemperature:
 1425 0000 00000000 		.space	128
 1425      00000000 
 1425      00000000 
 1425      00000000 
 1425      00000000 
 1426              		.global	sPressure
 1427              		.section	.bss.sPressure,"aw",%nobits
 1428              		.align	2
 1431              	sPressure:
 1432 0000 00000000 		.space	128
 1432      00000000 
 1432      00000000 
 1432      00000000 
 1432      00000000 
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s 			page 47


 1433              		.global	humidity
 1434              		.section	.bss.humidity,"aw",%nobits
 1435              		.align	2
 1438              	humidity:
 1439 0000 00000000 		.space	4
 1440              		.global	temperature
 1441              		.section	.bss.temperature,"aw",%nobits
 1442              		.align	2
 1445              	temperature:
 1446 0000 00000000 		.space	4
 1447              		.global	pressure
 1448              		.section	.bss.pressure,"aw",%nobits
 1449              		.align	2
 1452              	pressure:
 1453 0000 00000000 		.space	4
 1454              		.global	bmp280
 1455              		.section	.bss.bmp280,"aw",%nobits
 1456              		.align	2
 1459              	bmp280:
 1460 0000 00000000 		.space	52
 1460      00000000 
 1460      00000000 
 1460      00000000 
 1460      00000000 
 1461              		.global	altitude
 1462              		.section	.bss.altitude,"aw",%nobits
 1463              		.align	2
 1466              	altitude:
 1467 0000 00000000 		.space	4
 1468              		.global	P_b
 1469              		.section	.data.P_b,"aw"
 1470              		.align	2
 1473              	P_b:
 1474 0000 80E6C547 		.word	1204151936
 1475              		.global	isLoraReady
 1476              		.section	.data.isLoraReady,"aw"
 1479              	isLoraReady:
 1480 0000 01       		.byte	1
 1481              		.global	myLoRa
 1482              		.section	.bss.myLoRa,"aw",%nobits
 1483              		.align	2
 1486              	myLoRa:
 1487 0000 00000000 		.space	44
 1487      00000000 
 1487      00000000 
 1487      00000000 
 1487      00000000 
 1488              		.global	transmit_data
 1489              		.section	.bss.transmit_data,"aw",%nobits
 1490              		.align	2
 1493              	transmit_data:
 1494 0000 00000000 		.space	256
 1494      00000000 
 1494      00000000 
 1494      00000000 
 1494      00000000 
 1495              		.global	bme280p
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s 			page 48


 1496              		.section	.bss.bme280p,"aw",%nobits
 1499              	bme280p:
 1500 0000 00       		.space	1
 1501              		.global	line
 1502              		.section	.bss.line,"aw",%nobits
 1503              		.align	2
 1506              	line:
 1507 0000 00000000 		.space	512
 1507      00000000 
 1507      00000000 
 1507      00000000 
 1507      00000000 
 1508              		.global	line_out
 1509              		.section	.bss.line_out,"aw",%nobits
 1510              		.align	2
 1513              	line_out:
 1514 0000 00000000 		.space	512
 1514      00000000 
 1514      00000000 
 1514      00000000 
 1514      00000000 
 1515              		.global	flag
 1516              		.section	.bss.flag,"aw",%nobits
 1519              	flag:
 1520 0000 00       		.space	1
 1521              		.global	gps_raw
 1522              		.section	.bss.gps_raw,"aw",%nobits
 1523              		.align	2
 1526              	gps_raw:
 1527 0000 00000000 		.space	512
 1527      00000000 
 1527      00000000 
 1527      00000000 
 1527      00000000 
 1528              		.global	huart2
 1529              		.section	.bss.huart2,"aw",%nobits
 1530              		.align	2
 1533              	huart2:
 1534 0000 00000000 		.space	68
 1534      00000000 
 1534      00000000 
 1534      00000000 
 1534      00000000 
 1535              		.global	huart1
 1536              		.section	.bss.huart1,"aw",%nobits
 1537              		.align	2
 1540              	huart1:
 1541 0000 00000000 		.space	68
 1541      00000000 
 1541      00000000 
 1541      00000000 
 1541      00000000 
 1542              		.global	hspi3
 1543              		.section	.bss.hspi3,"aw",%nobits
 1544              		.align	2
 1547              	hspi3:
 1548 0000 00000000 		.space	88
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s 			page 49


 1548      00000000 
 1548      00000000 
 1548      00000000 
 1548      00000000 
 1549              		.global	hi2c1
 1550              		.section	.bss.hi2c1,"aw",%nobits
 1551              		.align	2
 1554              	hi2c1:
 1555 0000 00000000 		.space	84
 1555      00000000 
 1555      00000000 
 1555      00000000 
 1555      00000000 
 1556              		.text
 1557              	.Letext0:
 1558              		.file 4 "/Users/roryschram/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscod
 1559              		.file 5 "/Users/roryschram/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscod
 1560              		.file 6 "/Users/roryschram/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscod
 1561              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 1562              		.file 8 "/Users/roryschram/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscod
 1563              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1564              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1565              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1566              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1567              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1568              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 1569              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 1570              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 1571              		.file 17 "Core/Inc/bmp280.h"
 1572              		.file 18 "Core/Inc/LoRa.h"
 1573              		.file 19 "/Users/roryschram/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vsco
 1574              		.file 20 "/Users/roryschram/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vsco
 1575              		.file 21 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1576              		.file 22 "/Users/roryschram/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vsco
 1577              		.file 23 "<built-in>"
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s 			page 50


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s:21     .text.minmea_rescale:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s:26     .text.minmea_rescale:00000000 minmea_rescale
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s:97     .text.MX_GPIO_Init:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s:102    .text.MX_GPIO_Init:00000000 MX_GPIO_Init
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s:275    .text.MX_GPIO_Init:000000d4 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s:283    .rodata.HAL_UARTEx_RxEventCallback.str1.4:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s:303    .text.HAL_UARTEx_RxEventCallback:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s:309    .text.HAL_UARTEx_RxEventCallback:00000000 HAL_UARTEx_RxEventCallback
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s:568    .text.HAL_UARTEx_RxEventCallback:000001a8 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s:1519   .bss.flag:00000000 flag
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s:1493   .bss.transmit_data:00000000 transmit_data
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s:1526   .bss.gps_raw:00000000 gps_raw
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s:1506   .bss.line:00000000 line
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s:1403   .bss.size:00000000 size
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s:1438   .bss.humidity:00000000 humidity
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s:1452   .bss.pressure:00000000 pressure
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s:1445   .bss.temperature:00000000 temperature
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s:1459   .bss.bmp280:00000000 bmp280
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s:1473   .data.P_b:00000000 P_b
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s:1466   .bss.altitude:00000000 altitude
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s:1431   .bss.sPressure:00000000 sPressure
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s:1424   .bss.sTemperature:00000000 sTemperature
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s:1417   .bss.sHumidity:00000000 sHumidity
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s:1533   .bss.huart2:00000000 huart2
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s:1410   .bss.sAltitude:00000000 sAltitude
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s:598    .text.Error_Handler:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s:604    .text.Error_Handler:00000000 Error_Handler
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s:636    .text.MX_USART1_UART_Init:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s:641    .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s:695    .text.MX_USART1_UART_Init:0000002c $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s:1540   .bss.huart1:00000000 huart1
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s:701    .text.MX_USART2_UART_Init:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s:706    .text.MX_USART2_UART_Init:00000000 MX_USART2_UART_Init
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s:760    .text.MX_USART2_UART_Init:0000002c $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s:766    .text.MX_I2C1_Init:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s:771    .text.MX_I2C1_Init:00000000 MX_I2C1_Init
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s:828    .text.MX_I2C1_Init:0000002c $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s:1554   .bss.hi2c1:00000000 hi2c1
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s:835    .text.MX_SPI3_Init:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s:840    .text.MX_SPI3_Init:00000000 MX_SPI3_Init
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s:907    .text.MX_SPI3_Init:00000038 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s:1547   .bss.hspi3:00000000 hspi3
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s:913    .text.SystemClock_Config:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s:919    .text.SystemClock_Config:00000000 SystemClock_Config
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s:1043   .text.SystemClock_Config:00000080 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s:1049   .rodata.main.str1.4:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s:1069   .text.main:00000000 $t
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s:1075   .text.main:00000000 main
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s:1367   .text.main:0000019c $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s:1396   .bss.Data:00000000 Data
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s:1486   .bss.myLoRa:00000000 myLoRa
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s:1479   .data.isLoraReady:00000000 isLoraReady
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s:1393   .bss.Data:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s:1400   .bss.size:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s:1407   .bss.sAltitude:00000000 $d
ARM GAS  /var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s 			page 51


/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s:1414   .bss.sHumidity:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s:1421   .bss.sTemperature:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s:1428   .bss.sPressure:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s:1435   .bss.humidity:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s:1442   .bss.temperature:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s:1449   .bss.pressure:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s:1456   .bss.bmp280:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s:1463   .bss.altitude:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s:1470   .data.P_b:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s:1483   .bss.myLoRa:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s:1490   .bss.transmit_data:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s:1499   .bss.bme280p:00000000 bme280p
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s:1500   .bss.bme280p:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s:1503   .bss.line:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s:1513   .bss.line_out:00000000 line_out
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s:1510   .bss.line_out:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s:1520   .bss.flag:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s:1523   .bss.gps_raw:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s:1530   .bss.huart2:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s:1537   .bss.huart1:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s:1544   .bss.hspi3:00000000 $d
/var/folders/_g/2c7lhzm90n5_zxwlm2w6npkr0000gn/T//ccvM6JKg.s:1551   .bss.hi2c1:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
__aeabi_f2d
__aeabi_dsub
__aeabi_dmul
__aeabi_d2f
memset
strtok
strcpy
minmea_parse_rmc
strlen
sprintf
bmp280_read_float
pow
gcvt
HAL_UART_Transmit
HAL_UART_Init
HAL_I2C_Init
HAL_SPI_Init
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
bmp280_init_default_params
HAL_Delay
bmp280_init
newLoRa
LoRa_init
snprintf
HAL_UARTEx_ReceiveToIdle_IT
LoRa_transmit
